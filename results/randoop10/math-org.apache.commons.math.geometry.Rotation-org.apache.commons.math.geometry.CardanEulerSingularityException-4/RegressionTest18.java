import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest18 {

    public static boolean debug = false;

    @Test
    public void test09001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09001");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D20, (double) (byte) 100, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D17, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation12.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation12.getAxis();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation27.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ1();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation27.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D45, (double) (byte) 100, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation43.applyTo(vector3D45);
        double double50 = vector3D45.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D45, (double) 10, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation27.applyTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((-0.02937648959434208d), 10.0d);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D(76.58711610605957d, vector3D52, Double.NaN, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D(0.1035361863295576d, 74.59637898875364d, (-10400.0d));
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D52.subtract(0.5131281635700607d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D64.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation5.applyInverseTo(vector3D64);
        double double68 = rotation5.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 100.0d + "'", double35 == 100.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.46241790106553154d) + "'", double68 == (-0.46241790106553154d));
    }

    @Test
    public void test09002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09002");
        java.io.PrintStream printStream1 = new java.io.PrintStream("zh-CN");
        boolean boolean2 = printStream1.checkError();
        printStream1.close();
        java.io.PrintStream printStream5 = new java.io.PrintStream("ko-KR");
        printStream5.close();
        java.util.Locale locale7 = java.util.Locale.UK;
        java.lang.String[] strArray9 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream10 = printStream5.format(locale7, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray9);
        printStream10.write(10);
        printStream10.write((int) (short) 0);
        printStream10.write((int) (short) 10);
        char[] charArray19 = new char[] { 'x', 'a' };
        printStream10.println(charArray19);
        printStream1.println(charArray19);
        java.io.PrintStream printStream23 = printStream1.append((java.lang.CharSequence) "\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)");
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation31.getAxis();
        double[][] doubleArray33 = rotation31.getMatrix();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray33);
        java.io.PrintStream printStream35 = printStream23.printf("jpn", (java.lang.Object[]) doubleArray33);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(printStream10);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "xa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "xa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[x, a]");
        org.junit.Assert.assertNotNull(printStream23);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(printStream35);
    }

    @Test
    public void test09003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09003");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.141592653589793d), (-0.6217166533367139d), (-0.15630007634061657d), 0.3826647057828544d, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test09004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09004");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (-52.0d), (double) '4', 3.141592653589793d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation11.applyInverseTo(vector3D21);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation37.applyInverseTo(rotation43);
        double[][] doubleArray55 = rotation37.getMatrix();
        double double56 = rotation37.getQ3();
        double double57 = rotation37.getAngle();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation11.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str60 = rotationOrder59.toString();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation58.applyTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation5.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation66.revert();
        double double69 = rotation66.getQ2();
        double double70 = rotation66.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1040.0d + "'", double56 == 1040.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ZXZ" + "'", str60, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 362212.73358915845d + "'", double69 == 362212.73358915845d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(vector3D71);
    }

    @Test
    public void test09005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09005");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream1.println((long) 10);
        java.io.PrintStream printStream10 = printStream1.append('x');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.OutputStream) printStream10, false);
        printWriter12.println();
        java.io.PrintWriter printWriter15 = printWriter12.append('4');
        printWriter12.print(100);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray24 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D28, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation23.applyInverseTo(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation23.getAxis();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation23.revert();
        double double39 = rotation38.getQ1();
        printWriter12.println((java.lang.Object) rotation38);
        printWriter12.print(false);
        printWriter12.print((int) (short) 100);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream10);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 100.0d + "'", double39 == 100.0d);
    }

    @Test
    public void test09006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09006");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        printStream90.println("\uc911\uad6d\uc5b4");
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream90);
        printWriter93.print((long) '#');
        printWriter93.print(9.4698384E7d);
        printWriter93.print((long) (byte) 0);
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
    }

    @Test
    public void test09007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09007");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray14 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D16, (double) (byte) 100, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D18, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation13.revert();
        double double29 = rotation28.getQ1();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter33 = printWriter31.append('#');
        java.lang.Object[] objArray35 = null;
        java.io.PrintWriter printWriter36 = printWriter33.format("fran\347ais", objArray35);
        java.util.Locale locale37 = null;
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray40 = mathException39.getSuppressed();
        java.io.PrintWriter printWriter41 = printWriter33.format(locale37, "zxz", (java.lang.Object[]) throwableArray40);
        char[] charArray45 = new char[] { 'a', ' ', '#' };
        printWriter41.println(charArray45);
        java.util.Locale locale47 = java.util.Locale.FRENCH;
        java.util.Locale locale48 = java.util.Locale.FRENCH;
        java.util.Locale locale49 = java.util.Locale.TAIWAN;
        java.lang.String str50 = locale48.getDisplayScript(locale49);
        java.lang.String str51 = locale47.getDisplayLanguage(locale48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray63 = rotation62.getMatrix();
        java.io.PrintWriter printWriter64 = printWriter41.printf(locale47, "english", (java.lang.Object[]) doubleArray63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(doubleArray63, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(doubleArray63, (double) (byte) 0);
        double double69 = rotation68.getQ2();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation28.applyTo(rotation68);
        double double71 = rotation70.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str73 = rotationOrder72.toString();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder72.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation70.applyInverseTo(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D6.subtract(4254.469029887802d, vector3D76);
        double double80 = vector3D76.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YZY" + "'", str1, "YZY");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YZY" + "'", str2, "YZY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 100.0d + "'", double29 == 100.0d);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "fr");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "fr");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "fran\347ais" + "'", str51, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 9.649660284921133d + "'", double71 == 9.649660284921133d);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "YZY" + "'", str73, "YZY");
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
    }

    @Test
    public void test09008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09008");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.OutputStream) printStream85, true);
        printStream85.println("Franz\366sisch");
        printStream85.println((float) (short) -1);
        printStream85.print(true);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09009");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation5.getAxis();
        double double13 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double27 = rotation26.getQ0();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation19.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation5.applyInverseTo(rotation29);
        double double37 = rotation29.getAngle();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation29.revert();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(rotation38);
    }

    @Test
    public void test09010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09010");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        double double19 = rotation5.getQ0();
        double double20 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray28 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D30, (double) (byte) 100, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D35, (double) (byte) 100, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D32, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation27.applyInverseTo(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation27.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double50 = rotation49.getQ1();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation42.applyTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D60, (double) (byte) 100, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation58.applyTo(vector3D60);
        double double65 = vector3D60.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D60, (double) 10, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation42.applyTo(vector3D67);
        double double70 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation5.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation5.getAxis();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-52.0d) + "'", double70 == (-52.0d));
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(vector3D72);
    }

    @Test
    public void test09011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09011");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        java.io.PrintStream printStream49 = printStream6.append((java.lang.CharSequence) "Franz\366sisch (Frankreich)");
        printStream49.println((long) (short) 0);
        printStream49.flush();
        printStream49.print('a');
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(printStream49);
    }

    @Test
    public void test09012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09012");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(156.97401999511388d, (-0.37941151563583386d), (-100.00120994717587d), 0.3303357107702462d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation12.applyTo(rotation19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation12.applyInverseTo(vector3D22);
        double double24 = vector3D22.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str26 = rotationOrder25.toString();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D27.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D22.add(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.negate();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D(0.995037190209989d, (-2000.0d));
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.orthogonal();
        double double35 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D30, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D(3.1412907081033152d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation5.applyInverseTo(vector3D33);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ZXZ" + "'", str26, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.930039504416137d) + "'", double35 == (-0.930039504416137d));
        org.junit.Assert.assertNotNull(vector3D37);
    }

    @Test
    public void test09013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09013");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println((double) (short) 100);
        java.util.Locale locale16 = java.util.Locale.ROOT;
        java.lang.String str17 = locale16.getDisplayLanguage();
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.lang.String str21 = locale16.getDisplayLanguage(locale18);
        printStream6.println((java.lang.Object) locale18);
        java.lang.String str23 = locale18.getDisplayLanguage();
        java.util.Locale locale26 = new java.util.Locale("Chinesisch", "Vereinigtes K\366nigreich");
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("_JA");
        java.util.Locale locale29 = java.util.Locale.FRANCE;
        java.lang.String str30 = locale29.getDisplayName();
        java.lang.String str31 = locale29.getCountry();
        java.lang.String str32 = locale29.getISO3Language();
        java.lang.String str33 = locale29.getVariant();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("KOR");
        printWriter36.println(' ');
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray50 = rotation49.getMatrix();
        java.io.PrintWriter printWriter51 = printWriter36.format("YZY", (java.lang.Object[]) doubleArray50);
        java.lang.String[] strArray53 = java.util.Locale.getISOCountries();
        java.io.PrintWriter printWriter54 = printWriter51.printf("\u97d3\u6587)", (java.lang.Object[]) strArray53);
        java.io.PrintWriter printWriter55 = printWriter28.format(locale29, "English", (java.lang.Object[]) strArray53);
        java.lang.String str56 = locale26.getDisplayCountry(locale29);
        java.lang.String str57 = locale18.getDisplayLanguage(locale26);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\ud504\ub791\uc2a4\uc5b4" + "'", str23, "\ud504\ub791\uc2a4\uc5b4");
        org.junit.Assert.assertEquals(locale26.toString(), "chinesisch_VEREINIGTES K\366NIGREICH");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "fr_FR");
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\ud504\ub791\uc2a4\uc5b4\ud504\ub791\uc2a4)" + "'", str30, "\ud504\ub791\uc2a4\uc5b4\ud504\ub791\uc2a4)");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "FR" + "'", str31, "FR");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "fra" + "'", str32, "fra");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "VEREINIGTES K\366NIGREICH" + "'", str56, "VEREINIGTES K\366NIGREICH");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "French" + "'", str57, "French");
    }

    @Test
    public void test09014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09014");
        java.util.Locale.Builder builder0 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder2 = builder0.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder4 = builder0.setLanguage("ZXZ");
        java.util.Locale locale5 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder6 = builder0.setLocale(locale5);
        java.util.Locale locale7 = locale5.stripExtensions();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation13.applyTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str25 = rotationOrder24.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D26.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(vector3D27);
        boolean boolean29 = locale5.equals((java.lang.Object) vector3D27);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "de_DE");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ZXZ" + "'", str25, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test09015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09015");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        printStream6.write((int) (short) 0);
        printStream6.write((int) (short) 10);
        char[] charArray15 = new char[] { 'x', 'a' };
        printStream6.println(charArray15);
        printStream6.write((int) 'u');
        java.util.Locale.Builder builder19 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder21 = builder19.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder23 = builder19.setLanguage("ZXZ");
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder25 = builder19.setLocale(locale24);
        java.util.Locale.Builder builder27 = builder19.setLanguage("");
        java.util.Locale.Builder builder28 = builder19.clear();
        java.util.Locale.Builder builder30 = builder19.addUnicodeLocaleAttribute("English");
        java.util.Locale.Builder builder32 = builder30.addUnicodeLocaleAttribute("yzy");
        java.util.Locale.Category category33 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale34 = java.util.Locale.ENGLISH;
        boolean boolean35 = locale34.hasExtensions();
        java.util.Locale.setDefault(category33, locale34);
        java.util.Locale locale37 = java.util.Locale.ROOT;
        java.lang.String str38 = locale37.getDisplayLanguage();
        java.util.Locale locale39 = java.util.Locale.FRENCH;
        java.util.Locale locale40 = java.util.Locale.TAIWAN;
        java.lang.String str41 = locale39.getDisplayScript(locale40);
        java.lang.String str42 = locale37.getDisplayLanguage(locale39);
        java.util.Locale locale43 = locale37.stripExtensions();
        java.lang.String str44 = locale34.getDisplayName(locale37);
        java.util.Locale.Builder builder45 = builder30.setLocale(locale34);
        printStream6.print((java.lang.Object) builder30);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double68 = rotation67.getQ0();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation60.applyTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double76 = rotation75.getQ0();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double83 = rotation82.getQ0();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation75.applyTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation75.revert();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation69.applyInverseTo(rotation75);
        double double87 = rotation86.getQ3();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation53.applyInverseTo(rotation86);
        double[][] doubleArray89 = rotation86.getMatrix();
        java.io.PrintStream printStream90 = printStream6.printf("org.apache.commons.math.geometry.NotARotationMatrixException: ", (java.lang.Object[]) doubleArray89);
        printStream6.println();
        printStream6.println('x');
        printStream6.flush();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "xa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "xa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[x, a]");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + category33 + "' != '" + java.util.Locale.Category.DISPLAY + "'", category33.equals(java.util.Locale.Category.DISPLAY));
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "fr");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "English" + "'", str44, "English");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 52.0d + "'", double61 == 52.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 52.0d + "'", double68 == 52.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 52.0d + "'", double76 == 52.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 52.0d + "'", double83 == 52.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 128040.0d + "'", double87 == 128040.0d);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(printStream90);
    }

    @Test
    public void test09016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09016");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.718040514139729d), 0.9950747799116089d, 1.5707963267948961d, (-0.02733754006616299d), true);
    }

    @Test
    public void test09017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09017");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintStream printStream47 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        printStream47.println(false);
        java.io.PrintStream printStream51 = printStream47.append('#');
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter55 = printWriter53.append('#');
        printWriter53.println((long) (short) 10);
        java.util.Locale locale58 = java.util.Locale.PRC;
        java.lang.String str59 = locale58.getDisplayVariant();
        java.lang.String[] strArray64 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray64, (java.lang.Throwable) mathException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray69 = mathException68.getSuppressed();
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray64, (java.lang.Throwable) mathException68);
        java.lang.Throwable[] throwableArray71 = mathException68.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException72 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray71);
        java.io.PrintWriter printWriter73 = printWriter53.format(locale58, "", (java.lang.Object[]) throwableArray71);
        printWriter73.print((float) (short) 1);
        printWriter73.println((long) (byte) -1);
        java.lang.Object[] objArray79 = null;
        java.io.PrintWriter printWriter80 = printWriter73.format("Chinese (Taiwan)", objArray79);
        printWriter73.println();
        java.io.PrintWriter printWriter82 = new java.io.PrintWriter((java.io.Writer) printWriter73);
        java.io.PrintWriter printWriter84 = printWriter82.append(' ');
        printWriter84.println();
        printStream47.print((java.lang.Object) printWriter84);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(printStream51);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test09018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09018");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.8519466901357562d), 0.5763904177042349d, (double) 0L);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        double double8 = vector3D7.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 0.0d, (double) (byte) 1, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D29.orthogonal();
        double double31 = vector3D30.getY();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.add(vector3D30);
        double double33 = org.apache.commons.math.geometry.Vector3D.angle(vector3D23, vector3D32);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.1557215931002232d + "'", double33 == 1.1557215931002232d);
    }

    @Test
    public void test09019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09019");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        printWriter89.print((int) (short) 100);
        printWriter89.print('#');
        printWriter89.println((-1));
        java.io.PrintWriter printWriter96 = new java.io.PrintWriter((java.io.Writer) printWriter89);
        printWriter89.print((long) (short) 1);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09020");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.03286963174708454d), 32.0d, 1.5707963267948963d, 8095.122278323722d, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D17.subtract((double) 0, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D35, (double) (byte) 100, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract((double) 10L, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D43, (double) 10L, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D52, (double) (byte) 100, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D57, (double) (byte) 100, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D54, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D64, (double) (byte) 100, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D54, (double) 0.0f, vector3D66);
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D17, (double) (short) 1, vector3D48, (double) (-1L), vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D17.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D73, (double) (byte) 100, vector3D75);
        double double77 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D17, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D17.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation5.applyTo(vector3D17);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 8095.122278323722d + "'", double7 == 8095.122278323722d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test09021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09021");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("ja");
        java.util.Locale.Category category2 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale3 = java.util.Locale.ROOT;
        java.lang.String str4 = locale3.getDisplayLanguage();
        java.util.Locale.setDefault(category2, locale3);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.util.Locale.LanguageRange[] languageRangeArray21 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList22 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList22, languageRangeArray21);
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.util.Locale locale25 = java.util.Locale.GERMAN;
        java.util.Locale locale26 = java.util.Locale.CANADA;
        java.util.Locale locale27 = java.util.Locale.GERMAN;
        java.util.Locale locale28 = java.util.Locale.GERMANY;
        java.util.Locale locale29 = java.util.Locale.ROOT;
        java.lang.String str30 = locale29.getDisplayLanguage();
        java.util.Locale locale31 = java.util.Locale.FRENCH;
        java.util.Locale locale32 = java.util.Locale.ROOT;
        java.util.Locale locale33 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray34 = new java.util.Locale[] { locale24, locale25, locale26, locale27, locale28, locale29, locale31, locale32, locale33 };
        java.util.ArrayList<java.util.Locale> localeList35 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList35, localeArray34);
        java.util.Locale.FilteringMode filteringMode37 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList38 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList35, filteringMode37);
        java.lang.String[] strArray42 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.lang.String str45 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.lang.String>) strList43);
        java.util.Locale.LanguageRange[] languageRangeArray46 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList47 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList47, languageRangeArray46);
        java.util.Locale locale49 = java.util.Locale.ROOT;
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = java.util.Locale.CANADA;
        java.util.Locale locale52 = java.util.Locale.GERMAN;
        java.util.Locale locale53 = java.util.Locale.GERMANY;
        java.util.Locale locale54 = java.util.Locale.ROOT;
        java.lang.String str55 = locale54.getDisplayLanguage();
        java.util.Locale locale56 = java.util.Locale.FRENCH;
        java.util.Locale locale57 = java.util.Locale.ROOT;
        java.util.Locale locale58 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale49, locale50, locale51, locale52, locale53, locale54, locale56, locale57, locale58 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        java.util.Locale.FilteringMode filteringMode62 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList63 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList47, (java.util.Collection<java.util.Locale>) localeList60, filteringMode62);
        java.util.Locale.FilteringMode filteringMode64 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList65 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList60, filteringMode64);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D73, (double) (byte) 100, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation71.applyTo(vector3D73);
        java.lang.Object[] objArray78 = new java.lang.Object[] { vector3D17, str20, languageRangeList22, rotation71 };
        java.lang.String[] strArray81 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray86 = mathException85.getSuppressed();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray78, (java.lang.Throwable) mathException87);
        java.lang.Object[] objArray89 = mathException87.getArguments();
        java.io.PrintWriter printWriter90 = printWriter1.format(locale3, "ZXZ", objArray89);
        printWriter1.print("");
        java.io.PrintWriter printWriter94 = printWriter1.append(' ');
        printWriter94.print((float) (short) 0);
        org.junit.Assert.assertTrue("'" + category2 + "' != '" + java.util.Locale.Category.FORMAT + "'", category2.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(languageRangeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "de");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "de");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "fr");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + filteringMode37 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode37.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(languageRangeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "de");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "de");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "fr");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + filteringMode62 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode62.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList63);
        org.junit.Assert.assertTrue("'" + filteringMode64 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode64.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList65);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter94);
    }

    @Test
    public void test09022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09022");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation5.getAxis();
        double double13 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double27 = rotation26.getQ0();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation19.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation5.applyInverseTo(rotation29);
        double double37 = rotation5.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str44 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 1, (double) (byte) 0, 0.0d);
        double[] doubleArray49 = rotation42.getAngles(rotationOrder43);
        java.lang.String str50 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D52.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation5.applyTo(vector3D52);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "XZY" + "'", str44, "XZY");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[NaN, NaN, NaN]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "XZY" + "'", str50, "XZY");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
    }

    @Test
    public void test09023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09023");
        java.util.Locale.Builder builder0 = new java.util.Locale.Builder();
        java.util.Locale locale1 = builder0.build();
        java.util.Locale locale3 = new java.util.Locale("org.apache.commons.math.MathException");
        java.util.Locale locale5 = java.util.Locale.forLanguageTag("\ub3c5\uc77c\uc5b4");
        java.lang.String str6 = locale3.getDisplayVariant(locale5);
        java.util.Locale.setDefault(locale5);
        java.lang.String str8 = locale1.getDisplayLanguage(locale5);
        java.lang.String str9 = locale5.getCountry();
        java.util.Locale locale10 = java.util.Locale.ROOT;
        java.lang.String str11 = locale10.getDisplayLanguage();
        java.util.Set<java.lang.String> strSet12 = locale10.getUnicodeLocaleKeys();
        boolean boolean13 = locale10.hasExtensions();
        java.lang.String str14 = locale10.getISO3Country();
        java.util.Locale locale15 = locale10.stripExtensions();
        java.util.Set<java.lang.String> strSet16 = locale15.getUnicodeLocaleAttributes();
        java.util.Locale.Builder builder17 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder19 = builder17.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder19.clearExtensions();
        java.util.Locale locale21 = builder20.build();
        java.util.Locale locale22 = java.util.Locale.FRENCH;
        java.util.Locale locale23 = java.util.Locale.FRENCH;
        java.util.Locale locale24 = java.util.Locale.TAIWAN;
        java.lang.String str25 = locale23.getDisplayScript(locale24);
        java.lang.String str26 = locale22.getDisplayLanguage(locale23);
        boolean boolean27 = locale23.hasExtensions();
        java.util.Locale.Builder builder28 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder30 = builder28.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale31 = builder28.build();
        java.lang.String str32 = locale23.getDisplayLanguage(locale31);
        java.lang.String str33 = locale31.getCountry();
        java.lang.String str34 = locale21.getDisplayName(locale31);
        java.lang.String str35 = locale21.getDisplayScript();
        java.lang.String str36 = locale15.getDisplayCountry(locale21);
        java.util.Locale.Category category37 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category38 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.lang.String str40 = locale39.getDisplayLanguage();
        java.util.Locale.setDefault(category38, locale39);
        java.util.Locale.setDefault(category37, locale39);
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter46 = printWriter44.append('#');
        java.lang.Object[] objArray48 = null;
        java.io.PrintWriter printWriter49 = printWriter46.format("fran\347ais", objArray48);
        java.util.Locale locale50 = null;
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray53 = mathException52.getSuppressed();
        java.io.PrintWriter printWriter54 = printWriter46.format(locale50, "zxz", (java.lang.Object[]) throwableArray53);
        char[] charArray58 = new char[] { 'a', ' ', '#' };
        printWriter54.println(charArray58);
        java.util.Locale locale60 = java.util.Locale.FRENCH;
        java.util.Locale locale61 = java.util.Locale.FRENCH;
        java.util.Locale locale62 = java.util.Locale.TAIWAN;
        java.lang.String str63 = locale61.getDisplayScript(locale62);
        java.lang.String str64 = locale60.getDisplayLanguage(locale61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray76 = rotation75.getMatrix();
        java.io.PrintWriter printWriter77 = printWriter54.printf(locale60, "english", (java.lang.Object[]) doubleArray76);
        java.lang.String str78 = locale60.getDisplayCountry();
        java.util.Locale.setDefault(category37, locale60);
        java.util.Locale locale80 = java.util.Locale.ENGLISH;
        java.lang.String str81 = locale80.getCountry();
        java.lang.String str82 = locale80.getDisplayCountry();
        java.lang.String str83 = locale60.getDisplayName(locale80);
        java.lang.String str84 = locale80.getDisplayName();
        java.lang.String str85 = locale21.getDisplayCountry(locale80);
        java.lang.String str86 = locale5.getDisplayScript(locale80);
        org.junit.Assert.assertNotNull(locale1);
        org.junit.Assert.assertEquals(locale1.toString(), "");
        org.junit.Assert.assertEquals(locale3.toString(), "org.apache.commons.math.mathexception");
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "fr");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "fr");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "fran\347ais" + "'", str26, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "French" + "'", str32, "French");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + category37 + "' != '" + java.util.Locale.Category.FORMAT + "'", category37.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category38 + "' != '" + java.util.Locale.Category.FORMAT + "'", category38.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "fr");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "fr");
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "fran\347ais" + "'", str64, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(locale80);
        org.junit.Assert.assertEquals(locale80.toString(), "en");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "French" + "'", str83, "French");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "English" + "'", str84, "English");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
    }

    @Test
    public void test09024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09024");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.print((float) 100L);
        java.io.PrintStream printStream7 = printStream1.append((java.lang.CharSequence) "XYZ", 0, 1);
        java.io.PrintStream printStream9 = printStream7.append((java.lang.CharSequence) "eng");
        printStream7.print(100);
        java.util.Locale.Builder builder12 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder14 = builder12.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder17 = builder14.setExtension('x', "");
        java.util.Locale.Builder builder18 = builder17.clear();
        java.util.Locale.Builder builder19 = builder17.clearExtensions();
        printStream7.println((java.lang.Object) builder17);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream7, false);
        java.io.PrintWriter printWriter24 = printWriter22.append((java.lang.CharSequence) "FRANCIA");
        java.io.PrintStream printStream27 = new java.io.PrintStream("ko-KR");
        printStream27.close();
        java.util.Locale locale29 = java.util.Locale.UK;
        java.lang.String[] strArray31 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream32 = printStream27.format(locale29, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray31);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter36 = printWriter34.append('#');
        java.lang.Object[] objArray38 = null;
        java.io.PrintWriter printWriter39 = printWriter36.format("fran\347ais", objArray38);
        java.util.Locale locale40 = null;
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray43 = mathException42.getSuppressed();
        java.io.PrintWriter printWriter44 = printWriter36.format(locale40, "zxz", (java.lang.Object[]) throwableArray43);
        char[] charArray48 = new char[] { 'a', ' ', '#' };
        printWriter44.println(charArray48);
        printStream27.println(charArray48);
        java.io.PrintStream printStream52 = new java.io.PrintStream("ko-KR");
        printStream52.close();
        java.util.Locale locale54 = java.util.Locale.UK;
        java.lang.String[] strArray56 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream57 = printStream52.format(locale54, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray56);
        printStream57.write(10);
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.OutputStream) printStream57);
        byte[] byteArray62 = new byte[] { (byte) -1 };
        printStream57.write(byteArray62);
        printStream27.write(byteArray62);
        java.lang.String[] strArray68 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray68, (java.lang.Throwable) mathException70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray73 = mathException72.getSuppressed();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray68, (java.lang.Throwable) mathException72);
        java.lang.Throwable[] throwableArray75 = mathException72.getSuppressed();
        java.io.PrintStream printStream76 = printStream27.format("", (java.lang.Object[]) throwableArray75);
        java.io.PrintStream printStream78 = printStream27.append((java.lang.CharSequence) "english");
        boolean boolean79 = printStream27.checkError();
        java.io.PrintStream printStream80 = new java.io.PrintStream((java.io.OutputStream) printStream27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder83, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder83.getA1();
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(rotationOrder83, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray93 = rotation92.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(doubleArray93, 1.5707963267948966d);
        org.apache.commons.math.MathException mathException96 = new org.apache.commons.math.MathException("french_DE_fr", (java.lang.Object[]) doubleArray93);
        java.io.PrintStream printStream97 = printStream27.format("", (java.lang.Object[]) doubleArray93);
        java.io.PrintWriter printWriter98 = printWriter22.printf("und", (java.lang.Object[]) doubleArray93);
        org.junit.Assert.assertNotNull(printStream7);
        org.junit.Assert.assertNotNull(printStream9);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printStream32);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(printStream57);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1]");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(printStream76);
        org.junit.Assert.assertNotNull(printStream78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(printStream97);
        org.junit.Assert.assertNotNull(printWriter98);
    }

    @Test
    public void test09025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09025");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.995037190209989d), 76.58711610605957d, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
    }

    @Test
    public void test09026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09026");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.07749534631904303d, 9.4698384E7d, (-0.3403913072297808d), 0.07749534631904303d, false);
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        double double10 = vector3D9.getZ();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray18 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D20, (double) (byte) 100, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D25, (double) (byte) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D22, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation17.applyInverseTo(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation17.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation17.revert();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((-12804.0d), vector3D33);
        double double35 = vector3D33.getY();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D9.subtract(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation5.applyInverseTo(vector3D36);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 117.0d + "'", double10 == 117.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.0d) + "'", double35 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
    }

    @Test
    public void test09027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09027");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        byte[] byteArray91 = new byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 10 };
        printStream1.write(byteArray91);
        printStream1.println((float) (byte) 0);
        printStream1.write(0);
        java.io.PrintWriter printWriter97 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        printStream1.print(false);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 100, -1, 10, 10]");
    }

    @Test
    public void test09028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09028");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintStream printStream18 = printStream16.append('u');
        printStream16.print("");
        printStream16.print((long) 1);
        java.lang.Object obj23 = null;
        printStream16.println(obj23);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.OutputStream) printStream16, false);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter30 = printWriter26.append((java.lang.CharSequence) "IT", (int) 'a', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(printStream18);
    }

    @Test
    public void test09029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09029");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.KOREAN;
        java.lang.String str3 = locale2.getDisplayLanguage();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double11 = rotation10.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation10.applyTo(rotation17);
        double double20 = rotation10.getQ0();
        double double21 = rotation10.getQ0();
        double[][] doubleArray22 = rotation10.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter1.printf(locale2, "zh_CN", (java.lang.Object[]) doubleArray22);
        java.util.Locale locale24 = java.util.Locale.FRENCH;
        java.util.Locale locale25 = java.util.Locale.TAIWAN;
        java.lang.String str26 = locale24.getDisplayScript(locale25);
        java.lang.String str27 = locale25.getVariant();
        java.util.Locale locale28 = java.util.Locale.CHINESE;
        java.lang.String str29 = locale25.getDisplayName(locale28);
        java.lang.String str31 = locale25.getExtension('x');
        java.util.Locale.Category category32 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category33 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale34 = java.util.Locale.ROOT;
        java.lang.String str35 = locale34.getDisplayLanguage();
        java.util.Locale.setDefault(category33, locale34);
        java.util.Locale.setDefault(category32, locale34);
        java.util.Locale locale38 = java.util.Locale.getDefault(category32);
        java.util.Locale locale39 = null;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.ROOT;
        java.util.Locale.Category category42 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category43 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale44 = java.util.Locale.ROOT;
        java.lang.String str45 = locale44.getDisplayLanguage();
        java.util.Locale.setDefault(category43, locale44);
        java.util.Locale.setDefault(category42, locale44);
        java.lang.String str48 = locale41.getDisplayVariant(locale44);
        java.lang.String str49 = locale38.getDisplayCountry(locale44);
        java.lang.String str50 = locale25.getDisplayLanguage(locale38);
        java.util.Locale locale51 = java.util.Locale.FRENCH;
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.TAIWAN;
        java.lang.String str54 = locale52.getDisplayScript(locale53);
        java.lang.String str55 = locale51.getDisplayLanguage(locale52);
        boolean boolean56 = locale52.hasExtensions();
        java.util.Locale.Builder builder57 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder59 = builder57.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale60 = builder57.build();
        java.lang.String str61 = locale52.getDisplayLanguage(locale60);
        java.lang.String str62 = locale52.getDisplayVariant();
        java.lang.String str63 = locale38.getDisplayCountry(locale52);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double71 = rotation70.getQ0();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double78 = rotation77.getQ0();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation70.applyTo(rotation77);
        double double80 = rotation70.getQ0();
        double double81 = rotation70.getQ0();
        double[][] doubleArray82 = rotation70.getMatrix();
        java.io.PrintWriter printWriter83 = printWriter1.format(locale52, "\u671d\u9c9c\u6587\u97e9\u56fd)", (java.lang.Object[]) doubleArray82);
        printWriter1.print((long) 'a');
        printWriter1.println("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)");
        printWriter1.print(true);
        printWriter1.print((-6163.014294720684d));
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "ko");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Korean" + "'", str3, "Korean");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 52.0d + "'", double11 == 52.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "fr");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "zh");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)" + "'", str29, "\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + category32 + "' != '" + java.util.Locale.Category.FORMAT + "'", category32.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category33 + "' != '" + java.util.Locale.Category.FORMAT + "'", category33.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "");
        org.junit.Assert.assertTrue("'" + category42 + "' != '" + java.util.Locale.Category.FORMAT + "'", category42.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category43 + "' != '" + java.util.Locale.Category.FORMAT + "'", category43.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Chinese" + "'", str50, "Chinese");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "fr");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "fran\347ais" + "'", str55, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "French" + "'", str61, "French");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 52.0d + "'", double71 == 52.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 52.0d + "'", double78 == 52.0d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 52.0d + "'", double80 == 52.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 52.0d + "'", double81 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test09030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09030");
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("zh-TW");
        java.io.PrintWriter printWriter5 = printWriter3.append((java.lang.CharSequence) "Italy");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter3);
        java.io.PrintStream printStream9 = new java.io.PrintStream("_JA");
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale12 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str13 = locale12.getScript();
        java.util.Locale locale14 = java.util.Locale.KOREA;
        java.lang.String str15 = locale12.getDisplayLanguage(locale14);
        java.lang.String[] strArray18 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray18, (java.lang.Throwable) mathException20);
        java.io.PrintWriter printWriter22 = printWriter11.format(locale14, "YZY", (java.lang.Object[]) strArray18);
        printWriter22.close();
        java.io.PrintStream printStream25 = new java.io.PrintStream("ko-KR");
        printStream25.close();
        java.util.Locale locale27 = java.util.Locale.UK;
        java.lang.String[] strArray29 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream30 = printStream25.format(locale27, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray29);
        printStream30.write(10);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.OutputStream) printStream30);
        printStream30.print((int) (short) 1);
        java.io.PrintStream printStream37 = new java.io.PrintStream("ko-KR");
        printStream37.println("fr");
        printStream30.print((java.lang.Object) "fr");
        char[] charArray44 = new char[] { '#', '4', 'a' };
        printStream30.print(charArray44);
        printWriter22.write(charArray44, (int) (byte) -1, 1);
        printStream9.println(charArray44);
        java.util.Locale.Builder builder50 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder52 = builder50.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder54 = builder50.setLanguage("ZXZ");
        java.util.Locale locale55 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder56 = builder50.setLocale(locale55);
        java.util.Locale.Builder builder58 = builder56.removeUnicodeLocaleAttribute("Deutsch");
        java.util.Locale.Builder builder59 = builder58.clear();
        java.util.Locale.Builder builder61 = builder59.removeUnicodeLocaleAttribute("Deutsch");
        java.util.Locale.Builder builder62 = builder59.clearExtensions();
        java.util.Locale.Builder builder64 = builder59.setLanguageTag("CAN");
        java.util.Locale locale66 = java.util.Locale.forLanguageTag("French (Canada)");
        java.util.Locale.Builder builder67 = builder59.setLocale(locale66);
        java.util.Locale locale68 = builder67.build();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double77 = rotation76.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, (double) (-1L), (double) (short) 10, (double) 'a');
        double double83 = rotation82.getAngle();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation76.applyInverseTo(rotation82);
        double[][] doubleArray85 = rotation82.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(doubleArray85, 2.3122509176395862d);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(doubleArray85, 0.2623748537039287d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException90 = new org.apache.commons.math.geometry.NotARotationMatrixException("anglais (Royaume-Uni)", (java.lang.Object[]) doubleArray85);
        java.io.PrintStream printStream91 = printStream9.printf(locale68, "Euler angles singularity", (java.lang.Object[]) doubleArray85);
        java.io.PrintWriter printWriter92 = printWriter3.printf("\u82f1\u6587", (java.lang.Object[]) doubleArray85);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException93 = new org.apache.commons.math.geometry.NotARotationMatrixException("Japanese", (java.lang.Object[]) doubleArray85);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("\ud504\ub791\uc2a4\uc5b4\ud504\ub791\uc2a4)", (java.lang.Throwable) notARotationMatrixException93);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str15, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printStream30);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, 4, a]");
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "");
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 52.0d + "'", double77 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2.3122509176395862d + "'", double83 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(printStream91);
        org.junit.Assert.assertNotNull(printWriter92);
    }

    @Test
    public void test09031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09031");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3517.607846147136d, 120.14256001911086d, (-625641.4003209749d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test09032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09032");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.09950371902099892d), 0.09667091924386816d, 879042.7241875147d, 1.3834364814420919d, true);
    }

    @Test
    public void test09033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09033");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        double[][] doubleArray7 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D12, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D22, (double) (byte) 100, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D12, (double) 0.0f, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D26.scalarMultiply((double) 0.0f);
        double double29 = vector3D26.getY();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation5.applyInverseTo(vector3D26);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.orthogonal();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null norm");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
    }

    @Test
    public void test09034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09034");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        printStream85.println((long) (short) 0);
        printStream85.println('#');
        java.io.PrintStream printStream92 = new java.io.PrintStream((java.io.OutputStream) printStream85);
        java.io.PrintStream printStream94 = printStream85.append((java.lang.CharSequence) "\ub3c5\uc77c\uc5b4");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream94);
    }

    @Test
    public void test09035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09035");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, 1.0d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D6.scalarMultiply((double) 'a');
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (byte) 100, (double) (-1L), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D20, (-68.77819630729812d));
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(2.3122509176395862d, (-2.141592653589793d), 0.5403023058681398d);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D26, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D43, (double) (byte) 100, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D33, (double) 0.0f, vector3D45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D55, (double) (byte) 100, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation53.applyTo(vector3D55);
        double double60 = vector3D55.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D45.add(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D26.subtract(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D20.add(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D(0.8414709848078965d, vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder66.getA3();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) ' ', 1.5599296019390303d, (-2000.0d));
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D73, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D20, 0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((-11094.094757084158d), vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D8, vector3D81);
        double double83 = vector3D81.getNorm();
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXZ" + "'", str15, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 11094.094757084158d + "'", double83 == 11094.094757084158d);
    }

    @Test
    public void test09036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09036");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        char[] charArray23 = new char[] { 'a', 'a', '4' };
        printStream1.println(charArray23);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.OutputStream) printStream1, false);
        printStream1.println(0.0f);
        java.util.Locale.Category category29 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale.setDefault(category29, locale30);
        java.util.Locale locale33 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale33);
        java.util.Locale locale35 = java.util.Locale.FRENCH;
        java.util.Locale locale36 = java.util.Locale.TAIWAN;
        java.lang.String str37 = locale35.getDisplayScript(locale36);
        java.lang.String str38 = locale33.getDisplayLanguage(locale36);
        java.util.Locale.setDefault(category29, locale36);
        java.lang.String str41 = locale36.getExtension('a');
        java.util.Set<java.lang.String> strSet42 = locale36.getUnicodeLocaleKeys();
        java.io.PrintStream printStream45 = new java.io.PrintStream("ko-KR");
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale49 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str50 = locale49.getScript();
        java.util.Locale locale51 = java.util.Locale.KOREA;
        java.lang.String str52 = locale49.getDisplayLanguage(locale51);
        java.lang.String[] strArray55 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray55, (java.lang.Throwable) mathException57);
        java.io.PrintWriter printWriter59 = printWriter48.format(locale51, "YZY", (java.lang.Object[]) strArray55);
        java.io.PrintStream printStream60 = printStream45.format("org.apache.commons.math.geometry.NotARotationMatrixException: ", (java.lang.Object[]) strArray55);
        java.io.PrintStream printStream61 = printStream1.format(locale36, "org.apache.commons.math.MathException: Deutsch", (java.lang.Object[]) strArray55);
        java.util.Locale locale62 = locale36.stripExtensions();
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, a, 4]");
        org.junit.Assert.assertTrue("'" + category29 + "' != '" + java.util.Locale.Category.FORMAT + "'", category29.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "fr");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\u97d3\u6587" + "'", str38, "\u97d3\u6587");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str52, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(printStream60);
        org.junit.Assert.assertNotNull(printStream61);
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "zh_TW");
    }

    @Test
    public void test09037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09037");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D16);
        double double19 = rotation5.getQ1();
        java.io.PrintStream printStream21 = new java.io.PrintStream("ko-KR");
        printStream21.close();
        java.util.Locale locale23 = java.util.Locale.UK;
        java.lang.String[] strArray25 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream26 = printStream21.format(locale23, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray25);
        printStream26.write(10);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter((java.io.OutputStream) printStream26);
        printStream26.print((int) (short) 1);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.OutputStream) printStream26);
        printStream26.close();
        java.io.PrintStream printStream35 = printStream26.append('a');
        java.io.PrintStream printStream37 = new java.io.PrintStream((java.io.OutputStream) printStream26, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str40 = rotationOrder39.toString();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D45, 2.3122509176395862d);
        double[][] doubleArray48 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(doubleArray48, 0.0d);
        java.io.PrintStream printStream51 = printStream37.printf("org.apache.commons.math.geometry.NotARotationMatrixException: cor\351en", (java.lang.Object[]) doubleArray48);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(doubleArray48, 0.8414709848078965d);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation53.revert();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation5.applyInverseTo(rotation53);
        double double56 = rotation53.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 100.0d + "'", double19 == 100.0d);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(printStream26);
        org.junit.Assert.assertNotNull(printStream35);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "XZY" + "'", str40, "XZY");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(printStream51);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test09038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09038");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation6.applyTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D8.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D(0.7723533772244097d, 3.2539077042633276E7d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA1();
        java.lang.String str25 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, 2.1098021193192458d, (double) 100L, (-381.8802471205947d));
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D20.add((-3.2538125986031946E7d), vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D39, (-1.63942416E8d));
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double49 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double56 = rotation55.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) (-1L), (double) (short) 10, (double) 'a');
        double double62 = rotation61.getAngle();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation55.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation48.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 'a', (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation61.applyInverseTo(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D39.subtract(0.07180241366097878d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D(1.3383666800412677d, vector3D16, 2.7653166634931896d, vector3D20, 120.0d, vector3D71);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ZXZ" + "'", str25, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 52.0d + "'", double56 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2.3122509176395862d + "'", double62 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
    }

    @Test
    public void test09039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09039");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.4028887144651276d, (-0.09950371902099892d), (-10.358482905538347d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double10 = rotation9.getQ0();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double17 = rotation16.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation9.applyTo(rotation16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation9.applyInverseTo(vector3D19);
        double double21 = vector3D19.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str23 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D19.add(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.negate();
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D(0.995037190209989d, (-2000.0d));
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D30.orthogonal();
        double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D27, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D3.add(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((-2.6237485370392872d), 76.58711610605957d);
        double double37 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D33, vector3D36);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 52.0d + "'", double10 == 52.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXZ" + "'", str23, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.930039504416137d) + "'", double32 == (-0.930039504416137d));
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-8.796375736716321d) + "'", double37 == (-8.796375736716321d));
    }

    @Test
    public void test09040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09040");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D19, (double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation11.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation11.revert();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((-12804.0d), vector3D27);
        double double29 = vector3D27.getY();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D3.subtract(vector3D27);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation38.applyTo(vector3D40);
        double double45 = vector3D40.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D40, (double) 10, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D40.negate();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D3.add(3.112216163995451d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D(5.566226206460602E7d, 935.7438253562556d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.scalarMultiply(1.3808080388761808d);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.scalarMultiply(0.9999999999999999d);
        double double58 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D50, vector3D57);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D50, 59.5713161054898d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 117.0d + "'", double4 == 117.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.0d) + "'", double29 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-32.81134297429143d) + "'", double58 == (-32.81134297429143d));
    }

    @Test
    public void test09041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09041");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation5.getQ0();
        double double16 = rotation5.getQ0();
        double[][] doubleArray17 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double24 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation23.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation5.applyInverseTo(rotation23);
        double double34 = rotation5.getQ1();
        double double35 = rotation5.getQ1();
        double double36 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation5.revert();
        double[][] doubleArray38 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray46 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D48, (double) (byte) 100, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D53, (double) (byte) 100, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D50, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation45.applyInverseTo(vector3D50);
        double double59 = rotation45.getQ0();
        double double60 = rotation45.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation45.applyInverseTo(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((-2.141592653589793d), vector3D66);
        double double68 = vector3D67.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation37.applyTo(vector3D67);
        double[][] doubleArray70 = rotation37.getMatrix();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 52.0d + "'", double24 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 100.0d + "'", double34 == 100.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 100.0d + "'", double35 == 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 52.0d + "'", double59 == 52.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.21309643366023423d + "'", double68 == 0.21309643366023423d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(doubleArray70);
    }

    @Test
    public void test09042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09042");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        boolean boolean47 = printStream6.checkError();
        printStream6.flush();
        java.io.PrintStream printStream52 = printStream6.append((java.lang.CharSequence) "XYZ", (int) (short) 0, 0);
        printStream6.print(10L);
        printStream6.close();
        printStream6.println(10.0f);
        java.util.Locale locale58 = java.util.Locale.CHINA;
        java.util.Locale locale62 = new java.util.Locale("", "hi!", "ko_KR");
        boolean boolean63 = locale62.hasExtensions();
        java.lang.String str64 = locale58.getDisplayScript(locale62);
        java.util.Locale locale65 = java.util.Locale.UK;
        java.lang.String str66 = locale65.getVariant();
        java.lang.String str67 = locale58.getDisplayVariant(locale65);
        printStream6.print((java.lang.Object) locale58);
        java.util.Set<java.lang.String> strSet69 = locale58.getUnicodeLocaleKeys();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(printStream52);
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "zh_CN");
        org.junit.Assert.assertEquals(locale62.toString(), "_HI!_ko_KR");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(strSet69);
    }

    @Test
    public void test09043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09043");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.subtract((double) 10L, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D32, (double) (byte) 100, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D37, (double) (byte) 100, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D34, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D28.subtract((double) 0, vector3D41);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double50 = rotation49.getQ0();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double57 = rotation56.getQ0();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation49.applyTo(rotation56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation49.applyInverseTo(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D64, (double) (byte) 100, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D66, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D76, (double) (byte) 100, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D82, (double) (byte) 100, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D87, (double) (byte) 100, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D84, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D71, (double) (byte) 1, vector3D79, (double) (short) 100, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D41, (double) (short) 100, vector3D60, 100.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation5.applyInverseTo(vector3D71);
        double double95 = rotation5.getQ3();
        double double96 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 52.0d + "'", double57 == 52.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 10.0d + "'", double95 == 10.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
    }

    @Test
    public void test09044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09044");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        printWriter89.write((int) (byte) 100);
        java.io.PrintWriter printWriter93 = printWriter89.append('#');
        printWriter93.print("eng");
        printWriter93.flush();
        java.io.PrintWriter printWriter97 = new java.io.PrintWriter((java.io.Writer) printWriter93);
        printWriter93.print(true);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printWriter93);
    }

    @Test
    public void test09045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09045");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = java.util.Locale.GERMAN;
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale11 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str12 = locale11.getScript();
        java.util.Locale locale13 = java.util.Locale.KOREA;
        java.lang.String str14 = locale11.getDisplayLanguage(locale13);
        java.lang.String[] strArray17 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray17, (java.lang.Throwable) mathException19);
        java.io.PrintWriter printWriter21 = printWriter10.format(locale13, "YZY", (java.lang.Object[]) strArray17);
        java.io.PrintWriter printWriter22 = printWriter6.printf(locale7, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray17);
        java.io.PrintWriter printWriter24 = printWriter6.append('4');
        char[] charArray27 = new char[] { '4', 'a' };
        printWriter24.println(charArray27);
        java.util.Locale locale29 = java.util.Locale.ENGLISH;
        java.util.Locale locale30 = locale29.stripExtensions();
        java.lang.String str31 = locale30.getCountry();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException33);
        java.lang.Object[] objArray35 = mathException33.getArguments();
        java.io.PrintWriter printWriter36 = printWriter24.format(locale30, "org.apache.commons.math.geometry.NotARotationMatrixException: XZY", objArray35);
        boolean boolean37 = printWriter24.checkError();
        java.util.Locale.Builder builder38 = new java.util.Locale.Builder();
        java.util.Locale locale39 = builder38.build();
        java.lang.String str40 = locale39.getCountry();
        java.lang.String str41 = locale39.getDisplayLanguage();
        java.lang.String str43 = locale39.getExtension('a');
        java.lang.String str44 = locale39.toLanguageTag();
        java.lang.String str45 = locale39.getCountry();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, (double) '#', (double) 0L, (double) (short) 100, true);
        double[][] doubleArray53 = rotation52.getMatrix();
        java.io.PrintWriter printWriter54 = printWriter24.format(locale39, "org.apache.commons.math.mathexception: ko_kr (GERMANY)", (java.lang.Object[]) doubleArray53);
        printWriter54.print("\uc911\uad6d\uc5b4)");
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "de");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str14, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, a]");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "und" + "'", str44, "und");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test09046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09046");
        java.io.PrintStream printStream2 = new java.io.PrintStream("ko-KR");
        printStream2.close();
        java.util.Locale locale4 = java.util.Locale.UK;
        java.lang.String[] strArray6 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream7 = printStream2.format(locale4, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray6);
        printStream7.write(10);
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.OutputStream) printStream7);
        printWriter10.println(1);
        java.util.Locale locale13 = java.util.Locale.JAPANESE;
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.lang.String str17 = locale15.getVariant();
        java.lang.String str18 = locale13.getDisplayVariant(locale15);
        java.lang.String str19 = locale13.getDisplayCountry();
        java.lang.String[] strArray22 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray22, (java.lang.Throwable) mathException24);
        java.io.PrintWriter printWriter26 = printWriter10.format(locale13, "Englisch", (java.lang.Object[]) strArray22);
        java.io.PrintWriter printWriter28 = printWriter10.append('x');
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.Writer) printWriter28, true);
        printWriter30.println((long) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str35 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder34.getA2();
        java.lang.String str42 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, 2.5657054957045693d, (-4.79425538604203d), 110.14009524181563d);
        double[][] doubleArray47 = rotation46.getMatrix();
        java.io.PrintWriter printWriter48 = printWriter30.format("org.apache.commons.math.geometry.NotARotationMatrixException: XZY", (java.lang.Object[]) doubleArray47);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZH_CN", (java.lang.Object[]) doubleArray47);
        java.lang.String str50 = notARotationMatrixException49.getPattern();
        java.lang.String str51 = notARotationMatrixException49.toString();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(printStream7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "ja");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ZXZ" + "'", str35, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ZXZ" + "'", str42, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ZH_CN" + "'", str50, "ZH_CN");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: ZH_CN" + "'", str51, "org.apache.commons.math.geometry.NotARotationMatrixException: ZH_CN");
    }

    @Test
    public void test09047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09047");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.03286963174708454d), 32.0d, 1.5707963267948963d, 8095.122278323722d, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ3();
        double double8 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 8095.122278323722d + "'", double7 == 8095.122278323722d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.03286963174708454d) + "'", double8 == (-0.03286963174708454d));
    }

    @Test
    public void test09048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09048");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream1.println((long) 10);
        java.io.PrintStream printStream10 = printStream1.append('x');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.OutputStream) printStream10, false);
        printStream10.print(0L);
        printStream10.print((float) (byte) 0);
        printStream10.println((float) (short) 10);
        java.io.PrintStream printStream19 = new java.io.PrintStream((java.io.OutputStream) printStream10);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double27 = rotation26.getQ0();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double34 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation26.applyTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation26.applyInverseTo(rotation42);
        double double45 = rotation26.getAngle();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double52 = rotation51.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double59 = rotation58.getQ0();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double66 = rotation65.getQ0();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation58.applyTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double74 = rotation73.getQ0();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double81 = rotation80.getQ0();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation73.applyTo(rotation80);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation67.applyInverseTo(rotation73);
        double double85 = rotation84.getQ3();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation51.applyInverseTo(rotation84);
        double double87 = rotation86.getQ2();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation26.applyInverseTo(rotation86);
        double[][] doubleArray89 = rotation26.getMatrix();
        java.io.PrintStream printStream90 = printStream19.format("\u65e5\u672c", (java.lang.Object[]) doubleArray89);
        boolean boolean91 = printStream19.checkError();
        printStream19.flush();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream10);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 52.0d + "'", double43 == 52.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 52.0d + "'", double59 == 52.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 52.0d + "'", double66 == 52.0d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 52.0d + "'", double74 == 52.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 52.0d + "'", double81 == 52.0d);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 128040.0d + "'", double85 == 128040.0d);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test09049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09049");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println((double) (short) 100);
        byte[] byteArray17 = new byte[] { (byte) 1 };
        printStream6.write(byteArray17, 0, 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream6, true);
        printStream6.println((-1.0d));
        java.util.Locale locale25 = null;
        java.io.PrintStream printStream29 = new java.io.PrintStream("ko-KR");
        printStream29.close();
        java.util.Locale locale31 = java.util.Locale.UK;
        java.lang.String[] strArray33 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream34 = printStream29.format(locale31, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray33);
        printStream34.write(10);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.OutputStream) printStream34);
        byte[] byteArray39 = new byte[] { (byte) -1 };
        printStream34.write(byteArray39);
        printStream34.close();
        printStream34.println((double) (short) 100);
        byte[] byteArray45 = new byte[] { (byte) 1 };
        printStream34.write(byteArray45, 0, 1);
        printStream34.println(true);
        printStream34.print('a');
        java.io.PrintStream printStream55 = new java.io.PrintStream("ko-KR");
        printStream55.close();
        java.util.Locale locale57 = java.util.Locale.UK;
        java.lang.String[] strArray59 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream60 = printStream55.format(locale57, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray59);
        java.io.PrintStream printStream61 = printStream34.printf("org.apache.commons.math.MathException: Deutsch", (java.lang.Object[]) strArray59);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("ITA", (java.lang.Object[]) strArray59);
        java.io.PrintStream printStream63 = printStream6.printf(locale25, "org.apache.commons.math.MathException: chinesisch_VEREINIGTES K\366NIGREICH", (java.lang.Object[]) strArray59);
        printStream6.print(false);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((-2000.0d), (-12804.0d), 18488.397824670512d, 0.0d, true);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D79, (double) (byte) 100, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation77.applyTo(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder85.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.subtract(vector3D86);
        double double88 = vector3D87.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D87.negate();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation71.applyInverseTo(vector3D89);
        printStream6.println((java.lang.Object) vector3D89);
        printStream6.print((long) (byte) 10);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1]");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(printStream34);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1]");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(printStream60);
        org.junit.Assert.assertNotNull(printStream61);
        org.junit.Assert.assertNotNull(printStream63);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 3.141592653589793d + "'", double88 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test09050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09050");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double23 = rotation22.getQ0();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation6.applyInverseTo(rotation22);
        double[][] doubleArray25 = rotation6.getMatrix();
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter31 = printWriter29.append('#');
        printWriter29.println((long) (short) 10);
        java.util.Locale locale34 = java.util.Locale.PRC;
        java.lang.String str35 = locale34.getDisplayVariant();
        java.lang.String[] strArray40 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray40, (java.lang.Throwable) mathException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray45 = mathException44.getSuppressed();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray40, (java.lang.Throwable) mathException44);
        java.lang.Throwable[] throwableArray47 = mathException44.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray47);
        java.io.PrintWriter printWriter49 = printWriter29.format(locale34, "", (java.lang.Object[]) throwableArray47);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException51);
        java.lang.Object[] objArray53 = mathException51.getArguments();
        java.io.PrintWriter printWriter54 = printWriter29.printf("zh", objArray53);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException55 = new org.apache.commons.math.geometry.NotARotationMatrixException("\uc911\uad6d", objArray53);
        java.lang.String[] strArray63 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray63, (java.lang.Throwable) mathException65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray68 = mathException67.getSuppressed();
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray63, (java.lang.Throwable) mathException67);
        java.lang.Throwable[] throwableArray70 = mathException67.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException71 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray70);
        java.lang.String str72 = notARotationMatrixException71.getPattern();
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) notARotationMatrixException71);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("", (java.lang.Throwable) notARotationMatrixException71);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("", (java.lang.Throwable) notARotationMatrixException71);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException75);
        java.lang.Object[] objArray77 = mathException76.getArguments();
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("_JA", objArray53, (java.lang.Throwable) mathException76);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("zh-TW", (java.lang.Object[]) doubleArray25, (java.lang.Throwable) mathException78);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException79);
        java.lang.Object[] objArray81 = mathException80.getArguments();
        java.lang.String str82 = mathException80.toString();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 52.0d + "'", double23 == 52.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org.apache.commons.math.MathException: zh-TW" + "'", str82, "org.apache.commons.math.MathException: zh-TW");
    }

    @Test
    public void test09051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09051");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        printWriter6.print(true);
        java.util.Locale.Builder builder9 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder11 = builder9.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder12 = builder11.clearExtensions();
        java.util.Locale locale13 = builder12.build();
        java.util.Set<java.lang.Character> charSet14 = locale13.getExtensionKeys();
        java.util.Locale locale15 = locale13.stripExtensions();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation23.getAxis();
        double[][] doubleArray25 = rotation23.getMatrix();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray25);
        java.io.PrintWriter printWriter27 = printWriter6.printf(locale13, "org.apache.commons.math.MathException: YZY", (java.lang.Object[]) doubleArray25);
        printWriter6.print(true);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "");
        org.junit.Assert.assertNotNull(charSet14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(printWriter27);
    }

    @Test
    public void test09052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09052");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream90 = new java.io.PrintStream((java.io.OutputStream) printStream85);
        java.util.Locale locale91 = java.util.Locale.GERMAN;
        java.util.Locale.setDefault(locale91);
        printStream90.print((java.lang.Object) locale91);
        java.io.PrintWriter printWriter95 = new java.io.PrintWriter((java.io.OutputStream) printStream90, false);
        java.io.PrintStream printStream97 = printStream90.append((java.lang.CharSequence) "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(locale91);
        org.junit.Assert.assertEquals(locale91.toString(), "de");
        org.junit.Assert.assertNotNull(printStream97);
    }

    @Test
    public void test09053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09053");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintStream printStream47 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        printStream6.println((long) '4');
        printStream6.print(0L);
        printStream6.print(10.0d);
        printStream6.print("org.apache.commons.math.MathException: de-DE");
        printStream6.println((int) 'x');
        printStream6.print(0.12481652586946246d);
        printStream6.print(true);
        printStream6.println('4');
        printStream6.println("");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
    }

    @Test
    public void test09054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09054");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printWriter9.println("\uc601\uc5b4");
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray20 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D22, (double) (byte) 100, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D27, (double) (byte) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation34.revert();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation34.getAxis();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException38 = new org.apache.commons.math.geometry.NotARotationMatrixException("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) doubleArray37);
        java.io.PrintWriter printWriter39 = printWriter9.format("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) doubleArray37);
        printWriter39.flush();
        java.io.PrintStream printStream43 = new java.io.PrintStream("ko-KR");
        printStream43.print((float) 100L);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter((java.io.OutputStream) printStream43);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation53.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation53.revert();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double70 = rotation69.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation53.applyInverseTo(rotation69);
        double[][] doubleArray72 = rotation53.getMatrix();
        java.io.PrintWriter printWriter73 = printWriter46.printf("zh", (java.lang.Object[]) doubleArray72);
        java.io.PrintWriter printWriter74 = printWriter39.format("kanouri (KO,zh-tw)", (java.lang.Object[]) doubleArray72);
        printWriter74.print('#');
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 52.0d + "'", double61 == 52.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(printWriter74);
    }

    @Test
    public void test09055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09055");
        java.io.PrintStream printStream1 = new java.io.PrintStream("und");
        java.io.PrintStream printStream3 = printStream1.append('a');
        printStream3.println("\ud55c\uad6d\uc5b4");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException8.getSuppressed();
        java.io.PrintStream printStream10 = printStream3.printf("org.apache.commons.math.MathException: German (Germany)", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double27 = rotation26.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) (-1L), (double) (short) 10, (double) 'a');
        double double33 = rotation32.getAngle();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation19.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation35.revert();
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("DE", (java.lang.Object[]) doubleArray37);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException39 = new org.apache.commons.math.geometry.NotARotationMatrixException("chinesisch (VEREINIGTES K\366NIGREICH)", (java.lang.Object[]) doubleArray37);
        java.io.PrintStream printStream40 = printStream3.format("ORG.APACHE.COMMONS.MATH.GEOMETRY.CARDANEULERSINGULARITYEXCEPTION: EULER ANGLES SINGULARITY", (java.lang.Object[]) doubleArray37);
        printStream40.println((-1L));
        org.junit.Assert.assertNotNull(printStream3);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(printStream10);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2.3122509176395862d + "'", double33 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(printStream40);
    }

    @Test
    public void test09056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09056");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(4788.244814560393d, 0.9999999999999999d, 1211523.1867412077d, (-14586.750959615323d), true);
    }

    @Test
    public void test09057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09057");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.1054408345797775d, 1.5605655584232864E12d, 117.0d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "XZY" + "'", str9, "XZY");
    }

    @Test
    public void test09058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09058");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        boolean boolean86 = printStream1.checkError();
        printStream1.println((int) 'x');
        printStream1.flush();
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.OutputStream) printStream1, true);
        printStream1.println((float) (-1));
        java.io.PrintWriter printWriter94 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test09059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09059");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (-0.8519466901357562d), 0.5763904177042349d, (double) 0L);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D12, (double) (byte) 100, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract((double) 10L, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D23, (double) (byte) 100, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D28, (double) (byte) 100, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D25, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D19.subtract((double) 0, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D35, (double) (byte) 100, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D32, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D46, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D56, (double) (byte) 100, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D46, (double) 0.0f, vector3D58);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D68, (double) (byte) 100, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation66.applyTo(vector3D68);
        double double73 = vector3D68.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D58.add(vector3D68);
        double double75 = vector3D68.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D39.add(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation10.applyInverseTo(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.negate();
        double double79 = vector3D76.getZ();
        // The following exception was thrown during execution in test generation
        try {
            double double80 = org.apache.commons.math.geometry.Vector3D.angle(vector3D4, vector3D76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null norm");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
    }

    @Test
    public void test09060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09060");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, 1.7607846147136124d, (double) '4');
        double double9 = rotation8.getQ0();
        org.apache.commons.math.geometry.Rotation rotation10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation11 = rotation8.applyInverseTo(rotation10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXZ" + "'", str3, "ZXZ");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXZ" + "'", str4, "ZXZ");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.5249743601969139d + "'", double9 == 0.5249743601969139d);
    }

    @Test
    public void test09061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09061");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.OutputStream) printStream16, false);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double25 = rotation24.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) (-1L), (double) (short) 10, (double) 'a');
        double double31 = rotation30.getAngle();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation24.applyInverseTo(rotation30);
        double double33 = rotation32.getQ0();
        printStream16.println((java.lang.Object) double33);
        java.io.PrintStream printStream35 = new java.io.PrintStream((java.io.OutputStream) printStream16);
        java.io.PrintStream printStream37 = new java.io.PrintStream((java.io.OutputStream) printStream16, false);
        printStream37.println(5.566226206460602E7d);
        printStream37.println();
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2.3122509176395862d + "'", double31 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 60.912721436461325d + "'", double33 == 60.912721436461325d);
    }

    @Test
    public void test09062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09062");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(0.5763904177042349d, (-0.9904757959510307d));
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D13, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D3.subtract(4.023222690953624d, vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test09063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09063");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        char[] charArray23 = new char[] { 'a', 'a', '4' };
        printStream1.println(charArray23);
        printStream1.print((long) 'x');
        printStream1.println((long) (byte) 0);
        java.io.PrintStream printStream29 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        printStream29.print(true);
        printStream29.println((-1));
        java.util.Locale.Builder builder34 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder36 = builder34.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder37 = builder36.clearExtensions();
        java.util.Locale locale38 = builder37.build();
        java.lang.String str39 = locale38.getLanguage();
        java.util.Locale.setDefault(locale38);
        java.util.Locale locale41 = locale38.stripExtensions();
        java.lang.String str42 = locale41.toLanguageTag();
        printStream29.print((java.lang.Object) locale41);
        java.util.Locale locale47 = new java.util.Locale("yzy", "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", "\uc911\uad6d\uc5b4");
        java.lang.String str48 = locale41.getDisplayScript(locale47);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, a, 4]");
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "und" + "'", str42, "und");
// flaky:         org.junit.Assert.assertEquals(locale47.toString(), "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test09064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09064");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.884114997657917d, (double) 0, 93.57684707871968d);
        double double5 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation11.getAxis();
        double double19 = rotation11.getAngle();
        double double20 = rotation11.getQ0();
        double double21 = rotation11.getQ0();
        double[][] doubleArray22 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation4.applyTo(rotation11);
        double double24 = rotation11.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 100.0d + "'", double24 == 100.0d);
    }

    @Test
    public void test09065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09065");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double8 = rotation7.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double15 = rotation14.getQ0();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation7.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyTo(rotation22);
        double double24 = rotation22.getAngle();
        double double25 = rotation22.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation31 = rotation22.applyInverseTo(rotation30);
        double[][] doubleArray32 = rotation31.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException33 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray32);
        java.lang.String str34 = notARotationMatrixException33.getPattern();
        java.io.PrintStream printStream38 = new java.io.PrintStream("ko-KR");
        printStream38.print((float) 100L);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.OutputStream) printStream38);
        java.lang.String[] strArray44 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray44, (java.lang.Throwable) mathException46);
        java.lang.String[] strArray51 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray51, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray56 = mathException55.getSuppressed();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray51, (java.lang.Throwable) mathException55);
        java.lang.Throwable[] throwableArray58 = mathException55.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException59 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray58);
        mathException47.addSuppressed((java.lang.Throwable) notARotationMatrixException59);
        java.lang.Throwable[] throwableArray61 = notARotationMatrixException59.getSuppressed();
        java.io.PrintWriter printWriter62 = printWriter41.format("ZXZ", (java.lang.Object[]) throwableArray61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("\uc911\uad6d\uc5b4", (java.lang.Object[]) throwableArray61);
        java.lang.String[] strArray65 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray65, (java.lang.Throwable) mathException67);
        java.lang.String[] strArray72 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray72, (java.lang.Throwable) mathException74);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray77 = mathException76.getSuppressed();
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray72, (java.lang.Throwable) mathException76);
        java.lang.Throwable[] throwableArray79 = mathException76.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException80 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray79);
        mathException68.addSuppressed((java.lang.Throwable) notARotationMatrixException80);
        java.lang.String str82 = mathException68.getPattern();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray61, (java.lang.Throwable) mathException68);
        java.lang.Throwable[] throwableArray84 = mathException68.getSuppressed();
        notARotationMatrixException33.addSuppressed((java.lang.Throwable) mathException68);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("ZH_CN", (java.lang.Throwable) notARotationMatrixException33);
        java.lang.Object[] objArray87 = mathException86.getArguments();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2.3122509176395862d + "'", double24 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.4028887144651276d + "'", double25 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ZXZ" + "'", str82, "ZXZ");
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
    }

    @Test
    public void test09066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09066");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (-0.02937648959434208d), (-3.141592653589793d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder1.getA3();
        java.lang.String str12 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D(1.5064266830314104d, vector3D13);
        double double15 = vector3D14.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "XZY" + "'", str12, "XZY");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test09067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09067");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        java.io.PrintStream printStream49 = printStream6.append((java.lang.CharSequence) "Franz\366sisch (Frankreich)");
        printStream49.println((long) (short) 0);
        printStream49.flush();
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream56 = printStream49.append((java.lang.CharSequence) "ko", (int) (short) 0, (int) 'u');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 117");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(printStream49);
    }

    @Test
    public void test09068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09068");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("zxz (ko_kr)");
        java.io.PrintStream printStream5 = new java.io.PrintStream("ko-KR");
        printStream5.close();
        printStream5.println((double) '4');
        printStream5.print("\ub3c5\uc77c\uc5b4");
        printStream5.print(false);
        printStream5.println(true);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter((java.io.OutputStream) printStream5, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, 2.3122509176395862d);
        double[][] doubleArray27 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(doubleArray27, 0.0d);
        java.io.PrintWriter printWriter30 = printWriter16.printf("\uc774\ud0c8\ub9ac\uc544\uc5b4", (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException31 = new org.apache.commons.math.geometry.NotARotationMatrixException("France", (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(doubleArray27, 0.09667091924386816d);
        java.io.PrintWriter printWriter34 = printWriter1.printf("org.apache.commons.math.MathException: Englisch (Vereinigtes K\366nigreich)", (java.lang.Object[]) doubleArray27);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "XZY" + "'", str19, "XZY");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(printWriter34);
    }

    @Test
    public void test09069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09069");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.write((int) ' ');
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, true);
        printStream85.print((int) '4');
        boolean boolean92 = printStream85.checkError();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test09070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09070");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        printWriter1.println((long) '#');
        printWriter1.write((int) (short) 0);
        printWriter1.print('4');
        java.util.Locale locale8 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale8);
        java.util.Locale locale10 = java.util.Locale.FRENCH;
        java.util.Locale locale11 = java.util.Locale.TAIWAN;
        java.lang.String str12 = locale10.getDisplayScript(locale11);
        java.lang.String str13 = locale8.getDisplayLanguage(locale11);
        java.lang.String str14 = locale8.getISO3Country();
        java.lang.String str15 = locale8.getDisplayScript();
        java.util.Locale.Category category16 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category17 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale18 = java.util.Locale.ROOT;
        java.lang.String str19 = locale18.getDisplayLanguage();
        java.util.Locale.setDefault(category17, locale18);
        java.util.Locale.setDefault(category16, locale18);
        java.util.Locale locale22 = java.util.Locale.ENGLISH;
        java.util.Locale locale23 = java.util.Locale.ENGLISH;
        boolean boolean24 = locale23.hasExtensions();
        java.lang.String str25 = locale22.getDisplayVariant(locale23);
        java.util.Locale locale26 = java.util.Locale.UK;
        java.lang.String str27 = locale26.getVariant();
        java.lang.String str28 = locale26.getISO3Language();
        java.util.Locale locale29 = locale26.stripExtensions();
        java.lang.String str30 = locale23.getDisplayCountry(locale29);
        java.util.Locale locale31 = locale23.stripExtensions();
        java.util.Locale locale32 = locale23.stripExtensions();
        java.lang.String str33 = locale32.getVariant();
        java.util.Locale.setDefault(category16, locale32);
        java.lang.String str35 = locale8.getDisplayLanguage(locale32);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double52 = rotation51.getQ0();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation44.applyTo(rotation51);
        double double54 = rotation51.getQ2();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation51.revert();
        double[][] doubleArray56 = rotation55.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException57 = new org.apache.commons.math.geometry.NotARotationMatrixException("French (Canada)", (java.lang.Object[]) doubleArray56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("DEU", (java.lang.Throwable) notARotationMatrixException57);
        java.lang.Throwable[] throwableArray59 = notARotationMatrixException57.getSuppressed();
        java.io.PrintWriter printWriter60 = printWriter1.printf(locale8, "zh-TW", (java.lang.Object[]) throwableArray59);
        java.lang.String str61 = locale8.getDisplayScript();
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "fr");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\u97d3\u6587" + "'", str13, "\u97d3\u6587");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "KOR" + "'", str14, "KOR");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + category16 + "' != '" + java.util.Locale.Category.FORMAT + "'", category16.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category17 + "' != '" + java.util.Locale.Category.FORMAT + "'", category17.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "eng" + "'", str28, "eng");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Korean" + "'", str35, "Korean");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 52.0d + "'", double52 == 52.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test09071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09071");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintStream printStream47 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        printStream6.println((int) (byte) 10);
        java.io.PrintStream printStream51 = printStream6.append('#');
        java.io.PrintStream printStream53 = new java.io.PrintStream((java.io.OutputStream) printStream6, true);
        java.lang.Object[] objArray55 = null;
        java.io.PrintStream printStream56 = printStream53.format("twi", objArray55);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(printStream51);
        org.junit.Assert.assertNotNull(printStream56);
    }

    @Test
    public void test09072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09072");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.019228399099707204d, (-1.4070751110264845d), 5.916711637265499E-7d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
    }

    @Test
    public void test09073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09073");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println(true);
        byte[] byteArray18 = new byte[] { (byte) -1, (byte) 0 };
        printStream6.write(byteArray18);
        boolean boolean20 = printStream6.checkError();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream6, false);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException27.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("zxz_KO_KR", (java.lang.Object[]) throwableArray28);
        java.io.PrintWriter printWriter31 = printWriter22.format("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray28);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA3();
        java.lang.String str36 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder33.getA1();
        printWriter32.println((java.lang.Object) rotationOrder33);
        printWriter32.print(true);
        java.io.PrintWriter printWriter42 = printWriter32.append('#');
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZYZ" + "'", str36, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(printWriter42);
    }

    @Test
    public void test09074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09074");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream90 = new java.io.PrintStream((java.io.OutputStream) printStream85);
        java.util.Locale locale91 = java.util.Locale.GERMAN;
        java.util.Locale.setDefault(locale91);
        printStream90.print((java.lang.Object) locale91);
        java.io.PrintStream printStream95 = printStream90.append('u');
        java.io.PrintStream printStream97 = new java.io.PrintStream((java.io.OutputStream) printStream90, false);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(locale91);
        org.junit.Assert.assertEquals(locale91.toString(), "de");
        org.junit.Assert.assertNotNull(printStream95);
    }

    @Test
    public void test09075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09075");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.print((float) 100L);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap5 = null;
        java.util.List<java.util.Locale.LanguageRange> languageRangeList6 = java.util.Locale.LanguageRange.parse("English", strMap5);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap7 = null;
        java.util.List<java.util.Locale.LanguageRange> languageRangeList8 = java.util.Locale.LanguageRange.mapEquivalents(languageRangeList6, strMap7);
        java.util.Locale.LanguageRange[] languageRangeArray9 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList10 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList10, languageRangeArray9);
        java.util.Locale locale12 = java.util.Locale.ROOT;
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.util.Locale locale14 = java.util.Locale.CANADA;
        java.util.Locale locale15 = java.util.Locale.GERMAN;
        java.util.Locale locale16 = java.util.Locale.GERMANY;
        java.util.Locale locale17 = java.util.Locale.ROOT;
        java.lang.String str18 = locale17.getDisplayLanguage();
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray22 = new java.util.Locale[] { locale12, locale13, locale14, locale15, locale16, locale17, locale19, locale20, locale21 };
        java.util.ArrayList<java.util.Locale> localeList23 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList23, localeArray22);
        java.util.Locale.FilteringMode filteringMode25 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList26 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList10, (java.util.Collection<java.util.Locale>) localeList23, filteringMode25);
        java.util.Locale.FilteringMode filteringMode27 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList28 = java.util.Locale.filter(languageRangeList6, (java.util.Collection<java.util.Locale>) localeList26, filteringMode27);
        printStream1.println((java.lang.Object) localeList26);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter30, false);
        printWriter32.print((float) 100);
        printWriter32.println(false);
        java.util.Locale locale37 = java.util.Locale.PRC;
        java.lang.String str38 = locale37.getDisplayVariant();
        java.util.Set<java.lang.String> strSet39 = locale37.getUnicodeLocaleKeys();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D48, (double) (byte) 100, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation46.applyTo(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation46.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation46.revert();
        double[][] doubleArray55 = rotation46.getMatrix();
        java.io.PrintWriter printWriter56 = printWriter32.printf(locale37, "\ub3c5\uc77c\uc5b4", (java.lang.Object[]) doubleArray55);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(doubleArray55, 84.29633443762866d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(languageRangeList6);
        org.junit.Assert.assertNotNull(languageRangeList8);
        org.junit.Assert.assertNotNull(languageRangeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "de");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "de");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + filteringMode25 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode25.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList26);
        org.junit.Assert.assertTrue("'" + filteringMode27 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode27.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList28);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(printWriter56);
    }

    @Test
    public void test09076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09076");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(128040.0d, (-0.995037190209989d), (double) 'u');
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, 5.566226206460602E7d);
        double double6 = vector3D3.getZ();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 117.0d + "'", double6 == 117.0d);
    }

    @Test
    public void test09077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09077");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.negate();
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D12.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D13.negate();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(10.0d, vector3D14);
        double double16 = vector3D7.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D7);
        double double18 = vector3D4.getX();
        double double19 = vector3D4.getX();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D30, (double) (byte) 100, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation28.applyTo(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.subtract(vector3D37);
        double double39 = vector3D38.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation46.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder48.getA1();
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((double) (-1.0f), vector3D60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((-0.13715201283077028d), vector3D38, (double) (short) 0, vector3D61, 0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((-11094.094757084158d), vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D69.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D4.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double81 = rotation80.getQ1();
        double double82 = rotation80.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D84, (double) (byte) 100, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D84.subtract((double) 10L, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation80.applyInverseTo(vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D72.add((-66.22931445640928d), vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D94.subtract(vector3D95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXZ" + "'", str11, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-2.141592653589793d) + "'", double16 == (-2.141592653589793d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.0d) + "'", double18 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.0d) + "'", double19 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.141592653589793d + "'", double39 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 100.0d + "'", double81 == 100.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 52.0d + "'", double82 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test09078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09078");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.6842964605324368d, 1040.0485565587792d, 0.26237485370392877d);
        double double7 = rotation6.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 2.8842928999183055d + "'", double7 == 2.8842928999183055d);
    }

    @Test
    public void test09079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09079");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation15.getAxis();
        double double23 = rotation15.getQ2();
        double double24 = rotation15.getQ1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        double double44 = rotation43.getAngle();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation37.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation30.applyTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation46.revert();
        double[][] doubleArray48 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(373547.3388035254d, (double) 1.0f, (-0.5063656411097588d), (-0.30821743242059296d), false);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation47.applyInverseTo(rotation54);
        double double56 = rotation54.getQ1();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation54.revert();
        double double58 = rotation57.getAngle();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation15.applyTo(rotation57);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 100.0d + "'", double24 == 100.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2.3122509176395862d + "'", double44 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(rotation59);
    }

    @Test
    public void test09080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09080");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        java.io.PrintStream printStream49 = new java.io.PrintStream((java.io.OutputStream) printStream6, true);
        java.io.PrintStream printStream51 = printStream49.append((java.lang.CharSequence) "org.apache.commons.math.geometry.NotARotationMatrixException: zxz");
        printStream49.close();
        printStream49.print(true);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(printStream51);
    }

    @Test
    public void test09081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09081");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream1.println((long) 10);
        java.io.PrintStream printStream10 = printStream1.append('x');
        java.io.PrintStream printStream12 = printStream10.append('a');
        java.io.PrintStream printStream14 = new java.io.PrintStream("ko-KR");
        printStream14.close();
        java.util.Locale locale16 = java.util.Locale.UK;
        java.lang.String[] strArray18 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream19 = printStream14.format(locale16, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray18);
        printStream19.write(10);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream19);
        byte[] byteArray24 = new byte[] { (byte) -1 };
        printStream19.write(byteArray24);
        printStream19.close();
        printStream19.println((double) (short) 100);
        byte[] byteArray30 = new byte[] { (byte) 1 };
        printStream19.write(byteArray30, 0, 1);
        printStream12.write(byteArray30, 0, (int) (short) 1);
        printStream12.println((double) '#');
        printStream12.println(0.47951105883464645d);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException46);
        java.lang.Object[] objArray48 = mathException46.getArguments();
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("deu", (java.lang.Throwable) mathException46);
        java.lang.Throwable[] throwableArray50 = mathException49.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation57.getAxis();
        double[][] doubleArray59 = rotation57.getMatrix();
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray50, (java.lang.Throwable) mathException60);
        java.lang.String str62 = mathException60.getPattern();
        java.lang.Object[] objArray63 = mathException60.getArguments();
        java.lang.Throwable[] throwableArray64 = mathException60.getSuppressed();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Throwable) mathException68);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException69);
        mathException65.addSuppressed((java.lang.Throwable) mathException69);
        java.lang.Throwable[] throwableArray72 = mathException65.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException73 = new org.apache.commons.math.geometry.NotARotationMatrixException("fr", (java.lang.Object[]) throwableArray72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("\u97d3\u6587\u5357\u97d3)", (java.lang.Object[]) throwableArray72);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("francia (DEU)", (java.lang.Object[]) throwableArray72);
        printStream12.print((java.lang.Object) mathException75);
        printStream12.println();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream10);
        org.junit.Assert.assertNotNull(printStream12);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(printStream19);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "French" + "'", str62, "French");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[[25407.0, 1040.0, 2000.0], [-1040.0, 5407.0, 10400.0], [2000.0, -10400.0, 5607.0]]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray72);
    }

    @Test
    public void test09082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09082");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.9904757959510307d), 0.0d, (-0.0d), 0.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(0.5403023058681398d, (double) (short) 100, (double) 1.0f);
        double double10 = vector3D9.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D((double) 1L, (double) '4', (double) 1.0f);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D15.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract(18.91058070538489d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D16);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.00645942428783d + "'", double10 == 100.00645942428783d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test09083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09083");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation7.getAxis();
        double[][] doubleArray9 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D13.subtract((double) 10L, vector3D20);
        java.util.Locale locale22 = java.util.Locale.FRENCH;
        java.util.Locale locale23 = java.util.Locale.TAIWAN;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale.LanguageRange[] languageRangeArray25 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList26 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList26, languageRangeArray25);
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.GERMAN;
        java.util.Locale locale30 = java.util.Locale.CANADA;
        java.util.Locale locale31 = java.util.Locale.GERMAN;
        java.util.Locale locale32 = java.util.Locale.GERMANY;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.lang.String str34 = locale33.getDisplayLanguage();
        java.util.Locale locale35 = java.util.Locale.FRENCH;
        java.util.Locale locale36 = java.util.Locale.ROOT;
        java.util.Locale locale37 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray38 = new java.util.Locale[] { locale28, locale29, locale30, locale31, locale32, locale33, locale35, locale36, locale37 };
        java.util.ArrayList<java.util.Locale> localeList39 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList39, localeArray38);
        java.util.Locale.FilteringMode filteringMode41 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList42 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList26, (java.util.Collection<java.util.Locale>) localeList39, filteringMode41);
        java.lang.String[] strArray46 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.lang.String str49 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList26, (java.util.Collection<java.lang.String>) strList47);
        java.util.Locale.LanguageRange[] languageRangeArray50 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList51 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList51, languageRangeArray50);
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.GERMAN;
        java.util.Locale locale55 = java.util.Locale.CANADA;
        java.util.Locale locale56 = java.util.Locale.GERMAN;
        java.util.Locale locale57 = java.util.Locale.GERMANY;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.lang.String str59 = locale58.getDisplayLanguage();
        java.util.Locale locale60 = java.util.Locale.FRENCH;
        java.util.Locale locale61 = java.util.Locale.ROOT;
        java.util.Locale locale62 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray63 = new java.util.Locale[] { locale53, locale54, locale55, locale56, locale57, locale58, locale60, locale61, locale62 };
        java.util.ArrayList<java.util.Locale> localeList64 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList64, localeArray63);
        java.util.Locale.FilteringMode filteringMode66 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList67 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList51, (java.util.Collection<java.util.Locale>) localeList64, filteringMode66);
        java.util.Locale.FilteringMode filteringMode68 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList69 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList26, (java.util.Collection<java.util.Locale>) localeList64, filteringMode68);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D77, (double) (byte) 100, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation75.applyTo(vector3D77);
        java.lang.Object[] objArray82 = new java.lang.Object[] { vector3D21, str24, languageRangeList26, rotation75 };
        java.lang.String[] strArray85 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray85, (java.lang.Throwable) mathException87);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray90 = mathException89.getSuppressed();
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray85, (java.lang.Throwable) mathException89);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray82, (java.lang.Throwable) mathException91);
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("ja", (java.lang.Throwable) mathException92);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("\u97d3\u6587)", (java.lang.Object[]) doubleArray9, (java.lang.Throwable) mathException93);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("ja_JP", (java.lang.Throwable) mathException94);
        java.lang.Object[] objArray96 = mathException95.getArguments();
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "fr");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(languageRangeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "de");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "fr");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + filteringMode41 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode41.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(languageRangeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "de");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "fr");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "");
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + filteringMode66 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode66.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList67);
        org.junit.Assert.assertTrue("'" + filteringMode68 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode68.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList69);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[]");
    }

    @Test
    public void test09084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09084");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream1.println((long) 10);
        java.io.PrintStream printStream9 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        printStream9.print((float) (byte) 0);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter15 = printWriter13.append('#');
        printWriter13.println((long) (short) 10);
        java.util.Locale locale18 = java.util.Locale.PRC;
        java.lang.String str19 = locale18.getDisplayVariant();
        java.lang.String[] strArray24 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray24, (java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray29 = mathException28.getSuppressed();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray24, (java.lang.Throwable) mathException28);
        java.lang.Throwable[] throwableArray31 = mathException28.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray31);
        java.io.PrintWriter printWriter33 = printWriter13.format(locale18, "", (java.lang.Object[]) throwableArray31);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException35);
        java.lang.Object[] objArray37 = mathException35.getArguments();
        java.io.PrintWriter printWriter38 = printWriter13.printf("zh", objArray37);
        java.lang.Class<?> wildcardClass39 = printWriter38.getClass();
        printStream9.print((java.lang.Object) printWriter38);
        java.util.Locale.Category category41 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category42 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale43 = java.util.Locale.ROOT;
        java.lang.String str44 = locale43.getDisplayLanguage();
        java.util.Locale.setDefault(category42, locale43);
        java.util.Locale.setDefault(category41, locale43);
        java.util.Locale locale47 = java.util.Locale.getDefault(category41);
        java.util.Locale locale48 = java.util.Locale.getDefault(category41);
        java.util.Locale locale49 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str50 = locale49.getScript();
        java.util.Locale locale51 = java.util.Locale.KOREA;
        java.lang.String str52 = locale49.getDisplayLanguage(locale51);
        java.util.Locale.setDefault(category41, locale51);
        java.lang.String str54 = locale51.toLanguageTag();
        java.io.PrintStream printStream57 = new java.io.PrintStream("ko-KR");
        printStream57.print((float) 100L);
        printStream57.println(true);
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale65 = java.util.Locale.KOREAN;
        java.lang.String str66 = locale65.getDisplayLanguage();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double74 = rotation73.getQ0();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double81 = rotation80.getQ0();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation73.applyTo(rotation80);
        double double83 = rotation73.getQ0();
        double double84 = rotation73.getQ0();
        double[][] doubleArray85 = rotation73.getMatrix();
        java.io.PrintWriter printWriter86 = printWriter64.printf(locale65, "zh_CN", (java.lang.Object[]) doubleArray85);
        java.io.PrintStream printStream87 = printStream57.printf("German (Germany)", (java.lang.Object[]) doubleArray85);
        java.io.PrintStream printStream88 = printStream9.printf(locale51, "cn", (java.lang.Object[]) doubleArray85);
        java.util.Locale locale89 = locale51.stripExtensions();
        java.util.Set<java.lang.String> strSet90 = locale51.getUnicodeLocaleAttributes();
        java.util.Set<java.lang.String> strSet91 = locale51.getUnicodeLocaleAttributes();
        boolean boolean92 = locale51.hasExtensions();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + category41 + "' != '" + java.util.Locale.Category.FORMAT + "'", category41.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category42 + "' != '" + java.util.Locale.Category.FORMAT + "'", category42.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str52, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ko-KR" + "'", str54, "ko-KR");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "ko");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Koreanisch" + "'", str66, "Koreanisch");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 52.0d + "'", double74 == 52.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 52.0d + "'", double81 == 52.0d);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 52.0d + "'", double83 == 52.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 52.0d + "'", double84 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertNotNull(printStream87);
        org.junit.Assert.assertNotNull(printStream88);
        org.junit.Assert.assertNotNull(locale89);
        org.junit.Assert.assertEquals(locale89.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(strSet90);
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test09085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09085");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray11 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D18, (double) (byte) 100, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation10.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D24);
        double double26 = vector3D24.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D4.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D35, (double) (byte) 100, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D47, (double) (byte) 100, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation45.applyTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D59.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str63 = rotationOrder62.toString();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D64.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D65.negate();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D59.subtract(10.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D(0.02937648959434208d, vector3D32, 1.5699657548817936d, vector3D37, 1.6704649792860586d, vector3D54, (double) (short) -1, vector3D67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder70.getA2();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, 0.4028887144651276d, 0.09966865249116202d, (-1.63942416E8d));
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D54.subtract(1.5699657548817936d, vector3D80);
        double double82 = vector3D81.getY();
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D(0.995037190209989d, vector3D4, 0.6421547192766318d, vector3D81, 2.2225112653956535E-5d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(8.396146867417E12d, 0.7069393147060633d, 3929.5113857326546d);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D87.subtract(0.8548408885630612d, vector3D92);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ZXZ" + "'", str63, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test09086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09086");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.scalarMultiply(0.5403023058681398d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, (double) (byte) 100, (double) 10);
        double double9 = vector3D8.getY();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double23 = rotation22.getQ0();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation15.applyTo(rotation22);
        double double25 = rotation22.getQ3();
        double double26 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation22.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray38 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation22.applyTo(rotation37);
        double double40 = rotation22.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D8.add(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D42);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 52.0d + "'", double23 == 52.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
    }

    @Test
    public void test09087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09087");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        double double22 = rotation20.getAngle();
        double double23 = rotation20.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyInverseTo(rotation28);
        double double30 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double37 = rotation36.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation36.applyTo(rotation43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation36.applyInverseTo(vector3D46);
        double double48 = vector3D46.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str50 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D51.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D46.add(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.negate();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D46, (double) (short) -1);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation28.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D(2.510959086225248d, (-9.4698384E7d), (-1.4097801489264368d));
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation57.applyInverseTo(vector3D61);
        double double63 = rotation57.getAngle();
        double double64 = rotation57.getQ2();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray71 = rotation70.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D73, (double) (byte) 100, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D78, (double) (byte) 100, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D75, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation70.applyInverseTo(vector3D75);
        double double84 = rotation70.getQ0();
        double double85 = rotation70.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation70.applyInverseTo(vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation92 = rotation57.applyInverseTo(rotation70);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2.3122509176395862d + "'", double22 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.4028887144651276d + "'", double23 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.02937648959434208d) + "'", double30 == (-0.02937648959434208d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ZXZ" + "'", str50, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2.7514505226609822d + "'", double63 == 2.7514505226609822d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.3826647057828544d + "'", double64 == 0.3826647057828544d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 52.0d + "'", double84 == 52.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(rotation92);
    }

    @Test
    public void test09088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09088");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.02937648959434208d), (-3.141592653589793d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test09089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09089");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printWriter47.print(1L);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double56 = rotation55.getQ1();
        double double57 = rotation55.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D59, (double) (byte) 100, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D59.subtract((double) 10L, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation55.applyInverseTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D68.orthogonal();
        printWriter47.print((java.lang.Object) vector3D69);
        printWriter47.println("deutsch");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 100.0d + "'", double56 == 100.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 52.0d + "'", double57 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
    }

    @Test
    public void test09090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09090");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        char[] charArray23 = new char[] { 'a', 'a', '4' };
        printStream1.println(charArray23);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.OutputStream) printStream1, false);
        printWriter26.print((float) (byte) 1);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.Writer) printWriter26, false);
        printWriter30.write((int) ' ');
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, a, 4]");
    }

    @Test
    public void test09091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09091");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        java.io.PrintWriter printWriter11 = printWriter3.format(locale7, "zxz", (java.lang.Object[]) throwableArray10);
        char[] charArray15 = new char[] { 'a', ' ', '#' };
        printWriter11.println(charArray15);
        java.util.Locale locale17 = java.util.Locale.FRENCH;
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.lang.String str21 = locale17.getDisplayLanguage(locale18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray33 = rotation32.getMatrix();
        java.io.PrintWriter printWriter34 = printWriter11.printf(locale17, "english", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray33, (double) '#');
        double double37 = rotation36.getQ1();
        double double38 = rotation36.getQ2();
        double double39 = rotation36.getQ1();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "fr");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "fran\347ais" + "'", str21, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2623748537039287d + "'", double37 == 0.2623748537039287d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.2623748537039287d + "'", double39 == 0.2623748537039287d);
    }

    @Test
    public void test09092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09092");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D2, (double) (byte) 100, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D20, (double) (byte) 100, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D25, (double) (byte) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D22, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D9, (double) (byte) 1, vector3D17, (double) (short) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D9.negate();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D33, (double) (byte) 100, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D31.subtract(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D45, (double) (byte) 100, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation43.applyTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation43.getAxis();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation43.revert();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation43.getAxis();
        double double53 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D36, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.negate();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.0d) + "'", double53 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D54);
    }

    @Test
    public void test09093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09093");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        java.io.PrintStream printStream11 = new java.io.PrintStream("ko-KR");
        printStream11.close();
        java.util.Locale locale13 = java.util.Locale.UK;
        java.lang.String[] strArray15 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream16 = printStream11.format(locale13, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray15);
        printStream16.write(10);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.OutputStream) printStream16);
        byte[] byteArray21 = new byte[] { (byte) -1 };
        printStream16.write(byteArray21);
        printStream16.close();
        printStream16.println((double) (short) 100);
        byte[] byteArray27 = new byte[] { (byte) 1 };
        printStream16.write(byteArray27, 0, 1);
        printStream6.write(byteArray27, (int) '#', (int) (byte) 0);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ0();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double48 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation40.revert();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double57 = rotation56.getQ0();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation40.applyInverseTo(rotation56);
        double[][] doubleArray59 = rotation40.getMatrix();
        java.io.PrintStream printStream60 = printStream6.printf("Englisch", (java.lang.Object[]) doubleArray59);
        printStream60.print("\uc77c\ubcf8\uc5b4");
        printStream60.println((long) ' ');
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 52.0d + "'", double57 == 52.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(printStream60);
    }

    @Test
    public void test09094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09094");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) (byte) 1);
        double double3 = vector3D2.getZ();
        double double4 = vector3D2.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str6 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str11 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder5.getA3();
        double double13 = vector3D12.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str20 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder14.getA2();
        double double23 = org.apache.commons.math.geometry.Vector3D.angle(vector3D12, vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D25.scalarMultiply((-34365.38633275781d));
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation36.applyInverseTo(vector3D41);
        double double50 = rotation36.getQ0();
        double double51 = rotation36.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation36.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D55);
        double double58 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D27, vector3D57);
        double double59 = vector3D27.getZ();
        double double60 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D12, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D2.subtract(vector3D12);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.8414709848078965d + "'", double3 == 0.8414709848078965d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.5403023058681398d + "'", double4 == 0.5403023058681398d);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXZ" + "'", str6, "ZXZ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXZ" + "'", str11, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXZ" + "'", str15, "ZXZ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ZXZ" + "'", str20, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.5707963267948966d + "'", double23 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.0d) + "'", double59 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.0d) + "'", double60 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D61);
    }

    @Test
    public void test09095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09095");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation12.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation27.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation27.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation21.applyInverseTo(rotation27);
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation5.applyInverseTo(rotation38);
        double double41 = rotation40.getQ2();
        double double42 = rotation40.getQ0();
        double double43 = rotation40.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation40.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 128040.0d + "'", double39 == 128040.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-9.4698384E7d) + "'", double42 == (-9.4698384E7d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
    }

    @Test
    public void test09096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09096");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation20.revert();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation20.getAxis();
        double double23 = vector3D22.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D22.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str27 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D28.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D28.scalarMultiply((double) 10);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D31.negate();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation38.applyTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.subtract(vector3D47);
        double double49 = vector3D48.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D32, vector3D48);
        double double51 = org.apache.commons.math.geometry.Vector3D.angle(vector3D22, vector3D48);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((-0.0d), 1.4711276743037345d, 128040.0d, 0.4028887144651276d, false);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation58.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.normalize();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((-0.0d), 1.4711276743037345d, 128040.0d, 0.4028887144651276d, false);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation69.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D70);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D70, (double) 0L);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D70.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D59.add((double) (byte) 1, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((-12804.0d), 2.3122509176395862d, 0.4028887144651276d);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(vector3D79);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D79);
        double double82 = rotation81.getAngle();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.9999999999999999d + "'", double23 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ZXZ" + "'", str27, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 3.141592653589793d + "'", double49 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 3.0419240010986313d + "'", double51 == 3.0419240010986313d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 3.041892372242409d + "'", double82 == 3.041892372242409d);
    }

    @Test
    public void test09097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09097");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (-1L), (double) (short) 10, (double) 'a');
        double double12 = rotation11.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyInverseTo(rotation11);
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(doubleArray14, 2.3122509176395862d);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(doubleArray14, 20118.4080027398d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, 270.0479994061873d, 1.9114895613862057d, 84.29633443762866d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder19.getA1();
        double[] doubleArray28 = rotation18.getAngles(rotationOrder19);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder19.getA1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.3122509176395862d + "'", double12 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.6510139312528468, -0.22018405042531128, 2.3327015490605456]");
        org.junit.Assert.assertNotNull(vector3D29);
    }

    @Test
    public void test09098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09098");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotation7);
    }

    @Test
    public void test09099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09099");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("ja");
        java.util.Locale.Category category2 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale3 = java.util.Locale.ROOT;
        java.lang.String str4 = locale3.getDisplayLanguage();
        java.util.Locale.setDefault(category2, locale3);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.util.Locale.LanguageRange[] languageRangeArray21 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList22 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList22, languageRangeArray21);
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.util.Locale locale25 = java.util.Locale.GERMAN;
        java.util.Locale locale26 = java.util.Locale.CANADA;
        java.util.Locale locale27 = java.util.Locale.GERMAN;
        java.util.Locale locale28 = java.util.Locale.GERMANY;
        java.util.Locale locale29 = java.util.Locale.ROOT;
        java.lang.String str30 = locale29.getDisplayLanguage();
        java.util.Locale locale31 = java.util.Locale.FRENCH;
        java.util.Locale locale32 = java.util.Locale.ROOT;
        java.util.Locale locale33 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray34 = new java.util.Locale[] { locale24, locale25, locale26, locale27, locale28, locale29, locale31, locale32, locale33 };
        java.util.ArrayList<java.util.Locale> localeList35 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList35, localeArray34);
        java.util.Locale.FilteringMode filteringMode37 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList38 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList35, filteringMode37);
        java.lang.String[] strArray42 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.lang.String str45 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.lang.String>) strList43);
        java.util.Locale.LanguageRange[] languageRangeArray46 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList47 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList47, languageRangeArray46);
        java.util.Locale locale49 = java.util.Locale.ROOT;
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = java.util.Locale.CANADA;
        java.util.Locale locale52 = java.util.Locale.GERMAN;
        java.util.Locale locale53 = java.util.Locale.GERMANY;
        java.util.Locale locale54 = java.util.Locale.ROOT;
        java.lang.String str55 = locale54.getDisplayLanguage();
        java.util.Locale locale56 = java.util.Locale.FRENCH;
        java.util.Locale locale57 = java.util.Locale.ROOT;
        java.util.Locale locale58 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale49, locale50, locale51, locale52, locale53, locale54, locale56, locale57, locale58 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        java.util.Locale.FilteringMode filteringMode62 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList63 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList47, (java.util.Collection<java.util.Locale>) localeList60, filteringMode62);
        java.util.Locale.FilteringMode filteringMode64 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList65 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList60, filteringMode64);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D73, (double) (byte) 100, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation71.applyTo(vector3D73);
        java.lang.Object[] objArray78 = new java.lang.Object[] { vector3D17, str20, languageRangeList22, rotation71 };
        java.lang.String[] strArray81 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray86 = mathException85.getSuppressed();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray78, (java.lang.Throwable) mathException87);
        java.lang.Object[] objArray89 = mathException87.getArguments();
        java.io.PrintWriter printWriter90 = printWriter1.format(locale3, "ZXZ", objArray89);
        printWriter1.print("");
        java.io.PrintWriter printWriter94 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        java.io.PrintWriter printWriter96 = printWriter1.append('x');
        java.io.PrintWriter printWriter98 = printWriter96.append((java.lang.CharSequence) "Italian (Italy)");
        org.junit.Assert.assertTrue("'" + category2 + "' != '" + java.util.Locale.Category.FORMAT + "'", category2.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(languageRangeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "de");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "de");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "fr");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + filteringMode37 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode37.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(languageRangeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "de");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "de");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "fr");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + filteringMode62 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode62.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList63);
        org.junit.Assert.assertTrue("'" + filteringMode64 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode64.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList65);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter96);
        org.junit.Assert.assertNotNull(printWriter98);
    }

    @Test
    public void test09100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09100");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintStream printStream18 = printStream16.append('u');
        printStream16.print("");
        printStream16.print((long) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter((java.io.OutputStream) printStream16, true);
        printStream16.print(' ');
        printStream16.println(0.7954966866093076d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(printStream18);
    }

    @Test
    public void test09101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09101");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        java.io.PrintStream printStream49 = new java.io.PrintStream((java.io.OutputStream) printStream6, true);
        java.io.PrintStream printStream51 = printStream49.append((java.lang.CharSequence) "org.apache.commons.math.geometry.NotARotationMatrixException: zxz");
        printStream51.print(2.805323655676646d);
        printStream51.print("\u97d3\u6587");
        java.io.PrintStream printStream57 = new java.io.PrintStream((java.io.OutputStream) printStream51, true);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(printStream51);
    }

    @Test
    public void test09102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09102");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation5.getAxis();
        double double13 = rotation5.getAngle();
        double double14 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        double double16 = rotation15.getQ0();
        double double17 = rotation15.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA1();
        java.lang.String str21 = rotationOrder18.toString();
        java.lang.String str22 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.applyTo(rotation26);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-52.0d) + "'", double16 == (-52.0d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-52.0d) + "'", double17 == (-52.0d));
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXZ" + "'", str19, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZXZ" + "'", str21, "ZXZ");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXZ" + "'", str22, "ZXZ");
        org.junit.Assert.assertNotNull(rotation27);
    }

    @Test
    public void test09103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09103");
        java.io.PrintStream printStream2 = new java.io.PrintStream("fr");
        java.io.PrintStream printStream3 = new java.io.PrintStream((java.io.OutputStream) printStream2);
        java.io.PrintStream printStream5 = new java.io.PrintStream((java.io.OutputStream) printStream2, false);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter10 = printWriter8.append('#');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.Writer) printWriter8, false);
        printWriter8.println((long) (short) 0);
        printWriter8.println();
        printWriter8.print(' ');
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale22 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str23 = locale22.getScript();
        java.util.Locale locale24 = java.util.Locale.KOREA;
        java.lang.String str25 = locale22.getDisplayLanguage(locale24);
        java.lang.String[] strArray28 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray28, (java.lang.Throwable) mathException30);
        java.io.PrintWriter printWriter32 = printWriter21.format(locale24, "YZY", (java.lang.Object[]) strArray28);
        printWriter32.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException38);
        java.lang.Object[] objArray40 = mathException38.getArguments();
        java.io.PrintWriter printWriter41 = printWriter32.format("org.apache.commons.math.MathException: ZXZ", objArray40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("\u97d3\u6587", objArray40);
        java.lang.Throwable[] throwableArray43 = mathException42.getSuppressed();
        java.io.PrintWriter printWriter44 = printWriter8.printf("\uc911\uad6d\uc5b4", (java.lang.Object[]) throwableArray43);
        printWriter8.print((int) (byte) 1);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation53.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation53.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation69 = rotation63.applyTo(rotation68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation63.getAxis();
        double double71 = rotation63.getQ2();
        double double72 = rotation63.getQ1();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(1.912983406767073d, 100.02049971110628d, 1.3964058484385629E-10d, (-0.915248973644132d), false);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation63.applyTo(rotation78);
        double[][] doubleArray80 = rotation79.getMatrix();
        java.io.PrintWriter printWriter81 = printWriter8.format("\u6cd5\u570b", (java.lang.Object[]) doubleArray80);
        java.io.PrintStream printStream82 = printStream5.format("Canada", (java.lang.Object[]) doubleArray80);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException83 = new org.apache.commons.math.geometry.NotARotationMatrixException("fr", (java.lang.Object[]) doubleArray80);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str25, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 52.0d + "'", double61 == 52.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 100.0d + "'", double72 == 100.0d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(printStream82);
    }

    @Test
    public void test09104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09104");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation6.applyTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation6.getAxis();
        double double14 = rotation6.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation20.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation36 = rotation30.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation6.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyTo(rotation50);
        double double53 = rotation50.getQ3();
        double double54 = rotation50.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation50.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray66 = rotation65.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation50.applyTo(rotation65);
        double double68 = rotation65.getQ2();
        double double69 = rotation65.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation65.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D70.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation6.applyTo(vector3D71);
        double[][] doubleArray73 = rotation6.getMatrix();
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException75);
        java.lang.Object[] objArray77 = mathException75.getArguments();
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("deu", (java.lang.Throwable) mathException75);
        java.lang.Throwable[] throwableArray79 = mathException78.getSuppressed();
        java.lang.Object[] objArray80 = mathException78.getArguments();
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)", (java.lang.Object[]) doubleArray73, (java.lang.Throwable) mathException78);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
    }

    @Test
    public void test09105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09105");
        java.util.Locale locale0 = java.util.Locale.UK;
        java.lang.String str1 = locale0.getVariant();
        java.lang.String str2 = locale0.getDisplayCountry();
        java.util.Locale locale3 = locale0.stripExtensions();
        java.lang.String str4 = locale3.getDisplayScript();
        java.util.Locale locale5 = java.util.Locale.FRENCH;
        java.util.Locale locale6 = java.util.Locale.FRENCH;
        java.util.Locale locale7 = java.util.Locale.TAIWAN;
        java.lang.String str8 = locale6.getDisplayScript(locale7);
        java.lang.String str9 = locale5.getDisplayLanguage(locale6);
        boolean boolean10 = locale6.hasExtensions();
        java.lang.String str11 = locale6.getDisplayCountry();
        java.util.Locale locale12 = locale6.stripExtensions();
        java.lang.String str13 = locale3.getDisplayName(locale12);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (-1L), (double) (short) 10, (double) 'a');
        double double28 = rotation27.getAngle();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyTo(rotation36);
        double[][] doubleArray38 = rotation36.getMatrix();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("\u4e2d\u570b", (java.lang.Object[]) doubleArray38);
        java.lang.Object[] objArray40 = mathException39.getArguments();
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Throwable) mathException43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("German (Germany)", objArray40, (java.lang.Throwable) mathException43);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException43);
        boolean boolean47 = locale12.equals((java.lang.Object) mathException46);
        org.junit.Assert.assertNotNull(locale0);
        org.junit.Assert.assertEquals(locale0.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Vereinigtes K\366nigreich" + "'", str2, "Vereinigtes K\366nigreich");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "fr");
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "fr");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "fran\347ais" + "'", str9, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "fr");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "anglais (Royaume-Uni)" + "'", str13, "anglais (Royaume-Uni)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2.3122509176395862d + "'", double28 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[[0.2631994593865121, -0.5514266812416906, 0.7916152220576755], [0.6926046433652473, 0.6792087852931206, 0.24284611170356962], [-0.671583838822486, 0.4843594132412613, 0.5606880650032018]]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test09106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09106");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation7.applyTo(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract(vector3D16);
        double double18 = vector3D17.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation25.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder27.getA1();
        double double33 = vector3D32.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.add(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.add((double) (-1.0f), vector3D39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((-0.13715201283077028d), vector3D17, (double) (short) 0, vector3D40, 0.0d, vector3D48);
        double double50 = vector3D48.getY();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D(100.0d, vector3D48);
        double double52 = vector3D48.getY();
        double double53 = vector3D48.getY();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D48.scalarMultiply((-121.56122080658437d));
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.141592653589793d + "'", double18 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
    }

    @Test
    public void test09107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09107");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        printStream6.print((double) (byte) 100);
        printStream6.println(false);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        java.io.PrintStream printStream14 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        printStream6.println("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a\ub3c5\uc77c\uc5b4");
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter("en");
        printWriter19.print(false);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException27.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("zxz_KO_KR", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: XZY", (java.lang.Object[]) throwableArray28);
        java.io.PrintWriter printWriter32 = printWriter19.printf("DEU", (java.lang.Object[]) throwableArray28);
        java.io.PrintStream printStream33 = printStream6.format("japonais", (java.lang.Object[]) throwableArray28);
        printStream6.println("KR");
        printStream6.println((int) (byte) 10);
        java.io.PrintStream printStream38 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        java.util.Locale locale41 = new java.util.Locale("zxz (ko_kr)", "\ud55c\uad6d\uc5b4\ub300\ud55c\ubbfc\uad6d)");
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (double) ' ', 2.0918418036628577d);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D46.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D47, 12804.0d);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray56 = rotation55.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D58, (double) (byte) 100, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D60, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation55.applyInverseTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation55.revert();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation70.getAxis();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation49.applyInverseTo(rotation70);
        double[][] doubleArray73 = rotation72.getMatrix();
        java.io.PrintStream printStream74 = printStream6.printf(locale41, "\uce90\ub098\ub2e4", (java.lang.Object[]) doubleArray73);
        printStream74.println(1.4332106459447946d);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printStream33);
// flaky:         org.junit.Assert.assertEquals(locale41.toString(), "\ud55c\uad6d\uc5b4\ub300\ud55c\ubbfc\uad6d)");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(printStream74);
    }

    @Test
    public void test09108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09108");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        printWriter1.println((long) (short) 10);
        java.util.Locale locale6 = java.util.Locale.PRC;
        java.lang.String str7 = locale6.getDisplayVariant();
        java.lang.String[] strArray12 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray19 = mathException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray19);
        java.io.PrintWriter printWriter21 = printWriter1.format(locale6, "", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException23);
        java.lang.Object[] objArray25 = mathException23.getArguments();
        java.io.PrintWriter printWriter26 = printWriter1.printf("zh", objArray25);
        printWriter26.println(10.0f);
        java.io.PrintWriter printWriter30 = printWriter26.append((java.lang.CharSequence) "DE");
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double37 = rotation36.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation36.applyTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double52 = rotation51.getQ0();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double59 = rotation58.getQ0();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation51.applyTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation51.revert();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation45.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double69 = rotation68.getQ0();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double76 = rotation75.getQ0();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation68.applyTo(rotation75);
        double double78 = rotation68.getQ0();
        double double79 = rotation68.getQ0();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation45.applyTo(rotation68);
        double double81 = rotation45.getAngle();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation45.revert();
        printWriter26.println((java.lang.Object) rotation45);
        java.io.PrintWriter printWriter84 = new java.io.PrintWriter((java.io.Writer) printWriter26);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 52.0d + "'", double52 == 52.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 52.0d + "'", double59 == 52.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 52.0d + "'", double69 == 52.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 52.0d + "'", double76 == 52.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 52.0d + "'", double78 == 52.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 52.0d + "'", double79 == 52.0d);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(rotation82);
    }

    @Test
    public void test09109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09109");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.close();
        printStream1.println('a');
        java.io.PrintStream printStream90 = new java.io.PrintStream((java.io.OutputStream) printStream1, true);
        printStream90.print((long) (-1));
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream90);
        printWriter93.close();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09110");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        printStream16.write(10);
        java.util.Locale locale21 = new java.util.Locale("YZY", "ko-KR");
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        printStream16.println((java.lang.Object) locale21);
        printStream16.println("english");
        printStream16.println(0.28640327826121414d);
        printStream16.print((int) (byte) 10);
        java.lang.String[] strArray33 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray33);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) strArray33);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray37 = mathException36.getSuppressed();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException36);
        notARotationMatrixException35.addSuppressed((java.lang.Throwable) mathException36);
        java.lang.Object[] objArray40 = notARotationMatrixException35.getArguments();
        java.io.PrintStream printStream41 = printStream16.printf("deutsch", objArray40);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertEquals(locale21.toString(), "yzy_KO-KR");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[aa, ab, ae, af, ak, am, an, ar, as, av, ay, az, ba, be, bg, bh, bi, bm, bn, bo, br, bs, ca, ce, ch, co, cr, cs, cu, cv, cy, da, de, dv, dz, ee, el, en, eo, es, et, eu, fa, ff, fi, fj, fo, fr, fy, ga, gd, gl, gn, gu, gv, ha, he, hi, ho, hr, ht, hu, hy, hz, ia, id, ie, ig, ii, ik, in, io, is, it, iu, iw, ja, ji, jv, ka, kg, ki, kj, kk, kl, km, kn, ko, kr, ks, ku, kv, kw, ky, la, lb, lg, li, ln, lo, lt, lu, lv, mg, mh, mi, mk, ml, mn, mo, mr, ms, mt, my, na, nb, nd, ne, ng, nl, nn, no, nr, nv, ny, oc, oj, om, or, os, pa, pi, pl, ps, pt, qu, rm, rn, ro, ru, rw, sa, sc, sd, se, sg, si, sk, sl, sm, sn, so, sq, sr, ss, st, su, sv, sw, ta, te, tg, th, ti, tk, tl, tn, to, tr, ts, tt, tw, ty, ug, uk, ur, uz, ve, vi, vo, wa, wo, xh, yi, yo, za, zh, zu]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[aa, ab, ae, af, ak, am, an, ar, as, av, ay, az, ba, be, bg, bh, bi, bm, bn, bo, br, bs, ca, ce, ch, co, cr, cs, cu, cv, cy, da, de, dv, dz, ee, el, en, eo, es, et, eu, fa, ff, fi, fj, fo, fr, fy, ga, gd, gl, gn, gu, gv, ha, he, hi, ho, hr, ht, hu, hy, hz, ia, id, ie, ig, ii, ik, in, io, is, it, iu, iw, ja, ji, jv, ka, kg, ki, kj, kk, kl, km, kn, ko, kr, ks, ku, kv, kw, ky, la, lb, lg, li, ln, lo, lt, lu, lv, mg, mh, mi, mk, ml, mn, mo, mr, ms, mt, my, na, nb, nd, ne, ng, nl, nn, no, nr, nv, ny, oc, oj, om, or, os, pa, pi, pl, ps, pt, qu, rm, rn, ro, ru, rw, sa, sc, sd, se, sg, si, sk, sl, sm, sn, so, sq, sr, ss, st, su, sv, sw, ta, te, tg, th, ti, tk, tl, tn, to, tr, ts, tt, tw, ty, ug, uk, ur, uz, ve, vi, vo, wa, wo, xh, yi, yo, za, zh, zu]");
        org.junit.Assert.assertNotNull(printStream41);
    }

    @Test
    public void test09111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09111");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.3403913072297808d), (-68.77819630729812d), 1.2128128763110742E8d, 0.21309643366023423d, true);
    }

    @Test
    public void test09112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09112");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        double double12 = vector3D11.getNorm();
        double double13 = vector3D11.getNorm();
        double double14 = vector3D11.getY();
        double double15 = vector3D11.getAlpha();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.orthogonal();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null norm");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test09113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09113");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyTo(rotation13);
        double double16 = rotation6.getQ0();
        double double17 = rotation6.getQ0();
        double[][] doubleArray18 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double25 = rotation24.getQ0();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation24.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation6.applyInverseTo(rotation24);
        double double35 = rotation6.getQ1();
        double double36 = rotation6.getQ1();
        double double37 = rotation6.getAngle();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation6.revert();
        double double39 = rotation38.getAngle();
        double[][] doubleArray40 = rotation38.getMatrix();
        java.io.PrintStream printStream43 = new java.io.PrintStream("ko-KR");
        printStream43.close();
        java.util.Locale locale45 = java.util.Locale.UK;
        java.lang.String[] strArray47 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream48 = printStream43.format(locale45, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("\u97d3\u6587)", (java.lang.Object[]) strArray47);
        java.lang.Object[] objArray50 = mathException49.getArguments();
        java.lang.String str51 = mathException49.getPattern();
        java.lang.String[] strArray54 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray54);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException56 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) strArray54);
        java.lang.Throwable[] throwableArray57 = notARotationMatrixException56.getSuppressed();
        java.lang.String[] strArray60 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray60, (java.lang.Throwable) mathException62);
        java.lang.String[] strArray67 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray67, (java.lang.Throwable) mathException69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray72 = mathException71.getSuppressed();
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray67, (java.lang.Throwable) mathException71);
        java.lang.Throwable[] throwableArray74 = mathException71.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException75 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray74);
        mathException63.addSuppressed((java.lang.Throwable) notARotationMatrixException75);
        java.lang.Throwable[] throwableArray77 = notARotationMatrixException75.getSuppressed();
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("\ub3c5\uc77c", (java.lang.Throwable) notARotationMatrixException75);
        notARotationMatrixException56.addSuppressed((java.lang.Throwable) mathException78);
        mathException49.addSuppressed((java.lang.Throwable) mathException78);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("fra", (java.lang.Object[]) doubleArray40, (java.lang.Throwable) mathException49);
        java.lang.String str82 = mathException81.getPattern();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 100.0d + "'", double35 == 100.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(printStream48);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\u97d3\u6587)" + "'", str51, "\u97d3\u6587)");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "fra" + "'", str82, "fra");
    }

    @Test
    public void test09114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09114");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        printStream1.println('a');
        printStream1.close();
        java.util.Locale.Builder builder23 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder25 = builder23.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale26 = java.util.Locale.ROOT;
        java.util.Locale.Category category27 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category28 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale29 = java.util.Locale.ROOT;
        java.lang.String str30 = locale29.getDisplayLanguage();
        java.util.Locale.setDefault(category28, locale29);
        java.util.Locale.setDefault(category27, locale29);
        java.lang.String str33 = locale26.getDisplayVariant(locale29);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale36 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str37 = locale36.getScript();
        java.util.Locale locale38 = java.util.Locale.KOREA;
        java.lang.String str39 = locale36.getDisplayLanguage(locale38);
        java.lang.String[] strArray42 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray42, (java.lang.Throwable) mathException44);
        java.io.PrintWriter printWriter46 = printWriter35.format(locale38, "YZY", (java.lang.Object[]) strArray42);
        java.lang.String str47 = locale29.getDisplayVariant(locale38);
        java.lang.String str48 = locale38.getDisplayScript();
        java.util.Locale.Builder builder49 = builder23.setLocale(locale38);
        java.util.Locale locale50 = builder49.build();
        java.util.Locale locale51 = java.util.Locale.ENGLISH;
        java.util.Locale locale52 = java.util.Locale.ENGLISH;
        boolean boolean53 = locale52.hasExtensions();
        java.lang.String str54 = locale51.getDisplayVariant(locale52);
        java.util.Locale locale55 = java.util.Locale.UK;
        java.lang.String str56 = locale55.getVariant();
        java.lang.String str57 = locale55.getISO3Language();
        java.util.Locale locale58 = locale55.stripExtensions();
        java.lang.String str59 = locale52.getDisplayCountry(locale58);
        java.lang.String str60 = locale50.getDisplayCountry(locale52);
        java.util.Locale.Builder builder61 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder63 = builder61.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder65 = builder61.setLanguage("ZXZ");
        java.util.Locale locale66 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder67 = builder61.setLocale(locale66);
        java.util.Locale.setDefault(locale66);
        java.util.Set<java.lang.String> strSet69 = locale66.getUnicodeLocaleAttributes();
        java.lang.String str70 = locale52.getDisplayCountry(locale66);
        java.lang.String str71 = locale52.getISO3Language();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException76 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray77 = cardanEulerSingularityException76.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException78 = new org.apache.commons.math.geometry.NotARotationMatrixException("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray77);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("\u97d3\u6587)", (java.lang.Object[]) throwableArray77, (java.lang.Throwable) mathException79);
        java.io.PrintStream printStream82 = printStream1.printf(locale52, "", (java.lang.Object[]) throwableArray77);
        printStream1.print((int) '4');
        java.io.PrintStream printStream86 = new java.io.PrintStream((java.io.OutputStream) printStream1, true);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "");
        org.junit.Assert.assertTrue("'" + category27 + "' != '" + java.util.Locale.Category.FORMAT + "'", category27.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category28 + "' != '" + java.util.Locale.Category.FORMAT + "'", category28.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str39, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "eng" + "'", str57, "eng");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "South Korea" + "'", str60, "South Korea");
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "eng" + "'", str71, "eng");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(printStream82);
    }

    @Test
    public void test09115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09115");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation21.getAxis();
        double[][] doubleArray23 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D28, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray43 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D45, (double) (byte) 100, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D47, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation42.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D56);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D66, (double) (byte) 100, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation64.applyTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.negate();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        double double74 = vector3D73.getY();
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (-1L), vector3D28, (double) ' ', vector3D55, (double) (-1.0f), vector3D71, (double) 10.0f, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation21.applyTo(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation15.applyInverseTo(vector3D76);
        double double78 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double85 = rotation84.getQ0();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double92 = rotation91.getQ0();
        org.apache.commons.math.geometry.Rotation rotation93 = rotation84.applyTo(rotation91);
        org.apache.commons.math.geometry.Rotation rotation94 = rotation84.revert();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation84.getAxis();
        org.apache.commons.math.geometry.Rotation rotation96 = rotation15.applyTo(rotation84);
        org.apache.commons.math.geometry.Rotation rotation97 = rotation96.revert();
        double double98 = rotation96.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 52.0d + "'", double85 == 52.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 52.0d + "'", double92 == 52.0d);
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + (-12804.0d) + "'", double98 == (-12804.0d));
    }

    @Test
    public void test09116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09116");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.scalarMultiply(0.5309649148733835d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D15.normalize();
        double double19 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D12, vector3D15);
        double double20 = vector3D12.getAlpha();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.09950371902099892d) + "'", double19 == (-0.09950371902099892d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-3.141592653589793d) + "'", double20 == (-3.141592653589793d));
    }

    @Test
    public void test09117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09117");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        double double21 = rotation20.getQ1();
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter25 = printWriter23.append('#');
        java.lang.Object[] objArray27 = null;
        java.io.PrintWriter printWriter28 = printWriter25.format("fran\347ais", objArray27);
        java.util.Locale locale29 = null;
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray32 = mathException31.getSuppressed();
        java.io.PrintWriter printWriter33 = printWriter25.format(locale29, "zxz", (java.lang.Object[]) throwableArray32);
        char[] charArray37 = new char[] { 'a', ' ', '#' };
        printWriter33.println(charArray37);
        java.util.Locale locale39 = java.util.Locale.FRENCH;
        java.util.Locale locale40 = java.util.Locale.FRENCH;
        java.util.Locale locale41 = java.util.Locale.TAIWAN;
        java.lang.String str42 = locale40.getDisplayScript(locale41);
        java.lang.String str43 = locale39.getDisplayLanguage(locale40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray55 = rotation54.getMatrix();
        java.io.PrintWriter printWriter56 = printWriter33.printf(locale39, "english", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(doubleArray55, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(doubleArray55, (double) (byte) 0);
        double double61 = rotation60.getQ2();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation20.applyTo(rotation60);
        double double63 = rotation62.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str65 = rotationOrder64.toString();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation62.applyInverseTo(vector3D68);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation75.getAxis();
        double double77 = rotation75.getQ3();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation75.revert();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation78.revert();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation62.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation((double) (short) 10, (-0.13768695521062307d), 0.9385374468552633d, 103.60501918343533d, false);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation80.applyTo(rotation86);
        double double88 = rotation80.getQ0();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "fr");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "fr");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "fran\347ais" + "'", str43, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 9.649660284921133d + "'", double63 == 9.649660284921133d);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "YZY" + "'", str65, "YZY");
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-12355.425028813019d) + "'", double88 == (-12355.425028813019d));
    }

    @Test
    public void test09118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09118");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation15.getAxis();
        double double23 = rotation15.getQ2();
        double double24 = rotation15.getQ1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(1.912983406767073d, 100.02049971110628d, 1.3964058484385629E-10d, (-0.915248973644132d), false);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation15.applyTo(rotation30);
        double double32 = rotation31.getAngle();
        java.lang.Class<?> wildcardClass33 = rotation31.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 100.0d + "'", double24 == 100.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test09119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09119");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        printStream6.print((double) (byte) 100);
        printStream6.println(false);
        printStream6.write((int) (byte) 100);
        printStream6.print(0.790491622490214d);
        java.util.Locale.Category category17 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale18 = java.util.Locale.ROOT;
        java.lang.String str19 = locale18.getDisplayLanguage();
        java.util.Locale.setDefault(category17, locale18);
        java.util.Locale locale21 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale21);
        java.util.Locale locale23 = java.util.Locale.FRENCH;
        java.util.Locale locale24 = java.util.Locale.TAIWAN;
        java.lang.String str25 = locale23.getDisplayScript(locale24);
        java.lang.String str26 = locale21.getDisplayLanguage(locale24);
        java.util.Locale.setDefault(category17, locale24);
        java.util.Locale locale28 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale28);
        java.util.Locale locale30 = java.util.Locale.FRENCH;
        java.util.Locale locale31 = java.util.Locale.TAIWAN;
        java.lang.String str32 = locale30.getDisplayScript(locale31);
        java.lang.String str33 = locale28.getDisplayLanguage(locale31);
        java.lang.String str34 = locale28.getISO3Country();
        java.util.Locale.setDefault(category17, locale28);
        java.util.Locale locale36 = java.util.Locale.getDefault(category17);
        java.util.Locale locale37 = java.util.Locale.getDefault(category17);
        java.util.Locale locale38 = java.util.Locale.getDefault(category17);
        java.util.Locale locale39 = java.util.Locale.getDefault(category17);
        java.util.Locale locale42 = new java.util.Locale("hi!", "\u97d3\u6587");
        java.lang.String str44 = locale42.getExtension('x');
        java.util.Locale.setDefault(category17, locale42);
        java.util.Locale locale46 = java.util.Locale.getDefault(category17);
        java.util.Locale.Category category47 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale48 = java.util.Locale.ROOT;
        java.lang.String str49 = locale48.getDisplayLanguage();
        java.util.Locale.setDefault(category47, locale48);
        java.lang.String str51 = locale48.getISO3Language();
        java.lang.String str52 = locale48.getISO3Country();
        java.lang.String str53 = locale48.getDisplayCountry();
        java.util.Locale.setDefault(category17, locale48);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D64, (double) (byte) 100, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation62.applyTo(vector3D64);
        double double69 = rotation62.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str71 = rotationOrder70.toString();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, 0.0d, 52.0d, 0.9649660284921133d);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation62.applyTo(rotation75);
        double[][] doubleArray77 = rotation76.getMatrix();
        double[][] doubleArray78 = rotation76.getMatrix();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("allemand", (java.lang.Object[]) doubleArray78);
        java.io.PrintStream printStream80 = printStream6.format(locale48, "\u97d3\u6587\u5357\u97d3)", (java.lang.Object[]) doubleArray78);
        java.lang.Object obj81 = locale48.clone();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertTrue("'" + category17 + "' != '" + java.util.Locale.Category.FORMAT + "'", category17.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "fr");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\u97d3\u6587" + "'", str26, "\u97d3\u6587");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "fr");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\u97d3\u6587" + "'", str33, "\u97d3\u6587");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "KOR" + "'", str34, "KOR");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "ko_KR");
// flaky:         org.junit.Assert.assertEquals(locale42.toString(), "\u97d3\u6587");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(locale46);
// flaky:         org.junit.Assert.assertEquals(locale46.toString(), "\u97d3\u6587");
        org.junit.Assert.assertTrue("'" + category47 + "' != '" + java.util.Locale.Category.FORMAT + "'", category47.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ZXZ" + "'", str71, "ZXZ");
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(printStream80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "");
    }

    @Test
    public void test09120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09120");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        java.lang.String str8 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 1L, (double) 100L, 1.4922398570367257d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D16, (double) (byte) 100, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D18, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D28, (double) (byte) 100, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D18, (double) 0.0f, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D32.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 'a', (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D32.add(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D39, 1.0d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation13.applyInverseTo(vector3D39);
        double[][] doubleArray43 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException44 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cor\351e du Sud", (java.lang.Object[]) doubleArray43);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(doubleArray43, 1.7083820076449987d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXZ" + "'", str2, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(doubleArray43);
    }

    @Test
    public void test09121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09121");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.println("fr");
        printStream1.println("deu");
        java.util.Locale locale6 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str7 = locale6.toLanguageTag();
        java.lang.String[] strArray10 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("ZXZ");
        java.lang.Object[] objArray14 = mathException13.getArguments();
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("Chinesisch", (java.lang.Throwable) mathException13);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray10, (java.lang.Throwable) mathException13);
        java.io.PrintStream printStream17 = printStream1.format(locale6, "org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray10);
        java.io.PrintStream printStream19 = new java.io.PrintStream((java.io.OutputStream) printStream1, true);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double33 = rotation32.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double42 = rotation41.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation25.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D52, (double) (byte) 100, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.subtract(vector3D59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str62 = rotationOrder61.toString();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(vector3D64);
        double double66 = vector3D60.getY();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation25.applyInverseTo(vector3D60);
        printStream19.println((java.lang.Object) rotation25);
        java.io.PrintStream printStream69 = new java.io.PrintStream((java.io.OutputStream) printStream19);
        java.io.PrintStream printStream71 = printStream69.append('4');
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "zh-CN" + "'", str7, "zh-CN");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(printStream17);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 52.0d + "'", double42 == 52.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ZXZ" + "'", str62, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(printStream71);
    }

    @Test
    public void test09122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09122");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((-0.0d), 1.4711276743037345d, 128040.0d, 0.4028887144651276d, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D7);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(vector3D7, (double) 0L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D7.normalize();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D11.add(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray24 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D28, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation23.applyInverseTo(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation23.getAxis();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double46 = rotation45.getQ1();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation38.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D56, (double) (byte) 100, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation54.applyTo(vector3D56);
        double double61 = vector3D56.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D56, (double) 10, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation38.applyTo(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((-0.02937648959434208d), 10.0d);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D(76.58711610605957d, vector3D63, Double.NaN, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D63.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D14.subtract(0.47768123411405644d, vector3D72);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-3.1465847737936608E-6d) + "'", double12 == (-3.1465847737936608E-6d));
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 100.0d + "'", double46 == 100.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
    }

    @Test
    public void test09123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09123");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        java.io.PrintStream printStream13 = new java.io.PrintStream("ko-KR");
        printStream13.println("fr");
        printStream6.print((java.lang.Object) "fr");
        java.io.PrintStream printStream18 = printStream6.append('u');
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation24.getAxis();
        double[][] doubleArray26 = rotation24.getMatrix();
        double double27 = rotation24.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder28.getA3();
        java.lang.String str35 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation24.getAxis();
        double double39 = rotation24.getQ1();
        printStream18.print((java.lang.Object) double39);
        printStream18.print((-3.384063833821342E10d));
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 100.0d + "'", double27 == 100.0d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "XZY" + "'", str35, "XZY");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 100.0d + "'", double39 == 100.0d);
    }

    @Test
    public void test09124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09124");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.9904757959510307d), 0.0d, (-0.0d), 0.0d, true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) (-1L), (double) (short) 10, (double) 'a');
        double double27 = rotation26.getAngle();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation13.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation29.revert();
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(373547.3388035254d, (double) 1.0f, (-0.5063656411097588d), (-0.30821743242059296d), false);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation30.applyInverseTo(rotation37);
        double double39 = rotation37.getQ1();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation37.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation7.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation37.revert();
        double[][] doubleArray43 = rotation42.getMatrix();
        double double44 = rotation42.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2.3122509176395862d + "'", double27 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.30821743242059296d) + "'", double44 == (-0.30821743242059296d));
    }

    @Test
    public void test09125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09125");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double23 = rotation22.getQ0();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation6.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation22.getAxis();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ1();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation22.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D41, (double) (byte) 100, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation39.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation39.getAxis();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation33.applyTo(rotation39);
        double[][] doubleArray48 = rotation47.getMatrix();
        double double49 = rotation47.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation47.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D(0.5309649148733836d, vector3D50);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 52.0d + "'", double23 == 52.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 100.0d + "'", double32 == 100.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-198800.0d) + "'", double49 == (-198800.0d));
        org.junit.Assert.assertNotNull(vector3D50);
    }

    @Test
    public void test09126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09126");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.OutputStream) printStream85, true);
        printStream85.println("Franz\366sisch");
        printStream85.println((float) (short) -1);
        java.io.PrintStream printStream96 = new java.io.PrintStream((java.io.OutputStream) printStream85);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09127");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double8 = rotation7.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double15 = rotation14.getQ0();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation7.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyTo(rotation22);
        double double24 = rotation22.getAngle();
        double double25 = rotation22.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation31 = rotation22.applyInverseTo(rotation30);
        double[][] doubleArray32 = rotation31.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException33 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("English (United Kingdom)", (java.lang.Throwable) mathException34);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2.3122509176395862d + "'", double24 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.4028887144651276d + "'", double25 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(doubleArray32);
    }

    @Test
    public void test09128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09128");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream91 = printStream85.append((java.lang.CharSequence) "KOR");
        printStream85.println("\u97d3\u6587)");
        printStream85.println((float) (-1L));
        printStream85.println("");
        printStream85.print("\u5fb7\u6587");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream91);
    }

    @Test
    public void test09129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09129");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (-1L), (double) (short) 10, (double) 'a');
        double double12 = rotation11.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyInverseTo(rotation11);
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(doubleArray14, 2.3122509176395862d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation16.getAxis();
        double double18 = rotation16.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.3122509176395862d + "'", double12 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.33317344249276587d) + "'", double18 == (-0.33317344249276587d));
    }

    @Test
    public void test09130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09130");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.io.PrintWriter printWriter8 = printWriter3.append('a');
        printWriter3.print(100L);
        boolean boolean11 = printWriter3.checkError();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.applyTo(rotation25);
        double double28 = rotation25.getQ3();
        double[][] doubleArray29 = rotation25.getMatrix();
        java.io.PrintWriter printWriter30 = printWriter3.format("englisch", (java.lang.Object[]) doubleArray29);
        printWriter30.println(0.33033571077024615d);
        printWriter30.write((-1));
        printWriter30.println((long) 0);
        printWriter30.println(0);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(printWriter8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(printWriter30);
    }

    @Test
    public void test09131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09131");
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException3);
        java.lang.Object[] objArray5 = mathException3.getArguments();
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("deu", (java.lang.Throwable) mathException3);
        java.lang.Throwable[] throwableArray7 = mathException6.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation14.getAxis();
        double[][] doubleArray16 = rotation14.getMatrix();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) mathException17);
        java.lang.String str19 = mathException17.getPattern();
        java.lang.Object[] objArray20 = mathException17.getArguments();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("und", (java.lang.Throwable) mathException17);
        java.lang.Object[] objArray22 = mathException21.getArguments();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "French" + "'", str19, "French");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[[25407.0, 1040.0, 2000.0], [-1040.0, 5407.0, 10400.0], [2000.0, -10400.0, 5607.0]]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
    }

    @Test
    public void test09132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09132");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        printStream85.close();
        java.io.PrintWriter printWriter92 = new java.io.PrintWriter((java.io.OutputStream) printStream85, true);
        printStream85.write(100);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09133");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("ja");
        java.util.Locale.Category category2 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale3 = java.util.Locale.ROOT;
        java.lang.String str4 = locale3.getDisplayLanguage();
        java.util.Locale.setDefault(category2, locale3);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.util.Locale.LanguageRange[] languageRangeArray21 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList22 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList22, languageRangeArray21);
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.util.Locale locale25 = java.util.Locale.GERMAN;
        java.util.Locale locale26 = java.util.Locale.CANADA;
        java.util.Locale locale27 = java.util.Locale.GERMAN;
        java.util.Locale locale28 = java.util.Locale.GERMANY;
        java.util.Locale locale29 = java.util.Locale.ROOT;
        java.lang.String str30 = locale29.getDisplayLanguage();
        java.util.Locale locale31 = java.util.Locale.FRENCH;
        java.util.Locale locale32 = java.util.Locale.ROOT;
        java.util.Locale locale33 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray34 = new java.util.Locale[] { locale24, locale25, locale26, locale27, locale28, locale29, locale31, locale32, locale33 };
        java.util.ArrayList<java.util.Locale> localeList35 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList35, localeArray34);
        java.util.Locale.FilteringMode filteringMode37 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList38 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList35, filteringMode37);
        java.lang.String[] strArray42 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.lang.String str45 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.lang.String>) strList43);
        java.util.Locale.LanguageRange[] languageRangeArray46 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList47 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList47, languageRangeArray46);
        java.util.Locale locale49 = java.util.Locale.ROOT;
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = java.util.Locale.CANADA;
        java.util.Locale locale52 = java.util.Locale.GERMAN;
        java.util.Locale locale53 = java.util.Locale.GERMANY;
        java.util.Locale locale54 = java.util.Locale.ROOT;
        java.lang.String str55 = locale54.getDisplayLanguage();
        java.util.Locale locale56 = java.util.Locale.FRENCH;
        java.util.Locale locale57 = java.util.Locale.ROOT;
        java.util.Locale locale58 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale49, locale50, locale51, locale52, locale53, locale54, locale56, locale57, locale58 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        java.util.Locale.FilteringMode filteringMode62 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList63 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList47, (java.util.Collection<java.util.Locale>) localeList60, filteringMode62);
        java.util.Locale.FilteringMode filteringMode64 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList65 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList60, filteringMode64);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D73, (double) (byte) 100, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation71.applyTo(vector3D73);
        java.lang.Object[] objArray78 = new java.lang.Object[] { vector3D17, str20, languageRangeList22, rotation71 };
        java.lang.String[] strArray81 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray86 = mathException85.getSuppressed();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray78, (java.lang.Throwable) mathException87);
        java.lang.Object[] objArray89 = mathException87.getArguments();
        java.io.PrintWriter printWriter90 = printWriter1.format(locale3, "ZXZ", objArray89);
        printWriter90.print((long) 'x');
        printWriter90.println(0.34042596363908495d);
        java.io.PrintWriter printWriter96 = printWriter90.append((java.lang.CharSequence) "\u4e2d\u570b");
        org.junit.Assert.assertTrue("'" + category2 + "' != '" + java.util.Locale.Category.FORMAT + "'", category2.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(languageRangeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "de");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "de");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "fr");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + filteringMode37 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode37.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(languageRangeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "de");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "de");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "fr");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + filteringMode62 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode62.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList63);
        org.junit.Assert.assertTrue("'" + filteringMode64 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode64.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList65);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test09134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09134");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        java.io.PrintWriter printWriter11 = printWriter3.format(locale7, "zxz", (java.lang.Object[]) throwableArray10);
        char[] charArray15 = new char[] { 'a', ' ', '#' };
        printWriter11.println(charArray15);
        java.util.Locale locale17 = java.util.Locale.FRENCH;
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.lang.String str21 = locale17.getDisplayLanguage(locale18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray33 = rotation32.getMatrix();
        java.io.PrintWriter printWriter34 = printWriter11.printf(locale17, "english", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray33, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(doubleArray33, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str40 = rotationOrder39.toString();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder39.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder39.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D42.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation38.applyInverseTo(vector3D43);
        double double45 = vector3D44.getY();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "fr");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "fran\347ais" + "'", str21, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ZXZ" + "'", str40, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }

    @Test
    public void test09135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09135");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-2000.0d), 60.912721436461325d, (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply((-0.28722229304566843d));
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale15 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str16 = locale15.getScript();
        java.util.Locale locale17 = java.util.Locale.KOREA;
        java.lang.String str18 = locale15.getDisplayLanguage(locale17);
        java.lang.String[] strArray21 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray21, (java.lang.Throwable) mathException23);
        java.io.PrintWriter printWriter25 = printWriter14.format(locale17, "YZY", (java.lang.Object[]) strArray21);
        printWriter25.close();
        java.util.Locale locale27 = java.util.Locale.FRANCE;
        printWriter25.println((java.lang.Object) locale27);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter32 = printWriter30.append('#');
        java.lang.Object[] objArray34 = null;
        java.io.PrintWriter printWriter35 = printWriter32.format("fran\347ais", objArray34);
        java.util.Locale locale36 = null;
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray39 = mathException38.getSuppressed();
        java.io.PrintWriter printWriter40 = printWriter32.format(locale36, "zxz", (java.lang.Object[]) throwableArray39);
        char[] charArray44 = new char[] { 'a', ' ', '#' };
        printWriter40.println(charArray44);
        printWriter25.print(charArray44);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter((java.io.Writer) printWriter25, false);
        printWriter25.println((float) 0);
        printWriter25.println(10);
        printWriter25.println(0.995037190209989d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder55.getA2();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (-0.02937648959434208d), (-3.141592653589793d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder55.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray73 = rotation72.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D75, (double) (byte) 100, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D80, (double) (byte) 100, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D77, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation72.applyInverseTo(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D85, vector3D86);
        double double88 = vector3D87.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D87.scalarMultiply((double) 10L);
        double double91 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D66, vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D66.orthogonal();
        printWriter25.println((java.lang.Object) vector3D66);
        double double94 = org.apache.commons.math.geometry.Vector3D.angle(vector3D12, vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str18, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr_FR");
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a,  , #]");
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.5707963267948966d + "'", double94 == 1.5707963267948966d);
    }

    @Test
    public void test09136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09136");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        printWriter1.println((long) (short) 10);
        java.util.Locale locale6 = java.util.Locale.PRC;
        java.lang.String str7 = locale6.getDisplayVariant();
        java.lang.String[] strArray12 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray19 = mathException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray19);
        java.io.PrintWriter printWriter21 = printWriter1.format(locale6, "", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException23);
        java.lang.Object[] objArray25 = mathException23.getArguments();
        java.io.PrintWriter printWriter26 = printWriter1.printf("zh", objArray25);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter30 = printWriter28.append('#');
        java.lang.Object[] objArray32 = null;
        java.io.PrintWriter printWriter33 = printWriter30.format("fran\347ais", objArray32);
        java.util.Locale locale34 = null;
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray37 = mathException36.getSuppressed();
        java.io.PrintWriter printWriter38 = printWriter30.format(locale34, "zxz", (java.lang.Object[]) throwableArray37);
        char[] charArray42 = new char[] { 'a', ' ', '#' };
        printWriter38.println(charArray42);
        printWriter26.write(charArray42, (int) (byte) 1, (int) (byte) 1);
        java.util.Locale locale47 = java.util.Locale.ROOT;
        java.lang.String str48 = locale47.getDisplayLanguage();
        java.util.Locale locale49 = java.util.Locale.FRENCH;
        java.util.Locale locale50 = java.util.Locale.TAIWAN;
        java.lang.String str51 = locale49.getDisplayScript(locale50);
        java.lang.String str52 = locale47.getDisplayLanguage(locale49);
        java.util.Locale locale53 = locale47.stripExtensions();
        java.lang.String str54 = locale47.getDisplayLanguage();
        java.io.PrintStream printStream57 = new java.io.PrintStream("ko-KR");
        printStream57.close();
        java.util.Locale locale59 = java.util.Locale.UK;
        java.lang.String[] strArray61 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream62 = printStream57.format(locale59, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray61);
        java.io.PrintWriter printWriter63 = printWriter26.format(locale47, "", (java.lang.Object[]) strArray61);
        java.io.PrintStream printStream65 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream67 = new java.io.PrintStream("ko-KR");
        printStream67.close();
        printStream67.println((double) '4');
        printStream67.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double80 = rotation79.getQ0();
        double[][] doubleArray81 = rotation79.getMatrix();
        java.io.PrintStream printStream82 = printStream67.format("zh", (java.lang.Object[]) doubleArray81);
        printStream65.println((java.lang.Object) doubleArray81);
        char[] charArray87 = new char[] { 'a', 'a', '4' };
        printStream65.println(charArray87);
        printWriter26.println(charArray87);
        printWriter26.print((-0.20156906982433617d));
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "fr");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(printStream62);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 52.0d + "'", double80 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(printStream82);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[a, a, 4]");
    }

    @Test
    public void test09137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09137");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        java.lang.String str7 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "XYZ" + "'", str7, "XYZ");
    }

    @Test
    public void test09138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09138");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyTo(rotation13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation6.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyInverseTo(vector3D19);
        double double22 = rotation6.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D28, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D38, (double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D28, (double) 0.0f, vector3D40);
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray51 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D53, (double) (byte) 100, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D58, (double) (byte) 100, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation50.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D63, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D63.negate();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D77, (double) (byte) 100, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation75.applyTo(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) 'x', vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) 1, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D42, 100.0d, vector3D66, 52.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation6.applyTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D(2.3138639297478591E-4d, vector3D66, 2.1098021193192458d, vector3D89);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test09139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09139");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale3 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str4 = locale3.getScript();
        java.util.Locale locale5 = java.util.Locale.KOREA;
        java.lang.String str6 = locale3.getDisplayLanguage(locale5);
        java.lang.String[] strArray9 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray9, (java.lang.Throwable) mathException11);
        java.io.PrintWriter printWriter13 = printWriter2.format(locale5, "YZY", (java.lang.Object[]) strArray9);
        printWriter13.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException19);
        java.lang.Object[] objArray21 = mathException19.getArguments();
        java.io.PrintWriter printWriter22 = printWriter13.format("org.apache.commons.math.MathException: ZXZ", objArray21);
        java.lang.Object[] objArray24 = null;
        java.io.PrintWriter printWriter25 = printWriter22.format("zho", objArray24);
        printWriter22.println((long) (byte) 0);
        java.io.PrintStream printStream30 = new java.io.PrintStream("ko-KR");
        printStream30.close();
        java.util.Locale locale32 = java.util.Locale.UK;
        java.lang.String[] strArray34 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream35 = printStream30.format(locale32, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray34);
        printStream35.write(10);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.OutputStream) printStream35);
        printStream35.print((int) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double48 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double55 = rotation54.getQ0();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation47.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ0();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double70 = rotation69.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation62.applyTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation62.revert();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation56.applyInverseTo(rotation62);
        double[][] doubleArray74 = rotation56.getMatrix();
        java.io.PrintStream printStream75 = printStream35.printf("zh", (java.lang.Object[]) doubleArray74);
        java.io.PrintWriter printWriter76 = printWriter22.printf("\u97d3\u6587)", (java.lang.Object[]) doubleArray74);
        printWriter22.print((float) (short) 10);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("United Kingdom");
        java.lang.Object[] objArray82 = mathException81.getArguments();
        java.io.PrintWriter printWriter83 = printWriter22.printf("de", objArray82);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("Deutschland");
        java.lang.Object[] objArray87 = mathException86.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException88 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", objArray87);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ud55c\uad6d\uc5b4\ub300\ud55c\ubbfc\uad6d)", objArray82, (java.lang.Throwable) notARotationMatrixException88);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str6, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(printStream35);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 52.0d + "'", double55 == 52.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(printStream75);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
    }

    @Test
    public void test09140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09140");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.close();
        printStream6.println((int) (byte) 0);
        printStream6.write((int) '4');
        java.io.PrintStream printStream54 = new java.io.PrintStream("ko-KR");
        printStream54.close();
        java.util.Locale locale56 = java.util.Locale.UK;
        java.lang.String[] strArray58 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream59 = printStream54.format(locale56, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray58);
        printStream59.write(10);
        printStream59.print((double) (byte) 100);
        printStream59.println(false);
        printStream59.write((int) (byte) 100);
        printStream59.flush();
        java.io.PrintStream printStream70 = new java.io.PrintStream("ko-KR");
        printStream70.close();
        java.util.Locale locale72 = java.util.Locale.UK;
        java.lang.String[] strArray74 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream75 = printStream70.format(locale72, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray74);
        printStream75.write(10);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter((java.io.OutputStream) printStream75);
        byte[] byteArray80 = new byte[] { (byte) -1 };
        printStream75.write(byteArray80);
        printStream75.close();
        printStream75.println(true);
        byte[] byteArray87 = new byte[] { (byte) -1, (byte) 0 };
        printStream75.write(byteArray87);
        printStream59.write(byteArray87, (int) (byte) 1, (int) 'x');
        printStream6.write(byteArray87, (int) (byte) -1, 0);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(printStream59);
        org.junit.Assert.assertNotNull(locale72);
        org.junit.Assert.assertEquals(locale72.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(printStream75);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-1]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[-1, 0]");
    }

    @Test
    public void test09141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09141");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str5 = rotationOrder4.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder4.getA3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, 12740.4561834487d, (-5.3907441696578843E-11d), 0.6710053207609463d);
        java.lang.String str12 = rotationOrder4.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double27 = rotation26.getQ0();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.applyTo(rotation26);
        double double29 = rotation26.getQ3();
        double double30 = rotation26.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation26.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str33 = rotationOrder32.toString();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D(10.0d, 2.3122509176395862d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D(0.851099441814107d, vector3D38, 27.29993135674214d, vector3D42);
        double double44 = vector3D43.getDelta();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray52 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D54, (double) (byte) 100, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D59, (double) (byte) 100, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D56, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation51.applyInverseTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation51.getAxis();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation51.revert();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation66.revert();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation66.getAxis();
        double double69 = vector3D68.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(0.2623748537039287d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D43, vector3D71);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D13, vector3D35, vector3D71);
        double double74 = vector3D71.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZXZ" + "'", str5, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXZ" + "'", str12, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ZXZ" + "'", str33, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.8077946005619026d + "'", double44 == 0.8077946005619026d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.9999999999999999d + "'", double69 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
    }

    @Test
    public void test09142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09142");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        printWriter89.print((int) (short) 100);
        printWriter89.flush();
        printWriter89.println(1);
        printWriter89.println(100.0d);
        printWriter89.println('#');
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09143");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.io.PrintWriter printWriter8 = printWriter3.append('a');
        printWriter3.print(100L);
        boolean boolean11 = printWriter3.checkError();
        printWriter3.print(true);
        java.lang.String[] strArray17 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray17, (java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray22 = mathException21.getSuppressed();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray17, (java.lang.Throwable) mathException21);
        java.io.PrintWriter printWriter24 = printWriter3.printf("TW", (java.lang.Object[]) strArray17);
        printWriter24.print('u');
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str29 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 12740.4561834487d, (-5.3907441696578843E-11d), 0.6710053207609463d);
        double double36 = rotation35.getQ2();
        printWriter24.println((java.lang.Object) rotation35);
        printWriter24.write("KO-KR", (int) (short) 1, (int) (short) 0);
        boolean boolean42 = printWriter24.checkError();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(printWriter8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXZ" + "'", str29, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-2.564013114057005E-11d) + "'", double36 == (-2.564013114057005E-11d));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test09144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09144");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.995037190209989d, (-2000.0d));
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D12.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D13.negate();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(10.0d, vector3D14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (-1L), (double) (short) 10, (double) 'a');
        double double28 = rotation27.getAngle();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.revert();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation21.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D14.add(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D3.add((-45.50528353764515d), vector3D31);
        double double34 = vector3D3.getNorm();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXZ" + "'", str11, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2.3122509176395862d + "'", double28 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.9999999999999999d + "'", double34 == 0.9999999999999999d);
    }

    @Test
    public void test09145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09145");
        java.util.Locale locale1 = new java.util.Locale("XZY");
        java.util.Locale locale2 = locale1.stripExtensions();
        java.util.Locale locale5 = new java.util.Locale("YZY", "ko-KR");
        java.lang.String str6 = locale5.toLanguageTag();
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter10 = printWriter8.append('#');
        java.util.Locale locale11 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.applyTo(rotation25);
        double double28 = rotation25.getQ3();
        double[][] doubleArray29 = rotation25.getMatrix();
        java.io.PrintWriter printWriter30 = printWriter10.printf(locale11, "XZY", (java.lang.Object[]) doubleArray29);
        java.lang.String str31 = locale5.getDisplayCountry(locale11);
        java.lang.String str32 = locale2.getDisplayName(locale11);
        java.util.Locale locale36 = new java.util.Locale("", "zh_CN", "zho");
        java.util.Locale locale37 = java.util.Locale.ITALY;
        java.util.Set<java.lang.Character> charSet38 = locale37.getExtensionKeys();
        java.lang.String str39 = locale36.getDisplayLanguage(locale37);
        java.lang.String str40 = locale36.getDisplayCountry();
        java.util.Locale locale41 = java.util.Locale.UK;
        java.util.Locale.Builder builder42 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder44 = builder42.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder46 = builder42.setLanguage("ZXZ");
        java.util.Locale locale47 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder48 = builder42.setLocale(locale47);
        java.util.Locale.Builder builder50 = builder48.removeUnicodeLocaleAttribute("Deutsch");
        java.util.Locale.Builder builder51 = builder50.clear();
        java.util.Locale.Builder builder53 = builder51.removeUnicodeLocaleAttribute("Deutsch");
        java.util.Locale.Builder builder54 = builder51.clearExtensions();
        java.util.Locale.Builder builder57 = builder51.setExtension('a', "de-DE");
        java.util.Locale locale58 = builder57.build();
        java.lang.String str59 = locale41.getDisplayLanguage(locale58);
        java.lang.String str60 = locale36.getDisplayCountry(locale58);
        java.lang.String str61 = locale36.getDisplayScript();
        java.util.Set<java.lang.Character> charSet62 = locale36.getExtensionKeys();
        java.lang.String str63 = locale2.getDisplayLanguage(locale36);
        org.junit.Assert.assertEquals(locale1.toString(), "xzy");
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "xzy");
        org.junit.Assert.assertEquals(locale5.toString(), "yzy_KO-KR");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "yzy" + "'", str6, "yzy");
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "KO-KR" + "'", str31, "KO-KR");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "xzy" + "'", str32, "xzy");
        org.junit.Assert.assertEquals(locale36.toString(), "_ZH_CN_zho");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "it_IT");
        org.junit.Assert.assertNotNull(charSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ZH_CN" + "'", str40, "ZH_CN");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_GB");
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "English" + "'", str59, "English");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ZH_CN" + "'", str60, "ZH_CN");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(charSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "xzy" + "'", str63, "xzy");
    }

    @Test
    public void test09146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09146");
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter5 = printWriter3.append('#');
        java.lang.Object[] objArray7 = null;
        java.io.PrintWriter printWriter8 = printWriter5.format("fran\347ais", objArray7);
        java.util.Locale locale9 = null;
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray12 = mathException11.getSuppressed();
        java.io.PrintWriter printWriter13 = printWriter5.format(locale9, "zxz", (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException17);
        java.lang.Object[] objArray19 = mathException17.getArguments();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("ko_KR", objArray19);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("allemand", objArray19);
        java.io.PrintWriter printWriter22 = printWriter5.printf("Germany", objArray19);
        java.io.PrintStream printStream26 = new java.io.PrintStream("ko-KR");
        printStream26.print((float) 100L);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter((java.io.OutputStream) printStream26);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double37 = rotation36.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation36.applyTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation36.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double53 = rotation52.getQ0();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation36.applyInverseTo(rotation52);
        double[][] doubleArray55 = rotation36.getMatrix();
        java.io.PrintWriter printWriter56 = printWriter29.printf("zh", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double64 = rotation63.getQ1();
        double double65 = rotation63.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D67, (double) (byte) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D67.subtract((double) 10L, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation63.applyInverseTo(vector3D74);
        double[][] doubleArray77 = rotation63.getMatrix();
        java.io.PrintWriter printWriter78 = printWriter56.format("XZY", (java.lang.Object[]) doubleArray77);
        java.lang.String[] strArray81 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray81);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException83 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) strArray81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray85 = mathException84.getSuppressed();
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException84);
        notARotationMatrixException83.addSuppressed((java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException83);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("CN", (java.lang.Object[]) doubleArray77, (java.lang.Throwable) mathException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException88);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("chinois", objArray19, (java.lang.Throwable) mathException90);
        java.lang.Throwable[] throwableArray92 = mathException91.getSuppressed();
        java.lang.Object[] objArray93 = mathException91.getArguments();
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ja", objArray93);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(printWriter8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 52.0d + "'", double53 == 52.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 100.0d + "'", double64 == 100.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 52.0d + "'", double65 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
    }

    @Test
    public void test09147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09147");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintStream printStream47 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        printStream6.println();
        java.util.Locale.Builder builder49 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder51 = builder49.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder53 = builder51.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale54 = builder53.build();
        java.lang.String str55 = locale54.getCountry();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) (-1L), (double) (short) 10, (double) 'a');
        double double69 = rotation68.getAngle();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation62.applyInverseTo(rotation68);
        double[][] doubleArray71 = rotation68.getMatrix();
        java.io.PrintStream printStream72 = printStream6.printf(locale54, "\ud504\ub791\uc2a4\uc5b4", (java.lang.Object[]) doubleArray71);
        printStream6.println((double) 100L);
        java.io.PrintStream printStream76 = printStream6.append('4');
        printStream76.println('4');
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2.3122509176395862d + "'", double69 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(printStream72);
        org.junit.Assert.assertNotNull(printStream76);
    }

    @Test
    public void test09148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09148");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (-0.02937648959434208d), (-3.141592653589793d), 1.5707963267948966d);
        double double27 = rotation26.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, 0.4028887144651276d, 0.09966865249116202d, (-1.63942416E8d));
        java.lang.String str37 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation26.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation5.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation26.revert();
        double double42 = rotation26.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.707030505345974d) + "'", double27 == (-0.707030505345974d));
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ZYZ" + "'", str37, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 3.1208207120637317d + "'", double42 == 3.1208207120637317d);
    }

    @Test
    public void test09149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09149");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation7.getAxis();
        double[][] doubleArray9 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D13.subtract((double) 10L, vector3D20);
        java.util.Locale locale22 = java.util.Locale.FRENCH;
        java.util.Locale locale23 = java.util.Locale.TAIWAN;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.util.Locale.LanguageRange[] languageRangeArray25 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList26 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList26, languageRangeArray25);
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.GERMAN;
        java.util.Locale locale30 = java.util.Locale.CANADA;
        java.util.Locale locale31 = java.util.Locale.GERMAN;
        java.util.Locale locale32 = java.util.Locale.GERMANY;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.lang.String str34 = locale33.getDisplayLanguage();
        java.util.Locale locale35 = java.util.Locale.FRENCH;
        java.util.Locale locale36 = java.util.Locale.ROOT;
        java.util.Locale locale37 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray38 = new java.util.Locale[] { locale28, locale29, locale30, locale31, locale32, locale33, locale35, locale36, locale37 };
        java.util.ArrayList<java.util.Locale> localeList39 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList39, localeArray38);
        java.util.Locale.FilteringMode filteringMode41 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList42 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList26, (java.util.Collection<java.util.Locale>) localeList39, filteringMode41);
        java.lang.String[] strArray46 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.lang.String str49 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList26, (java.util.Collection<java.lang.String>) strList47);
        java.util.Locale.LanguageRange[] languageRangeArray50 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList51 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList51, languageRangeArray50);
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.GERMAN;
        java.util.Locale locale55 = java.util.Locale.CANADA;
        java.util.Locale locale56 = java.util.Locale.GERMAN;
        java.util.Locale locale57 = java.util.Locale.GERMANY;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.lang.String str59 = locale58.getDisplayLanguage();
        java.util.Locale locale60 = java.util.Locale.FRENCH;
        java.util.Locale locale61 = java.util.Locale.ROOT;
        java.util.Locale locale62 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray63 = new java.util.Locale[] { locale53, locale54, locale55, locale56, locale57, locale58, locale60, locale61, locale62 };
        java.util.ArrayList<java.util.Locale> localeList64 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList64, localeArray63);
        java.util.Locale.FilteringMode filteringMode66 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList67 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList51, (java.util.Collection<java.util.Locale>) localeList64, filteringMode66);
        java.util.Locale.FilteringMode filteringMode68 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList69 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList26, (java.util.Collection<java.util.Locale>) localeList64, filteringMode68);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D77, (double) (byte) 100, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation75.applyTo(vector3D77);
        java.lang.Object[] objArray82 = new java.lang.Object[] { vector3D21, str24, languageRangeList26, rotation75 };
        java.lang.String[] strArray85 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray85, (java.lang.Throwable) mathException87);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray90 = mathException89.getSuppressed();
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray85, (java.lang.Throwable) mathException89);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray82, (java.lang.Throwable) mathException91);
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("ja", (java.lang.Throwable) mathException92);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("\u97d3\u6587)", (java.lang.Object[]) doubleArray9, (java.lang.Throwable) mathException93);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a))", (java.lang.Object[]) doubleArray9);
        java.lang.Object[] objArray96 = mathException95.getArguments();
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "fr");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(languageRangeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "de");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "fr");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + filteringMode41 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode41.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(languageRangeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "de");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "fr");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "");
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + filteringMode66 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode66.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList67);
        org.junit.Assert.assertTrue("'" + filteringMode68 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode68.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList69);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[[25407.0, 1040.0, 2000.0], [-1040.0, 5407.0, 10400.0], [2000.0, -10400.0, 5607.0]]");
    }

    @Test
    public void test09150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09150");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ0();
        org.apache.commons.math.geometry.Rotation rotation2 = rotation0.revert();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(128040.0d, (-11094.094757084158d), 0.9649660284921133d, (-0.5063656411097588d), true);
        org.apache.commons.math.geometry.Rotation rotation9 = rotation2.applyTo(rotation8);
        double double10 = rotation8.getQ1();
        double double11 = rotation8.getQ0();
        double double12 = rotation8.getQ0();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(rotation2);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-0.08632211498915138d) + "'", double10 == (-0.08632211498915138d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9962672795951402d + "'", double11 == 0.9962672795951402d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9962672795951402d + "'", double12 == 0.9962672795951402d);
    }

    @Test
    public void test09151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09151");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        java.io.PrintWriter printWriter11 = printWriter3.format(locale7, "zxz", (java.lang.Object[]) throwableArray10);
        char[] charArray15 = new char[] { 'a', ' ', '#' };
        printWriter11.println(charArray15);
        java.util.Locale locale17 = java.util.Locale.FRENCH;
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.lang.String str21 = locale17.getDisplayLanguage(locale18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray33 = rotation32.getMatrix();
        java.io.PrintWriter printWriter34 = printWriter11.printf(locale17, "english", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray33, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation37 = rotation36.revert();
        double double38 = rotation37.getAngle();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "fr");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "fran\347ais" + "'", str21, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5309649148733835d + "'", double38 == 0.5309649148733835d);
    }

    @Test
    public void test09152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09152");
        java.util.Locale.LanguageRange languageRange1 = new java.util.Locale.LanguageRange("jpn");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder2.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, 0.4028887144651276d, 0.09966865249116202d, (-1.63942416E8d));
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D19, (double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D24, (double) (byte) 100, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D21, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyInverseTo(vector3D21);
        double double30 = rotation16.getQ0();
        double double31 = rotation16.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation16.getAxis();
        double double33 = rotation16.getAngle();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double40 = rotation39.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation39.applyTo(rotation46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation39.applyInverseTo(vector3D49);
        double double51 = vector3D49.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str53 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D54.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D49.add(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ1();
        double double64 = rotation62.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D66, (double) (byte) 100, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D66.subtract((double) 10L, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation62.applyInverseTo(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D56.add(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D75.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation16.applyTo(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation10.applyTo(vector3D78);
        boolean boolean81 = languageRange1.equals((java.lang.Object) vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 52.0d + "'", double40 == 52.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZXZ" + "'", str53, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 100.0d + "'", double63 == 100.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 52.0d + "'", double64 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test09153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09153");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println(true);
        byte[] byteArray18 = new byte[] { (byte) -1, (byte) 0 };
        printStream6.write(byteArray18);
        boolean boolean20 = printStream6.checkError();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream6, false);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException27.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("zxz_KO_KR", (java.lang.Object[]) throwableArray28);
        java.io.PrintWriter printWriter31 = printWriter22.format("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray28);
        printWriter22.print(10);
        printWriter22.print((long) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter39 = printWriter22.append((java.lang.CharSequence) "\u30d5\u30e9\u30f3\u30b9", (int) ' ', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test09154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09154");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.5505497420289913d, 0.19453850001908143d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((-34365.38633275781d), (double) 1.0f, (-3.253905889552808E7d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) (byte) 1, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D19, (double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D16, (double) 0.0f, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D11.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D(1.4672601404653396d, 0.3118650248487572d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((-1.6394241590049627E8d), 100.02049971110628d, (-0.03286963174708454d));
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double56 = rotation55.getQ0();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation48.applyTo(rotation55);
        double double58 = rotation55.getQ3();
        double double59 = rotation55.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation55.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str62 = rotationOrder61.toString();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D60, vector3D64);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str67 = rotationOrder66.toString();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str72 = rotationOrder66.toString();
        java.lang.String str73 = rotationOrder66.toString();
        double[] doubleArray74 = rotation65.getAngles(rotationOrder66);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder66.getA2();
        java.lang.String str77 = rotationOrder66.toString();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder66.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D42, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((-0.9959035832181172d), vector3D11, (-120.56122080658437d), vector3D37, 0.8806429469916819d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D6.add(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D2.subtract(vector3D6);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 52.0d + "'", double56 == 52.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ZXZ" + "'", str62, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZXZ" + "'", str67, "ZXZ");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ZXZ" + "'", str72, "ZXZ");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ZXZ" + "'", str73, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.5707963267948966, 1.6704649792860589, -1.5707963267948966]");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ZXZ" + "'", str77, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test09155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09155");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D2, (double) (byte) 100, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract((double) 10L, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D18, (double) (byte) 100, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D9.subtract((double) 0, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation30.applyTo(rotation37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation30.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D45, (double) (byte) 100, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D47, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D57, (double) (byte) 100, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D68, (double) (byte) 100, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D65, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D52, (double) (byte) 1, vector3D60, (double) (short) 100, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D22, (double) (short) 100, vector3D41, 100.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.scalarMultiply(0.5403023058681398d);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D52, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D77.negate();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
    }

    @Test
    public void test09156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09156");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print(true);
        boolean boolean50 = printStream6.checkError();
        printStream6.print("");
        java.io.PrintStream printStream54 = printStream6.append((java.lang.CharSequence) "\u5fb7\u6587");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(printStream54);
    }

    @Test
    public void test09157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09157");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        double double23 = rotation21.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, (-0.28153953114270075d));
        double double27 = vector3D24.getX();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 102.8131477408346d + "'", double23 == 102.8131477408346d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.09111659861700878d + "'", double27 == 0.09111659861700878d);
    }

    @Test
    public void test09158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09158");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.println(0.0d);
        printWriter12.print((long) (byte) 10);
        printWriter12.println();
        printWriter12.print((int) (short) 0);
        java.io.PrintWriter printWriter21 = printWriter12.append('x');
        java.util.Locale locale23 = java.util.Locale.forLanguageTag("Chinesisch");
        java.util.Set<java.lang.Character> charSet24 = locale23.getExtensionKeys();
        printWriter12.println((java.lang.Object) locale23);
        java.io.PrintWriter printWriter27 = printWriter12.append('4');
        java.io.PrintStream printStream29 = new java.io.PrintStream("\uc911\uad6d\uc5b4");
        printStream29.write(100);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.OutputStream) printStream29, false);
        printStream29.println();
        printWriter12.print((java.lang.Object) printStream29);
        printWriter12.print((long) (-1));
        java.util.Locale.Builder builder38 = new java.util.Locale.Builder();
        java.util.Locale locale39 = java.util.Locale.FRENCH;
        java.util.Locale locale40 = locale39.stripExtensions();
        java.util.Locale.Builder builder41 = builder38.setLocale(locale39);
        java.util.Locale.Builder builder42 = builder41.clear();
        java.util.Locale locale43 = builder42.build();
        java.util.Locale locale44 = builder42.build();
        java.util.Locale.Builder builder45 = builder42.clearExtensions();
        java.util.Locale.Builder builder46 = builder45.clearExtensions();
        java.util.Locale.Builder builder48 = builder46.setScript("");
        java.util.Locale.Builder builder49 = builder46.clear();
        java.util.Locale.Builder builder50 = builder49.clearExtensions();
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("\u30d5\u30e9\u30f3\u30b9");
        java.util.Locale locale55 = new java.util.Locale("hi!", "\u97d3\u6587");
        java.util.Locale.Category category56 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale57 = java.util.Locale.ENGLISH;
        boolean boolean58 = locale57.hasExtensions();
        java.util.Locale.setDefault(category56, locale57);
        java.lang.String str60 = locale55.getDisplayName(locale57);
        java.lang.String str61 = locale57.getISO3Language();
        java.lang.String str62 = locale57.getLanguage();
        java.util.Locale.Category category63 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category64 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale65 = java.util.Locale.ROOT;
        java.lang.String str66 = locale65.getDisplayLanguage();
        java.util.Locale.setDefault(category64, locale65);
        java.util.Locale.setDefault(category63, locale65);
        java.util.Locale locale69 = java.util.Locale.getDefault(category63);
        java.util.Locale locale70 = java.util.Locale.getDefault(category63);
        java.util.Locale locale71 = java.util.Locale.getDefault(category63);
        java.util.Locale locale72 = java.util.Locale.JAPAN;
        java.lang.String str73 = locale72.getDisplayVariant();
        java.lang.String str74 = locale72.getDisplayVariant();
        java.util.Locale.setDefault(locale72);
        java.util.Locale.setDefault(category63, locale72);
        java.lang.String str77 = locale57.getDisplayLanguage(locale72);
        java.lang.Object[] objArray79 = null;
        java.io.PrintWriter printWriter80 = printWriter52.format(locale72, "ENGLISH", objArray79);
        java.lang.String str81 = locale72.getScript();
        java.lang.String str82 = locale72.getDisplayLanguage();
        java.util.Locale.Builder builder83 = builder50.setLocale(locale72);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException87 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray88 = cardanEulerSingularityException87.getSuppressed();
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("Frankreich");
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("\u97d3\u6587)", (java.lang.Object[]) throwableArray88, (java.lang.Throwable) mathException90);
        java.lang.Object[] objArray92 = mathException91.getArguments();
        java.io.PrintWriter printWriter93 = printWriter12.format(locale72, "chinese (china)_FRANCIA_org.apache.commons.math.MathException: ko_KR", objArray92);
        printWriter12.println(false);
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "");
        org.junit.Assert.assertNotNull(charSet24);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "fr");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "fr");
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
// flaky:         org.junit.Assert.assertEquals(locale55.toString(), "\u97d3\u6587");
        org.junit.Assert.assertTrue("'" + category56 + "' != '" + java.util.Locale.Category.DISPLAY + "'", category56.equals(java.util.Locale.Category.DISPLAY));
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\u97d3\u6587)" + "'", str60, "\u97d3\u6587)");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "eng" + "'", str61, "eng");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "en" + "'", str62, "en");
        org.junit.Assert.assertTrue("'" + category63 + "' != '" + java.util.Locale.Category.FORMAT + "'", category63.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category64 + "' != '" + java.util.Locale.Category.FORMAT + "'", category64.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "");
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "");
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "");
        org.junit.Assert.assertNotNull(locale72);
        org.junit.Assert.assertEquals(locale72.toString(), "ja_JP");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\u82f1\u8a9e" + "'", str77, "\u82f1\u8a9e");
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "\u65e5\u672c\u8a9e" + "'", str82, "\u65e5\u672c\u8a9e");
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertNotNull(printWriter93);
    }

    @Test
    public void test09159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09159");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.util.Locale locale4 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        double double21 = rotation18.getQ3();
        double[][] doubleArray22 = rotation18.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter3.printf(locale4, "XZY", (java.lang.Object[]) doubleArray22);
        printWriter23.println("KOR");
        printWriter23.print('4');
        java.io.PrintWriter printWriter29 = printWriter23.append('u');
        java.util.Locale locale30 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str33 = rotationOrder32.toString();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D38, 2.3122509176395862d);
        double[][] doubleArray41 = rotation40.getMatrix();
        java.io.PrintWriter printWriter42 = printWriter29.format(locale30, "Deutschland", (java.lang.Object[]) doubleArray41);
        java.io.PrintWriter printWriter44 = printWriter29.append('#');
        printWriter44.print(11983.257028037076d);
        // The following exception was thrown during execution in test generation
        try {
            printWriter44.write("CHN", (int) (byte) 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 110");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "XZY" + "'", str33, "XZY");
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(printWriter44);
    }

    @Test
    public void test09160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09160");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5699657548817936d, (-0.9998151400298466d), 0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, 32.0d, 0.009615088299702515d, (double) 'u');
        double[] doubleArray16 = rotation7.getAngles(rotationOrder8);
        double double17 = rotation7.getQ3();
        double double18 = rotation7.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.5707963267948966, 1.5699657548817936, 0.57098118676505]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.3390884220308755d + "'", double17 == 0.3390884220308755d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.6208335750854772d + "'", double18 == 0.6208335750854772d);
    }

    @Test
    public void test09161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09161");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\u82f1\u8a9e");
        java.io.PrintStream printStream2 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        java.io.PrintStream printStream5 = new java.io.PrintStream("ko-KR");
        printStream5.print((float) 100L);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.OutputStream) printStream5);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double23 = rotation22.getQ0();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation15.applyTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation15.applyInverseTo(rotation31);
        double[][] doubleArray34 = rotation15.getMatrix();
        java.io.PrintWriter printWriter35 = printWriter8.printf("zh", (java.lang.Object[]) doubleArray34);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ1();
        double double44 = rotation42.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D46, (double) (byte) 100, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.subtract((double) 10L, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation42.applyInverseTo(vector3D53);
        double[][] doubleArray56 = rotation42.getMatrix();
        java.io.PrintWriter printWriter57 = printWriter35.format("XZY", (java.lang.Object[]) doubleArray56);
        printWriter35.print('#');
        printWriter35.print(0L);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter((java.io.Writer) printWriter35);
        printWriter62.flush();
        java.util.Locale locale64 = java.util.Locale.FRANCE;
        java.lang.String str65 = locale64.getDisplayCountry();
        java.lang.String str66 = locale64.toLanguageTag();
        java.lang.String str67 = locale64.getISO3Country();
        java.util.Set<java.lang.String> strSet68 = locale64.getUnicodeLocaleKeys();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, (double) '#', (double) 0L, (double) (short) 100, true);
        double[][] doubleArray76 = rotation75.getMatrix();
        java.io.PrintWriter printWriter77 = printWriter62.format(locale64, "\u6cd5\u570b", (java.lang.Object[]) doubleArray76);
        java.io.PrintStream printStream78 = printStream2.printf("\u97d3\u6587)", (java.lang.Object[]) doubleArray76);
        printStream78.print('a');
        java.io.PrintStream printStream81 = new java.io.PrintStream((java.io.OutputStream) printStream78);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream85 = printStream78.append((java.lang.CharSequence) "Italian (Italy)", (int) '4', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -42");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 52.0d + "'", double23 == 52.0d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 100.0d + "'", double43 == 100.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "fr_FR");
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "France" + "'", str65, "France");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "fr-FR" + "'", str66, "fr-FR");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "FRA" + "'", str67, "FRA");
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(printStream78);
    }

    @Test
    public void test09162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09162");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        printWriter6.println((long) 'a');
        java.util.Locale.Builder builder9 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder11 = builder9.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale12 = java.util.Locale.ROOT;
        java.util.Locale.Category category13 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category14 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale15 = java.util.Locale.ROOT;
        java.lang.String str16 = locale15.getDisplayLanguage();
        java.util.Locale.setDefault(category14, locale15);
        java.util.Locale.setDefault(category13, locale15);
        java.lang.String str19 = locale12.getDisplayVariant(locale15);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale22 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str23 = locale22.getScript();
        java.util.Locale locale24 = java.util.Locale.KOREA;
        java.lang.String str25 = locale22.getDisplayLanguage(locale24);
        java.lang.String[] strArray28 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray28, (java.lang.Throwable) mathException30);
        java.io.PrintWriter printWriter32 = printWriter21.format(locale24, "YZY", (java.lang.Object[]) strArray28);
        java.lang.String str33 = locale15.getDisplayVariant(locale24);
        java.lang.String str34 = locale24.getDisplayScript();
        java.util.Locale.Builder builder35 = builder9.setLocale(locale24);
        java.util.Locale.setDefault(locale24);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double60 = rotation59.getQ0();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation43.applyInverseTo(rotation59);
        double[][] doubleArray62 = rotation43.getMatrix();
        java.io.PrintWriter printWriter63 = printWriter6.format(locale24, "kor", (java.lang.Object[]) doubleArray62);
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter((java.io.Writer) printWriter63);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "");
        org.junit.Assert.assertTrue("'" + category13 + "' != '" + java.util.Locale.Category.FORMAT + "'", category13.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category14 + "' != '" + java.util.Locale.Category.FORMAT + "'", category14.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str25, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(printWriter63);
    }

    @Test
    public void test09163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09163");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        double double8 = vector3D7.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str10 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str15 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder9.getA2();
        double double18 = org.apache.commons.math.geometry.Vector3D.angle(vector3D7, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.scalarMultiply((-34365.38633275781d));
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray32 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D34, (double) (byte) 100, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D36, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation31.applyInverseTo(vector3D36);
        double double45 = rotation31.getQ0();
        double double46 = rotation31.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation31.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D25, vector3D50);
        double double53 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D22, vector3D52);
        double double54 = vector3D22.getZ();
        double double55 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D7, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D22, (-0.930039504416137d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXZ" + "'", str6, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXZ" + "'", str10, "ZXZ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXZ" + "'", str15, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.5707963267948966d + "'", double18 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.0d) + "'", double54 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.0d) + "'", double55 == (-0.0d));
    }

    @Test
    public void test09164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09164");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("ja");
        java.util.Locale.Category category2 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale3 = java.util.Locale.ROOT;
        java.lang.String str4 = locale3.getDisplayLanguage();
        java.util.Locale.setDefault(category2, locale3);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.util.Locale.LanguageRange[] languageRangeArray21 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList22 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList22, languageRangeArray21);
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.util.Locale locale25 = java.util.Locale.GERMAN;
        java.util.Locale locale26 = java.util.Locale.CANADA;
        java.util.Locale locale27 = java.util.Locale.GERMAN;
        java.util.Locale locale28 = java.util.Locale.GERMANY;
        java.util.Locale locale29 = java.util.Locale.ROOT;
        java.lang.String str30 = locale29.getDisplayLanguage();
        java.util.Locale locale31 = java.util.Locale.FRENCH;
        java.util.Locale locale32 = java.util.Locale.ROOT;
        java.util.Locale locale33 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray34 = new java.util.Locale[] { locale24, locale25, locale26, locale27, locale28, locale29, locale31, locale32, locale33 };
        java.util.ArrayList<java.util.Locale> localeList35 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList35, localeArray34);
        java.util.Locale.FilteringMode filteringMode37 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList38 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList35, filteringMode37);
        java.lang.String[] strArray42 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.lang.String str45 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.lang.String>) strList43);
        java.util.Locale.LanguageRange[] languageRangeArray46 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList47 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList47, languageRangeArray46);
        java.util.Locale locale49 = java.util.Locale.ROOT;
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = java.util.Locale.CANADA;
        java.util.Locale locale52 = java.util.Locale.GERMAN;
        java.util.Locale locale53 = java.util.Locale.GERMANY;
        java.util.Locale locale54 = java.util.Locale.ROOT;
        java.lang.String str55 = locale54.getDisplayLanguage();
        java.util.Locale locale56 = java.util.Locale.FRENCH;
        java.util.Locale locale57 = java.util.Locale.ROOT;
        java.util.Locale locale58 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale49, locale50, locale51, locale52, locale53, locale54, locale56, locale57, locale58 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        java.util.Locale.FilteringMode filteringMode62 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList63 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList47, (java.util.Collection<java.util.Locale>) localeList60, filteringMode62);
        java.util.Locale.FilteringMode filteringMode64 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList65 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList60, filteringMode64);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D73, (double) (byte) 100, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation71.applyTo(vector3D73);
        java.lang.Object[] objArray78 = new java.lang.Object[] { vector3D17, str20, languageRangeList22, rotation71 };
        java.lang.String[] strArray81 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray86 = mathException85.getSuppressed();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray78, (java.lang.Throwable) mathException87);
        java.lang.Object[] objArray89 = mathException87.getArguments();
        java.io.PrintWriter printWriter90 = printWriter1.format(locale3, "ZXZ", objArray89);
        printWriter90.print((float) 10);
        printWriter90.flush();
        printWriter90.println((float) ' ');
        org.junit.Assert.assertTrue("'" + category2 + "' != '" + java.util.Locale.Category.FORMAT + "'", category2.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(languageRangeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "de");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "de");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "fr");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + filteringMode37 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode37.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(languageRangeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "de");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "de");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "fr");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + filteringMode62 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode62.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList63);
        org.junit.Assert.assertTrue("'" + filteringMode64 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode64.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList65);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test09165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09165");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.print(false);
        java.io.PrintStream printStream6 = new java.io.PrintStream((java.io.OutputStream) printStream1, false);
        printStream6.println(false);
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter12 = printWriter10.append('#');
        java.util.Locale locale13 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        double double30 = rotation27.getQ3();
        double[][] doubleArray31 = rotation27.getMatrix();
        java.io.PrintWriter printWriter32 = printWriter12.printf(locale13, "XZY", (java.lang.Object[]) doubleArray31);
        java.io.PrintStream printStream34 = new java.io.PrintStream("ko-KR");
        printStream34.close();
        java.util.Locale locale36 = java.util.Locale.UK;
        java.lang.String[] strArray38 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream39 = printStream34.format(locale36, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray38);
        printStream39.write(10);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter((java.io.OutputStream) printStream39);
        printStream39.print((int) (short) 1);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.OutputStream) printStream39);
        printWriter45.println((float) (-1));
        printWriter12.println((java.lang.Object) printWriter45);
        printWriter45.write("\ub300\ud55c\ubbfc\uad6d");
        printWriter45.print(0);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter45, true);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter45, false);
        printWriter56.println((java.lang.Object) "chinesisch (VEREINIGTES K\366NIGREICH)");
        java.util.Locale locale60 = new java.util.Locale("\u97d3\u6587)");
        java.util.Locale locale61 = locale60.stripExtensions();
        java.util.Set<java.lang.Character> charSet62 = locale60.getExtensionKeys();
        java.util.Locale locale64 = new java.util.Locale("\u4e2d\u6587\u53f0\u7063)");
        java.lang.String str65 = locale60.getDisplayName(locale64);
        java.lang.String[] strArray70 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray70, (java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray75 = mathException74.getSuppressed();
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray70, (java.lang.Throwable) mathException74);
        java.lang.Throwable[] throwableArray77 = mathException74.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException78 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray77);
        java.io.PrintWriter printWriter79 = printWriter56.printf(locale64, "org.apache.commons.math.geometry.notarotationmatrixexception: cor\351en_ORG.APACHE.COMMONS.MATH.MATHEXCEPTION: YZY", (java.lang.Object[]) throwableArray77);
        printWriter79.print((float) 'u');
        java.io.PrintWriter printWriter83 = printWriter79.append('x');
        printStream6.print((java.lang.Object) printWriter83);
        printStream6.println(false);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printStream39);
        org.junit.Assert.assertEquals(locale60.toString(), "\u97d3\u6587)");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "\u97d3\u6587)");
        org.junit.Assert.assertNotNull(charSet62);
        org.junit.Assert.assertEquals(locale64.toString(), "\u4e2d\u6587\u53f0\u7063)");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\u97d3\u6587)" + "'", str65, "\u97d3\u6587)");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test09166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09166");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.09667091924386814d), 0.9904757959510307d, 3.0419240010986313d, 1.7607846147136124d, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA3();
        java.lang.String str9 = rotationOrder7.toString();
        double[] doubleArray10 = rotation5.getAngles(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "YZX" + "'", str9, "YZX");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-2.8917267403113054, 0.49734263647852966, -1.1131876820867892]");
    }

    @Test
    public void test09167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09167");
        java.io.PrintStream printStream1 = new java.io.PrintStream("fr");
        java.io.PrintStream printStream3 = printStream1.append((java.lang.CharSequence) "French");
        printStream1.print((double) 1);
        java.util.Locale.Builder builder6 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder8 = builder6.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder10 = builder6.setLanguage("ZXZ");
        java.util.Locale locale11 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder12 = builder6.setLocale(locale11);
        java.util.Locale locale13 = locale11.stripExtensions();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        double double30 = rotation20.getQ0();
        double double31 = rotation20.getQ0();
        double[][] doubleArray32 = rotation20.getMatrix();
        java.io.PrintStream printStream33 = printStream1.format(locale13, "zh-CN", (java.lang.Object[]) doubleArray32);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter38 = printWriter36.append('#');
        java.lang.Object[] objArray40 = null;
        java.io.PrintWriter printWriter41 = printWriter38.format("fran\347ais", objArray40);
        java.util.Locale locale42 = null;
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray45 = mathException44.getSuppressed();
        java.io.PrintWriter printWriter46 = printWriter38.format(locale42, "zxz", (java.lang.Object[]) throwableArray45);
        char[] charArray50 = new char[] { 'a', ' ', '#' };
        printWriter46.println(charArray50);
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.FRENCH;
        java.util.Locale locale54 = java.util.Locale.TAIWAN;
        java.lang.String str55 = locale53.getDisplayScript(locale54);
        java.lang.String str56 = locale52.getDisplayLanguage(locale53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray68 = rotation67.getMatrix();
        java.io.PrintWriter printWriter69 = printWriter46.printf(locale52, "english", (java.lang.Object[]) doubleArray68);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(doubleArray68, (double) '#');
        java.io.PrintStream printStream72 = printStream33.format("yzy", (java.lang.Object[]) doubleArray68);
        boolean boolean73 = printStream33.checkError();
        printStream33.print((float) (short) 1);
        printStream33.print(0);
        org.junit.Assert.assertNotNull(printStream3);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "de_DE");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(printStream33);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "fr");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "fran\347ais" + "'", str56, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(printStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test09168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09168");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.8519466901357562d), 0.5763904177042349d, (double) 0L);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        double[] doubleArray8 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder6.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.8583777018362039, 0.9858844372740476, -1.1258030967002843]");
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test09169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09169");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        char[] charArray23 = new char[] { 'a', 'a', '4' };
        printStream1.println(charArray23);
        printStream1.print((long) 'x');
        printStream1.println();
        java.io.PrintStream printStream29 = new java.io.PrintStream((java.io.OutputStream) printStream1, true);
        java.io.PrintStream printStream31 = new java.io.PrintStream("ko-KR");
        printStream31.close();
        java.util.Locale locale33 = java.util.Locale.UK;
        java.lang.String[] strArray35 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream36 = printStream31.format(locale33, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray35);
        printStream36.write(10);
        byte[] byteArray42 = new byte[] { (byte) 10, (byte) 1, (byte) -1 };
        printStream36.write(byteArray42, (int) 'x', 10);
        printStream1.write(byteArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream49 = new java.io.PrintStream((java.io.OutputStream) printStream1, true, "org.apache.commons.math.MathException: French");
            org.junit.Assert.fail("Expected exception of type java.io.UnsupportedEncodingException; message: org.apache.commons.math.MathException: French");
        } catch (java.io.UnsupportedEncodingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, a, 4]");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printStream36);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 1, -1]");
    }

    @Test
    public void test09170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09170");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.OutputStream) printStream16, false);
        java.io.PrintStream printStream20 = printStream16.append('u');
        java.io.PrintStream printStream22 = printStream16.append('u');
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(printStream20);
        org.junit.Assert.assertNotNull(printStream22);
    }

    @Test
    public void test09171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09171");
        org.apache.commons.math.geometry.Rotation rotation1 = new org.apache.commons.math.geometry.Rotation();
        double double2 = rotation1.getQ0();
        org.apache.commons.math.geometry.Rotation rotation3 = rotation1.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(128040.0d, (-11094.094757084158d), 0.9649660284921133d, (-0.5063656411097588d), true);
        org.apache.commons.math.geometry.Rotation rotation10 = rotation3.applyTo(rotation9);
        double double11 = rotation3.getQ1();
        double[][] doubleArray12 = rotation3.getMatrix();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.notarotationmatrixexception: cor\351en", (java.lang.Object[]) doubleArray12);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(rotation3);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
    }

    @Test
    public void test09172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09172");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        printStream90.println("\uc911\uad6d\uc5b4");
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream90);
        printStream90.print('4');
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream99 = printStream90.append((java.lang.CharSequence) "JAPANESE", 1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
    }

    @Test
    public void test09173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09173");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, 1.0d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D6.scalarMultiply((double) 'a');
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.orthogonal();
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test09174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09174");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation12.getQ2();
        double double16 = rotation12.getAngle();
        org.apache.commons.math.geometry.Rotation rotation17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyInverseTo(rotation17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test09175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09175");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double9 = rotation8.getQ1();
        double double10 = rotation8.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D12, (double) (byte) 100, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract((double) 10L, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation8.applyInverseTo(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D21.negate();
        double double23 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D2, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(1.4672601404653396d, 0.33033571077024615d);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D21, vector3D26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 52.0d + "'", double10 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 3929.5113857326546d + "'", double23 == 3929.5113857326546d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
    }

    @Test
    public void test09176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09176");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.println("fr");
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray13 = mathException12.getSuppressed();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException12);
        java.lang.Throwable[] throwableArray15 = mathException12.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray15);
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException16.getSuppressed();
        java.io.PrintStream printStream18 = printStream1.format("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) throwableArray17);
        printStream18.flush();
        java.io.PrintStream printStream20 = new java.io.PrintStream((java.io.OutputStream) printStream18);
        java.util.Locale locale21 = null;
        java.io.PrintStream printStream25 = new java.io.PrintStream("ko-KR");
        printStream25.print((float) 100L);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.OutputStream) printStream25);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation35.revert();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double52 = rotation51.getQ0();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation35.applyInverseTo(rotation51);
        double[][] doubleArray54 = rotation35.getMatrix();
        java.io.PrintWriter printWriter55 = printWriter28.printf("zh", (java.lang.Object[]) doubleArray54);
        java.lang.String[] strArray57 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray57);
        java.lang.String str59 = mathException58.getPattern();
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray54, (java.lang.Throwable) mathException60);
        java.io.PrintStream printStream62 = printStream20.format(locale21, "ko-kr", (java.lang.Object[]) doubleArray54);
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter((java.io.OutputStream) printStream62);
        printWriter63.println('u');
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 52.0d + "'", double43 == 52.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 52.0d + "'", double52 == 52.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ZXZ" + "'", str59, "ZXZ");
        org.junit.Assert.assertNotNull(printStream62);
    }

    @Test
    public void test09177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09177");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        byte[] byteArray91 = new byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 10 };
        printStream1.write(byteArray91);
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        printWriter93.println((long) '#');
        printWriter93.print('a');
        java.io.PrintWriter printWriter99 = printWriter93.append('a');
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 100, -1, 10, 10]");
        org.junit.Assert.assertNotNull(printWriter99);
    }

    @Test
    public void test09178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09178");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 145.68802284333466d, 1.039831411921513d, (-34194.83745702809d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
    }

    @Test
    public void test09179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09179");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyTo(rotation13);
        double double16 = rotation13.getQ3();
        double double17 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation13.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray29 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation13.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double37 = rotation36.getQ1();
        double double38 = rotation36.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.subtract((double) 10L, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation36.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.negate();
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D(1040.0d, (double) (byte) 10, (double) (byte) -1);
        double double55 = org.apache.commons.math.geometry.Vector3D.angle(vector3D49, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, 3.140233154802971d, (-10400.0d));
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D68, (double) (byte) 100, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D65, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D75, (double) (byte) 100, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D81, (double) (byte) 100, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D86, (double) (byte) 100, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D83, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D70, (double) (byte) 1, vector3D78, (double) (short) 100, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D70.negate();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D70.negate();
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D59.add((-0.09950371902099892d), vector3D93);
        double double95 = org.apache.commons.math.geometry.Vector3D.angle(vector3D49, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation30.applyInverseTo(vector3D59);
        double double97 = vector3D59.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D98 = new org.apache.commons.math.geometry.Vector3D((-120.56122080658437d), vector3D59);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 100.0d + "'", double37 == 100.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.5905084122975552d + "'", double55 == 1.5905084122975552d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 1.9114895613862057d + "'", double95 == 1.9114895613862057d);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1.5707963267948966d + "'", double97 == 1.5707963267948966d);
    }

    @Test
    public void test09180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09180");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D2, (double) (byte) 100, vector3D4);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.negate();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D4.add(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D(0.5403023058681398d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D4.negate();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
    }

    @Test
    public void test09181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09181");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-381.8802471205947d), 1.4922398570367257d, 0.5403023058681398d, 0.009615088299702515d, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        double double21 = rotation11.getQ0();
        double double22 = rotation11.getQ0();
        double[][] doubleArray23 = rotation11.getMatrix();
        double double24 = rotation11.getQ3();
        double double25 = rotation11.getQ2();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        java.lang.String str29 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 'u', 24.291555113709315d, (double) 1.0f);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation5.applyTo(vector3D34);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZYZ" + "'", str29, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
    }

    @Test
    public void test09182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09182");
        java.lang.Object[] objArray1 = null;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double10 = rotation9.getQ0();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double17 = rotation16.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation9.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation9.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation25 = rotation19.applyTo(rotation24);
        double double26 = rotation24.getAngle();
        double double27 = rotation24.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation33 = rotation24.applyInverseTo(rotation32);
        double[][] doubleArray34 = rotation33.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("und", (java.lang.Throwable) notARotationMatrixException35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("Cor\351e du Sud", objArray1, (java.lang.Throwable) notARotationMatrixException35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 52.0d + "'", double10 == 52.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2.3122509176395862d + "'", double26 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.4028887144651276d + "'", double27 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(doubleArray34);
    }

    @Test
    public void test09183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09183");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter4 = printWriter2.append('#');
        printWriter2.println((long) (short) 10);
        java.util.Locale locale7 = java.util.Locale.PRC;
        java.lang.String str8 = locale7.getDisplayVariant();
        java.lang.String[] strArray13 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray13, (java.lang.Throwable) mathException15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray18 = mathException17.getSuppressed();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray13, (java.lang.Throwable) mathException17);
        java.lang.Throwable[] throwableArray20 = mathException17.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray20);
        java.io.PrintWriter printWriter22 = printWriter2.format(locale7, "", (java.lang.Object[]) throwableArray20);
        printWriter2.println();
        printWriter2.println(true);
        printWriter2.println('#');
        java.io.PrintWriter printWriter29 = printWriter2.append((java.lang.CharSequence) "\u97d3\u6587)");
        printWriter2.close();
        printWriter2.print(10.0f);
        java.util.Locale locale33 = java.util.Locale.CANADA_FRENCH;
        java.util.Locale locale34 = locale33.stripExtensions();
        java.util.Locale.Builder builder35 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder37 = builder35.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder38 = builder37.clearExtensions();
        java.util.Locale locale39 = builder38.build();
        java.util.Set<java.lang.Character> charSet40 = locale39.getExtensionKeys();
        java.util.Locale locale41 = locale39.stripExtensions();
        java.util.Locale locale42 = java.util.Locale.PRC;
        java.lang.String str43 = locale42.getDisplayVariant();
        java.util.Set<java.lang.String> strSet44 = locale42.getUnicodeLocaleKeys();
        java.lang.String str45 = locale41.getDisplayVariant(locale42);
        java.lang.String str46 = locale33.getDisplayLanguage(locale42);
        java.lang.String str47 = locale42.getDisplayName();
        java.lang.String str48 = locale42.getCountry();
        java.io.PrintStream printStream51 = new java.io.PrintStream("Chinese");
        printStream51.println(3.2539077042633276E7d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str56 = rotationOrder55.toString();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D61, 2.3122509176395862d);
        double[][] doubleArray64 = rotation63.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(doubleArray64, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(doubleArray64, 0.964142738069021d);
        java.io.PrintStream printStream69 = printStream51.printf("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a\ub3c5\uc77c\uc5b4", (java.lang.Object[]) doubleArray64);
        java.io.PrintWriter printWriter70 = printWriter2.format(locale42, "org.apache.commons.math.geometry.NotARotationMatrixException: fran\347ais", (java.lang.Object[]) doubleArray64);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException71 = new org.apache.commons.math.geometry.NotARotationMatrixException("zyx", (java.lang.Object[]) doubleArray64);
        java.lang.Object[] objArray72 = notARotationMatrixException71.getArguments();
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException75);
        java.lang.Object[] objArray77 = mathException75.getArguments();
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("ko_KR", objArray77);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException79 = new org.apache.commons.math.geometry.NotARotationMatrixException("allemand", objArray77);
        notARotationMatrixException71.addSuppressed((java.lang.Throwable) notARotationMatrixException79);
        org.junit.Assert.assertNotNull(printWriter4);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "fr_CA");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "fr_CA");
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "");
        org.junit.Assert.assertNotNull(charSet40);
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\u6cd5\u6587" + "'", str46, "\u6cd5\u6587");
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\u4e2d\u6587\u4e2d\u56fd)" + "'", str47, "\u4e2d\u6587\u4e2d\u56fd)");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "CN" + "'", str48, "CN");
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "XZY" + "'", str56, "XZY");
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(printStream69);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[[1.0, 0.0, 0.0], [0.0, -0.6753613675132741, -0.7374869648140232], [0.0, 0.7374869648140232, -0.6753613675132741]]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
    }

    @Test
    public void test09184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09184");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        double[][] doubleArray23 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(373547.3388035254d, (double) 1.0f, (-0.5063656411097588d), (-0.30821743242059296d), false);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation22.applyInverseTo(rotation29);
        double double31 = rotation29.getQ1();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((-0.9904757959510307d), 0.0d, (-0.0d), 0.0d, true);
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation29.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double48 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double55 = rotation54.getQ0();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation47.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation47.revert();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double64 = rotation63.getQ0();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation47.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation47.revert();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D74.subtract(vector3D81);
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str84 = rotationOrder83.toString();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder83.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D85.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D82.subtract(vector3D86);
        double double88 = vector3D82.getY();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation47.applyInverseTo(vector3D82);
        double double90 = rotation47.getQ1();
        double double91 = rotation47.getQ1();
        org.apache.commons.math.geometry.Rotation rotation92 = rotation40.applyTo(rotation47);
        double double93 = rotation47.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 52.0d + "'", double55 == 52.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 52.0d + "'", double64 == 52.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ZXZ" + "'", str84, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 100.0d + "'", double90 == 100.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
        org.junit.Assert.assertNotNull(rotation92);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test09185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09185");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', 1.5599296019390303d, (-2000.0d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double15 = rotation14.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation14.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation30 = rotation24.applyTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation24.getAxis();
        double double32 = rotation24.getQ2();
        double double33 = rotation24.getQ1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(1.912983406767073d, 100.02049971110628d, 1.3964058484385629E-10d, (-0.915248973644132d), false);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation24.applyTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation6.applyTo(rotation40);
        double double42 = rotation41.getAngle();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation41.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 100.0d + "'", double33 == 100.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(rotation43);
    }

    @Test
    public void test09186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09186");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double9 = rotation8.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyTo(rotation15);
        double double18 = rotation15.getQ3();
        double double19 = rotation15.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation15.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation15.applyTo(rotation30);
        double double33 = rotation30.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str35 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder34.getA1();
        double[] doubleArray38 = rotation30.getAngles(rotationOrder34);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder34.getA3();
        double double41 = org.apache.commons.math.geometry.Vector3D.angle(vector3D2, vector3D40);
        double double42 = vector3D2.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "YZY" + "'", str35, "YZY");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.5707963267948966, 0.530964914873383, 1.5707963267948966]");
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.5707963267948966d + "'", double41 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test09187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09187");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        boolean boolean86 = printStream1.checkError();
        java.io.PrintWriter printWriter88 = new java.io.PrintWriter((java.io.OutputStream) printStream1, true);
        java.io.PrintStream printStream89 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        printStream89.print(' ');
        printStream89.println();
        java.io.PrintWriter printWriter94 = new java.io.PrintWriter((java.io.OutputStream) printStream89, true);
        printStream89.flush();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test09188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09188");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((double) (byte) 100);
        printStream1.println((long) (short) -1);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        printWriter9.print((-1));
        java.io.PrintStream printStream13 = new java.io.PrintStream("ko-KR");
        printStream13.close();
        java.util.Locale locale15 = java.util.Locale.UK;
        java.lang.String[] strArray17 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream18 = printStream13.format(locale15, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray17);
        printStream18.write(10);
        printStream18.write((int) (short) 0);
        printStream18.write((int) (short) 10);
        char[] charArray27 = new char[] { 'x', 'a' };
        printStream18.println(charArray27);
        printWriter9.println(charArray27);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter9, false);
        printWriter31.write(0);
        java.util.Locale locale34 = java.util.Locale.FRENCH;
        java.util.Locale locale35 = java.util.Locale.FRENCH;
        java.util.Locale locale36 = java.util.Locale.TAIWAN;
        java.lang.String str37 = locale35.getDisplayScript(locale36);
        java.lang.String str38 = locale34.getDisplayLanguage(locale35);
        boolean boolean39 = locale35.hasExtensions();
        java.util.Locale.Builder builder40 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder42 = builder40.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale43 = builder40.build();
        java.lang.String str44 = locale35.getDisplayLanguage(locale43);
        java.lang.String str45 = locale43.getCountry();
        java.util.Set<java.lang.String> strSet46 = locale43.getUnicodeLocaleKeys();
        java.lang.String str47 = locale43.getDisplayCountry();
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation60.getAxis();
        double[][] doubleArray62 = rotation60.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(doubleArray62, (double) (short) 0);
        java.io.PrintWriter printWriter65 = printWriter31.printf(locale43, "zxz_KO_KR", (java.lang.Object[]) doubleArray62);
        java.lang.Object obj66 = null;
        printWriter31.print(obj66);
        printWriter31.print((float) 10L);
        printWriter31.print((int) (short) 100);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "xa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "xa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[x, a]");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "fr");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "fr");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "fran\347ais" + "'", str38, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "French" + "'", str44, "French");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(printWriter65);
    }

    @Test
    public void test09189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09189");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-2000.0d), 60.912721436461325d, (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test09190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09190");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7723533772244097d, (double) (-1.0f), (-0.8162351850069733d));
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.112216163995451d, (-0.52304584187721d), 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test09191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09191");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("ja");
        java.util.Locale.Category category2 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale3 = java.util.Locale.ROOT;
        java.lang.String str4 = locale3.getDisplayLanguage();
        java.util.Locale.setDefault(category2, locale3);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.util.Locale.LanguageRange[] languageRangeArray21 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList22 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList22, languageRangeArray21);
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.util.Locale locale25 = java.util.Locale.GERMAN;
        java.util.Locale locale26 = java.util.Locale.CANADA;
        java.util.Locale locale27 = java.util.Locale.GERMAN;
        java.util.Locale locale28 = java.util.Locale.GERMANY;
        java.util.Locale locale29 = java.util.Locale.ROOT;
        java.lang.String str30 = locale29.getDisplayLanguage();
        java.util.Locale locale31 = java.util.Locale.FRENCH;
        java.util.Locale locale32 = java.util.Locale.ROOT;
        java.util.Locale locale33 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray34 = new java.util.Locale[] { locale24, locale25, locale26, locale27, locale28, locale29, locale31, locale32, locale33 };
        java.util.ArrayList<java.util.Locale> localeList35 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList35, localeArray34);
        java.util.Locale.FilteringMode filteringMode37 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList38 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList35, filteringMode37);
        java.lang.String[] strArray42 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.lang.String str45 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.lang.String>) strList43);
        java.util.Locale.LanguageRange[] languageRangeArray46 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList47 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList47, languageRangeArray46);
        java.util.Locale locale49 = java.util.Locale.ROOT;
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = java.util.Locale.CANADA;
        java.util.Locale locale52 = java.util.Locale.GERMAN;
        java.util.Locale locale53 = java.util.Locale.GERMANY;
        java.util.Locale locale54 = java.util.Locale.ROOT;
        java.lang.String str55 = locale54.getDisplayLanguage();
        java.util.Locale locale56 = java.util.Locale.FRENCH;
        java.util.Locale locale57 = java.util.Locale.ROOT;
        java.util.Locale locale58 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale49, locale50, locale51, locale52, locale53, locale54, locale56, locale57, locale58 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        java.util.Locale.FilteringMode filteringMode62 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList63 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList47, (java.util.Collection<java.util.Locale>) localeList60, filteringMode62);
        java.util.Locale.FilteringMode filteringMode64 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList65 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList60, filteringMode64);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D73, (double) (byte) 100, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation71.applyTo(vector3D73);
        java.lang.Object[] objArray78 = new java.lang.Object[] { vector3D17, str20, languageRangeList22, rotation71 };
        java.lang.String[] strArray81 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray86 = mathException85.getSuppressed();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray78, (java.lang.Throwable) mathException87);
        java.lang.Object[] objArray89 = mathException87.getArguments();
        java.io.PrintWriter printWriter90 = printWriter1.format(locale3, "ZXZ", objArray89);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str92 = locale3.getUnicodeLocaleType("\u65e5\u672c\u8a9e");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Ill-formed Unicode locale key: ???");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + category2 + "' != '" + java.util.Locale.Category.FORMAT + "'", category2.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(languageRangeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "de");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "de");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "fr");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + filteringMode37 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode37.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(languageRangeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "de");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "de");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "fr");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + filteringMode62 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode62.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList63);
        org.junit.Assert.assertTrue("'" + filteringMode64 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode64.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList65);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test09192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09192");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, 3.140233154802971d, (-10400.0d));
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        double double5 = vector3D4.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        java.lang.String str13 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (-2.564013114057005E-11d), 1.8728444375742384d, 2.7514505226609822d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D4.add(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray26 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D28, (double) (byte) 100, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D33, (double) (byte) 100, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation25.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation25.getAxis();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation40.revert();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation40.getAxis();
        double double43 = vector3D42.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str45 = rotationOrder44.toString();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D46.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D47.negate();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D51.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str55 = rotationOrder54.toString();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D56.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D57.negate();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D51.subtract(10.0d, vector3D58);
        double double60 = vector3D51.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D48, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D42.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D18.add(vector3D48);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.5707963267948966d) + "'", double5 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXZ" + "'", str7, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXZ" + "'", str13, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.9999999999999999d + "'", double43 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ZXZ" + "'", str45, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ZXZ" + "'", str55, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-2.141592653589793d) + "'", double60 == (-2.141592653589793d));
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
    }

    @Test
    public void test09193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09193");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyInverseTo(rotation11);
        double double14 = rotation5.getQ1();
        double double15 = rotation5.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str17 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        java.lang.String str23 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder16.getA3();
        double double25 = vector3D24.getNorm();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D24, 0.3403995840772179d);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation5.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation5.revert();
        double[][] doubleArray30 = rotation5.getMatrix();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXZ" + "'", str17, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXZ" + "'", str23, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
    }

    @Test
    public void test09194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09194");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation6.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyTo(rotation21);
        double double23 = rotation21.getAngle();
        double double24 = rotation21.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.applyInverseTo(rotation29);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray31);
        java.lang.String str33 = notARotationMatrixException32.getPattern();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("United Kingdom");
        java.lang.Throwable[] throwableArray39 = mathException38.getSuppressed();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("YZX", (java.lang.Object[]) throwableArray39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("Euler angles singularity", (java.lang.Object[]) throwableArray39);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("\u30d5\u30e9\u30f3\u30b9", (java.lang.Object[]) throwableArray39);
        notARotationMatrixException32.addSuppressed((java.lang.Throwable) mathException42);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2.3122509176395862d + "'", double23 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.4028887144651276d + "'", double24 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(throwableArray39);
    }

    @Test
    public void test09195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09195");
        java.io.PrintStream printStream2 = new java.io.PrintStream("ko-KR");
        printStream2.close();
        java.util.Locale locale4 = java.util.Locale.UK;
        java.lang.String[] strArray6 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream7 = printStream2.format(locale4, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray6);
        printStream7.write(10);
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.OutputStream) printStream7);
        printWriter10.println(1);
        java.util.Locale locale13 = java.util.Locale.JAPANESE;
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.lang.String str17 = locale15.getVariant();
        java.lang.String str18 = locale13.getDisplayVariant(locale15);
        java.lang.String str19 = locale13.getDisplayCountry();
        java.lang.String[] strArray22 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray22, (java.lang.Throwable) mathException24);
        java.io.PrintWriter printWriter26 = printWriter10.format(locale13, "Englisch", (java.lang.Object[]) strArray22);
        java.io.PrintWriter printWriter28 = printWriter10.append('x');
        printWriter10.write("chinesisch (VEREINIGTES K\366NIGREICH)");
        java.io.PrintStream printStream33 = new java.io.PrintStream("Chinese");
        printStream33.println(3.2539077042633276E7d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str38 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D43, 2.3122509176395862d);
        double[][] doubleArray46 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(doubleArray46, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(doubleArray46, 0.964142738069021d);
        java.io.PrintStream printStream51 = printStream33.printf("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a\ub3c5\uc77c\uc5b4", (java.lang.Object[]) doubleArray46);
        java.io.PrintWriter printWriter52 = printWriter10.format("org.apache.commons.math.MathException: cor\351en", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("CHN", (java.lang.Object[]) doubleArray46);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(printStream7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "ja");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "XZY" + "'", str38, "XZY");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(printStream51);
        org.junit.Assert.assertNotNull(printWriter52);
    }

    @Test
    public void test09196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09196");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, (double) '#', (double) 0L, (double) (short) 100, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.getAxis();
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale10 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str11 = locale10.getScript();
        java.util.Locale locale12 = java.util.Locale.KOREA;
        java.lang.String str13 = locale10.getDisplayLanguage(locale12);
        java.lang.String[] strArray16 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray16, (java.lang.Throwable) mathException18);
        java.io.PrintWriter printWriter20 = printWriter9.format(locale12, "YZY", (java.lang.Object[]) strArray16);
        printWriter20.println(0.0d);
        printWriter20.print((long) (byte) 10);
        printWriter20.println();
        printWriter20.print((int) (short) 0);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter31 = printWriter29.append('#');
        printWriter29.println((long) (short) 10);
        java.util.Locale locale34 = java.util.Locale.PRC;
        java.lang.String str35 = locale34.getDisplayVariant();
        java.lang.String[] strArray40 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray40, (java.lang.Throwable) mathException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray45 = mathException44.getSuppressed();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray40, (java.lang.Throwable) mathException44);
        java.lang.Throwable[] throwableArray47 = mathException44.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray47);
        java.io.PrintWriter printWriter49 = printWriter29.format(locale34, "", (java.lang.Object[]) throwableArray47);
        printWriter49.println((float) (short) 0);
        printWriter20.print((java.lang.Object) (short) 0);
        printWriter20.print(false);
        printWriter20.print((long) (byte) 10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder57.getA1();
        java.lang.String str63 = rotationOrder57.toString();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder57.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder57.getA2();
        printWriter20.println((java.lang.Object) rotationOrder57);
        double[] doubleArray67 = rotation5.getAngles(rotationOrder57);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str13, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "XYZ" + "'", str63, "XYZ");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.00797612984943012, 0.6732785806770867, 3.118801979878033]");
    }

    @Test
    public void test09197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09197");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        printWriter6.println((long) 'a');
        java.util.Locale.Builder builder9 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder11 = builder9.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale12 = java.util.Locale.ROOT;
        java.util.Locale.Category category13 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category14 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale15 = java.util.Locale.ROOT;
        java.lang.String str16 = locale15.getDisplayLanguage();
        java.util.Locale.setDefault(category14, locale15);
        java.util.Locale.setDefault(category13, locale15);
        java.lang.String str19 = locale12.getDisplayVariant(locale15);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale22 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str23 = locale22.getScript();
        java.util.Locale locale24 = java.util.Locale.KOREA;
        java.lang.String str25 = locale22.getDisplayLanguage(locale24);
        java.lang.String[] strArray28 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray28, (java.lang.Throwable) mathException30);
        java.io.PrintWriter printWriter32 = printWriter21.format(locale24, "YZY", (java.lang.Object[]) strArray28);
        java.lang.String str33 = locale15.getDisplayVariant(locale24);
        java.lang.String str34 = locale24.getDisplayScript();
        java.util.Locale.Builder builder35 = builder9.setLocale(locale24);
        java.util.Locale.setDefault(locale24);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double60 = rotation59.getQ0();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation43.applyInverseTo(rotation59);
        double[][] doubleArray62 = rotation43.getMatrix();
        java.io.PrintWriter printWriter63 = printWriter6.format(locale24, "kor", (java.lang.Object[]) doubleArray62);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter6, false);
        printWriter65.print('#');
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "");
        org.junit.Assert.assertTrue("'" + category13 + "' != '" + java.util.Locale.Category.FORMAT + "'", category13.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category14 + "' != '" + java.util.Locale.Category.FORMAT + "'", category14.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str25, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(printWriter63);
    }

    @Test
    public void test09198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09198");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', 1.5599296019390303d, (-2000.0d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray14 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D16, (double) (byte) 100, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D18, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation13.revert();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation6.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) 'a', 0.26237485370392877d, (-1.0d), 0.0d, false);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double50 = rotation49.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation42.applyTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation42.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyTo(rotation57);
        double double59 = rotation57.getAngle();
        double double60 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation36.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation30.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, 1.0186212225436773d, (-3.253905889552808E7d));
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D68, (double) (byte) 100, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D68.subtract((double) 10L, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D79, (double) (byte) 100, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D84, (double) (byte) 100, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D81, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D75.subtract((double) 0, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D88.scalarMultiply((-0.09950371902099892d));
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D66, vector3D88);
        org.apache.commons.math.geometry.Rotation rotation93 = rotation92.revert();
        org.apache.commons.math.geometry.Rotation rotation94 = rotation30.applyTo(rotation93);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 52.0d + "'", double43 == 52.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2.3122509176395862d + "'", double59 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.4028887144651276d + "'", double60 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertNotNull(rotation94);
    }

    @Test
    public void test09199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09199");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = java.util.Locale.GERMAN;
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale11 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str12 = locale11.getScript();
        java.util.Locale locale13 = java.util.Locale.KOREA;
        java.lang.String str14 = locale11.getDisplayLanguage(locale13);
        java.lang.String[] strArray17 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray17, (java.lang.Throwable) mathException19);
        java.io.PrintWriter printWriter21 = printWriter10.format(locale13, "YZY", (java.lang.Object[]) strArray17);
        java.io.PrintWriter printWriter22 = printWriter6.printf(locale7, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray17);
        java.io.PrintWriter printWriter24 = printWriter6.append('4');
        char[] charArray27 = new char[] { '4', 'a' };
        printWriter24.println(charArray27);
        printWriter24.println("\uc911\uad6d\uc5b4\uc911\uad6d)");
        printWriter24.println(1.8417401268386502d);
        java.io.PrintStream printStream34 = new java.io.PrintStream("ko-KR");
        printStream34.print((float) 100L);
        printStream34.print(10L);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale42 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str43 = locale42.getScript();
        java.util.Locale locale44 = java.util.Locale.KOREA;
        java.lang.String str45 = locale42.getDisplayLanguage(locale44);
        java.lang.String[] strArray48 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray48, (java.lang.Throwable) mathException50);
        java.io.PrintWriter printWriter52 = printWriter41.format(locale44, "YZY", (java.lang.Object[]) strArray48);
        java.lang.String[] strArray55 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray55);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException57 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) strArray55);
        printWriter52.print((java.lang.Object) notARotationMatrixException57);
        java.lang.String[] strArray63 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray63, (java.lang.Throwable) mathException65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray68 = mathException67.getSuppressed();
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray63, (java.lang.Throwable) mathException67);
        java.lang.Throwable[] throwableArray70 = mathException67.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException71 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray70);
        java.io.PrintWriter printWriter72 = printWriter52.printf("France", (java.lang.Object[]) throwableArray70);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("Deutschland", (java.lang.Object[]) throwableArray70);
        java.lang.String[] strArray77 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException79 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) strArray77);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException80 = new org.apache.commons.math.geometry.NotARotationMatrixException("Chinese (China)", (java.lang.Object[]) strArray77);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException82 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        notARotationMatrixException80.addSuppressed((java.lang.Throwable) cardanEulerSingularityException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException((java.lang.Throwable) cardanEulerSingularityException82);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException((java.lang.Throwable) cardanEulerSingularityException82);
        mathException73.addSuppressed((java.lang.Throwable) cardanEulerSingularityException82);
        printStream34.println((java.lang.Object) cardanEulerSingularityException82);
        printWriter24.print((java.lang.Object) printStream34);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "de");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str14, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, a]");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str45, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(strArray77);
    }

    @Test
    public void test09200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09200");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation5.applyInverseTo(rotation21);
        double[][] doubleArray24 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation5.revert();
        double double26 = rotation5.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder27.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder27.getA2();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray33 = rotation5.getAngles(rotationOrder27);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Cardan angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "XZY" + "'", str28, "XZY");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
    }

    @Test
    public void test09201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09201");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((-0.009438163164864176d), 100.02049971110628d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) 1L, (double) '4', (double) 1.0f);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.normalize();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ1();
        double double21 = rotation19.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D23, (double) (byte) 100, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.subtract((double) 10L, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D32.negate();
        double double34 = vector3D33.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.subtract((double) 10L, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D55, (double) (byte) 100, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D52, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D46.subtract((double) 0, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D62, (double) (byte) 100, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D59, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D66.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str71 = rotationOrder70.toString();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D(10.0d, vector3D66, (-1.581752731678261d), vector3D72);
        double double74 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D36, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((-3.253905889552808E7d), vector3D12, (double) (byte) -1, vector3D33, 0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(35.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(0.07180241366097878d, vector3D4, 32.0d, vector3D76);
        double double78 = vector3D76.getY();
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 0.26237485370392877d);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D76.add((-0.930039504416137d), vector3D82);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 100.0d + "'", double20 == 100.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 11770.079614583028d + "'", double34 == 11770.079614583028d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "XZY" + "'", str71, "XZY");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 34.987063388950055d + "'", double78 == 34.987063388950055d);
        org.junit.Assert.assertNotNull(vector3D83);
    }

    @Test
    public void test09202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09202");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.09950371902099892d), 1.5905084122975552d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.scalarMultiply(1.5599296019390303d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ1();
        double double13 = rotation11.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract((double) 10L, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation11.applyInverseTo(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double39 = rotation38.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation31.revert();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation31.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D24.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D2.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D2.negate();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 52.0d + "'", double39 == 52.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
    }

    @Test
    public void test09203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09203");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.4028887144651276d, 0.09966865249116202d, (-1.63942416E8d));
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        java.lang.String str11 = rotationOrder0.toString();
        java.lang.String str12 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-583843.3390074662d), (-1.5960328819289396d), 11983.257028037076d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZYZ" + "'", str9, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZYZ" + "'", str11, "ZYZ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZYZ" + "'", str12, "ZYZ");
    }

    @Test
    public void test09204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09204");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), 0.8775825618903728d, 3.2539077042633276E7d, 0.0d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double[] doubleArray12 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder6.getA1();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[3.141592599649569, 9.654830250635621E-8, 3.1415926535897905]");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test09205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09205");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\u82f1\u6587");
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("ja");
        printWriter3.print(' ');
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter3);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter6, true);
        printWriter6.println(false);
        char[] charArray16 = new char[] { '4', '4', '#', 'a', ' ' };
        printWriter6.write(charArray16);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter("zh-TW");
        java.io.PrintWriter printWriter21 = printWriter19.append((java.lang.CharSequence) "Italy");
        java.io.PrintStream printStream26 = new java.io.PrintStream("ko-KR");
        printStream26.close();
        java.util.Locale locale28 = java.util.Locale.UK;
        java.lang.String[] strArray30 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream31 = printStream26.format(locale28, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("\u97d3\u6587)", (java.lang.Object[]) strArray30);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("Chinese", (java.lang.Object[]) strArray30, (java.lang.Throwable) mathException34);
        java.io.PrintWriter printWriter37 = printWriter21.printf("French (France)", (java.lang.Object[]) strArray30);
        printWriter21.print('a');
        printWriter6.println((java.lang.Object) 'a');
        java.util.Locale locale41 = java.util.Locale.FRENCH;
        java.util.Locale locale42 = java.util.Locale.FRENCH;
        java.util.Locale locale43 = java.util.Locale.TAIWAN;
        java.lang.String str44 = locale42.getDisplayScript(locale43);
        java.lang.String str45 = locale41.getDisplayLanguage(locale42);
        boolean boolean46 = locale42.hasExtensions();
        java.util.Locale.Builder builder47 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder49 = builder47.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale50 = builder47.build();
        java.lang.String str51 = locale42.getDisplayLanguage(locale50);
        java.util.Locale locale52 = locale50.stripExtensions();
        java.util.Set<java.lang.String> strSet53 = locale52.getUnicodeLocaleAttributes();
        java.util.Set<java.lang.Character> charSet54 = locale52.getExtensionKeys();
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter59 = printWriter57.append('#');
        java.lang.Object[] objArray61 = null;
        java.io.PrintWriter printWriter62 = printWriter59.format("fran\347ais", objArray61);
        printWriter62.print(true);
        java.util.Locale.Builder builder65 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder67 = builder65.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder68 = builder67.clearExtensions();
        java.util.Locale locale69 = builder68.build();
        java.util.Set<java.lang.Character> charSet70 = locale69.getExtensionKeys();
        java.util.Locale locale71 = locale69.stripExtensions();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation79.getAxis();
        double[][] doubleArray81 = rotation79.getMatrix();
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray81);
        java.io.PrintWriter printWriter83 = printWriter62.printf(locale69, "org.apache.commons.math.MathException: YZY", (java.lang.Object[]) doubleArray81);
        java.io.PrintWriter printWriter84 = printWriter6.printf(locale52, "chinesisch", (java.lang.Object[]) doubleArray81);
        printWriter6.close();
        printWriter6.println("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ko_KR");
        printStream1.println((java.lang.Object) "org.apache.commons.math.MathException: org.apache.commons.math.MathException: ko_KR");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "44#a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "44#a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, 4, #, a,  ]");
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(printStream31);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "fr");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "fr");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "fran\347ais" + "'", str45, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "French" + "'", str51, "French");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "");
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNotNull(charSet54);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "");
        org.junit.Assert.assertNotNull(charSet70);
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "");
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test09206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09206");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("de");
        printWriter1.print('x');
        java.io.PrintStream printStream5 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream7 = new java.io.PrintStream("ko-KR");
        printStream7.close();
        printStream7.println((double) '4');
        printStream7.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        double[][] doubleArray21 = rotation19.getMatrix();
        java.io.PrintStream printStream22 = printStream7.format("zh", (java.lang.Object[]) doubleArray21);
        printStream5.println((java.lang.Object) doubleArray21);
        char[] charArray27 = new char[] { 'a', 'a', '4' };
        printStream5.println(charArray27);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.OutputStream) printStream5, false);
        printWriter30.write(0);
        printWriter1.println((java.lang.Object) printWriter30);
        java.io.PrintWriter printWriter35 = printWriter30.append((java.lang.CharSequence) "United Kingdom");
        printWriter35.print(0L);
        java.util.Locale locale39 = new java.util.Locale("org.apache.commons.math.geometry.NotARotationMatrixException: zxz");
        printWriter35.print((java.lang.Object) locale39);
        java.util.Locale locale41 = java.util.Locale.ROOT;
        java.util.Locale.Category category42 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category43 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale44 = java.util.Locale.ROOT;
        java.lang.String str45 = locale44.getDisplayLanguage();
        java.util.Locale.setDefault(category43, locale44);
        java.util.Locale.setDefault(category42, locale44);
        java.lang.String str48 = locale41.getDisplayVariant(locale44);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale51 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str52 = locale51.getScript();
        java.util.Locale locale53 = java.util.Locale.KOREA;
        java.lang.String str54 = locale51.getDisplayLanguage(locale53);
        java.lang.String[] strArray57 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray57, (java.lang.Throwable) mathException59);
        java.io.PrintWriter printWriter61 = printWriter50.format(locale53, "YZY", (java.lang.Object[]) strArray57);
        java.lang.String str62 = locale44.getDisplayVariant(locale53);
        java.lang.String str63 = locale44.getISO3Language();
        java.lang.String str64 = locale44.getDisplayVariant();
        java.lang.String str65 = locale44.getCountry();
        java.util.Locale locale66 = java.util.Locale.ROOT;
        java.util.Locale.Category category67 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category68 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale69 = java.util.Locale.ROOT;
        java.lang.String str70 = locale69.getDisplayLanguage();
        java.util.Locale.setDefault(category68, locale69);
        java.util.Locale.setDefault(category67, locale69);
        java.lang.String str73 = locale66.getDisplayVariant(locale69);
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale76 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str77 = locale76.getScript();
        java.util.Locale locale78 = java.util.Locale.KOREA;
        java.lang.String str79 = locale76.getDisplayLanguage(locale78);
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        java.io.PrintWriter printWriter86 = printWriter75.format(locale78, "YZY", (java.lang.Object[]) strArray82);
        java.lang.String str87 = locale69.getDisplayVariant(locale78);
        java.util.Locale.Category category88 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale89 = java.util.Locale.ROOT;
        java.lang.String str90 = locale89.getDisplayLanguage();
        java.util.Locale.setDefault(category88, locale89);
        java.lang.String str92 = locale89.getISO3Language();
        java.lang.String str93 = locale69.getDisplayVariant(locale89);
        java.lang.String str94 = locale44.getDisplayName(locale89);
        java.util.Set<java.lang.String> strSet95 = locale44.getUnicodeLocaleKeys();
        java.lang.String str96 = locale39.getDisplayLanguage(locale44);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, a, 4]");
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertEquals(locale39.toString(), "org.apache.commons.math.geometry.notarotationmatrixexception: zxz");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "");
        org.junit.Assert.assertTrue("'" + category42 + "' != '" + java.util.Locale.Category.FORMAT + "'", category42.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category43 + "' != '" + java.util.Locale.Category.FORMAT + "'", category43.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str54, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "");
        org.junit.Assert.assertTrue("'" + category67 + "' != '" + java.util.Locale.Category.FORMAT + "'", category67.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category68 + "' != '" + java.util.Locale.Category.FORMAT + "'", category68.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(locale78);
        org.junit.Assert.assertEquals(locale78.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str79, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertTrue("'" + category88 + "' != '" + java.util.Locale.Category.FORMAT + "'", category88.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale89);
        org.junit.Assert.assertEquals(locale89.toString(), "");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
        org.junit.Assert.assertNotNull(strSet95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "org.apache.commons.math.geometry.notarotationmatrixexception: zxz" + "'", str96, "org.apache.commons.math.geometry.notarotationmatrixexception: zxz");
    }

    @Test
    public void test09207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09207");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D7.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D7, (double) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder12.getA1();
        double[] doubleArray16 = rotation11.getAngles(rotationOrder12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder12.getA1();
        java.lang.String str19 = rotationOrder12.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.5707963267948966, 0.530964914873383, -1.5707963267948966]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZYZ" + "'", str19, "ZYZ");
    }

    @Test
    public void test09208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09208");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        java.lang.String str7 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXZ" + "'", str7, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test09209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09209");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, 2.3122509176395862d, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5699657548817936d, (double) ' ', 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation14.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotation15);
    }

    @Test
    public void test09210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09210");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (-1L), (double) (short) 10, (double) 'a');
        double double12 = rotation11.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation14.applyTo(rotation20);
        double[][] doubleArray22 = rotation20.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str24 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (byte) 100, (double) (-1L), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder23.getA2();
        double[] doubleArray30 = rotation20.getAngles(rotationOrder23);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D31.scalarMultiply((-8.950356005490573E7d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.3122509176395862d + "'", double12 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXZ" + "'", str24, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.8684551666865963, 0.9755797911776904, -0.9459705383891546]");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
    }

    @Test
    public void test09211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09211");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation5.getQ0();
        double double16 = rotation5.getQ0();
        double[][] doubleArray17 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double24 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation23.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation5.applyInverseTo(rotation23);
        double double34 = rotation33.getAngle();
        double double35 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D43, (double) (byte) 100, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation41.applyTo(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation41.revert();
        double double50 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation33.applyTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(128040.0d, (-11094.094757084158d), 0.9649660284921133d, (-0.5063656411097588d), true);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double64 = rotation63.getQ0();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double71 = rotation70.getQ0();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation63.applyTo(rotation70);
        double double73 = rotation70.getQ3();
        double double74 = rotation70.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation70.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str77 = rotationOrder76.toString();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D75, vector3D79);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str82 = rotationOrder81.toString();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str87 = rotationOrder81.toString();
        java.lang.String str88 = rotationOrder81.toString();
        double[] doubleArray89 = rotation80.getAngles(rotationOrder81);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder81.getA2();
        double[] doubleArray91 = rotation57.getAngles(rotationOrder81);
        org.apache.commons.math.geometry.Rotation rotation92 = rotation41.applyTo(rotation57);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 52.0d + "'", double24 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-12804.0d) + "'", double35 == (-12804.0d));
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 52.0d + "'", double64 == 52.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 52.0d + "'", double71 == 52.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ZXZ" + "'", str77, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ZXZ" + "'", str82, "ZXZ");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "ZXZ" + "'", str87, "ZXZ");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ZXZ" + "'", str88, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.5707963267948966, 1.6704649792860589, -1.5707963267948966]");
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-8.302540428447219E-5, 0.17285936275727223, 9.093489571070024E-5]");
        org.junit.Assert.assertNotNull(rotation92);
    }

    @Test
    public void test09212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09212");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D8.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test09213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09213");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.println((float) 100L);
        printStream1.println("zxz");
        printStream1.close();
        printStream1.print((long) (short) 1);
        printStream1.println(10L);
        printStream1.print((int) (byte) -1);
        printStream1.close();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09214");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        java.lang.String[] strArray15 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray20 = mathException19.getSuppressed();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException19);
        java.io.PrintStream printStream22 = printStream6.format("deu", (java.lang.Object[]) strArray15);
        java.io.PrintStream printStream24 = printStream22.append('x');
        printStream22.print(true);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.OutputStream) printStream22);
        printWriter27.print((long) 'u');
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.Writer) printWriter27);
        java.io.PrintWriter printWriter32 = printWriter27.append((java.lang.CharSequence) "coreano");
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str34 = rotationOrder33.toString();
        java.lang.String str35 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder33.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (-0.9902205149225982d), 1.3808080388761808d, (-0.7071067811865475d));
        printWriter32.println((java.lang.Object) 1.3808080388761808d);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter46 = printWriter32.append((java.lang.CharSequence) "korean", (int) (short) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(printStream24);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "XZY" + "'", str34, "XZY");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "XZY" + "'", str35, "XZY");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
    }

    @Test
    public void test09215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09215");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 0, 1040.0d);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double10 = rotation9.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double17 = rotation16.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) (-1L), (double) (short) 10, (double) 'a');
        double double23 = rotation22.getAngle();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation9.applyTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str29 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation26.applyInverseTo(vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D35.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D(0.34104670938162607d, vector3D32, (-12.469000826984491d), vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D2.add(vector3D36);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2.3122509176395862d + "'", double23 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 24.291555113709315d + "'", double27 == 24.291555113709315d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "YZY" + "'", str29, "YZY");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
    }

    @Test
    public void test09216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09216");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation5.applyInverseTo(rotation21);
        double double24 = rotation23.getQ1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D32, (double) (byte) 100, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation30.applyTo(vector3D32);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double50 = rotation49.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation42.applyTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double65 = rotation64.getQ0();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation57.applyTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation57.revert();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation51.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation68.getAxis();
        double double70 = vector3D69.getAlpha();
        double double71 = vector3D69.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation30.applyInverseTo(vector3D69);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation23.applyTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(0.0d, 3.140233154802971d, (double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation30.applyTo(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation30.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 52.0d + "'", double43 == 52.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 52.0d + "'", double58 == 52.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 52.0d + "'", double65 == 52.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.09966865249116202d + "'", double71 == 0.09966865249116202d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotation80);
    }

    @Test
    public void test09217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09217");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation27.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double50 = rotation49.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation42.applyTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation36.applyInverseTo(rotation42);
        double[][] doubleArray54 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation5.applyInverseTo(rotation36);
        double double56 = rotation36.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation36.getAxis();
        double[][] doubleArray58 = rotation36.getMatrix();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 52.0d + "'", double43 == 52.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1040.0d + "'", double56 == 1040.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(doubleArray58);
    }

    @Test
    public void test09218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09218");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1040.0485565587792d, 0.2711440071012736d, 0.6802208021590663d, 1.2183142783019234E-6d, false);
    }

    @Test
    public void test09219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09219");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation5.getQ0();
        double double16 = rotation5.getQ0();
        double[][] doubleArray17 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double24 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation23.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation5.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation23.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation34.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 52.0d + "'", double24 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
    }

    @Test
    public void test09220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09220");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D2, (double) (byte) 100, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract((double) 10L, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D18, (double) (byte) 100, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D9.subtract((double) 0, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation30.applyTo(rotation37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation30.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D45, (double) (byte) 100, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D47, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D57, (double) (byte) 100, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D68, (double) (byte) 100, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D65, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D52, (double) (byte) 1, vector3D60, (double) (short) 100, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D22, (double) (short) 100, vector3D41, 100.0d, vector3D52);
        double double75 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((-1.5708078163893535d), (-6163.014294720684d));
        double double80 = vector3D79.getDelta();
        double double81 = vector3D79.getY();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D22.add((-66.22931445640928d), vector3D79);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.790491622490214d + "'", double80 == 0.790491622490214d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.7034960049180254d) + "'", double81 == (-0.7034960049180254d));
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test09221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09221");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        java.lang.String str4 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA2();
        java.io.PrintStream printStream8 = new java.io.PrintStream("ko-KR");
        printStream8.close();
        java.util.Locale locale10 = java.util.Locale.UK;
        java.lang.String[] strArray12 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream13 = printStream8.format(locale10, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray12);
        printStream13.write(10);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter((java.io.OutputStream) printStream13);
        printStream13.print((int) (short) 1);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.OutputStream) printStream13);
        printStream13.close();
        java.io.PrintStream printStream22 = printStream13.append('a');
        java.io.PrintStream printStream24 = new java.io.PrintStream((java.io.OutputStream) printStream13, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str27 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D32, 2.3122509176395862d);
        double[][] doubleArray35 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(doubleArray35, 0.0d);
        java.io.PrintStream printStream38 = printStream24.printf("org.apache.commons.math.geometry.NotARotationMatrixException: cor\351en", (java.lang.Object[]) doubleArray35);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray35, 0.8414709848078965d);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D46, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D56, (double) (byte) 100, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D62, (double) (byte) 100, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D67, (double) (byte) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D64, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D51, (double) (byte) 1, vector3D59, (double) (short) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, vector3D59, (double) 0L, vector3D76);
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder78.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D79.orthogonal();
        double double81 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D76, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D76.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D76.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation40.applyTo(vector3D76);
        double double85 = vector3D84.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D(1.9956175011095725d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D6.scalarMultiply(1.5394043111576534d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXZ" + "'", str2, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXZ" + "'", str4, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(printStream13);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "XZY" + "'", str27, "XZY");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(printStream38);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.5403023058681398d + "'", double81 == 0.5403023058681398d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test09222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09222");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("anglais");
        printWriter1.println((-0.9565410002113931d));
        java.io.PrintStream printStream5 = new java.io.PrintStream("ko-KR");
        printStream5.close();
        java.util.Locale locale7 = java.util.Locale.UK;
        java.lang.String[] strArray9 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream10 = printStream5.format(locale7, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray9);
        printStream10.write(10);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.OutputStream) printStream10);
        byte[] byteArray15 = new byte[] { (byte) -1 };
        printStream10.write(byteArray15);
        printStream10.close();
        printStream10.println(true);
        byte[] byteArray22 = new byte[] { (byte) -1, (byte) 0 };
        printStream10.write(byteArray22);
        boolean boolean24 = printStream10.checkError();
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.OutputStream) printStream10, false);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException31.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException33 = new org.apache.commons.math.geometry.NotARotationMatrixException("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray32);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("zxz_KO_KR", (java.lang.Object[]) throwableArray32);
        java.io.PrintWriter printWriter35 = printWriter26.format("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray32);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter26);
        java.io.PrintStream printStream38 = new java.io.PrintStream("\u97d3\u6587)");
        java.io.PrintStream printStream40 = new java.io.PrintStream("ko-KR");
        printStream40.close();
        java.util.Locale locale42 = java.util.Locale.UK;
        java.lang.String[] strArray44 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream45 = printStream40.format(locale42, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray44);
        printStream40.println((long) 10);
        java.io.PrintStream printStream48 = new java.io.PrintStream((java.io.OutputStream) printStream40);
        char[] charArray55 = new char[] { 'u', 'x', 'x', 'a', ' ', 'x' };
        printStream48.print(charArray55);
        printStream38.println(charArray55);
        printWriter26.println(charArray55);
        printWriter1.print(charArray55);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter("fran\347ais");
        printWriter61.print((long) 100);
        printWriter61.println(true);
        printWriter61.write("deu");
        printWriter61.print(true);
        java.util.Locale locale71 = java.util.Locale.forLanguageTag("fr-FR");
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale75 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str76 = locale75.getScript();
        java.util.Locale locale77 = java.util.Locale.KOREA;
        java.lang.String str78 = locale75.getDisplayLanguage(locale77);
        java.lang.String[] strArray81 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException83);
        java.io.PrintWriter printWriter85 = printWriter74.format(locale77, "YZY", (java.lang.Object[]) strArray81);
        java.lang.String[] strArray88 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray88);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException90 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) strArray88);
        printWriter85.print((java.lang.Object) notARotationMatrixException90);
        java.lang.Object[] objArray92 = notARotationMatrixException90.getArguments();
        java.lang.Throwable[] throwableArray93 = notARotationMatrixException90.getSuppressed();
        java.io.PrintWriter printWriter94 = printWriter61.printf(locale71, "fr-FR", (java.lang.Object[]) throwableArray93);
        java.io.PrintWriter printWriter96 = printWriter61.append((java.lang.CharSequence) "DEU");
        java.io.PrintWriter printWriter98 = printWriter96.append((java.lang.CharSequence) "\u82f1\u6587\u82f1\u56fd)");
        printWriter1.print((java.lang.Object) "\u82f1\u6587\u82f1\u56fd)");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(printStream10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(printStream45);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "uxxa x");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "uxxa x");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[u, x, x, a,  , x]");
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "fr_FR");
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(locale77);
        org.junit.Assert.assertEquals(locale77.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str78, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[aa, ab, ae, af, ak, am, an, ar, as, av, ay, az, ba, be, bg, bh, bi, bm, bn, bo, br, bs, ca, ce, ch, co, cr, cs, cu, cv, cy, da, de, dv, dz, ee, el, en, eo, es, et, eu, fa, ff, fi, fj, fo, fr, fy, ga, gd, gl, gn, gu, gv, ha, he, hi, ho, hr, ht, hu, hy, hz, ia, id, ie, ig, ii, ik, in, io, is, it, iu, iw, ja, ji, jv, ka, kg, ki, kj, kk, kl, km, kn, ko, kr, ks, ku, kv, kw, ky, la, lb, lg, li, ln, lo, lt, lu, lv, mg, mh, mi, mk, ml, mn, mo, mr, ms, mt, my, na, nb, nd, ne, ng, nl, nn, no, nr, nv, ny, oc, oj, om, or, os, pa, pi, pl, ps, pt, qu, rm, rn, ro, ru, rw, sa, sc, sd, se, sg, si, sk, sl, sm, sn, so, sq, sr, ss, st, su, sv, sw, ta, te, tg, th, ti, tk, tl, tn, to, tr, ts, tt, tw, ty, ug, uk, ur, uz, ve, vi, vo, wa, wo, xh, yi, yo, za, zh, zu]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[aa, ab, ae, af, ak, am, an, ar, as, av, ay, az, ba, be, bg, bh, bi, bm, bn, bo, br, bs, ca, ce, ch, co, cr, cs, cu, cv, cy, da, de, dv, dz, ee, el, en, eo, es, et, eu, fa, ff, fi, fj, fo, fr, fy, ga, gd, gl, gn, gu, gv, ha, he, hi, ho, hr, ht, hu, hy, hz, ia, id, ie, ig, ii, ik, in, io, is, it, iu, iw, ja, ji, jv, ka, kg, ki, kj, kk, kl, km, kn, ko, kr, ks, ku, kv, kw, ky, la, lb, lg, li, ln, lo, lt, lu, lv, mg, mh, mi, mk, ml, mn, mo, mr, ms, mt, my, na, nb, nd, ne, ng, nl, nn, no, nr, nv, ny, oc, oj, om, or, os, pa, pi, pl, ps, pt, qu, rm, rn, ro, ru, rw, sa, sc, sd, se, sg, si, sk, sl, sm, sn, so, sq, sr, ss, st, su, sv, sw, ta, te, tg, th, ti, tk, tl, tn, to, tr, ts, tt, tw, ty, ug, uk, ur, uz, ve, vi, vo, wa, wo, xh, yi, yo, za, zh, zu]");
        org.junit.Assert.assertNotNull(throwableArray93);
        org.junit.Assert.assertNotNull(printWriter94);
        org.junit.Assert.assertNotNull(printWriter96);
        org.junit.Assert.assertNotNull(printWriter98);
    }

    @Test
    public void test09223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09223");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("KOR");
        java.io.PrintWriter printWriter3 = printWriter1.append((java.lang.CharSequence) "englisch");
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str5 = rotationOrder4.toString();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ1();
        double double17 = rotation15.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D19, (double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract((double) 10L, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation15.applyInverseTo(vector3D26);
        double double29 = rotation15.getQ2();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation9.applyTo(rotation15);
        double double31 = rotation30.getQ2();
        double double32 = rotation30.getQ0();
        double double33 = rotation30.getQ1();
        printWriter1.print((java.lang.Object) rotation30);
        printWriter1.println(false);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "XZY" + "'", str5, "XZY");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 100.0d + "'", double16 == 100.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-4.79425538604203d) + "'", double31 == (-4.79425538604203d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 93.57684707871968d + "'", double32 == 93.57684707871968d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 62.82812818161871d + "'", double33 == 62.82812818161871d);
    }

    @Test
    public void test09224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09224");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.3403995840772179d, 935.7438253562556d);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double9 = rotation8.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation8.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyTo(rotation23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation18.getAxis();
        double double26 = rotation18.getQ2();
        double double27 = rotation18.getQ1();
        double double28 = rotation18.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation18.revert();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation29.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D2.subtract(vector3D30);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D41, (double) (byte) 100, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation39.applyTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.subtract(vector3D48);
        double double50 = vector3D49.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation57.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder59.getA1();
        double double65 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D58.add(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.add((double) (-1.0f), vector3D71);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((-0.13715201283077028d), vector3D49, (double) (short) 0, vector3D72, 0.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((-11094.094757084158d), vector3D80);
        double double83 = vector3D80.getDelta();
        double double84 = vector3D80.getY();
        double double85 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D31, vector3D80);
        double double86 = vector3D80.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D80.negate();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 100.0d + "'", double27 == 100.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 3.141592653589793d + "'", double50 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.5707963267948966d + "'", double83 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.33616890417074025d) + "'", double85 == (-0.33616890417074025d));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test09225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09225");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        char[] charArray23 = new char[] { 'a', 'a', '4' };
        printStream1.println(charArray23);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.OutputStream) printStream1, false);
        printStream1.print((int) (short) 100);
        java.io.PrintStream printStream30 = new java.io.PrintStream((java.io.OutputStream) printStream1, true);
        printStream1.println(10.0f);
        java.io.PrintStream printStream34 = printStream1.append((java.lang.CharSequence) "en-GB");
        java.io.PrintStream printStream36 = printStream34.append(' ');
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, a, 4]");
        org.junit.Assert.assertNotNull(printStream34);
        org.junit.Assert.assertNotNull(printStream36);
    }

    @Test
    public void test09226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09226");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (-1L), (double) (short) 10, (double) 'a');
        double double12 = rotation11.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyInverseTo(rotation11);
        double[][] doubleArray14 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(doubleArray14, 2.3122509176395862d);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(doubleArray14, 20118.4080027398d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, 270.0479994061873d, 1.9114895613862057d, 84.29633443762866d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder19.getA1();
        double[] doubleArray28 = rotation18.getAngles(rotationOrder19);
        double double29 = rotation18.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.3122509176395862d + "'", double12 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.6510139312528468, -0.22018405042531128, 2.3327015490605456]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.33317344249276587d) + "'", double29 == (-0.33317344249276587d));
    }

    @Test
    public void test09227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09227");
        java.util.Locale locale1 = new java.util.Locale("\u65e5\u6587\u65e5\u672c)");
        java.util.Locale.setDefault(locale1);
        java.io.PrintStream printStream4 = new java.io.PrintStream("ko-KR");
        printStream4.print((float) 100L);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.OutputStream) printStream4);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double15 = rotation14.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation14.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation14.applyInverseTo(rotation30);
        double[][] doubleArray33 = rotation14.getMatrix();
        java.io.PrintWriter printWriter34 = printWriter7.printf("zh", (java.lang.Object[]) doubleArray33);
        java.io.PrintWriter printWriter36 = printWriter7.append((java.lang.CharSequence) "\uc601\uad6d");
        printWriter7.println((long) 0);
        boolean boolean39 = printWriter7.checkError();
        printWriter7.print("org.apache.commons.math.MathException: zxz");
        boolean boolean42 = locale1.equals((java.lang.Object) "org.apache.commons.math.MathException: zxz");
        org.junit.Assert.assertEquals(locale1.toString(), "\u65e5\u6587\u65e5\u672c)");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test09228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09228");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        double double8 = vector3D7.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str10 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str15 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder9.getA2();
        double double18 = org.apache.commons.math.geometry.Vector3D.angle(vector3D7, vector3D17);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale22 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str23 = locale22.getScript();
        java.util.Locale locale24 = java.util.Locale.KOREA;
        java.lang.String str25 = locale22.getDisplayLanguage(locale24);
        java.lang.String[] strArray28 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray28, (java.lang.Throwable) mathException30);
        java.io.PrintWriter printWriter32 = printWriter21.format(locale24, "YZY", (java.lang.Object[]) strArray28);
        printWriter32.println(0.0d);
        printWriter32.print((long) (byte) 10);
        printWriter32.println();
        printWriter32.print((int) (short) 0);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter43 = printWriter41.append('#');
        printWriter41.println((long) (short) 10);
        java.util.Locale locale46 = java.util.Locale.PRC;
        java.lang.String str47 = locale46.getDisplayVariant();
        java.lang.String[] strArray52 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray52, (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray57 = mathException56.getSuppressed();
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray52, (java.lang.Throwable) mathException56);
        java.lang.Throwable[] throwableArray59 = mathException56.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException60 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray59);
        java.io.PrintWriter printWriter61 = printWriter41.format(locale46, "", (java.lang.Object[]) throwableArray59);
        printWriter61.println((float) (short) 0);
        printWriter32.print((java.lang.Object) (short) 0);
        printWriter32.print(false);
        printWriter32.print((long) (byte) 10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder69.getA1();
        java.lang.String str75 = rotationOrder69.toString();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder69.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder69.getA2();
        printWriter32.println((java.lang.Object) rotationOrder69);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D7.add(362212.73358915845d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, 1.0186212225436773d, (-3.253905889552808E7d));
        double double85 = vector3D84.getY();
        double double86 = org.apache.commons.math.geometry.Vector3D.angle(vector3D80, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D80.scalarMultiply(5.8538799810207705E-8d);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D88.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXZ" + "'", str6, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXZ" + "'", str10, "ZXZ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXZ" + "'", str15, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.5707963267948966d + "'", double18 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str25, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "XYZ" + "'", str75, "XYZ");
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0186212225436773d + "'", double85 == 1.0186212225436773d);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test09229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09229");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.0d, 2.874987211050439d, (-0.9996400101546701d));
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.negate();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D13.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D24, (double) (byte) 100, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D29, (double) (byte) 100, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D26, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D47, (double) (byte) 100, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D44, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D31, (double) (byte) 1, vector3D39, (double) (short) 100, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D31.negate();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D31.negate();
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D21, vector3D54);
        double double57 = vector3D54.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double64 = rotation63.getQ1();
        double double65 = rotation63.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D67, (double) (byte) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D67.subtract((double) 10L, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation63.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D76.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D54.subtract(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D3.add(0.9950371902099892d, vector3D76);
        double double81 = vector3D3.getNorm();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.0d) + "'", double55 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-3.141592653589793d) + "'", double57 == (-3.141592653589793d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 100.0d + "'", double64 == 100.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 52.0d + "'", double65 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 3.0438185907845443d + "'", double81 == 3.0438185907845443d);
    }

    @Test
    public void test09230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09230");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9779673818408445d, 57230.47720045373d, 0.40589920035803917d, (-9.95037190209989d), true);
    }

    @Test
    public void test09231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09231");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation6.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ1();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation37.applyTo(vector3D39);
        double double44 = vector3D39.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D39, (double) 10, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation21.applyTo(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D46.negate();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.negate();
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D(3.2539077042633276E7d, vector3D49, 100.0d, vector3D54, 2.0918418036628577d, vector3D58);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D54, (-0.3403995840772179d));
        double double62 = vector3D54.getDelta();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 100.0d + "'", double29 == 100.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.5752220392306202d) + "'", double62 == (-0.5752220392306202d));
    }

    @Test
    public void test09232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09232");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, 2.3122509176395862d);
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(doubleArray9, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray18 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D20, (double) (byte) 100, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D25, (double) (byte) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D22, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation17.applyInverseTo(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation17.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation32.revert();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation32.getAxis();
        double double35 = vector3D34.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.normalize();
        double double37 = vector3D34.getAlpha();
        double double38 = vector3D34.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation11.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation11.getAxis();
        double double41 = rotation11.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZY" + "'", str1, "XZY");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.9999999999999999d + "'", double35 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9999999999999999d + "'", double38 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    }

    @Test
    public void test09233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09233");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("ja");
        java.util.Locale.Category category2 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale3 = java.util.Locale.ROOT;
        java.lang.String str4 = locale3.getDisplayLanguage();
        java.util.Locale.setDefault(category2, locale3);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.util.Locale.LanguageRange[] languageRangeArray21 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList22 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList22, languageRangeArray21);
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.util.Locale locale25 = java.util.Locale.GERMAN;
        java.util.Locale locale26 = java.util.Locale.CANADA;
        java.util.Locale locale27 = java.util.Locale.GERMAN;
        java.util.Locale locale28 = java.util.Locale.GERMANY;
        java.util.Locale locale29 = java.util.Locale.ROOT;
        java.lang.String str30 = locale29.getDisplayLanguage();
        java.util.Locale locale31 = java.util.Locale.FRENCH;
        java.util.Locale locale32 = java.util.Locale.ROOT;
        java.util.Locale locale33 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray34 = new java.util.Locale[] { locale24, locale25, locale26, locale27, locale28, locale29, locale31, locale32, locale33 };
        java.util.ArrayList<java.util.Locale> localeList35 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList35, localeArray34);
        java.util.Locale.FilteringMode filteringMode37 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList38 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList35, filteringMode37);
        java.lang.String[] strArray42 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.lang.String str45 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.lang.String>) strList43);
        java.util.Locale.LanguageRange[] languageRangeArray46 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList47 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList47, languageRangeArray46);
        java.util.Locale locale49 = java.util.Locale.ROOT;
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = java.util.Locale.CANADA;
        java.util.Locale locale52 = java.util.Locale.GERMAN;
        java.util.Locale locale53 = java.util.Locale.GERMANY;
        java.util.Locale locale54 = java.util.Locale.ROOT;
        java.lang.String str55 = locale54.getDisplayLanguage();
        java.util.Locale locale56 = java.util.Locale.FRENCH;
        java.util.Locale locale57 = java.util.Locale.ROOT;
        java.util.Locale locale58 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale49, locale50, locale51, locale52, locale53, locale54, locale56, locale57, locale58 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        java.util.Locale.FilteringMode filteringMode62 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList63 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList47, (java.util.Collection<java.util.Locale>) localeList60, filteringMode62);
        java.util.Locale.FilteringMode filteringMode64 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList65 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList60, filteringMode64);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D73, (double) (byte) 100, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation71.applyTo(vector3D73);
        java.lang.Object[] objArray78 = new java.lang.Object[] { vector3D17, str20, languageRangeList22, rotation71 };
        java.lang.String[] strArray81 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray86 = mathException85.getSuppressed();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray78, (java.lang.Throwable) mathException87);
        java.lang.Object[] objArray89 = mathException87.getArguments();
        java.io.PrintWriter printWriter90 = printWriter1.format(locale3, "ZXZ", objArray89);
        printWriter90.print((long) 'x');
        printWriter90.println(false);
        printWriter90.print((long) (-1));
        printWriter90.print((float) 'u');
        org.junit.Assert.assertTrue("'" + category2 + "' != '" + java.util.Locale.Category.FORMAT + "'", category2.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(languageRangeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "de");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "de");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "fr");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + filteringMode37 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode37.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(languageRangeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "de");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "de");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "fr");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + filteringMode62 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode62.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList63);
        org.junit.Assert.assertTrue("'" + filteringMode64 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode64.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList65);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test09234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09234");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        java.lang.String[] strArray15 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray20 = mathException19.getSuppressed();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException19);
        java.io.PrintStream printStream22 = printStream6.format("deu", (java.lang.Object[]) strArray15);
        java.io.PrintStream printStream24 = printStream22.append('x');
        printStream22.print(true);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.OutputStream) printStream22);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter((java.io.Writer) printWriter27, false);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.Writer) printWriter29);
        printWriter30.println((int) '#');
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException35 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException35.getSuppressed();
        java.io.PrintWriter printWriter37 = printWriter30.format("org.apache.commons.math.MathException: XZY", (java.lang.Object[]) throwableArray36);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter37);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(printStream24);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(printWriter37);
    }

    @Test
    public void test09235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09235");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.4028887144651276d, 0.09966865249116202d, (-1.63942416E8d));
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D19, (double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D24, (double) (byte) 100, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D21, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation16.applyInverseTo(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation16.getAxis();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation16.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation31.revert();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation31.getAxis();
        double double34 = vector3D33.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.normalize();
        double double36 = vector3D33.getAlpha();
        double double37 = vector3D33.getNorm();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D33);
        double double39 = rotation38.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZYZ" + "'", str9, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.9999999999999999d + "'", double34 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.9999999999999999d + "'", double37 == 0.9999999999999999d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test09236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09236");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.OutputStream) printStream85, true);
        printWriter91.write(0);
        printWriter91.print("\u30d5\u30e9\u30f3\u30b9");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09237");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.4028887144651276d, (-11094.094757084158d), (double) (byte) 0);
        double double5 = rotation4.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA1();
        java.lang.String str10 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) (-1L), (double) (short) 10, (double) 'a');
        double double26 = rotation25.getAngle();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation19.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA3();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation28.applyTo(rotation34);
        double[][] doubleArray36 = rotation34.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str38 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) (byte) 100, (double) (-1L), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder37.getA2();
        double[] doubleArray44 = rotation34.getAngles(rotationOrder37);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) 0, (double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation34.applyInverseTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D(0.09605185157004012d, vector3D12, 0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation4.applyTo(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.8272219123075313d) + "'", double5 == (-0.8272219123075313d));
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXZ" + "'", str10, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2.3122509176395862d + "'", double26 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ZXZ" + "'", str38, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.8684551666865963, 0.9755797911776904, -0.9459705383891546]");
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
    }

    @Test
    public void test09238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09238");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.995037190209989d, (double) 0.0f, 0.995037190209989d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.1415782498482008d, (double) '#', 1.3964058484385629E-10d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation12.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, 11095.094757084158d, 1.4922398570367257d, (-1.149479279664553d));
        double[] doubleArray19 = rotation12.getAngles(rotationOrder14);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (-68.78220031452834d), (-3.718591544603141d), (-0.4868480326421398d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.5707819230533042, 2.699111843077519, 1.5707963269345373]");
        org.junit.Assert.assertNotNull(vector3D20);
    }

    @Test
    public void test09239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09239");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.print("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream8 = printStream1.append((java.lang.CharSequence) "yzy");
        printStream1.println((long) 100);
        printStream1.println("UNITED KINGDOM");
        printStream1.print(100.0f);
        printStream1.println(0);
        java.io.PrintStream printStream18 = new java.io.PrintStream((java.io.OutputStream) printStream1, false);
        java.util.Locale locale21 = new java.util.Locale("org.apache.commons.math.geometry.NotARotationMatrixException: cor\351en", "org.apache.commons.math.MathException: YZY");
        java.io.PrintStream printStream24 = new java.io.PrintStream("ko-KR");
        printStream24.close();
        printStream24.println((double) '4');
        printStream24.print("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream31 = printStream24.append((java.lang.CharSequence) "yzy");
        printStream24.println(1.7607846147136124d);
        java.io.PrintStream printStream35 = printStream24.append('a');
        printStream35.print(100);
        java.lang.String[] strArray44 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray44, (java.lang.Throwable) mathException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray49 = mathException48.getSuppressed();
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray44, (java.lang.Throwable) mathException48);
        java.lang.Throwable[] throwableArray51 = mathException48.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException52 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("Franz\366sisch", (java.lang.Object[]) throwableArray51);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("CHN", (java.lang.Object[]) throwableArray51);
        java.io.PrintStream printStream55 = printStream35.format("French", (java.lang.Object[]) throwableArray51);
        java.io.PrintStream printStream56 = printStream18.format(locale21, "org.apache.commons.math.MathException: Japanese", (java.lang.Object[]) throwableArray51);
        printStream56.close();
        printStream56.println((float) 'u');
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double68 = rotation67.getQ3();
        double[][] doubleArray69 = rotation67.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException70 = new org.apache.commons.math.geometry.NotARotationMatrixException("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) doubleArray69);
        java.io.PrintStream printStream71 = printStream56.printf("chinese (taiwan)_ORG.APACHE.COMMONS.MATH.MATHEXCEPTION: ZXZ", (java.lang.Object[]) doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(doubleArray69, (-14.506395213313695d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printStream8);
        org.junit.Assert.assertEquals(locale21.toString(), "org.apache.commons.math.geometry.notarotationmatrixexception: cor\351en_ORG.APACHE.COMMONS.MATH.MATHEXCEPTION: YZY");
        org.junit.Assert.assertNotNull(printStream31);
        org.junit.Assert.assertNotNull(printStream35);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(printStream55);
        org.junit.Assert.assertNotNull(printStream56);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(printStream71);
    }

    @Test
    public void test09240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09240");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.581752731678261d), 0.3403995840772179d, (-0.9880460517675101d), 1.5803629412025218E-6d, true);
    }

    @Test
    public void test09241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09241");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter10 = printWriter8.append('#');
        java.lang.Object[] objArray12 = null;
        java.io.PrintWriter printWriter13 = printWriter10.format("fran\347ais", objArray12);
        java.util.Locale locale14 = null;
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        java.io.PrintWriter printWriter18 = printWriter10.format(locale14, "zxz", (java.lang.Object[]) throwableArray17);
        char[] charArray22 = new char[] { 'a', ' ', '#' };
        printWriter18.println(charArray22);
        printStream1.println(charArray22);
        printStream1.println((double) (byte) 0);
        printStream1.println((int) (short) 10);
        java.util.Locale locale31 = new java.util.Locale("\ud55c\uad6d\uc5b4\ub300\ud55c\ubbfc\uad6d)", "org.apache.commons.math.MathException: eng");
        java.lang.String str33 = locale31.getUnicodeLocaleType("cn");
        boolean boolean34 = locale31.hasExtensions();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray42 = rotation41.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D46, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation41.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation56.revert();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation56.getAxis();
        double[][] doubleArray59 = rotation56.getMatrix();
        java.io.PrintStream printStream60 = printStream1.printf(locale31, "de-DE-Korean", (java.lang.Object[]) doubleArray59);
        boolean boolean61 = printStream60.checkError();
        printStream60.print("chinesisch (VEREINIGTES K\366NIGREICH)");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , #]");
        org.junit.Assert.assertEquals(locale31.toString(), "\ud55c\uad6d\uc5b4\ub300\ud55c\ubbfc\uad6d)_ORG.APACHE.COMMONS.MATH.MATHEXCEPTION: ENG");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(printStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test09242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09242");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ1();
        double double14 = rotation12.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D16, (double) (byte) 100, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract((double) 10L, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation12.applyInverseTo(vector3D23);
        double double26 = rotation12.getAngle();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation5.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation12.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA3();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (-0.8519466901357562d), 0.5763904177042349d, (double) 0L);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation12.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation35.revert();
        java.lang.Class<?> wildcardClass37 = rotation36.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test09243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09243");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation6.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation6.revert();
        double double22 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray29 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation28.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ1();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation6.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double60 = rotation59.getQ0();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double67 = rotation66.getQ0();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation59.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double75 = rotation74.getQ0();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double82 = rotation81.getQ0();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation74.applyTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation74.revert();
        org.apache.commons.math.geometry.Rotation rotation85 = rotation68.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation85.getAxis();
        double double87 = vector3D86.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation53.applyTo(vector3D86);
        double double89 = vector3D86.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D(2.510959086225248d, vector3D86);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 100.0d + "'", double51 == 100.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 52.0d + "'", double67 == 52.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 52.0d + "'", double75 == 52.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 52.0d + "'", double82 == 52.0d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0995037190209989d + "'", double89 == 0.0995037190209989d);
    }

    @Test
    public void test09244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09244");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        double double21 = rotation5.getQ1();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
    }

    @Test
    public void test09245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09245");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printWriter9.println("\uc601\uc5b4");
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray20 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D22, (double) (byte) 100, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D27, (double) (byte) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation34.revert();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation34.getAxis();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException38 = new org.apache.commons.math.geometry.NotARotationMatrixException("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) doubleArray37);
        java.io.PrintWriter printWriter39 = printWriter9.format("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) doubleArray37);
        printWriter9.println("kanada");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(printWriter39);
    }

    @Test
    public void test09246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09246");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        printWriter1.flush();
        printWriter1.print((float) '4');
        printWriter1.write((int) (byte) 10);
        java.util.Locale locale7 = java.util.Locale.FRENCH;
        java.util.Locale locale8 = java.util.Locale.FRENCH;
        java.util.Locale locale9 = java.util.Locale.TAIWAN;
        java.lang.String str10 = locale8.getDisplayScript(locale9);
        java.lang.String str11 = locale7.getDisplayLanguage(locale8);
        boolean boolean12 = locale8.hasExtensions();
        java.util.Locale.Builder builder13 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder15 = builder13.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale16 = builder13.build();
        java.lang.String str17 = locale8.getDisplayLanguage(locale16);
        java.lang.String str18 = locale16.toLanguageTag();
        java.util.Locale locale20 = new java.util.Locale("\ub3c5\uc77c\uc5b4");
        java.lang.String str21 = locale16.getDisplayScript(locale20);
        printWriter1.println((java.lang.Object) locale20);
        java.util.Locale locale23 = null;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(1.7607846147136124d, (-1.5707963267948966d), (double) '#', 0.0d, false);
        double[][] doubleArray31 = rotation30.getMatrix();
        java.io.PrintWriter printWriter32 = printWriter1.printf(locale23, "DEU", (java.lang.Object[]) doubleArray31);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter37 = printWriter35.append('#');
        java.lang.Object[] objArray39 = null;
        java.io.PrintWriter printWriter40 = printWriter37.format("fran\347ais", objArray39);
        java.io.PrintWriter printWriter42 = printWriter37.append('a');
        printWriter37.print(100L);
        boolean boolean45 = printWriter37.checkError();
        printWriter37.print(true);
        java.lang.String[] strArray51 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray51, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray56 = mathException55.getSuppressed();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray51, (java.lang.Throwable) mathException55);
        java.io.PrintWriter printWriter58 = printWriter37.printf("TW", (java.lang.Object[]) strArray51);
        java.io.PrintWriter printWriter59 = printWriter1.format("Allemagne", (java.lang.Object[]) strArray51);
        printWriter1.println((double) 100);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter62.print(10.0f);
        printWriter62.println((-1L));
        printWriter62.close();
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "fr");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "fr");
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "fran\347ais" + "'", str11, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "French" + "'", str17, "French");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "und" + "'", str18, "und");
        org.junit.Assert.assertEquals(locale20.toString(), "\ub3c5\uc77c\uc5b4");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test09247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09247");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyInverseTo(rotation11);
        double double14 = rotation5.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.getAxis();
        double double16 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double23 = rotation22.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double30 = rotation29.getQ0();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation22.applyTo(rotation29);
        double double32 = rotation22.getQ0();
        double double33 = rotation22.getQ0();
        double[][] doubleArray34 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ0();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double48 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation22.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation40.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation5.applyInverseTo(rotation51);
        double double53 = rotation52.getAngle();
        double double54 = rotation52.getQ3();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 52.0d + "'", double23 == 52.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1040.0d) + "'", double54 == (-1040.0d));
    }

    @Test
    public void test09248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09248");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) (-1L), (double) (short) 10, (double) 'a');
        double double13 = rotation12.getAngle();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation6.applyInverseTo(rotation12);
        double[][] doubleArray15 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray15, 93.57684707871968d);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("de_DE", (java.lang.Object[]) doubleArray15);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray15, 35.0d);
        double double21 = rotation20.getQ2();
        double double22 = rotation20.getQ0();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2.3122509176395862d + "'", double13 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.02937648959434209d + "'", double21 == 0.02937648959434209d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.4028887144651276d) + "'", double22 == (-0.4028887144651276d));
    }

    @Test
    public void test09249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09249");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0.0f, (-3.141592653589793d), (double) (byte) 10, 24.291555113709315d, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        double double7 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test09250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09250");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("de");
        printWriter1.print('x');
        java.io.PrintStream printStream5 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream7 = new java.io.PrintStream("ko-KR");
        printStream7.close();
        printStream7.println((double) '4');
        printStream7.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        double[][] doubleArray21 = rotation19.getMatrix();
        java.io.PrintStream printStream22 = printStream7.format("zh", (java.lang.Object[]) doubleArray21);
        printStream5.println((java.lang.Object) doubleArray21);
        char[] charArray27 = new char[] { 'a', 'a', '4' };
        printStream5.println(charArray27);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.OutputStream) printStream5, false);
        printWriter30.write(0);
        printWriter1.println((java.lang.Object) printWriter30);
        java.io.PrintWriter printWriter35 = printWriter30.append((java.lang.CharSequence) "United Kingdom");
        printWriter30.println("ORG.APACHE.COMMONS.MATH.GEOMETRY.NOTAROTATIONMATRIXEXCEPTION: XZY");
        printWriter30.println((long) (short) 1);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, a, 4]");
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test09251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09251");
        java.io.PrintStream printStream3 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream5 = new java.io.PrintStream("ko-KR");
        printStream5.close();
        printStream5.println((double) '4');
        printStream5.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double18 = rotation17.getQ0();
        double[][] doubleArray19 = rotation17.getMatrix();
        java.io.PrintStream printStream20 = printStream5.format("zh", (java.lang.Object[]) doubleArray19);
        printStream3.println((java.lang.Object) doubleArray19);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException22 = new org.apache.commons.math.geometry.NotARotationMatrixException("Franz\366sisch", (java.lang.Object[]) doubleArray19);
        java.lang.String str23 = notARotationMatrixException22.getPattern();
        java.lang.String str24 = notARotationMatrixException22.getPattern();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException22);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("zh");
        notARotationMatrixException22.addSuppressed((java.lang.Throwable) mathException27);
        java.lang.Object[] objArray29 = notARotationMatrixException22.getArguments();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("Deutsch (Deutschland)", (java.lang.Throwable) notARotationMatrixException22);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(printStream20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Franz\366sisch" + "'", str23, "Franz\366sisch");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Franz\366sisch" + "'", str24, "Franz\366sisch");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[[25407.0, 1040.0, 2000.0], [-1040.0, 5407.0, 10400.0], [2000.0, -10400.0, 5607.0]]");
    }

    @Test
    public void test09252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09252");
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap1 = null;
        java.util.List<java.util.Locale.LanguageRange> languageRangeList2 = java.util.Locale.LanguageRange.parse("Korean", strMap1);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList4 = java.util.Locale.LanguageRange.parse("English");
        java.util.List<java.util.Locale.LanguageRange> languageRangeList6 = java.util.Locale.LanguageRange.parse("coreano");
        java.io.PrintStream printStream8 = new java.io.PrintStream("ko-KR");
        printStream8.print((float) 100L);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap12 = null;
        java.util.List<java.util.Locale.LanguageRange> languageRangeList13 = java.util.Locale.LanguageRange.parse("English", strMap12);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap14 = null;
        java.util.List<java.util.Locale.LanguageRange> languageRangeList15 = java.util.Locale.LanguageRange.mapEquivalents(languageRangeList13, strMap14);
        java.util.Locale.LanguageRange[] languageRangeArray16 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList17 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList17, languageRangeArray16);
        java.util.Locale locale19 = java.util.Locale.ROOT;
        java.util.Locale locale20 = java.util.Locale.GERMAN;
        java.util.Locale locale21 = java.util.Locale.CANADA;
        java.util.Locale locale22 = java.util.Locale.GERMAN;
        java.util.Locale locale23 = java.util.Locale.GERMANY;
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.lang.String str25 = locale24.getDisplayLanguage();
        java.util.Locale locale26 = java.util.Locale.FRENCH;
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.util.Locale locale28 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray29 = new java.util.Locale[] { locale19, locale20, locale21, locale22, locale23, locale24, locale26, locale27, locale28 };
        java.util.ArrayList<java.util.Locale> localeList30 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList30, localeArray29);
        java.util.Locale.FilteringMode filteringMode32 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList33 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList17, (java.util.Collection<java.util.Locale>) localeList30, filteringMode32);
        java.util.Locale.FilteringMode filteringMode34 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList35 = java.util.Locale.filter(languageRangeList13, (java.util.Collection<java.util.Locale>) localeList33, filteringMode34);
        printStream8.println((java.lang.Object) localeList33);
        java.util.Locale.FilteringMode filteringMode37 = java.util.Locale.FilteringMode.EXTENDED_FILTERING;
        java.util.List<java.util.Locale> localeList38 = java.util.Locale.filter(languageRangeList6, (java.util.Collection<java.util.Locale>) localeList33, filteringMode37);
        java.util.Locale locale39 = java.util.Locale.lookup(languageRangeList4, (java.util.Collection<java.util.Locale>) localeList38);
        java.util.List<java.util.Locale.LanguageRange> languageRangeList41 = java.util.Locale.LanguageRange.parse("GERMANY");
        java.io.PrintStream printStream43 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream45 = new java.io.PrintStream("ko-KR");
        printStream45.close();
        printStream45.println((double) '4');
        printStream45.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double58 = rotation57.getQ0();
        double[][] doubleArray59 = rotation57.getMatrix();
        java.io.PrintStream printStream60 = printStream45.format("zh", (java.lang.Object[]) doubleArray59);
        printStream43.println((java.lang.Object) doubleArray59);
        char[] charArray65 = new char[] { 'a', 'a', '4' };
        printStream43.println(charArray65);
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter((java.io.OutputStream) printStream43, false);
        boolean boolean69 = printStream43.checkError();
        java.util.Locale locale70 = java.util.Locale.FRENCH;
        java.util.Locale locale71 = java.util.Locale.FRENCH;
        java.util.Locale locale72 = java.util.Locale.TAIWAN;
        java.lang.String str73 = locale71.getDisplayScript(locale72);
        java.lang.String str74 = locale70.getDisplayLanguage(locale71);
        boolean boolean75 = locale71.hasExtensions();
        java.util.Locale.Builder builder76 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder78 = builder76.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale79 = builder76.build();
        java.lang.String str80 = locale71.getDisplayLanguage(locale79);
        java.lang.String str81 = locale71.getDisplayVariant();
        java.util.Locale locale83 = java.util.Locale.forLanguageTag("coreano");
        java.lang.String str84 = locale71.getDisplayLanguage(locale83);
        java.lang.String str85 = locale71.toLanguageTag();
        java.lang.Object[] objArray87 = null;
        java.io.PrintStream printStream88 = printStream43.printf(locale71, "China", objArray87);
        java.util.Set<java.lang.String> strSet89 = locale71.getUnicodeLocaleKeys();
        java.util.List<java.util.Locale.LanguageRange> languageRangeList91 = java.util.Locale.LanguageRange.parse("French");
        java.util.Locale locale92 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.util.Set<java.lang.String> strSet93 = locale92.getUnicodeLocaleAttributes();
        java.util.Locale.FilteringMode filteringMode94 = java.util.Locale.FilteringMode.REJECT_EXTENDED_RANGES;
        java.util.List<java.lang.String> strList95 = java.util.Locale.filterTags(languageRangeList91, (java.util.Collection<java.lang.String>) strSet93, filteringMode94);
        java.util.List<java.lang.String> strList96 = java.util.Locale.filterTags(languageRangeList41, (java.util.Collection<java.lang.String>) strSet89, filteringMode94);
        java.util.List<java.util.Locale> localeList97 = java.util.Locale.filter(languageRangeList2, (java.util.Collection<java.util.Locale>) localeList38, filteringMode94);
        org.junit.Assert.assertNotNull(languageRangeList2);
        org.junit.Assert.assertNotNull(languageRangeList4);
        org.junit.Assert.assertNotNull(languageRangeList6);
        org.junit.Assert.assertNotNull(languageRangeList13);
        org.junit.Assert.assertNotNull(languageRangeList15);
        org.junit.Assert.assertNotNull(languageRangeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "de");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "de");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "fr");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + filteringMode32 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode32.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList33);
        org.junit.Assert.assertTrue("'" + filteringMode34 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode34.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList35);
        org.junit.Assert.assertTrue("'" + filteringMode37 + "' != '" + java.util.Locale.FilteringMode.EXTENDED_FILTERING + "'", filteringMode37.equals(java.util.Locale.FilteringMode.EXTENDED_FILTERING));
        org.junit.Assert.assertNotNull(localeList38);
        org.junit.Assert.assertNull(locale39);
        org.junit.Assert.assertNotNull(languageRangeList41);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 52.0d + "'", double58 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(printStream60);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "fr");
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "fr");
        org.junit.Assert.assertNotNull(locale72);
        org.junit.Assert.assertEquals(locale72.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "fran\347ais" + "'", str74, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(locale79);
        org.junit.Assert.assertEquals(locale79.toString(), "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "French" + "'", str80, "French");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(locale83);
        org.junit.Assert.assertEquals(locale83.toString(), "coreano");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "French" + "'", str84, "French");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "fr" + "'", str85, "fr");
        org.junit.Assert.assertNotNull(printStream88);
        org.junit.Assert.assertNotNull(strSet89);
        org.junit.Assert.assertNotNull(languageRangeList91);
        org.junit.Assert.assertNotNull(locale92);
        org.junit.Assert.assertEquals(locale92.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(strSet93);
        org.junit.Assert.assertTrue("'" + filteringMode94 + "' != '" + java.util.Locale.FilteringMode.REJECT_EXTENDED_RANGES + "'", filteringMode94.equals(java.util.Locale.FilteringMode.REJECT_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(strList96);
        org.junit.Assert.assertNotNull(localeList97);
    }

    @Test
    public void test09253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09253");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        printStream90.println("\uc911\uad6d\uc5b4");
        printStream90.println((int) (short) 10);
        printStream90.println(false);
        printStream90.print("gb");
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
    }

    @Test
    public void test09254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09254");
        java.util.Locale locale1 = java.util.Locale.forLanguageTag("org.apache.commons.math.MathException: korean");
        java.lang.String str2 = locale1.getISO3Language();
        java.util.Locale.Category category3 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale4 = java.util.Locale.ENGLISH;
        boolean boolean5 = locale4.hasExtensions();
        java.util.Locale.setDefault(category3, locale4);
        java.util.Locale locale7 = java.util.Locale.FRANCE;
        java.lang.String str8 = locale7.getDisplayVariant();
        boolean boolean9 = locale7.hasExtensions();
        java.util.Locale.setDefault(category3, locale7);
        java.util.Locale.Category category11 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale12 = java.util.Locale.ENGLISH;
        boolean boolean13 = locale12.hasExtensions();
        java.util.Locale.setDefault(category11, locale12);
        java.lang.String str15 = locale12.getLanguage();
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter19 = printWriter17.append('#');
        java.util.Locale locale20 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation27.applyTo(rotation34);
        double double37 = rotation34.getQ3();
        double[][] doubleArray38 = rotation34.getMatrix();
        java.io.PrintWriter printWriter39 = printWriter19.printf(locale20, "XZY", (java.lang.Object[]) doubleArray38);
        java.io.PrintStream printStream41 = new java.io.PrintStream("ko-KR");
        printStream41.close();
        java.util.Locale locale43 = java.util.Locale.UK;
        java.lang.String[] strArray45 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream46 = printStream41.format(locale43, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray45);
        printStream46.write(10);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter((java.io.OutputStream) printStream46);
        printStream46.print((int) (short) 1);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter((java.io.OutputStream) printStream46);
        printWriter52.println((float) (-1));
        printWriter19.println((java.lang.Object) printWriter52);
        java.util.Locale locale56 = java.util.Locale.CANADA_FRENCH;
        java.util.Locale locale57 = locale56.stripExtensions();
        java.util.Locale locale58 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale58);
        java.util.Locale locale60 = java.util.Locale.FRENCH;
        java.util.Locale locale61 = java.util.Locale.TAIWAN;
        java.lang.String str62 = locale60.getDisplayScript(locale61);
        java.lang.String str63 = locale58.getDisplayLanguage(locale61);
        java.lang.String str64 = locale58.getISO3Country();
        java.lang.String str65 = locale57.getDisplayVariant(locale58);
        java.lang.Object[] objArray67 = null;
        java.io.PrintWriter printWriter68 = printWriter19.format(locale57, "Chinese (Taiwan)", objArray67);
        java.lang.String str69 = locale12.getDisplayLanguage(locale57);
        java.util.Locale.setDefault(category3, locale12);
        java.util.Locale.Builder builder71 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder73 = builder71.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale74 = builder71.build();
        java.util.Locale.Builder builder76 = builder71.setRegion("ja");
        java.util.Locale locale77 = builder76.build();
        java.util.Locale locale78 = java.util.Locale.ROOT;
        java.lang.String str79 = locale78.getDisplayLanguage();
        java.util.Locale locale80 = java.util.Locale.FRENCH;
        java.util.Locale locale81 = java.util.Locale.TAIWAN;
        java.lang.String str82 = locale80.getDisplayScript(locale81);
        java.lang.String str83 = locale78.getDisplayLanguage(locale80);
        java.util.Locale locale84 = locale78.stripExtensions();
        java.lang.String str85 = locale78.getDisplayLanguage();
        java.lang.String str86 = locale77.getDisplayVariant(locale78);
        java.util.Locale.setDefault(category3, locale77);
        java.lang.String str88 = locale1.getDisplayName(locale77);
        org.junit.Assert.assertNotNull(locale1);
        org.junit.Assert.assertEquals(locale1.toString(), "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + category3 + "' != '" + java.util.Locale.Category.DISPLAY + "'", category3.equals(java.util.Locale.Category.DISPLAY));
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "fr_FR");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + category11 + "' != '" + java.util.Locale.Category.DISPLAY + "'", category11.equals(java.util.Locale.Category.DISPLAY));
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "en" + "'", str15, "en");
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "fr_CA");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr_CA");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "fr");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\u97d3\u6587" + "'", str63, "\u97d3\u6587");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "KOR" + "'", str64, "KOR");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "anglais" + "'", str69, "anglais");
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "");
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(locale77);
        org.junit.Assert.assertEquals(locale77.toString(), "_JA");
        org.junit.Assert.assertNotNull(locale78);
        org.junit.Assert.assertEquals(locale78.toString(), "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(locale80);
        org.junit.Assert.assertEquals(locale80.toString(), "fr");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(locale84);
        org.junit.Assert.assertEquals(locale84.toString(), "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
    }

    @Test
    public void test09255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09255");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = vector3D1.normalize();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double9 = rotation8.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyTo(rotation15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation8.applyInverseTo(vector3D18);
        double double20 = vector3D18.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str22 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D18.add(vector3D23);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ1();
        double double33 = rotation31.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D35, (double) (byte) 100, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract((double) 10L, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation31.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D44.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D25.add(vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract((double) (-1), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D49.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str54 = rotationOrder53.toString();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder53.getA1();
        java.lang.String str56 = rotationOrder53.toString();
        java.lang.String str57 = rotationOrder53.toString();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, (double) (short) 0);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((-1.581752731678261d), vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation61.applyTo(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(2.3122509176395862d, vector3D71, (double) 10.0f, vector3D74);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D52, vector3D67, vector3D71);
        double double78 = vector3D67.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXZ" + "'", str22, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 100.0d + "'", double32 == 100.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ZXZ" + "'", str54, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ZXZ" + "'", str56, "ZXZ");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZXZ" + "'", str57, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
    }

    @Test
    public void test09256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09256");
        java.lang.String[] strArray2 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray2, (java.lang.Throwable) mathException4);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("JPN");
        java.io.PrintStream printStream11 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream13 = new java.io.PrintStream("ko-KR");
        printStream13.close();
        printStream13.println((double) '4');
        printStream13.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        double[][] doubleArray27 = rotation25.getMatrix();
        java.io.PrintStream printStream28 = printStream13.format("zh", (java.lang.Object[]) doubleArray27);
        printStream11.println((java.lang.Object) doubleArray27);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("Franz\366sisch", (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("chinese (china)_FRANCIA_org.apache.commons.math.MathException: ko_KR", (java.lang.Throwable) notARotationMatrixException30);
        mathException7.addSuppressed((java.lang.Throwable) mathException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("en-GB", (java.lang.Object[]) strArray2, (java.lang.Throwable) mathException7);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(printStream28);
    }

    @Test
    public void test09257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09257");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.util.Locale locale4 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        double double21 = rotation18.getQ3();
        double[][] doubleArray22 = rotation18.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter3.printf(locale4, "XZY", (java.lang.Object[]) doubleArray22);
        java.io.PrintStream printStream25 = new java.io.PrintStream("ko-KR");
        printStream25.close();
        java.util.Locale locale27 = java.util.Locale.UK;
        java.lang.String[] strArray29 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream30 = printStream25.format(locale27, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray29);
        printStream30.write(10);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.OutputStream) printStream30);
        printStream30.print((int) (short) 1);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.OutputStream) printStream30);
        printWriter36.println((float) (-1));
        printWriter3.println((java.lang.Object) printWriter36);
        java.util.Locale locale40 = java.util.Locale.CANADA_FRENCH;
        java.util.Locale locale41 = locale40.stripExtensions();
        java.util.Locale locale42 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale42);
        java.util.Locale locale44 = java.util.Locale.FRENCH;
        java.util.Locale locale45 = java.util.Locale.TAIWAN;
        java.lang.String str46 = locale44.getDisplayScript(locale45);
        java.lang.String str47 = locale42.getDisplayLanguage(locale45);
        java.lang.String str48 = locale42.getISO3Country();
        java.lang.String str49 = locale41.getDisplayVariant(locale42);
        java.lang.Object[] objArray51 = null;
        java.io.PrintWriter printWriter52 = printWriter3.format(locale41, "Chinese (Taiwan)", objArray51);
        printWriter52.println();
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter((java.io.Writer) printWriter52, false);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printStream30);
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "fr_CA");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "fr_CA");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "fr");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\u97d3\u6587" + "'", str47, "\u97d3\u6587");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "KOR" + "'", str48, "KOR");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(printWriter52);
    }

    @Test
    public void test09258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09258");
        java.io.PrintStream printStream1 = new java.io.PrintStream("fr");
        java.io.PrintStream printStream3 = printStream1.append((java.lang.CharSequence) "French");
        printStream1.print((double) 1);
        java.util.Locale.Builder builder6 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder8 = builder6.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder10 = builder6.setLanguage("ZXZ");
        java.util.Locale locale11 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder12 = builder6.setLocale(locale11);
        java.util.Locale locale13 = locale11.stripExtensions();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        double double30 = rotation20.getQ0();
        double double31 = rotation20.getQ0();
        double[][] doubleArray32 = rotation20.getMatrix();
        java.io.PrintStream printStream33 = printStream1.format(locale13, "zh-CN", (java.lang.Object[]) doubleArray32);
        printStream33.print(1.0f);
        printStream33.print("yzy_KO-KR");
        org.junit.Assert.assertNotNull(printStream3);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "de_DE");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(printStream33);
    }

    @Test
    public void test09259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09259");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D2, (double) (byte) 100, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract((double) 10L, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D18, (double) (byte) 100, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D9.subtract((double) 0, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation30.applyTo(rotation37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation30.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D45, (double) (byte) 100, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D47, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D57, (double) (byte) 100, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D68, (double) (byte) 100, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D65, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D52, (double) (byte) 1, vector3D60, (double) (short) 100, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D22, (double) (short) 100, vector3D41, 100.0d, vector3D52);
        double double75 = vector3D41.getNorm();
        double double76 = vector3D41.getNorm();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 11983.257028037076d + "'", double75 == 11983.257028037076d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 11983.257028037076d + "'", double76 == 11983.257028037076d);
    }

    @Test
    public void test09260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09260");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\u30c9\u30a4\u30c4\u8a9e");
        printStream1.print(true);
        printStream1.print((float) 10);
        printStream1.println();
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter11 = printWriter9.append('#');
        java.util.Locale locale12 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double27 = rotation26.getQ0();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.applyTo(rotation26);
        double double29 = rotation26.getQ3();
        double[][] doubleArray30 = rotation26.getMatrix();
        java.io.PrintWriter printWriter31 = printWriter11.printf(locale12, "XZY", (java.lang.Object[]) doubleArray30);
        java.io.PrintStream printStream33 = new java.io.PrintStream("ko-KR");
        printStream33.close();
        java.util.Locale locale35 = java.util.Locale.UK;
        java.lang.String[] strArray37 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream38 = printStream33.format(locale35, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray37);
        printStream38.write(10);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.OutputStream) printStream38);
        printStream38.print((int) (short) 1);
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter((java.io.OutputStream) printStream38);
        printWriter44.println((float) (-1));
        printWriter11.println((java.lang.Object) printWriter44);
        java.util.Locale locale48 = java.util.Locale.CANADA_FRENCH;
        java.util.Locale locale49 = locale48.stripExtensions();
        java.util.Locale locale50 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale50);
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.TAIWAN;
        java.lang.String str54 = locale52.getDisplayScript(locale53);
        java.lang.String str55 = locale50.getDisplayLanguage(locale53);
        java.lang.String str56 = locale50.getISO3Country();
        java.lang.String str57 = locale49.getDisplayVariant(locale50);
        java.lang.Object[] objArray59 = null;
        java.io.PrintWriter printWriter60 = printWriter11.format(locale49, "Chinese (Taiwan)", objArray59);
        printWriter60.println();
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str64 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        java.lang.String str70 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, 2.0918418036628577d, (double) 10.0f, 0.7071067811865476d);
        double[][] doubleArray76 = rotation75.getMatrix();
        java.io.PrintWriter printWriter77 = printWriter60.format("_JA_zho", (java.lang.Object[]) doubleArray76);
        java.io.PrintStream printStream78 = printStream1.printf("anglais", (java.lang.Object[]) doubleArray76);
        printStream78.print('u');
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(printStream38);
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "fr_CA");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "fr_CA");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\u97d3\u6587" + "'", str55, "\u97d3\u6587");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "KOR" + "'", str56, "KOR");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ZXZ" + "'", str64, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ZXZ" + "'", str70, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(printStream78);
    }

    @Test
    public void test09261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09261");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        printStream85.println(false);
        printStream85.flush();
        java.io.PrintStream printStream92 = new java.io.PrintStream((java.io.OutputStream) printStream85, true);
        printStream92.println((long) (short) 1);
        printStream92.println((-1.0f));
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09262");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        printStream85.println((long) 100);
        printStream85.println((long) (byte) -1);
        java.io.PrintWriter printWriter95 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09263");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation37.applyInverseTo(rotation43);
        double[][] doubleArray55 = rotation37.getMatrix();
        double double56 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation21.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation21.revert();
        double double59 = rotation58.getQ1();
        double double60 = rotation58.getQ1();
        double[][] doubleArray61 = rotation58.getMatrix();
        double double62 = rotation58.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str64 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder63.getA3();
        java.lang.String str66 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, (-3.0171984405909804E-8d), (-0.13768695521062307d), (double) (-1L));
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, (-1.194520336698293d), (-0.02937648959434208d), (double) 'x');
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation74.getAxis();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation74.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, 0.4028887144651276d, 0.09966865249116202d, (-1.63942416E8d));
        java.lang.String str86 = rotationOrder77.toString();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder77.getA3();
        java.lang.String str88 = rotationOrder77.toString();
        java.lang.String str89 = rotationOrder77.toString();
        double[] doubleArray90 = rotation74.getAngles(rotationOrder77);
        org.apache.commons.math.geometry.Rotation rotation91 = rotation58.applyTo(rotation74);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-10.358482905538347d) + "'", double22 == (-10.358482905538347d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1040.0d + "'", double56 == 1040.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 84.29633443762866d + "'", double59 == 84.29633443762866d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 84.29633443762866d + "'", double60 == 84.29633443762866d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-60.912721436461325d) + "'", double62 == (-60.912721436461325d));
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ZXY" + "'", str64, "ZXY");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZXY" + "'", str66, "ZXY");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "ZYZ" + "'", str86, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ZYZ" + "'", str88, "ZYZ");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "ZYZ" + "'", str89, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.1533553885263328, 0.6200839332952476, -0.05056721825173716]");
        org.junit.Assert.assertNotNull(rotation91);
    }

    @Test
    public void test09264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09264");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("ja");
        printWriter1.print(' ');
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter4, true);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale9 = java.util.Locale.KOREAN;
        java.lang.String str10 = locale9.getDisplayLanguage();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double25 = rotation24.getQ0();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation17.applyTo(rotation24);
        double double27 = rotation17.getQ0();
        double double28 = rotation17.getQ0();
        double[][] doubleArray29 = rotation17.getMatrix();
        java.io.PrintWriter printWriter30 = printWriter8.printf(locale9, "zh_CN", (java.lang.Object[]) doubleArray29);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale33 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str34 = locale33.getScript();
        java.util.Locale locale35 = java.util.Locale.KOREA;
        java.lang.String str36 = locale33.getDisplayLanguage(locale35);
        java.lang.String[] strArray39 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray39, (java.lang.Throwable) mathException41);
        java.io.PrintWriter printWriter43 = printWriter32.format(locale35, "YZY", (java.lang.Object[]) strArray39);
        printWriter43.println(0.0d);
        java.io.PrintStream printStream47 = new java.io.PrintStream("ko-KR");
        printStream47.close();
        java.util.Locale locale49 = java.util.Locale.UK;
        java.lang.String[] strArray51 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream52 = printStream47.format(locale49, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray51);
        printStream52.write(10);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter((java.io.OutputStream) printStream52);
        printStream52.print((int) (short) 1);
        java.io.PrintStream printStream59 = new java.io.PrintStream("ko-KR");
        printStream59.println("fr");
        printStream52.print((java.lang.Object) "fr");
        char[] charArray66 = new char[] { '#', '4', 'a' };
        printStream52.print(charArray66);
        printWriter43.write(charArray66);
        printWriter30.write(charArray66);
        printWriter6.print(charArray66);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter74 = printWriter6.append((java.lang.CharSequence) "org.apache.commons.math.MathException: Koreanisch", (int) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "ko");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\ud55c\uad6d\uc5b4" + "'", str10, "\ud55c\uad6d\uc5b4");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str36, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(printStream52);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, 4, a]");
    }

    @Test
    public void test09265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09265");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        printStream6.write((int) (short) 0);
        printStream6.write((int) (short) 10);
        char[] charArray15 = new char[] { 'x', 'a' };
        printStream6.println(charArray15);
        printStream6.write((int) 'u');
        java.util.Locale locale19 = java.util.Locale.ENGLISH;
        java.util.Locale locale20 = java.util.Locale.ENGLISH;
        boolean boolean21 = locale20.hasExtensions();
        java.lang.String str22 = locale19.getDisplayVariant(locale20);
        java.util.Locale locale23 = java.util.Locale.UK;
        java.lang.String str24 = locale23.getVariant();
        java.lang.String str25 = locale23.getISO3Language();
        java.util.Locale locale26 = locale23.stripExtensions();
        java.lang.String str27 = locale20.getDisplayCountry(locale26);
        java.lang.String str28 = locale20.getScript();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str31 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D36, 2.3122509176395862d);
        double[][] doubleArray39 = rotation38.getMatrix();
        java.io.PrintStream printStream40 = printStream6.format(locale20, "\ud504\ub791\uc2a4 (UNITED KINGDOM)", (java.lang.Object[]) doubleArray39);
        printStream6.println(1.0d);
        java.util.Locale locale45 = new java.util.Locale("zxz_KO_KR", "UNITED KINGDOM");
        java.util.Set<java.lang.String> strSet46 = locale45.getUnicodeLocaleKeys();
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("ZH_CN");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("kor", (java.lang.Throwable) mathException55);
        java.lang.String str57 = mathException55.getPattern();
        mathException50.addSuppressed((java.lang.Throwable) mathException55);
        java.lang.Throwable[] throwableArray59 = mathException50.getSuppressed();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("fra");
        java.lang.String str63 = mathException62.getPattern();
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("ja_JP", (java.lang.Throwable) mathException62);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("en_US", (java.lang.Object[]) throwableArray59, (java.lang.Throwable) mathException62);
        java.io.PrintStream printStream66 = printStream6.format(locale45, "\u97d3\u56fd\u8a9e\u5927\u97d3\u6c11\u56fd)", (java.lang.Object[]) throwableArray59);
        java.lang.String str67 = locale45.getCountry();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "xa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "xa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[x, a]");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "eng" + "'", str25, "eng");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "XZY" + "'", str31, "XZY");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(printStream40);
        org.junit.Assert.assertEquals(locale45.toString(), "zxz_ko_kr_UNITED KINGDOM");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZXZ" + "'", str57, "ZXZ");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "fra" + "'", str63, "fra");
        org.junit.Assert.assertNotNull(printStream66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "UNITED KINGDOM" + "'", str67, "UNITED KINGDOM");
    }

    @Test
    public void test09266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09266");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) (-1L), (double) (short) 10, (double) 'a');
        double double13 = rotation12.getAngle();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation6.applyInverseTo(rotation12);
        double[][] doubleArray15 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray15, 2.3122509176395862d);
        java.io.PrintStream printStream20 = new java.io.PrintStream("ko-KR");
        printStream20.close();
        java.util.Locale locale22 = java.util.Locale.UK;
        java.lang.String[] strArray24 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream25 = printStream20.format(locale22, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray24);
        printStream25.write(10);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.OutputStream) printStream25);
        byte[] byteArray30 = new byte[] { (byte) -1 };
        printStream25.write(byteArray30);
        printStream25.close();
        printStream25.println((double) (short) 100);
        byte[] byteArray36 = new byte[] { (byte) 1 };
        printStream25.write(byteArray36, 0, 1);
        printStream25.println(true);
        java.util.Locale locale42 = java.util.Locale.PRC;
        java.util.Locale locale43 = java.util.Locale.ROOT;
        java.lang.String str44 = locale42.getDisplayName(locale43);
        java.util.Locale locale47 = new java.util.Locale("ZXZ", "ko_KR");
        java.lang.String str48 = locale42.getDisplayName(locale47);
        java.lang.String str49 = locale42.getLanguage();
        java.util.Locale locale50 = locale42.stripExtensions();
        java.util.Locale locale51 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale51);
        java.lang.String str53 = locale51.toLanguageTag();
        java.lang.String str54 = locale51.getDisplayVariant();
        java.lang.String str55 = locale42.getDisplayCountry(locale51);
        java.util.Locale locale56 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str57 = locale56.getScript();
        java.util.Locale locale58 = java.util.Locale.KOREA;
        java.lang.String str59 = locale56.getDisplayLanguage(locale58);
        java.lang.String str60 = locale56.getDisplayLanguage();
        java.util.Set<java.lang.String> strSet61 = locale56.getUnicodeLocaleAttributes();
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter65 = printWriter63.append('#');
        printWriter63.println((long) (short) 10);
        java.util.Locale locale68 = java.util.Locale.PRC;
        java.lang.String str69 = locale68.getDisplayVariant();
        java.lang.String[] strArray74 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray74, (java.lang.Throwable) mathException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray79 = mathException78.getSuppressed();
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray74, (java.lang.Throwable) mathException78);
        java.lang.Throwable[] throwableArray81 = mathException78.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException82 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray81);
        java.io.PrintWriter printWriter83 = printWriter63.format(locale68, "", (java.lang.Object[]) throwableArray81);
        java.lang.String str84 = locale56.getDisplayCountry(locale68);
        java.lang.String str85 = locale42.getDisplayVariant(locale56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str88 = rotationOrder87.toString();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder87.getA1();
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(rotationOrder87, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        double[][] doubleArray94 = rotation93.getMatrix();
        java.io.PrintStream printStream95 = printStream25.printf(locale42, "XYZ", (java.lang.Object[]) doubleArray94);
        org.apache.commons.math.geometry.Rotation rotation97 = new org.apache.commons.math.geometry.Rotation(doubleArray94, 0.6710053207609463d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException98 = new org.apache.commons.math.geometry.NotARotationMatrixException("it_IT", (java.lang.Object[]) doubleArray94);
        org.apache.commons.math.MathException mathException99 = new org.apache.commons.math.MathException("CHINESISCH_VEREINIGTES K\366NIGREICH", (java.lang.Object[]) doubleArray15, (java.lang.Throwable) notARotationMatrixException98);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2.3122509176395862d + "'", double13 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(printStream25);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1]");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Chinese (China)" + "'", str44, "Chinese (China)");
        org.junit.Assert.assertEquals(locale47.toString(), "zxz_KO_KR");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Chinese (China)" + "'", str48, "Chinese (China)");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "zh" + "'", str49, "zh");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ko-KR" + "'", str53, "ko-KR");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\uc911\uad6d" + "'", str55, "\uc911\uad6d");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str59, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str60, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "\u53f0\u6e7e\u5730\u533a" + "'", str84, "\u53f0\u6e7e\u5730\u533a");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ZXZ" + "'", str88, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(printStream95);
    }

    @Test
    public void test09267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09267");
        java.io.PrintStream printStream2 = new java.io.PrintStream("ko-KR");
        printStream2.close();
        java.util.Locale locale4 = java.util.Locale.UK;
        java.lang.String[] strArray6 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream7 = printStream2.format(locale4, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray6);
        printStream7.write(10);
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.OutputStream) printStream7);
        printWriter10.println(1);
        java.util.Locale locale13 = java.util.Locale.JAPANESE;
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.lang.String str17 = locale15.getVariant();
        java.lang.String str18 = locale13.getDisplayVariant(locale15);
        java.lang.String str19 = locale13.getDisplayCountry();
        java.lang.String[] strArray22 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray22, (java.lang.Throwable) mathException24);
        java.io.PrintWriter printWriter26 = printWriter10.format(locale13, "Englisch", (java.lang.Object[]) strArray22);
        java.util.Locale locale29 = new java.util.Locale("\ud504\ub791\uc2a4", "United Kingdom");
        java.lang.String str30 = locale29.getScript();
        java.lang.String str31 = locale29.getDisplayCountry();
        java.lang.String str32 = locale29.getDisplayLanguage();
        boolean boolean33 = locale29.hasExtensions();
        java.lang.String str34 = locale29.getLanguage();
        boolean boolean35 = locale29.hasExtensions();
        java.lang.String str36 = locale29.toLanguageTag();
        java.io.PrintStream printStream39 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream41 = new java.io.PrintStream("ko-KR");
        printStream41.close();
        printStream41.println((double) '4');
        printStream41.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ0();
        double[][] doubleArray55 = rotation53.getMatrix();
        java.io.PrintStream printStream56 = printStream41.format("zh", (java.lang.Object[]) doubleArray55);
        printStream39.println((java.lang.Object) doubleArray55);
        char[] charArray61 = new char[] { 'a', 'a', '4' };
        printStream39.println(charArray61);
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter((java.io.OutputStream) printStream39, false);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale71 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str72 = locale71.getScript();
        java.util.Locale locale73 = java.util.Locale.KOREA;
        java.lang.String str74 = locale71.getDisplayLanguage(locale73);
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        java.io.PrintWriter printWriter81 = printWriter70.format(locale73, "YZY", (java.lang.Object[]) strArray77);
        printWriter81.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException87);
        java.lang.Object[] objArray89 = mathException87.getArguments();
        java.io.PrintWriter printWriter90 = printWriter81.format("org.apache.commons.math.MathException: ZXZ", objArray89);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("\u97d3\u6587", objArray89);
        java.lang.Throwable[] throwableArray92 = mathException91.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException93 = new org.apache.commons.math.geometry.NotARotationMatrixException("fran\347ais", (java.lang.Object[]) throwableArray92);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("Englisch", (java.lang.Throwable) notARotationMatrixException93);
        java.lang.Throwable[] throwableArray95 = notARotationMatrixException93.getSuppressed();
        java.io.PrintStream printStream96 = printStream39.printf("\uc911\uad6d (DEUTSCH)", (java.lang.Object[]) throwableArray95);
        java.io.PrintWriter printWriter97 = printWriter10.format(locale29, "en", (java.lang.Object[]) throwableArray95);
        org.apache.commons.math.MathException mathException98 = new org.apache.commons.math.MathException("ja-JP", (java.lang.Object[]) throwableArray95);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(printStream7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "ja");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertEquals(locale29.toString(), "\ud504\ub791\uc2a4_UNITED KINGDOM");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UNITED KINGDOM" + "'", str31, "UNITED KINGDOM");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\ud504\ub791\uc2a4" + "'", str32, "\ud504\ub791\uc2a4");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\ud504\ub791\uc2a4" + "'", str34, "\ud504\ub791\uc2a4");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "und" + "'", str36, "und");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(printStream56);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a, a, 4]");
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(locale73);
        org.junit.Assert.assertEquals(locale73.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str74, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNotNull(throwableArray95);
        org.junit.Assert.assertNotNull(printStream96);
        org.junit.Assert.assertNotNull(printWriter97);
    }

    @Test
    public void test09268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09268");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("de");
        printWriter1.print('x');
        java.io.PrintStream printStream5 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream7 = new java.io.PrintStream("ko-KR");
        printStream7.close();
        printStream7.println((double) '4');
        printStream7.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        double[][] doubleArray21 = rotation19.getMatrix();
        java.io.PrintStream printStream22 = printStream7.format("zh", (java.lang.Object[]) doubleArray21);
        printStream5.println((java.lang.Object) doubleArray21);
        char[] charArray27 = new char[] { 'a', 'a', '4' };
        printStream5.println(charArray27);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.OutputStream) printStream5, false);
        printWriter30.write(0);
        printWriter1.println((java.lang.Object) printWriter30);
        printWriter1.println((long) (byte) 100);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, a, 4]");
    }

    @Test
    public void test09269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09269");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation15.getAxis();
        double double23 = rotation15.getQ2();
        double double24 = rotation15.getQ1();
        double double25 = rotation15.getQ3();
        double double26 = rotation15.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 100.0d + "'", double24 == 100.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test09270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09270");
        java.io.PrintStream printStream2 = new java.io.PrintStream("ko-KR");
        printStream2.print((float) 100L);
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.OutputStream) printStream2);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation12.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation12.applyInverseTo(rotation28);
        double[][] doubleArray31 = rotation12.getMatrix();
        java.io.PrintWriter printWriter32 = printWriter5.printf("zh", (java.lang.Object[]) doubleArray31);
        java.lang.String[] strArray34 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray34);
        java.lang.String str36 = mathException35.getPattern();
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray31, (java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException37);
        java.lang.String str41 = mathException40.toString();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZXZ" + "'", str36, "ZXZ");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.apache.commons.math.MathException: ZXZ" + "'", str41, "org.apache.commons.math.MathException: ZXZ");
    }

    @Test
    public void test09271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09271");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation12.getQ3();
        double[][] doubleArray16 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation12.revert();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D20, (double) (byte) 100, vector3D22);
        double double24 = vector3D22.getDelta();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D33, (double) (byte) 100, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D38, (double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D35, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyInverseTo(vector3D35);
        double double44 = vector3D35.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D22, vector3D35);
        double double46 = vector3D35.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D49.subtract((double) 10L, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D60, (double) (byte) 100, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D65, (double) (byte) 100, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D62, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D56.subtract((double) 0, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D72, (double) (byte) 100, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D69, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((-10.358482905538347d), vector3D35, 69.08270017035626d, vector3D69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder79, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder79.getA3();
        double double87 = vector3D86.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D77.add((-121.55625799679436d), vector3D86);
        double double89 = vector3D86.getX();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation12.applyTo(vector3D86);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D90, 0.9994338863035022d);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D90.scalarMultiply(1.5706340977634738d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test09272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09272");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation6.applyTo(vector3D8);
        double double13 = vector3D8.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D8, (double) 10, vector3D15);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double24 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation23.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation23.revert();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation23.getAxis();
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D38, (double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D43, (double) (byte) 100, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D40, (double) 0.0f, vector3D52);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D62, (double) (byte) 100, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation60.applyTo(vector3D62);
        double double67 = vector3D62.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D52.add(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D34, vector3D62);
        double double70 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D16.subtract(2.3452374597334977E7d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D16.scalarMultiply((-10399.999999262058d));
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 52.0d + "'", double24 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.995037190209989d) + "'", double35 == (-0.995037190209989d));
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.995037190209989d) + "'", double70 == (-0.995037190209989d));
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
    }

    @Test
    public void test09273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09273");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream91 = printStream85.append((java.lang.CharSequence) "KOR");
        java.io.PrintStream printStream95 = printStream85.append((java.lang.CharSequence) "Japanisch", 0, 1);
        printStream95.println(true);
        java.io.PrintStream printStream98 = new java.io.PrintStream((java.io.OutputStream) printStream95);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream91);
        org.junit.Assert.assertNotNull(printStream95);
    }

    @Test
    public void test09274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09274");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.println((float) 100L);
        printStream1.print('4');
        java.io.PrintStream printStream91 = printStream1.append((java.lang.CharSequence) "KOR");
        printStream91.close();
        printStream91.println((-1L));
        printStream91.print(1.2673406703797019d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream91);
    }

    @Test
    public void test09275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09275");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D3, (double) (byte) 100, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D10, (double) (byte) 1, vector3D18, (double) (short) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D10.negate();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) (-1), vector3D10);
        double double34 = vector3D33.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D38, (double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D43, (double) (byte) 100, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D45);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray55 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D57, (double) (byte) 100, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D62, (double) (byte) 100, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D59, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation54.applyInverseTo(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D67, vector3D68);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D78, (double) (byte) 100, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation76.applyTo(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D78.negate();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.zero;
        double double86 = vector3D85.getY();
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((double) (-1L), vector3D40, (double) ' ', vector3D67, (double) (-1.0f), vector3D83, (double) 10.0f, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D33.add(1.1054408345797775d, vector3D67);
        double double89 = vector3D67.getDelta();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D67.orthogonal();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null norm");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-3.141592653589793d) + "'", double34 == (-3.141592653589793d));
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test09276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09276");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream1.println((long) 10);
        java.io.PrintStream printStream10 = printStream1.append('x');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.OutputStream) printStream10, false);
        printStream10.close();
        printStream10.println((int) 'x');
        java.util.Locale locale16 = null;
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double24 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation23.applyTo(rotation30);
        double double33 = rotation23.getQ0();
        double double34 = rotation23.getQ0();
        double[][] doubleArray35 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double42 = rotation41.getQ0();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation41.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation23.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double65 = rotation64.getQ0();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation57.applyTo(rotation64);
        double double67 = rotation57.getQ0();
        double double68 = rotation57.getQ0();
        double[][] doubleArray69 = rotation57.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double76 = rotation75.getQ0();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double83 = rotation82.getQ0();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation75.applyTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation57.applyInverseTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation41.applyInverseTo(rotation75);
        double[][] doubleArray87 = rotation75.getMatrix();
        java.io.PrintStream printStream88 = printStream10.format(locale16, "zxz_KO_KR", (java.lang.Object[]) doubleArray87);
        printStream88.print((int) (short) 0);
        printStream88.print('a');
        printStream88.flush();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream10);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 52.0d + "'", double24 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 52.0d + "'", double42 == 52.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 52.0d + "'", double58 == 52.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 52.0d + "'", double65 == 52.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 52.0d + "'", double67 == 52.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 52.0d + "'", double68 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 52.0d + "'", double76 == 52.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 52.0d + "'", double83 == 52.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(printStream88);
    }

    @Test
    public void test09277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09277");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.println((float) 100L);
        printStream1.print('4');
        java.io.PrintStream printStream91 = printStream1.append((java.lang.CharSequence) "KOR");
        printStream91.close();
        printStream91.print(false);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream91);
    }

    @Test
    public void test09278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09278");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(3.253907704263328E8d, (-68.77819630729812d), 0.7723533772244097d, 1.884114997657917d, true);
    }

    @Test
    public void test09279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09279");
        org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation8.getAxis();
        double[][] doubleArray10 = rotation8.getMatrix();
        double double11 = rotation8.getQ1();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation2.applyInverseTo(rotation8);
        double[][] doubleArray13 = rotation2.getMatrix();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("\uc911\uad6d", (java.lang.Object[]) doubleArray13);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ3();
        double[][] doubleArray23 = rotation21.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) doubleArray23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException24);
        java.lang.Throwable[] throwableArray26 = mathException25.getSuppressed();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException25);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", (java.lang.Object[]) doubleArray13, (java.lang.Throwable) mathException27);
        java.lang.String[] strArray31 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray31, (java.lang.Throwable) mathException33);
        java.lang.String str35 = mathException34.getPattern();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("YZY", (java.lang.Throwable) mathException34);
        java.lang.Throwable[] throwableArray37 = mathException36.getSuppressed();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException36);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale44 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str45 = locale44.getScript();
        java.util.Locale locale46 = java.util.Locale.KOREA;
        java.lang.String str47 = locale44.getDisplayLanguage(locale46);
        java.lang.String[] strArray50 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray50, (java.lang.Throwable) mathException52);
        java.io.PrintWriter printWriter54 = printWriter43.format(locale46, "YZY", (java.lang.Object[]) strArray50);
        printWriter54.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException60);
        java.lang.Object[] objArray62 = mathException60.getArguments();
        java.io.PrintWriter printWriter63 = printWriter54.format("org.apache.commons.math.MathException: ZXZ", objArray62);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("\u97d3\u6587", objArray62);
        java.lang.Throwable[] throwableArray65 = mathException64.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException66 = new org.apache.commons.math.geometry.NotARotationMatrixException("fran\347ais", (java.lang.Object[]) throwableArray65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("Englisch", (java.lang.Throwable) notARotationMatrixException66);
        mathException38.addSuppressed((java.lang.Throwable) notARotationMatrixException66);
        mathException27.addSuppressed((java.lang.Throwable) mathException38);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 100.0d + "'", double11 == 100.0d);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ZXZ" + "'", str35, "ZXZ");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str47, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(throwableArray65);
    }

    @Test
    public void test09280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09280");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.OutputStream) printStream16, false);
        printWriter18.print((float) 10);
        java.lang.Object obj21 = null;
        printWriter18.println(obj21);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
    }

    @Test
    public void test09281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09281");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream91 = printStream85.append((java.lang.CharSequence) "KOR");
        java.io.PrintStream printStream95 = printStream85.append((java.lang.CharSequence) "Japanisch", 0, 1);
        java.io.PrintWriter printWriter97 = new java.io.PrintWriter((java.io.OutputStream) printStream85, true);
        printStream85.print(false);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream91);
        org.junit.Assert.assertNotNull(printStream95);
    }

    @Test
    public void test09282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09282");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double34 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation33.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation27.applyInverseTo(rotation33);
        double[][] doubleArray45 = rotation27.getMatrix();
        java.io.PrintStream printStream46 = printStream6.printf("zh", (java.lang.Object[]) doubleArray45);
        printStream46.print((long) 1);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter((java.io.OutputStream) printStream46, true);
        printWriter50.println(0.0d);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
    }

    @Test
    public void test09283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09283");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation27.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double50 = rotation49.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation42.applyTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation36.applyInverseTo(rotation42);
        double[][] doubleArray54 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation5.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation5.getAxis();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 52.0d + "'", double43 == 52.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(vector3D56);
    }

    @Test
    public void test09284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09284");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.995037190209989d, (double) 0.0f, 0.995037190209989d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D20, (double) (byte) 100, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation18.applyTo(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation18.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 1.5905084122975552d, (-12804.0d));
        double double30 = org.apache.commons.math.geometry.Vector3D.angle(vector3D25, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 10, vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str34 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D35.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D36.negate();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D37.negate();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.add((double) 'a', vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((-0.014627082323922274d), vector3D10, 11983.257028037076d, vector3D31);
        double double41 = vector3D40.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.4787032876674264d + "'", double30 == 1.4787032876674264d);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ZXZ" + "'", str34, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.0996686524911613d) + "'", double41 == (-0.0996686524911613d));
    }

    @Test
    public void test09285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09285");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((double) (byte) 100);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter10 = printWriter8.append('#');
        java.lang.Object[] objArray12 = null;
        java.io.PrintWriter printWriter13 = printWriter10.format("fran\347ais", objArray12);
        java.util.Locale locale14 = null;
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        java.io.PrintWriter printWriter18 = printWriter10.format(locale14, "zxz", (java.lang.Object[]) throwableArray17);
        char[] charArray22 = new char[] { 'a', ' ', '#' };
        printWriter18.println(charArray22);
        java.util.Locale locale24 = java.util.Locale.FRENCH;
        java.util.Locale locale25 = java.util.Locale.FRENCH;
        java.util.Locale locale26 = java.util.Locale.TAIWAN;
        java.lang.String str27 = locale25.getDisplayScript(locale26);
        java.lang.String str28 = locale24.getDisplayLanguage(locale25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray40 = rotation39.getMatrix();
        java.io.PrintWriter printWriter41 = printWriter18.printf(locale24, "english", (java.lang.Object[]) doubleArray40);
        printStream1.println((java.lang.Object) printWriter41);
        printStream1.println((-1.0f));
        java.io.PrintStream printStream46 = new java.io.PrintStream("ko-KR");
        printStream46.close();
        java.util.Locale locale48 = java.util.Locale.UK;
        java.lang.String[] strArray50 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream51 = printStream46.format(locale48, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray50);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter55 = printWriter53.append('#');
        java.lang.Object[] objArray57 = null;
        java.io.PrintWriter printWriter58 = printWriter55.format("fran\347ais", objArray57);
        java.util.Locale locale59 = null;
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray62 = mathException61.getSuppressed();
        java.io.PrintWriter printWriter63 = printWriter55.format(locale59, "zxz", (java.lang.Object[]) throwableArray62);
        char[] charArray67 = new char[] { 'a', ' ', '#' };
        printWriter63.println(charArray67);
        printStream46.println(charArray67);
        java.io.PrintStream printStream71 = new java.io.PrintStream("ko-KR");
        printStream71.close();
        java.util.Locale locale73 = java.util.Locale.UK;
        java.lang.String[] strArray75 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream76 = printStream71.format(locale73, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray75);
        printStream76.write(10);
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.OutputStream) printStream76);
        byte[] byteArray81 = new byte[] { (byte) -1 };
        printStream76.write(byteArray81);
        printStream46.write(byteArray81);
        java.lang.String[] strArray87 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray87, (java.lang.Throwable) mathException89);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray92 = mathException91.getSuppressed();
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray87, (java.lang.Throwable) mathException91);
        java.lang.Throwable[] throwableArray94 = mathException91.getSuppressed();
        java.io.PrintStream printStream95 = printStream46.format("", (java.lang.Object[]) throwableArray94);
        printStream1.println((java.lang.Object) printStream46);
        java.io.PrintWriter printWriter98 = new java.io.PrintWriter((java.io.OutputStream) printStream1, false);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "fr");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "fr");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "fran\347ais" + "'", str28, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(printStream51);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale73);
        org.junit.Assert.assertEquals(locale73.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printStream76);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[-1]");
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertNotNull(printStream95);
    }

    @Test
    public void test09286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09286");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        printStream16.write(10);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("ja");
        printWriter20.print(' ');
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.Writer) printWriter20);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter23, true);
        java.io.PrintStream printStream27 = new java.io.PrintStream("ko-KR");
        printStream27.println("fr");
        printStream27.println("deu");
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale34 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str35 = locale34.getScript();
        java.util.Locale locale36 = java.util.Locale.KOREA;
        java.lang.String str37 = locale34.getDisplayLanguage(locale36);
        java.lang.String[] strArray40 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray40, (java.lang.Throwable) mathException42);
        java.io.PrintWriter printWriter44 = printWriter33.format(locale36, "YZY", (java.lang.Object[]) strArray40);
        printWriter44.println(0.0d);
        printWriter44.print((long) (byte) 10);
        printWriter44.println();
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter53 = printWriter51.append('#');
        java.lang.Object[] objArray55 = null;
        java.io.PrintWriter printWriter56 = printWriter53.format("fran\347ais", objArray55);
        java.util.Locale locale57 = null;
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray60 = mathException59.getSuppressed();
        java.io.PrintWriter printWriter61 = printWriter53.format(locale57, "zxz", (java.lang.Object[]) throwableArray60);
        char[] charArray65 = new char[] { 'a', ' ', '#' };
        printWriter61.println(charArray65);
        printWriter44.write(charArray65);
        printStream27.println(charArray65);
        printWriter25.write(charArray65);
        java.io.PrintStream printStream71 = new java.io.PrintStream("ko-KR");
        printStream71.close();
        java.util.Locale locale73 = java.util.Locale.UK;
        java.lang.String[] strArray75 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream76 = printStream71.format(locale73, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray75);
        printStream76.write(10);
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.OutputStream) printStream76);
        printStream76.print((int) (short) 1);
        java.io.PrintStream printStream83 = new java.io.PrintStream("ko-KR");
        printStream83.println("fr");
        printStream76.print((java.lang.Object) "fr");
        char[] charArray90 = new char[] { '#', '4', 'a' };
        printStream76.print(charArray90);
        printWriter25.write(charArray90);
        printStream16.println(charArray90);
        printStream16.close();
        printStream16.println();
        java.io.PrintStream printStream97 = printStream16.append((java.lang.CharSequence) "chinesisch");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str37, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale73);
        org.junit.Assert.assertEquals(locale73.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printStream76);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "#4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "#4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[#, 4, a]");
        org.junit.Assert.assertNotNull(printStream97);
    }

    @Test
    public void test09287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09287");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        printWriter3.print("zxz");
        java.io.PrintWriter printWriter12 = printWriter3.append((java.lang.CharSequence) "org.apache.commons.math.MathException: ZXZ", 0, 1);
        java.io.PrintWriter printWriter14 = printWriter12.append('a');
        printWriter14.close();
        printWriter14.write("coreano", (int) '4', (int) '4');
        printWriter14.write("Franz\366sisch");
        printWriter14.println("\ud55c\uad6d\uc5b4\ub300\ud55c\ubbfc\uad6d)");
        printWriter14.print(true);
        java.util.Locale locale26 = java.util.Locale.FRENCH;
        java.util.Locale locale27 = locale26.stripExtensions();
        java.util.Locale locale29 = java.util.Locale.forLanguageTag("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)");
        java.util.Locale locale30 = java.util.Locale.UK;
        java.lang.String str31 = locale30.getVariant();
        java.lang.String str32 = locale30.getDisplayCountry();
        java.util.Locale locale33 = locale30.stripExtensions();
        java.lang.String str34 = locale29.getDisplayCountry(locale33);
        java.lang.String str35 = locale27.getDisplayName(locale33);
        java.lang.String str36 = locale27.getDisplayName();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        double[][] doubleArray44 = rotation43.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException45 = new org.apache.commons.math.geometry.NotARotationMatrixException("en_CA", (java.lang.Object[]) doubleArray44);
        java.io.PrintWriter printWriter46 = printWriter14.format(locale27, "Canad\340", (java.lang.Object[]) doubleArray44);
        printWriter46.println("org.apache.commons.math.MathException: xzy");
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "fr");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\uc601\uad6d" + "'", str32, "\uc601\uad6d");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "French" + "'", str35, "French");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\ud504\ub791\uc2a4\uc5b4" + "'", str36, "\ud504\ub791\uc2a4\uc5b4");
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(printWriter46);
    }

    @Test
    public void test09288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09288");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray20 = mathException18.getArguments();
        java.io.PrintWriter printWriter21 = printWriter12.format("org.apache.commons.math.MathException: ZXZ", objArray20);
        java.lang.Object[] objArray23 = null;
        java.io.PrintWriter printWriter24 = printWriter21.format("zho", objArray23);
        printWriter21.println((long) (byte) 0);
        java.io.PrintStream printStream29 = new java.io.PrintStream("ko-KR");
        printStream29.close();
        java.util.Locale locale31 = java.util.Locale.UK;
        java.lang.String[] strArray33 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream34 = printStream29.format(locale31, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray33);
        printStream34.write(10);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.OutputStream) printStream34);
        printStream34.print((int) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation46.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double62 = rotation61.getQ0();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double69 = rotation68.getQ0();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation61.applyTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation61.revert();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation55.applyInverseTo(rotation61);
        double[][] doubleArray73 = rotation55.getMatrix();
        java.io.PrintStream printStream74 = printStream34.printf("zh", (java.lang.Object[]) doubleArray73);
        java.io.PrintWriter printWriter75 = printWriter21.printf("\u97d3\u6587)", (java.lang.Object[]) doubleArray73);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        printWriter21.println(2.3452374597334977E7d);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter82 = printWriter21.append((java.lang.CharSequence) "\u97e9\u56fd", (int) (short) 100, (int) 'x');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 120");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(printStream34);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 52.0d + "'", double69 == 52.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(printStream74);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test09289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09289");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray11 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation10.getAxis();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray19 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation18.applyInverseTo(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation18.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation18.revert();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation18.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D12.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((-0.6217166533367139d), (-34194.83745702809d), 0.0d);
        double double41 = vector3D40.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((-1.538368E7d), vector3D12, (-0.9858986616118258d), vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 34194.837462679985d + "'", double41 == 34194.837462679985d);
    }

    @Test
    public void test09290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09290");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("ja");
        java.util.Locale.Category category2 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale3 = java.util.Locale.ROOT;
        java.lang.String str4 = locale3.getDisplayLanguage();
        java.util.Locale.setDefault(category2, locale3);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.util.Locale.LanguageRange[] languageRangeArray21 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList22 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList22, languageRangeArray21);
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.util.Locale locale25 = java.util.Locale.GERMAN;
        java.util.Locale locale26 = java.util.Locale.CANADA;
        java.util.Locale locale27 = java.util.Locale.GERMAN;
        java.util.Locale locale28 = java.util.Locale.GERMANY;
        java.util.Locale locale29 = java.util.Locale.ROOT;
        java.lang.String str30 = locale29.getDisplayLanguage();
        java.util.Locale locale31 = java.util.Locale.FRENCH;
        java.util.Locale locale32 = java.util.Locale.ROOT;
        java.util.Locale locale33 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray34 = new java.util.Locale[] { locale24, locale25, locale26, locale27, locale28, locale29, locale31, locale32, locale33 };
        java.util.ArrayList<java.util.Locale> localeList35 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList35, localeArray34);
        java.util.Locale.FilteringMode filteringMode37 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList38 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList35, filteringMode37);
        java.lang.String[] strArray42 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.lang.String str45 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.lang.String>) strList43);
        java.util.Locale.LanguageRange[] languageRangeArray46 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList47 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList47, languageRangeArray46);
        java.util.Locale locale49 = java.util.Locale.ROOT;
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = java.util.Locale.CANADA;
        java.util.Locale locale52 = java.util.Locale.GERMAN;
        java.util.Locale locale53 = java.util.Locale.GERMANY;
        java.util.Locale locale54 = java.util.Locale.ROOT;
        java.lang.String str55 = locale54.getDisplayLanguage();
        java.util.Locale locale56 = java.util.Locale.FRENCH;
        java.util.Locale locale57 = java.util.Locale.ROOT;
        java.util.Locale locale58 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale49, locale50, locale51, locale52, locale53, locale54, locale56, locale57, locale58 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        java.util.Locale.FilteringMode filteringMode62 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList63 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList47, (java.util.Collection<java.util.Locale>) localeList60, filteringMode62);
        java.util.Locale.FilteringMode filteringMode64 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList65 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList60, filteringMode64);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D73, (double) (byte) 100, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation71.applyTo(vector3D73);
        java.lang.Object[] objArray78 = new java.lang.Object[] { vector3D17, str20, languageRangeList22, rotation71 };
        java.lang.String[] strArray81 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray86 = mathException85.getSuppressed();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray78, (java.lang.Throwable) mathException87);
        java.lang.Object[] objArray89 = mathException87.getArguments();
        java.io.PrintWriter printWriter90 = printWriter1.format(locale3, "ZXZ", objArray89);
        printWriter90.print(true);
        printWriter90.write("und");
        printWriter90.println((long) (byte) 10);
        printWriter90.print(false);
        org.junit.Assert.assertTrue("'" + category2 + "' != '" + java.util.Locale.Category.FORMAT + "'", category2.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(languageRangeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "de");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "de");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "fr");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + filteringMode37 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode37.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(languageRangeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "de");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "de");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "fr");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + filteringMode62 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode62.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList63);
        org.junit.Assert.assertTrue("'" + filteringMode64 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode64.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList65);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test09291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09291");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.minusI;
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double9 = rotation8.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyTo(rotation15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation8.applyInverseTo(vector3D18);
        double double20 = vector3D18.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str22 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D18.add(vector3D23);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ1();
        double double33 = rotation31.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D35, (double) (byte) 100, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract((double) 10L, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation31.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D44.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D25.add(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D49.subtract((double) 10L, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D60, (double) (byte) 100, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D65, (double) (byte) 100, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D62, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D56.subtract((double) 0, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D73, (double) (byte) 100, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D78, (double) (byte) 100, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D75, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), vector3D44, (double) (byte) 100, vector3D69, (double) 100L, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D1, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((-12.469000826984491d), 52.0d);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D84, vector3D87);
        org.apache.commons.math.geometry.RotationOrder rotationOrder90 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder90.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D91.scalarMultiply((-34365.38633275781d));
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D(0.21309643366023423d, vector3D87, (double) (short) 100, vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D94.orthogonal();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXZ" + "'", str22, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 100.0d + "'", double32 == 100.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(rotationOrder90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test09292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09292");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter4 = printWriter2.append('#');
        java.util.Locale locale5 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation12.applyTo(rotation19);
        double double22 = rotation19.getQ3();
        double[][] doubleArray23 = rotation19.getMatrix();
        java.io.PrintWriter printWriter24 = printWriter4.printf(locale5, "XZY", (java.lang.Object[]) doubleArray23);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException25 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray23);
        org.junit.Assert.assertNotNull(printWriter4);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test09293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09293");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double34 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation33.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation27.applyInverseTo(rotation33);
        double[][] doubleArray45 = rotation27.getMatrix();
        java.io.PrintStream printStream46 = printStream6.printf("zh", (java.lang.Object[]) doubleArray45);
        printStream46.print((long) 1);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter((java.io.OutputStream) printStream46, true);
        printWriter50.print('a');
        java.io.PrintWriter printWriter54 = printWriter50.append('u');
        printWriter50.println(true);
        printWriter50.print(0.09950371902099892d);
        // The following exception was thrown during execution in test generation
        try {
            printWriter50.write("\uc774\ud0c8\ub9ac\uc544", (int) '4', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 152");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test09294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09294");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        printWriter89.print((int) (short) 100);
        printWriter89.print(0.4028887144651276d);
        java.io.PrintWriter printWriter95 = new java.io.PrintWriter((java.io.Writer) printWriter89, true);
        printWriter89.print("org.apache.commons.math.geometry.notarotationmatrixexception: cor\351en_ORG.APACHE.COMMONS.MATH.MATHEXCEPTION: YZY");
        printWriter89.print((-0.5849881914531216d));
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09295");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.close();
        java.util.Locale locale14 = java.util.Locale.FRANCE;
        printWriter12.println((java.lang.Object) locale14);
        printWriter12.println();
        printWriter12.flush();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder18.getA3();
        double double27 = vector3D26.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D43, (double) (byte) 100, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D54, (double) (byte) 100, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D38, (double) (byte) 1, vector3D46, (double) (short) 100, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, vector3D46, (double) 0L, vector3D63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D66.orthogonal();
        double double68 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D63, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D63.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D63.negate();
        double double71 = vector3D63.getDelta();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D63);
        printWriter12.print((java.lang.Object) vector3D63);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter((java.io.Writer) printWriter12);
        printWriter74.println((int) '4');
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr_FR");
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXZ" + "'", str19, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.5403023058681398d + "'", double68 == 0.5403023058681398d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
    }

    @Test
    public void test09296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09296");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation12.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation27.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation27.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation21.applyInverseTo(rotation27);
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation5.applyInverseTo(rotation38);
        double[][] doubleArray41 = rotation38.getMatrix();
        double double42 = rotation38.getAngle();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((-0.2868032122551722d), (-0.930039504416137d), 0.0d, 0.9649660284921133d, false);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation38.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation48.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str52 = rotationOrder51.toString();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder51.getA3();
        java.lang.String str54 = rotationOrder51.toString();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder51.getA2();
        java.lang.String str57 = rotationOrder51.toString();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation48.applyTo(vector3D58);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 128040.0d + "'", double39 == 128040.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ZXZ" + "'", str52, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ZXZ" + "'", str54, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZXZ" + "'", str57, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
    }

    @Test
    public void test09297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09297");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.print((float) 100L);
        printStream1.print(1.0f);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09298");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation20.revert();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation20.applyTo(vector3D25);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.revert();
        double double28 = rotation20.getQ2();
        double[][] doubleArray29 = rotation20.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str31 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, 0.0d, 52.0d, 0.9649660284921133d);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, 110.14009524181563d, (-5.3907441696578843E-11d), 74.59637898875364d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder30.getA2();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray43 = rotation20.getAngles(rotationOrder30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ZXZ" + "'", str31, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
    }

    @Test
    public void test09299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09299");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        char[] charArray23 = new char[] { 'a', 'a', '4' };
        printStream1.println(charArray23);
        printStream1.print((long) 'x');
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("yzy");
        printWriter29.write("zh-CN", (int) (short) 10, (int) (short) -1);
        java.io.PrintWriter printWriter35 = printWriter29.append((java.lang.CharSequence) "\u6cd5\u6587");
        printWriter29.print("Deutschland");
        printWriter29.println((long) 'u');
        printWriter27.println((java.lang.Object) 'u');
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, a, 4]");
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test09300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09300");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        double double21 = rotation20.getQ1();
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter25 = printWriter23.append('#');
        java.lang.Object[] objArray27 = null;
        java.io.PrintWriter printWriter28 = printWriter25.format("fran\347ais", objArray27);
        java.util.Locale locale29 = null;
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray32 = mathException31.getSuppressed();
        java.io.PrintWriter printWriter33 = printWriter25.format(locale29, "zxz", (java.lang.Object[]) throwableArray32);
        char[] charArray37 = new char[] { 'a', ' ', '#' };
        printWriter33.println(charArray37);
        java.util.Locale locale39 = java.util.Locale.FRENCH;
        java.util.Locale locale40 = java.util.Locale.FRENCH;
        java.util.Locale locale41 = java.util.Locale.TAIWAN;
        java.lang.String str42 = locale40.getDisplayScript(locale41);
        java.lang.String str43 = locale39.getDisplayLanguage(locale40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray55 = rotation54.getMatrix();
        java.io.PrintWriter printWriter56 = printWriter33.printf(locale39, "english", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(doubleArray55, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(doubleArray55, (double) (byte) 0);
        double double61 = rotation60.getQ2();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation20.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double69 = rotation68.getQ1();
        double double70 = rotation68.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D72, (double) (byte) 100, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D72.subtract((double) 10L, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation68.applyInverseTo(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.negate();
        double double83 = vector3D81.getX();
        double double84 = vector3D81.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation60.applyInverseTo(vector3D81);
        double double86 = rotation60.getQ3();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "fr");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "fr");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "fran\347ais" + "'", str43, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 100.0d + "'", double69 == 100.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-121.55625799679436d) + "'", double83 == (-121.55625799679436d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 11770.079614583028d + "'", double84 == 11770.079614583028d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }

    @Test
    public void test09301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09301");
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str4 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA3();
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        double double12 = vector3D8.getY();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract(vector3D8);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D22, (double) (byte) 100, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation20.applyTo(vector3D22);
        double double27 = vector3D22.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D13.add((double) 0L, vector3D22);
        double double29 = vector3D22.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation36.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation36.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation51.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double59 = rotation58.getQ1();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation51.applyTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        double double74 = vector3D69.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D69, (double) 10, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation51.applyTo(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D76.negate();
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D22, 0.0d, vector3D79);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D79, (double) 'x');
        org.apache.commons.math.geometry.Rotation rotation83 = rotation82.revert();
        double[][] doubleArray84 = rotation82.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException85 = new org.apache.commons.math.geometry.NotARotationMatrixException("Chinese (Taiwan)", (java.lang.Object[]) doubleArray84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(doubleArray84, 0.07621202839203368d);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("Italian (Italy)", (java.lang.Object[]) doubleArray84);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException88);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXZ" + "'", str4, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 100.0d + "'", double59 == 100.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test09302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09302");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, 1.0186212225436773d, (-3.253905889552808E7d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.normalize();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double15 = rotation14.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyTo(rotation21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation14.applyInverseTo(vector3D24);
        double double26 = vector3D24.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D29.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D24.add(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ1();
        double double39 = rotation37.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D41, (double) (byte) 100, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.subtract((double) 10L, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation37.applyInverseTo(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D50.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D31.add(vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D55.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract((double) (-1), vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D55.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str60 = rotationOrder59.toString();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder59.getA1();
        java.lang.String str62 = rotationOrder59.toString();
        java.lang.String str63 = rotationOrder59.toString();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, (double) (short) 0);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((-1.581752731678261d), vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(2.3122509176395862d, vector3D77, (double) 10.0f, vector3D80);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D58, vector3D73, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D(0.5666764953185269d, vector3D4, (-0.2453225835401913d), vector3D58);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D4, 560586.5993173601d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder87.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder87.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder87.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder87.getA2();
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(rotationOrder87, 0.4028887144651276d, 0.09966865249116202d, (-1.63942416E8d));
        java.lang.String str96 = rotationOrder87.toString();
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotationOrder87.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D98 = rotation86.applyTo(vector3D97);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXZ" + "'", str28, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 100.0d + "'", double38 == 100.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 52.0d + "'", double39 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ZXZ" + "'", str60, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ZXZ" + "'", str62, "ZXZ");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ZXZ" + "'", str63, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "ZYZ" + "'", str96, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test09303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09303");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation5.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double23 = rotation22.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double30 = rotation29.getQ0();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation22.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation37.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation37.revert();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation31.applyInverseTo(rotation37);
        double[][] doubleArray49 = rotation31.getMatrix();
        double double50 = rotation31.getQ3();
        double double51 = rotation31.getAngle();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation5.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str54 = rotationOrder53.toString();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation52.applyTo(rotation59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str62 = rotationOrder61.toString();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D63.scalarMultiply((double) 10);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D66.negate();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D75, (double) (byte) 100, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation73.applyTo(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D75.subtract(vector3D82);
        double double84 = vector3D83.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D67, vector3D83);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation59.applyTo(rotation85);
        double[][] doubleArray87 = rotation59.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(doubleArray87, (-0.4868480326421398d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 52.0d + "'", double23 == 52.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1040.0d + "'", double50 == 1040.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ZXZ" + "'", str54, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ZXZ" + "'", str62, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 3.141592653589793d + "'", double84 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(doubleArray87);
    }

    @Test
    public void test09304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09304");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.3122509176395862d, (-0.7034960049180254d), 0.790491622490214d, (-0.0307196161636463d), false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test09305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09305");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ1();
        double double8 = rotation6.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation6.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray26 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D28, (double) (byte) 100, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D33, (double) (byte) 100, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation25.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation25.getAxis();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation25.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation40.revert();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double48 = rotation47.getQ1();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D58, (double) (byte) 100, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation56.applyTo(vector3D58);
        double double63 = vector3D58.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D58, (double) 10, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation40.applyTo(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D19, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D68.negate();
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder73.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.add(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D68.add(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D78.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D(1.5712539656805302d, vector3D78);
        double double81 = vector3D80.getAlpha();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 100.0d + "'", double7 == 100.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 100.0d + "'", double48 == 100.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2.7608632761797742d + "'", double81 == 2.7608632761797742d);
    }

    @Test
    public void test09306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09306");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        double double23 = rotation21.getQ0();
        double double24 = rotation21.getAngle();
        double double25 = rotation21.getQ0();
        double double26 = rotation21.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 102.8131477408346d + "'", double23 == 102.8131477408346d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 102.8131477408346d + "'", double25 == 102.8131477408346d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 24.291555113709315d + "'", double26 == 24.291555113709315d);
    }

    @Test
    public void test09307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09307");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation5.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation5.applyInverseTo(vector3D18);
        double double21 = rotation5.getQ1();
        double double22 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double double45 = rotation43.getAngle();
        double double46 = rotation43.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D48, (double) (byte) 100, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D48.subtract((double) 10L, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D59, (double) (byte) 100, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D64, (double) (byte) 100, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D61, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D55.subtract((double) 0, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation43.applyTo(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation5.applyInverseTo(rotation43);
        double double72 = rotation43.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA2();
        java.lang.String str75 = rotationOrder73.toString();
        java.lang.String str76 = rotationOrder73.toString();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation43.applyInverseTo(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation43.getAxis();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2.3122509176395862d + "'", double45 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.4028887144651276d + "'", double46 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.3331734424927659d + "'", double72 == 0.3331734424927659d);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "XZY" + "'", str75, "XZY");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "XZY" + "'", str76, "XZY");
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test09308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09308");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D3, (double) (byte) 100, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D3.subtract((double) 10L, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D19, (double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D10.subtract((double) 0, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D26);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation37.applyTo(rotation44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation37.applyInverseTo(vector3D47);
        double double49 = vector3D47.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str51 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D52.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D47.add(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double61 = rotation60.getQ1();
        double double62 = rotation60.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D64, (double) (byte) 100, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.subtract((double) 10L, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation60.applyInverseTo(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D54.add(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D30.subtract((double) '#', vector3D73);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D1, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D1.orthogonal();
        double double79 = vector3D1.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZXZ" + "'", str51, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 100.0d + "'", double61 == 100.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
    }

    @Test
    public void test09309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09309");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation14.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation37.applyTo(rotation44);
        double double47 = rotation44.getQ3();
        double[][] doubleArray48 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation31.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double56 = rotation55.getQ0();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ0();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation55.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation55.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation71 = rotation65.applyTo(rotation70);
        double double72 = rotation70.getAngle();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation44.applyInverseTo(rotation70);
        double double74 = rotation70.getQ3();
        double double75 = rotation70.getQ1();
        double double76 = rotation70.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 52.0d + "'", double56 == 52.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2.3122509176395862d + "'", double72 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.3331734424927659d + "'", double74 == 0.3331734424927659d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.8519466901357562d) + "'", double75 == (-0.8519466901357562d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.8519466901357562d) + "'", double76 == (-0.8519466901357562d));
    }

    @Test
    public void test09310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09310");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder7.getA1();
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D6.add(vector3D12);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D14, (-0.02937648959434208d));
        double double17 = rotation16.getQ1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D25, (double) (byte) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation23.applyTo(vector3D25);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation50.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation50.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation44.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation61.getAxis();
        double double63 = vector3D62.getAlpha();
        double double64 = vector3D62.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation23.applyInverseTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation16.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double73 = rotation72.getQ0();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double80 = rotation79.getQ0();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation72.applyTo(rotation79);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation72.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder83, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation88 = rotation82.applyTo(rotation87);
        double double89 = rotation87.getAngle();
        double double90 = rotation87.getQ0();
        double double91 = rotation87.getQ0();
        double double92 = rotation87.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation87.getAxis();
        org.apache.commons.math.geometry.Rotation rotation94 = rotation16.applyInverseTo(rotation87);
        double double95 = rotation87.getQ3();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 7.316495385752939E-4d + "'", double17 == 7.316495385752939E-4d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 52.0d + "'", double43 == 52.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 52.0d + "'", double58 == 52.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.09966865249116202d + "'", double64 == 0.09966865249116202d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 52.0d + "'", double73 == 52.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 52.0d + "'", double80 == 52.0d);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2.3122509176395862d + "'", double89 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.4028887144651276d + "'", double90 == 0.4028887144651276d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.4028887144651276d + "'", double91 == 0.4028887144651276d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2.3122509176395862d + "'", double92 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.3331734424927659d + "'", double95 == 0.3331734424927659d);
    }

    @Test
    public void test09311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09311");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.print((float) 100L);
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation11.applyInverseTo(rotation27);
        double[][] doubleArray30 = rotation11.getMatrix();
        java.io.PrintWriter printWriter31 = printWriter4.printf("zh", (java.lang.Object[]) doubleArray30);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter35 = printWriter33.append('#');
        java.lang.Object[] objArray37 = null;
        java.io.PrintWriter printWriter38 = printWriter35.format("fran\347ais", objArray37);
        printWriter35.print("zxz");
        java.io.PrintStream printStream42 = new java.io.PrintStream("ko-KR");
        printStream42.close();
        java.util.Locale locale44 = java.util.Locale.UK;
        java.lang.String[] strArray46 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream47 = printStream42.format(locale44, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray46);
        printStream47.write(10);
        printStream47.write((int) (short) 0);
        printStream47.write((int) (short) 10);
        char[] charArray56 = new char[] { 'x', 'a' };
        printStream47.println(charArray56);
        printWriter35.write(charArray56);
        printWriter31.print(charArray56);
        printWriter31.close();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(printStream47);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "xa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "xa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[x, a]");
    }

    @Test
    public void test09312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09312");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.println("fr");
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray13 = mathException12.getSuppressed();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException12);
        java.lang.Throwable[] throwableArray15 = mathException12.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray15);
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException16.getSuppressed();
        java.io.PrintStream printStream18 = printStream1.format("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) throwableArray17);
        java.io.PrintStream printStream19 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        java.util.Locale locale20 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale20);
        java.util.Locale locale22 = java.util.Locale.FRENCH;
        java.util.Locale locale23 = java.util.Locale.TAIWAN;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.lang.String str25 = locale20.getDisplayLanguage(locale23);
        java.util.Locale locale26 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale26);
        java.lang.String str28 = locale26.toLanguageTag();
        java.lang.String str29 = locale20.getDisplayVariant(locale26);
        java.util.Locale locale31 = java.util.Locale.forLanguageTag("fra");
        java.lang.String str32 = locale26.getDisplayCountry(locale31);
        java.util.Locale locale33 = java.util.Locale.UK;
        java.lang.String str34 = locale33.getVariant();
        java.lang.String str35 = locale33.getISO3Language();
        java.util.Locale locale36 = locale33.stripExtensions();
        java.lang.String str37 = locale26.getDisplayName(locale36);
        java.lang.String str38 = locale36.toLanguageTag();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((-1.6394241590049627E8d), 0.1035361863295576d, 0.0d, (-10400.0d), false);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D55, (double) (byte) 100, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation53.applyTo(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) 'x', vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) 1, vector3D55);
        double double62 = vector3D55.getY();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation45.applyTo(vector3D55);
        double[][] doubleArray64 = rotation45.getMatrix();
        java.io.PrintStream printStream65 = printStream19.format(locale36, "\uc911\uad6d (DEUTSCH)", (java.lang.Object[]) doubleArray64);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "fr");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\u97d3\u6587" + "'", str25, "\u97d3\u6587");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ko-KR" + "'", str28, "ko-KR");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "fra");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "South Korea" + "'", str32, "South Korea");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "eng" + "'", str35, "eng");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Korean (South Korea)" + "'", str37, "Korean (South Korea)");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "en-GB" + "'", str38, "en-GB");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(printStream65);
    }

    @Test
    public void test09313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09313");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        printStream90.println("\uc911\uad6d\uc5b4");
        printStream90.println((int) (short) 10);
        printStream90.println((int) (short) 10);
        java.io.PrintWriter printWriter98 = new java.io.PrintWriter((java.io.OutputStream) printStream90, false);
        printStream90.println();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
    }

    @Test
    public void test09314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09314");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream91 = printStream85.append((java.lang.CharSequence) "KOR");
        java.io.PrintWriter printWriter92 = new java.io.PrintWriter((java.io.OutputStream) printStream85);
        printStream85.close();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream91);
    }

    @Test
    public void test09315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09315");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.995037190209989d), 76.58711610605957d, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.scalarMultiply(116.95834785112258d);
        double double16 = vector3D15.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test09316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09316");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintStream printStream48 = new java.io.PrintStream("ko-KR");
        printStream48.close();
        java.util.Locale locale50 = java.util.Locale.UK;
        java.lang.String[] strArray52 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream53 = printStream48.format(locale50, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray52);
        printStream48.println((long) 10);
        java.io.PrintStream printStream57 = printStream48.append('x');
        java.io.PrintStream printStream59 = printStream57.append('a');
        java.io.PrintStream printStream61 = new java.io.PrintStream("ko-KR");
        printStream61.close();
        java.util.Locale locale63 = java.util.Locale.UK;
        java.lang.String[] strArray65 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream66 = printStream61.format(locale63, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray65);
        printStream66.write(10);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.OutputStream) printStream66);
        byte[] byteArray71 = new byte[] { (byte) -1 };
        printStream66.write(byteArray71);
        printStream66.close();
        printStream66.println((double) (short) 100);
        byte[] byteArray77 = new byte[] { (byte) 1 };
        printStream66.write(byteArray77, 0, 1);
        printStream59.write(byteArray77, 0, (int) (short) 1);
        printStream6.write(byteArray77, (-1), (int) 'u');
        printStream6.print("\u97d3\u6587");
        printStream6.println((long) (-1));
        printStream6.close();
        printStream6.println(false);
        printStream6.println('4');
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printStream53);
        org.junit.Assert.assertNotNull(printStream57);
        org.junit.Assert.assertNotNull(printStream59);
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(printStream66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-1]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1]");
    }

    @Test
    public void test09317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09317");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.print((float) 100L);
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation11.applyInverseTo(rotation27);
        double[][] doubleArray30 = rotation11.getMatrix();
        java.io.PrintWriter printWriter31 = printWriter4.printf("zh", (java.lang.Object[]) doubleArray30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double39 = rotation38.getQ1();
        double double40 = rotation38.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.subtract((double) 10L, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyInverseTo(vector3D49);
        double[][] doubleArray52 = rotation38.getMatrix();
        java.io.PrintWriter printWriter53 = printWriter31.format("XZY", (java.lang.Object[]) doubleArray52);
        printWriter31.print('#');
        printWriter31.println(true);
        printWriter31.print((float) 0L);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        printWriter61.println('x');
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter((java.io.Writer) printWriter61);
        printWriter64.flush();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 100.0d + "'", double39 == 100.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 52.0d + "'", double40 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(printWriter53);
    }

    @Test
    public void test09318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09318");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.util.Locale locale2 = java.util.Locale.ROOT;
        java.lang.String str3 = locale2.getDisplayLanguage();
        java.util.Locale locale4 = java.util.Locale.FRENCH;
        java.util.Locale locale5 = java.util.Locale.TAIWAN;
        java.lang.String str6 = locale4.getDisplayScript(locale5);
        java.lang.String str7 = locale2.getDisplayLanguage(locale4);
        java.util.Locale locale8 = locale2.stripExtensions();
        java.util.Locale.Category category9 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale10 = java.util.Locale.ROOT;
        java.lang.String str11 = locale10.getDisplayLanguage();
        java.util.Locale.setDefault(category9, locale10);
        java.lang.String str13 = locale10.getISO3Language();
        java.lang.String str14 = locale10.getISO3Language();
        java.lang.String str15 = locale10.getDisplayLanguage();
        java.lang.String str16 = locale8.getDisplayLanguage(locale10);
        java.io.PrintStream printStream20 = new java.io.PrintStream("ko-KR");
        printStream20.print((float) 100L);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.OutputStream) printStream20);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation30.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation30.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation30.applyInverseTo(rotation46);
        double[][] doubleArray49 = rotation30.getMatrix();
        java.io.PrintWriter printWriter50 = printWriter23.printf("zh", (java.lang.Object[]) doubleArray49);
        java.lang.String[] strArray52 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray52);
        java.lang.String str54 = mathException53.getPattern();
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray49, (java.lang.Throwable) mathException55);
        java.io.PrintStream printStream57 = printStream1.printf(locale8, "\u4e2d\u6587", (java.lang.Object[]) doubleArray49);
        printStream57.print('a');
        java.lang.Object[] objArray61 = null;
        java.io.PrintStream printStream62 = printStream57.printf("org.apache.commons.math.MathException: Franz\366sisch (Frankreich)", objArray61);
        printStream62.print(2.3641584966050226d);
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "fr");
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "");
        org.junit.Assert.assertTrue("'" + category9 + "' != '" + java.util.Locale.Category.FORMAT + "'", category9.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ZXZ" + "'", str54, "ZXZ");
        org.junit.Assert.assertNotNull(printStream57);
        org.junit.Assert.assertNotNull(printStream62);
    }

    @Test
    public void test09319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09319");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D3, (double) (byte) 100, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D10);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray20 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D22, (double) (byte) 100, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D27, (double) (byte) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D32, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D43, (double) (byte) 100, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation41.applyTo(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.negate();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        double double51 = vector3D50.getY();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (-1L), vector3D5, (double) ' ', vector3D32, (double) (-1.0f), vector3D48, (double) 10.0f, vector3D50);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray60 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D62, (double) (byte) 100, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D67, (double) (byte) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D64, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation59.applyInverseTo(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D72, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D72.negate();
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D52, 100.0d, vector3D72);
        double double77 = vector3D52.getZ();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
    }

    @Test
    public void test09320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09320");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double33 = rotation32.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation25.revert();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D18.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D40, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D37, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D37.negate();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D44.negate();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D44.scalarMultiply((-8.950356005490573E7d));
        double double48 = vector3D47.getY();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-9.929609763454967E11d) + "'", double48 == (-9.929609763454967E11d));
    }

    @Test
    public void test09321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09321");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, (double) '#', (double) 0L, (double) (short) 100, true);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double42 = rotation41.getQ0();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation41.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double57 = rotation56.getQ0();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double64 = rotation63.getQ0();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation56.applyTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation56.revert();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation50.applyInverseTo(rotation56);
        double double68 = rotation67.getQ3();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation34.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation28.applyInverseTo(rotation69);
        double double71 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation22.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation72.revert();
        org.apache.commons.math.geometry.Vector3D vector3D74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D75 = rotation73.applyInverseTo(vector3D74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 52.0d + "'", double42 == 52.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 52.0d + "'", double57 == 52.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 52.0d + "'", double64 == 52.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 128040.0d + "'", double68 == 128040.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.009438163164864176d) + "'", double71 == (-0.009438163164864176d));
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
    }

    @Test
    public void test09322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09322");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D2, (double) (byte) 100, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D4, (double) 0.0f, vector3D16);
        double double19 = vector3D18.getX();
        double double20 = vector3D18.getDelta();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray27 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D29, (double) (byte) 100, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D34, (double) (byte) 100, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D31, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation26.applyInverseTo(vector3D31);
        double double40 = vector3D31.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D31.negate();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D41.negate();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D41.scalarMultiply((-9.95037190209989d));
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D18, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.scalarMultiply(3.068116008146203d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
    }

    @Test
    public void test09323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09323");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 27.96954304052405d, 0.8054849532414718d, (-3.253905889552808E7d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YZY" + "'", str1, "YZY");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YZY" + "'", str2, "YZY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test09324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09324");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        double double19 = rotation5.getQ0();
        double double20 = rotation5.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation5.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray34 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D41, (double) (byte) 100, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D38, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D55, (double) (byte) 100, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D52, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D62, (double) (byte) 100, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D68, (double) (byte) 100, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D73, (double) (byte) 100, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D70, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D57, (double) (byte) 1, vector3D65, (double) (short) 100, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D57.negate();
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) (-1), vector3D57);
        double double81 = vector3D57.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D38, vector3D57);
        double double83 = vector3D82.getAlpha();
        double double84 = vector3D82.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D26.add((-1.63942416E8d), vector3D82);
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder87.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D26.subtract(69.77330444867783d, vector3D88);
        double double90 = vector3D26.getY();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.0d) + "'", double90 == (-0.0d));
    }

    @Test
    public void test09325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09325");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        java.io.PrintStream printStream49 = new java.io.PrintStream((java.io.OutputStream) printStream6, true);
        printStream49.println(0L);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter((java.io.OutputStream) printStream49);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.OutputStream) printStream49, true);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
    }

    @Test
    public void test09326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09326");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation12.getQ3();
        double double16 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation12.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray24 = rotation22.getAngles(rotationOrder23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D25.scalarMultiply(1.912983406767073d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXZ" + "'", str19, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.6704649792860589, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
    }

    @Test
    public void test09327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09327");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyTo(rotation13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation6.applyInverseTo(vector3D16);
        double double18 = vector3D16.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str20 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D21.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D16.add(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D21.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) 'u', 3.141592653589793d, (double) 0L);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray36 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D38, (double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D43, (double) (byte) 100, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation35.applyInverseTo(vector3D40);
        double double49 = rotation35.getQ0();
        double double50 = rotation35.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation35.applyInverseTo(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray63 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D65, (double) (byte) 100, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D70, (double) (byte) 100, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D67, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation62.applyInverseTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation62.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D54.add(0.9649660284921133d, vector3D76);
        double double78 = org.apache.commons.math.geometry.Vector3D.angle(vector3D29, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D21.add((double) '#', vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D21.scalarMultiply((-0.0d));
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D21.negate();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(0.18247827030869201d, vector3D21);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ZXZ" + "'", str20, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test09328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09328");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("KOR");
        java.util.Locale locale2 = java.util.Locale.ENGLISH;
        boolean boolean3 = locale2.hasExtensions();
        java.io.PrintStream printStream6 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream6.format("", objArray79);
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale2, "KOR", objArray79);
        boolean boolean92 = printWriter1.checkError();
        java.io.PrintWriter printWriter94 = printWriter1.append('x');
        printWriter94.println(true);
        printWriter94.print('x');
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(printWriter94);
    }

    @Test
    public void test09329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09329");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        printStream85.println((long) (short) 0);
        printStream85.println('#');
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        printStream85.println('x');
        printStream85.print(false);
        printStream85.println(1.9111959108721144d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09330");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double33 = rotation32.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation25.revert();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D18.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D40, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D37, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D37.negate();
        double double45 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D37.negate();
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, 0.6842964605324368d);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.add(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.scalarMultiply((-0.9399422300421527d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-120.56122080658437d) + "'", double45 == (-120.56122080658437d));
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
    }

    @Test
    public void test09331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09331");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation5.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ1();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation21.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation38.applyTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation38.getAxis();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation32.applyTo(rotation38);
        double[][] doubleArray47 = rotation46.getMatrix();
        double double48 = rotation46.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) (-1L), (double) (short) 10, (double) 'a');
        double double64 = rotation63.getAngle();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation57.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation57.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA3();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyTo(rotation72);
        double double74 = rotation66.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.normalize();
        double double77 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D75.scalarMultiply(128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation66.applyInverseTo(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D49.subtract(0.44940223519156214d, vector3D80);
        double double82 = vector3D80.getY();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 100.0d + "'", double31 == 100.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-198800.0d) + "'", double48 == (-198800.0d));
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 52.0d + "'", double58 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2.3122509176395862d + "'", double64 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 100.0d + "'", double74 == 100.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 10400.0d + "'", double82 == 10400.0d);
    }

    @Test
    public void test09332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09332");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation14.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation37.applyTo(rotation44);
        double double47 = rotation44.getQ3();
        double[][] doubleArray48 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation31.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double56 = rotation55.getQ0();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ0();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation55.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation55.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation71 = rotation65.applyTo(rotation70);
        double double72 = rotation70.getAngle();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation44.applyInverseTo(rotation70);
        double double74 = rotation70.getQ1();
        double[][] doubleArray75 = rotation70.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder76.getA1();
        java.lang.String str82 = rotationOrder76.toString();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder76.getA2();
        double[] doubleArray84 = rotation70.getAngles(rotationOrder76);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder76.getA2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 52.0d + "'", double56 == 52.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2.3122509176395862d + "'", double72 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.8519466901357562d) + "'", double74 == (-0.8519466901357562d));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "XYZ" + "'", str82, "XYZ");
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[2.141592653589793, -0.5752220392306204, -0.3893722612835904]");
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test09333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09333");
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("fra");
        java.lang.String str3 = mathException2.getPattern();
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("ja_JP", (java.lang.Throwable) mathException2);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation12.getAxis();
        double[][] doubleArray14 = rotation12.getMatrix();
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray14);
        java.lang.Object[] objArray16 = mathException15.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException20.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException22 = new org.apache.commons.math.geometry.NotARotationMatrixException("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("\u97d3\u6587)", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("Japanisch", objArray16, (java.lang.Throwable) mathException25);
        mathException4.addSuppressed((java.lang.Throwable) mathException25);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "fra" + "'", str3, "fra");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[[25407.0, 1040.0, 2000.0], [-1040.0, 5407.0, 10400.0], [2000.0, -10400.0, 5607.0]]");
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test09334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09334");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.1035361863295576d, 3.0419240010986313d);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double9 = rotation8.getQ1();
        double double10 = rotation8.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D12, (double) (byte) 100, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract((double) 10L, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation8.applyInverseTo(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D21.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D21.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D43, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D43);
        double double47 = vector3D43.getZ();
        double double48 = org.apache.commons.math.geometry.Vector3D.angle(vector3D2, vector3D43);
        double double49 = vector3D2.getZ();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 52.0d + "'", double10 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.9866275920404853d + "'", double47 == 0.9866275920404853d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.3700144061909936d + "'", double48 == 1.3700144061909936d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.09950371902099887d + "'", double49 == 0.09950371902099887d);
    }

    @Test
    public void test09335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09335");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyTo(rotation13);
        double double16 = rotation13.getQ3();
        double double17 = rotation13.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation13.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray29 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation13.applyTo(rotation28);
        double double31 = rotation28.getQ2();
        double double32 = rotation28.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation28.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D37.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str41 = rotationOrder40.toString();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D42.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D43.negate();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.subtract(10.0d, vector3D44);
        double double46 = vector3D37.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        double double53 = vector3D51.getDelta();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray60 = rotation59.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D62, (double) (byte) 100, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D67, (double) (byte) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D64, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation59.applyInverseTo(vector3D64);
        double double73 = vector3D64.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D64);
        double double75 = vector3D64.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D33, (double) '#', vector3D37, 1.912983406767073d, vector3D64);
        double double77 = vector3D64.getY();
        double double78 = vector3D64.getAlpha();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ZXZ" + "'", str41, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-2.141592653589793d) + "'", double46 == (-2.141592653589793d));
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test09336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09336");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.close();
        printStream1.print((double) 0L);
        java.io.PrintStream printStream90 = new java.io.PrintStream((java.io.OutputStream) printStream1, false);
        java.io.PrintStream printStream91 = new java.io.PrintStream((java.io.OutputStream) printStream90);
        boolean boolean92 = printStream91.checkError();
        printStream91.println((float) (byte) 10);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test09337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09337");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 'a', (-0.24213023627250485d), (-0.06392570646188624d), 93.57684707871968d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double25 = rotation24.getQ0();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation17.applyTo(rotation24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation17.applyInverseTo(vector3D27);
        double double29 = vector3D27.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str31 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D32.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D27.add(vector3D32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ1();
        double double42 = rotation40.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.subtract((double) 10L, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation40.applyInverseTo(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D53.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D34.add(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D11.add(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D8.add((double) 100L, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray65 = rotation64.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D67, (double) (byte) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D72, (double) (byte) 100, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D69, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation64.applyInverseTo(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation64.getAxis();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation64.revert();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation64.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((-12804.0d), vector3D80);
        double double82 = vector3D80.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D57.add(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D57.negate();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation5.applyInverseTo(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ZXZ" + "'", str31, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 100.0d + "'", double41 == 100.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 52.0d + "'", double42 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.09950371902099892d) + "'", double82 == (-0.09950371902099892d));
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test09338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09338");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        printStream90.println("\uc911\uad6d\uc5b4");
        printStream90.println((int) (short) 10);
        printStream90.println();
        printStream90.print(0.0d);
        printStream90.print((int) '4');
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
    }

    @Test
    public void test09339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09339");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str17 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D14, vector3D25);
        double double27 = rotation26.getAngle();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double40 = rotation39.getQ0();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation33.applyInverseTo(rotation39);
        double double42 = rotation33.getQ1();
        double double43 = rotation33.getQ3();
        double double44 = rotation33.getQ1();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation26.applyTo(rotation33);
        double double46 = rotation33.getQ3();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXZ" + "'", str17, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 52.0d + "'", double40 == 52.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 100.0d + "'", double42 == 100.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
    }

    @Test
    public void test09340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09340");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        printWriter1.println((long) (short) 10);
        java.util.Locale locale6 = java.util.Locale.PRC;
        java.lang.String str7 = locale6.getDisplayVariant();
        java.lang.String[] strArray12 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray19 = mathException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray19);
        java.io.PrintWriter printWriter21 = printWriter1.format(locale6, "", (java.lang.Object[]) throwableArray19);
        printWriter21.print((float) (short) 1);
        printWriter21.println((long) (byte) -1);
        printWriter21.write((int) 'u');
        printWriter21.println(0.08806429469916818d);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        java.util.Locale locale34 = new java.util.Locale("Taiwan", "de", "de_DE");
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) (-1L), (double) (short) 10, (double) 'a');
        double double41 = rotation40.getAngle();
        double double42 = rotation40.getQ2();
        double[][] doubleArray43 = rotation40.getMatrix();
        java.io.PrintWriter printWriter44 = printWriter21.printf(locale34, "\uc601\uc5b4", (java.lang.Object[]) doubleArray43);
        java.io.PrintWriter printWriter46 = printWriter21.append('a');
        printWriter21.println();
        printWriter21.print('#');
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertEquals(locale34.toString(), "taiwan_DE_de_DE");
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2.3122509176395862d + "'", double41 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.02937648959434208d) + "'", double42 == (-0.02937648959434208d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter46);
    }

    @Test
    public void test09341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09341");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(vector3D8, 77.36405450958189d);
        double double11 = rotation10.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXZ" + "'", str6, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.9658308234268531d + "'", double11 == 1.9658308234268531d);
    }

    @Test
    public void test09342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09342");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.close();
        java.io.PrintStream printStream88 = printStream1.append('#');
        printStream88.print(1.0f);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream88);
    }

    @Test
    public void test09343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09343");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream91 = printStream85.append((java.lang.CharSequence) "KOR");
        java.io.PrintWriter printWriter92 = new java.io.PrintWriter((java.io.OutputStream) printStream85);
        printStream85.println();
        java.io.PrintWriter printWriter94 = new java.io.PrintWriter((java.io.OutputStream) printStream85);
        printWriter94.flush();
        printWriter94.write("deu (FRANCIA)");
        printWriter94.println((-924300.5326404802d));
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream91);
    }

    @Test
    public void test09344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09344");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("de");
        printWriter1.print('x');
        java.io.PrintStream printStream5 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream7 = new java.io.PrintStream("ko-KR");
        printStream7.close();
        printStream7.println((double) '4');
        printStream7.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        double[][] doubleArray21 = rotation19.getMatrix();
        java.io.PrintStream printStream22 = printStream7.format("zh", (java.lang.Object[]) doubleArray21);
        printStream5.println((java.lang.Object) doubleArray21);
        char[] charArray27 = new char[] { 'a', 'a', '4' };
        printStream5.println(charArray27);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.OutputStream) printStream5, false);
        printWriter30.write(0);
        printWriter1.println((java.lang.Object) printWriter30);
        java.io.PrintWriter printWriter35 = printWriter30.append((java.lang.CharSequence) "United Kingdom");
        printWriter30.flush();
        printWriter30.println(100);
        java.io.PrintStream printStream40 = new java.io.PrintStream("ko-KR");
        printStream40.print((float) 100L);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap44 = null;
        java.util.List<java.util.Locale.LanguageRange> languageRangeList45 = java.util.Locale.LanguageRange.parse("English", strMap44);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap46 = null;
        java.util.List<java.util.Locale.LanguageRange> languageRangeList47 = java.util.Locale.LanguageRange.mapEquivalents(languageRangeList45, strMap46);
        java.util.Locale.LanguageRange[] languageRangeArray48 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList49 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList49, languageRangeArray48);
        java.util.Locale locale51 = java.util.Locale.ROOT;
        java.util.Locale locale52 = java.util.Locale.GERMAN;
        java.util.Locale locale53 = java.util.Locale.CANADA;
        java.util.Locale locale54 = java.util.Locale.GERMAN;
        java.util.Locale locale55 = java.util.Locale.GERMANY;
        java.util.Locale locale56 = java.util.Locale.ROOT;
        java.lang.String str57 = locale56.getDisplayLanguage();
        java.util.Locale locale58 = java.util.Locale.FRENCH;
        java.util.Locale locale59 = java.util.Locale.ROOT;
        java.util.Locale locale60 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray61 = new java.util.Locale[] { locale51, locale52, locale53, locale54, locale55, locale56, locale58, locale59, locale60 };
        java.util.ArrayList<java.util.Locale> localeList62 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList62, localeArray61);
        java.util.Locale.FilteringMode filteringMode64 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList65 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList49, (java.util.Collection<java.util.Locale>) localeList62, filteringMode64);
        java.util.Locale.FilteringMode filteringMode66 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList67 = java.util.Locale.filter(languageRangeList45, (java.util.Collection<java.util.Locale>) localeList65, filteringMode66);
        printStream40.println((java.lang.Object) localeList65);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.OutputStream) printStream40);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter((java.io.OutputStream) printStream40);
        printStream40.flush();
        printStream40.println((float) (byte) 100);
        printStream40.println("\uc911\uad6d\uc5b4\uc911\uad6d)");
        printStream40.println((int) (byte) -1);
        printWriter30.print((java.lang.Object) printStream40);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, a, 4]");
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(languageRangeList45);
        org.junit.Assert.assertNotNull(languageRangeList47);
        org.junit.Assert.assertNotNull(languageRangeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "de");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "fr");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + filteringMode64 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode64.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList65);
        org.junit.Assert.assertTrue("'" + filteringMode66 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode66.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList67);
    }

    @Test
    public void test09345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09345");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.println(0.0d);
        printWriter12.print((long) (byte) 10);
        printWriter12.println();
        printWriter12.print((int) (short) 0);
        java.io.PrintWriter printWriter21 = printWriter12.append('x');
        java.util.Locale locale23 = java.util.Locale.forLanguageTag("Chinesisch");
        java.util.Set<java.lang.Character> charSet24 = locale23.getExtensionKeys();
        printWriter12.println((java.lang.Object) locale23);
        java.io.PrintWriter printWriter27 = printWriter12.append('4');
        java.io.PrintStream printStream29 = new java.io.PrintStream("\uc911\uad6d\uc5b4");
        printStream29.write(100);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.OutputStream) printStream29, false);
        printStream29.println();
        printWriter12.print((java.lang.Object) printStream29);
        printWriter12.print((long) (-1));
        java.util.Locale.Builder builder38 = new java.util.Locale.Builder();
        java.util.Locale locale39 = java.util.Locale.FRENCH;
        java.util.Locale locale40 = locale39.stripExtensions();
        java.util.Locale.Builder builder41 = builder38.setLocale(locale39);
        java.util.Locale.Builder builder42 = builder41.clear();
        java.util.Locale locale43 = builder42.build();
        java.util.Locale locale44 = builder42.build();
        java.util.Locale.Builder builder45 = builder42.clearExtensions();
        java.util.Locale.Builder builder46 = builder45.clearExtensions();
        java.util.Locale.Builder builder48 = builder46.setScript("");
        java.util.Locale.Builder builder49 = builder46.clear();
        java.util.Locale.Builder builder50 = builder49.clearExtensions();
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("\u30d5\u30e9\u30f3\u30b9");
        java.util.Locale locale55 = new java.util.Locale("hi!", "\u97d3\u6587");
        java.util.Locale.Category category56 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale57 = java.util.Locale.ENGLISH;
        boolean boolean58 = locale57.hasExtensions();
        java.util.Locale.setDefault(category56, locale57);
        java.lang.String str60 = locale55.getDisplayName(locale57);
        java.lang.String str61 = locale57.getISO3Language();
        java.lang.String str62 = locale57.getLanguage();
        java.util.Locale.Category category63 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category64 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale65 = java.util.Locale.ROOT;
        java.lang.String str66 = locale65.getDisplayLanguage();
        java.util.Locale.setDefault(category64, locale65);
        java.util.Locale.setDefault(category63, locale65);
        java.util.Locale locale69 = java.util.Locale.getDefault(category63);
        java.util.Locale locale70 = java.util.Locale.getDefault(category63);
        java.util.Locale locale71 = java.util.Locale.getDefault(category63);
        java.util.Locale locale72 = java.util.Locale.JAPAN;
        java.lang.String str73 = locale72.getDisplayVariant();
        java.lang.String str74 = locale72.getDisplayVariant();
        java.util.Locale.setDefault(locale72);
        java.util.Locale.setDefault(category63, locale72);
        java.lang.String str77 = locale57.getDisplayLanguage(locale72);
        java.lang.Object[] objArray79 = null;
        java.io.PrintWriter printWriter80 = printWriter52.format(locale72, "ENGLISH", objArray79);
        java.lang.String str81 = locale72.getScript();
        java.lang.String str82 = locale72.getDisplayLanguage();
        java.util.Locale.Builder builder83 = builder50.setLocale(locale72);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException87 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray88 = cardanEulerSingularityException87.getSuppressed();
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("Frankreich");
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("\u97d3\u6587)", (java.lang.Object[]) throwableArray88, (java.lang.Throwable) mathException90);
        java.lang.Object[] objArray92 = mathException91.getArguments();
        java.io.PrintWriter printWriter93 = printWriter12.format(locale72, "chinese (china)_FRANCIA_org.apache.commons.math.MathException: ko_KR", objArray92);
        java.lang.String str94 = locale72.toString();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "");
        org.junit.Assert.assertNotNull(charSet24);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "fr");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "fr");
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
// flaky:         org.junit.Assert.assertEquals(locale55.toString(), "\u97d3\u6587");
        org.junit.Assert.assertTrue("'" + category56 + "' != '" + java.util.Locale.Category.DISPLAY + "'", category56.equals(java.util.Locale.Category.DISPLAY));
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\u97d3\u6587)" + "'", str60, "\u97d3\u6587)");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "eng" + "'", str61, "eng");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "en" + "'", str62, "en");
        org.junit.Assert.assertTrue("'" + category63 + "' != '" + java.util.Locale.Category.FORMAT + "'", category63.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category64 + "' != '" + java.util.Locale.Category.FORMAT + "'", category64.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "");
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "");
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "");
        org.junit.Assert.assertNotNull(locale72);
        org.junit.Assert.assertEquals(locale72.toString(), "ja_JP");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\u82f1\u8a9e" + "'", str77, "\u82f1\u8a9e");
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "\u65e5\u672c\u8a9e" + "'", str82, "\u65e5\u672c\u8a9e");
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertNotNull(printWriter93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "ja_JP" + "'", str94, "ja_JP");
    }

    @Test
    public void test09346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09346");
        java.util.Locale locale3 = new java.util.Locale("ko-KR", "deu", "KOR");
        java.io.PrintStream printStream5 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.util.Locale locale6 = java.util.Locale.ROOT;
        java.lang.String str7 = locale6.getDisplayLanguage();
        java.util.Locale locale8 = java.util.Locale.FRENCH;
        java.util.Locale locale9 = java.util.Locale.TAIWAN;
        java.lang.String str10 = locale8.getDisplayScript(locale9);
        java.lang.String str11 = locale6.getDisplayLanguage(locale8);
        java.util.Locale locale12 = locale6.stripExtensions();
        java.util.Locale.Category category13 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale14 = java.util.Locale.ROOT;
        java.lang.String str15 = locale14.getDisplayLanguage();
        java.util.Locale.setDefault(category13, locale14);
        java.lang.String str17 = locale14.getISO3Language();
        java.lang.String str18 = locale14.getISO3Language();
        java.lang.String str19 = locale14.getDisplayLanguage();
        java.lang.String str20 = locale12.getDisplayLanguage(locale14);
        java.io.PrintStream printStream24 = new java.io.PrintStream("ko-KR");
        printStream24.print((float) 100L);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.OutputStream) printStream24);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double42 = rotation41.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation34.applyTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation34.applyInverseTo(rotation50);
        double[][] doubleArray53 = rotation34.getMatrix();
        java.io.PrintWriter printWriter54 = printWriter27.printf("zh", (java.lang.Object[]) doubleArray53);
        java.lang.String[] strArray56 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray56);
        java.lang.String str58 = mathException57.getPattern();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray53, (java.lang.Throwable) mathException59);
        java.io.PrintStream printStream61 = printStream5.printf(locale12, "\u4e2d\u6587", (java.lang.Object[]) doubleArray53);
        java.lang.String str62 = locale3.getDisplayLanguage(locale12);
        java.lang.String str63 = locale3.getDisplayVariant();
        java.util.Locale locale66 = new java.util.Locale("japonais", "");
        java.lang.String str67 = locale3.getDisplayScript(locale66);
        java.lang.String str68 = locale66.getCountry();
        java.lang.String str69 = locale66.getCountry();
        org.junit.Assert.assertEquals(locale3.toString(), "ko-kr_DEU_KOR");
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "fr");
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "");
        org.junit.Assert.assertTrue("'" + category13 + "' != '" + java.util.Locale.Category.FORMAT + "'", category13.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 52.0d + "'", double42 == 52.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ZXZ" + "'", str58, "ZXZ");
        org.junit.Assert.assertNotNull(printStream61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ko-kr" + "'", str62, "ko-kr");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "KOR" + "'", str63, "KOR");
        org.junit.Assert.assertEquals(locale66.toString(), "japonais");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test09347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09347");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D20, (double) (byte) 100, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D25, (double) (byte) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D22, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D16.subtract((double) 0, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D29.scalarMultiply(74.59637898875364d);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation5.applyTo(vector3D29);
        double double34 = vector3D29.getAlpha();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter38 = printWriter36.append('#');
        java.lang.Object[] objArray40 = null;
        java.io.PrintWriter printWriter41 = printWriter38.format("fran\347ais", objArray40);
        java.util.Locale locale42 = null;
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray45 = mathException44.getSuppressed();
        java.io.PrintWriter printWriter46 = printWriter38.format(locale42, "zxz", (java.lang.Object[]) throwableArray45);
        char[] charArray50 = new char[] { 'a', ' ', '#' };
        printWriter46.println(charArray50);
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.FRENCH;
        java.util.Locale locale54 = java.util.Locale.TAIWAN;
        java.lang.String str55 = locale53.getDisplayScript(locale54);
        java.lang.String str56 = locale52.getDisplayLanguage(locale53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray68 = rotation67.getMatrix();
        java.io.PrintWriter printWriter69 = printWriter46.printf(locale52, "english", (java.lang.Object[]) doubleArray68);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(doubleArray68, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(doubleArray68, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str75 = rotationOrder74.toString();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation73.applyInverseTo(vector3D78);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation();
        double double82 = rotation81.getQ0();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation81.revert();
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(128040.0d, (-11094.094757084158d), 0.9649660284921133d, (-0.5063656411097588d), true);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation83.applyTo(rotation89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation83.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation80.applyTo(vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D29.subtract(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D92.scalarMultiply(0.6004393047116664d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "fr");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "fran\347ais" + "'", str56, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ZXZ" + "'", str75, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test09348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09348");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D12, vector3D17);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray27 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D29, (double) (byte) 100, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D34, (double) (byte) 100, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D31, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation26.applyInverseTo(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D39, vector3D40);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation48.applyTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.negate();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        double double58 = vector3D57.getY();
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) (-1L), vector3D12, (double) ' ', vector3D39, (double) (-1.0f), vector3D55, (double) 10.0f, vector3D57);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray67 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D71, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation66.applyInverseTo(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D79, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D79.negate();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D59, 100.0d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D5.add((double) (-1.0f), vector3D79);
        double double85 = vector3D5.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D5.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D5.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D91 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D89, (double) (byte) 100, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D91.scalarMultiply((-2.141592653589793d));
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D94.negate();
        double double96 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D87, vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D87.normalize();
        double double98 = vector3D97.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + (-0.0d) + "'", double98 == (-0.0d));
    }

    @Test
    public void test09349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09349");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        double double19 = rotation5.getQ0();
        double double20 = rotation5.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation5.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray33 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D35, (double) (byte) 100, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D37, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation32.applyInverseTo(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D24.add(0.9649660284921133d, vector3D46);
        double double48 = vector3D47.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((-9.2092440727286d), 103.60501918343533d);
        double double52 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D47, vector3D51);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.10062844706379001d + "'", double48 == 0.10062844706379001d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
    }

    @Test
    public void test09350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09350");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale3 = java.util.Locale.KOREAN;
        java.lang.String str4 = locale3.getDisplayLanguage();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        double double21 = rotation11.getQ0();
        double double22 = rotation11.getQ0();
        double[][] doubleArray23 = rotation11.getMatrix();
        java.io.PrintWriter printWriter24 = printWriter2.printf(locale3, "zh_CN", (java.lang.Object[]) doubleArray23);
        java.util.Locale locale25 = java.util.Locale.FRENCH;
        java.util.Locale locale26 = java.util.Locale.TAIWAN;
        java.lang.String str27 = locale25.getDisplayScript(locale26);
        java.lang.String str28 = locale26.getVariant();
        java.util.Locale locale29 = java.util.Locale.CHINESE;
        java.lang.String str30 = locale26.getDisplayName(locale29);
        java.lang.String str32 = locale26.getExtension('x');
        java.util.Locale.Category category33 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category34 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale35.getDisplayLanguage();
        java.util.Locale.setDefault(category34, locale35);
        java.util.Locale.setDefault(category33, locale35);
        java.util.Locale locale39 = java.util.Locale.getDefault(category33);
        java.util.Locale locale40 = null;
        java.lang.String str41 = locale39.getDisplayScript(locale40);
        java.util.Locale locale42 = java.util.Locale.ROOT;
        java.util.Locale.Category category43 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category44 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.lang.String str46 = locale45.getDisplayLanguage();
        java.util.Locale.setDefault(category44, locale45);
        java.util.Locale.setDefault(category43, locale45);
        java.lang.String str49 = locale42.getDisplayVariant(locale45);
        java.lang.String str50 = locale39.getDisplayCountry(locale45);
        java.lang.String str51 = locale26.getDisplayLanguage(locale39);
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.FRENCH;
        java.util.Locale locale54 = java.util.Locale.TAIWAN;
        java.lang.String str55 = locale53.getDisplayScript(locale54);
        java.lang.String str56 = locale52.getDisplayLanguage(locale53);
        boolean boolean57 = locale53.hasExtensions();
        java.util.Locale.Builder builder58 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder60 = builder58.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale61 = builder58.build();
        java.lang.String str62 = locale53.getDisplayLanguage(locale61);
        java.lang.String str63 = locale53.getDisplayVariant();
        java.lang.String str64 = locale39.getDisplayCountry(locale53);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double72 = rotation71.getQ0();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double79 = rotation78.getQ0();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation71.applyTo(rotation78);
        double double81 = rotation71.getQ0();
        double double82 = rotation71.getQ0();
        double[][] doubleArray83 = rotation71.getMatrix();
        java.io.PrintWriter printWriter84 = printWriter2.format(locale53, "\u671d\u9c9c\u6587\u97e9\u56fd)", (java.lang.Object[]) doubleArray83);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException85 = new org.apache.commons.math.geometry.NotARotationMatrixException("German (Germany)", (java.lang.Object[]) doubleArray83);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "ko");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\ud55c\uad6d\uc5b4" + "'", str4, "\ud55c\uad6d\uc5b4");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "fr");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "zh");
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)" + "'", str30, "\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + category33 + "' != '" + java.util.Locale.Category.FORMAT + "'", category33.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category34 + "' != '" + java.util.Locale.Category.FORMAT + "'", category34.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "");
        org.junit.Assert.assertTrue("'" + category43 + "' != '" + java.util.Locale.Category.FORMAT + "'", category43.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category44 + "' != '" + java.util.Locale.Category.FORMAT + "'", category44.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Chinese" + "'", str51, "Chinese");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "fr");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "fran\347ais" + "'", str56, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "French" + "'", str62, "French");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 52.0d + "'", double72 == 52.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 52.0d + "'", double79 == 52.0d);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 52.0d + "'", double81 == 52.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 52.0d + "'", double82 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test09351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09351");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation5.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation5.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D20.orthogonal();
        double double22 = vector3D21.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.orthogonal();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.4922398570367257d + "'", double22 == 1.4922398570367257d);
        org.junit.Assert.assertNotNull(vector3D23);
    }

    @Test
    public void test09352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09352");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)");
        printWriter1.print((int) (byte) -1);
        printWriter1.print((float) (byte) -1);
        printWriter1.print((long) (short) 0);
        printWriter1.println((float) (byte) -1);
        java.io.PrintWriter printWriter11 = printWriter1.append('4');
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) (byte) 0, 0.09966865249116204d, 0.7291229553156825d, false);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((-0.9904757959510307d), 0.0d, (-0.0d), 0.0d, true);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D29, (double) (byte) 100, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation38.applyTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.negate();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D31.add(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D(0.5403023058681398d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation25.applyInverseTo(vector3D47);
        double[][] doubleArray49 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(doubleArray49, 2.7514505226609822d);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(doubleArray49, 0.7954966866093076d);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("\ud55c\uad6d\uc5b4 (CHINESE (TAIWAN))", (java.lang.Object[]) doubleArray49);
        java.io.PrintWriter printWriter55 = printWriter11.printf("France", (java.lang.Object[]) doubleArray49);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(printWriter55);
    }

    @Test
    public void test09353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09353");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        java.lang.String str7 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        double double9 = vector3D8.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D8.subtract((-0.13768695521062307d), vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D14.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXZ" + "'", str7, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test09354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09354");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        printStream6.println('a');
        java.io.PrintStream printStream18 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        printStream6.write(1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream6, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray29 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation28.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation43.revert();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation43.getAxis();
        double double46 = vector3D45.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D45.subtract(93.57684707871968d, vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ0();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double70 = rotation69.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation62.applyTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation62.revert();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation62.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D55.subtract(3.112216163995451d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D79, (double) (byte) 100, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.subtract((double) 10L, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D75.add(0.0657541776220426d, vector3D87);
        printStream6.print((java.lang.Object) 0.0657541776220426d);
        java.io.PrintStream printStream91 = new java.io.PrintStream((java.io.OutputStream) printStream6, false);
        printStream6.flush();
        printStream6.write((int) (byte) 1);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9999999999999999d + "'", double46 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test09355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09355");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
    }

    @Test
    public void test09356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09356");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream90 = new java.io.PrintStream((java.io.OutputStream) printStream85);
        printStream90.println("XYZ");
        printStream90.println((long) (short) 1);
        printStream90.print(10.358482905538347d);
        java.io.PrintStream printStream97 = new java.io.PrintStream((java.io.OutputStream) printStream90);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09357");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.03286963174708455d), 0.2194399632114593d, (-1.6394241590049627E8d), 0.7978723592790837d, false);
    }

    @Test
    public void test09358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09358");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        byte[] byteArray91 = new byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 10 };
        printStream1.write(byteArray91);
        printStream1.print((int) 'x');
        printStream1.print(false);
        printStream1.print(true);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 100, -1, 10, 10]");
    }

    @Test
    public void test09359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09359");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("de_de (ENGLISCH)");
        java.util.Locale.Builder builder2 = new java.util.Locale.Builder();
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = locale3.stripExtensions();
        java.util.Locale.Builder builder5 = builder2.setLocale(locale3);
        java.util.Locale.Builder builder6 = builder5.clear();
        java.util.Locale locale7 = builder6.build();
        java.util.Locale.Builder builder8 = builder6.clear();
        java.util.Locale locale9 = java.util.Locale.GERMAN;
        java.lang.String str10 = locale9.getDisplayLanguage();
        java.util.Locale locale11 = locale9.stripExtensions();
        java.util.Locale.Builder builder12 = builder6.setLocale(locale9);
        java.util.Locale.Builder builder13 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder15 = builder13.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder17 = builder13.setLanguage("ZXZ");
        java.util.Locale locale18 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder19 = builder13.setLocale(locale18);
        java.util.Locale locale20 = java.util.Locale.CANADA;
        java.util.Locale.Builder builder21 = builder13.setLocale(locale20);
        java.util.Locale.Builder builder23 = builder13.setScript("");
        java.util.Locale locale24 = builder13.build();
        java.util.Locale.Builder builder25 = builder13.clearExtensions();
        java.util.Locale.Builder builder27 = builder13.setLanguage("ja");
        java.util.Locale locale28 = builder27.build();
        java.lang.String str29 = locale9.getDisplayVariant(locale28);
        java.lang.String str30 = locale9.toLanguageTag();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) (-1L), (double) (short) 10, (double) 'a');
        double double53 = rotation52.getAngle();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation46.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation39.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation55.revert();
        double[][] doubleArray57 = rotation56.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException58 = new org.apache.commons.math.geometry.NotARotationMatrixException("ko-kr", (java.lang.Object[]) doubleArray57);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException59 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.mathexception: ", (java.lang.Object[]) doubleArray57);
        java.io.PrintWriter printWriter60 = printWriter1.printf(locale9, "\uc601\uc5b4\uce90\ub098\ub2e4)", (java.lang.Object[]) doubleArray57);
        java.lang.String str61 = locale9.getVariant();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "fr");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "de");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "German" + "'", str10, "German");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "de");
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_CA");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_CA");
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "ja_CA");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "de" + "'", str30, "de");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2.3122509176395862d + "'", double53 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test09360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09360");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printWriter9.println("\uc601\uc5b4");
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray20 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D22, (double) (byte) 100, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D27, (double) (byte) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation34.revert();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation34.getAxis();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException38 = new org.apache.commons.math.geometry.NotARotationMatrixException("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) doubleArray37);
        java.io.PrintWriter printWriter39 = printWriter9.format("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) doubleArray37);
        printWriter39.flush();
        java.io.PrintStream printStream43 = new java.io.PrintStream("ko-KR");
        printStream43.print((float) 100L);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter((java.io.OutputStream) printStream43);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation53.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation53.revert();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double70 = rotation69.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation53.applyInverseTo(rotation69);
        double[][] doubleArray72 = rotation53.getMatrix();
        java.io.PrintWriter printWriter73 = printWriter46.printf("zh", (java.lang.Object[]) doubleArray72);
        java.io.PrintWriter printWriter74 = printWriter39.format("kanouri (KO,zh-tw)", (java.lang.Object[]) doubleArray72);
        boolean boolean75 = printWriter74.checkError();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 52.0d + "'", double61 == 52.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test09361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09361");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) (-1L), (double) (short) 10, (double) 'a');
        double double20 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation6.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        double double38 = rotation35.getQ3();
        double double39 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation35.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray51 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation35.applyTo(rotation50);
        double double53 = rotation50.getQ2();
        double double54 = rotation50.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation50.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation22.applyTo(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (-0.3403913072297808d), 2.699111843077519d);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D(0.34056624311683137d, vector3D55, 1.1525719972156676d, vector3D61);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2.3122509176395862d + "'", double20 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
    }

    @Test
    public void test09362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09362");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation7.applyTo(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) 'x', vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D((double) 1, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D23, (double) (byte) 100, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.subtract((double) 10L, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D31, (double) 10L, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D19.add((double) (short) 100, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D9.subtract(27.29993135674214d, vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder40.getA2();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (-0.02937648959434208d), (-3.141592653589793d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray58 = rotation57.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D60, (double) (byte) 100, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D65, (double) (byte) 100, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D62, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation57.applyInverseTo(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D70, vector3D71);
        double double73 = vector3D72.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D72.scalarMultiply((double) 10L);
        double double76 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D51, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D38.subtract(1.5707963267948963d, vector3D75);
        double double78 = vector3D38.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder79.getA3();
        double double83 = org.apache.commons.math.geometry.Vector3D.angle(vector3D38, vector3D82);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-22.972100123945783d) + "'", double78 == (-22.972100123945783d));
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2.5707963267948966d + "'", double83 == 2.5707963267948966d);
    }

    @Test
    public void test09363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09363");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        java.io.PrintStream printStream49 = printStream6.append((java.lang.CharSequence) "Franz\366sisch (Frankreich)");
        java.io.PrintStream printStream50 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        printStream6.println((-0.13715201283077028d));
        java.io.PrintStream printStream54 = new java.io.PrintStream((java.io.OutputStream) printStream6, true);
        java.io.PrintStream printStream56 = printStream54.append((java.lang.CharSequence) "ko_kr_german_org.apache.commons.math.mathexception");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(printStream49);
        org.junit.Assert.assertNotNull(printStream56);
    }

    @Test
    public void test09364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09364");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.09950371902099892d), 1.5905084122975552d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.scalarMultiply(1.5599296019390303d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyTo(rotation26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation21.getAxis();
        double double29 = rotation21.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray39 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D41, (double) (byte) 100, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D46, (double) (byte) 100, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D43, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D31.subtract((double) 100, vector3D53);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation60.getAxis();
        double double62 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D53, vector3D61);
        double double63 = vector3D61.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation21.applyTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D(0.8775825618903728d, vector3D61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str67 = rotationOrder66.toString();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D69.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D69.scalarMultiply((-12804.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str79 = rotationOrder78.toString();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, (double) 1, (double) (byte) 0, 0.0d);
        double[] doubleArray84 = rotation77.getAngles(rotationOrder78);
        java.lang.String str85 = rotationOrder78.toString();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder78.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder78.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D87.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D65, vector3D72, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D2.negate();
        double double91 = vector3D2.getZ();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.0d) + "'", double62 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.09966865249116204d) + "'", double63 == (-0.09966865249116204d));
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "YZY" + "'", str67, "YZY");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "XZY" + "'", str79, "XZY");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[NaN, NaN, NaN]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "XZY" + "'", str85, "XZY");
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.9998057231334774d + "'", double91 == 0.9998057231334774d);
    }

    @Test
    public void test09365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09365");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 17426.563293542316d, (-0.09966865249116202d), 2.1098021193192458d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) (-1L), (double) (short) 10, (double) 'a');
        double double18 = rotation17.getAngle();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation5.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA3();
        java.lang.String str26 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, 0.10062844706379001d, 12344.924101615155d, (-34365.38633275781d));
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(doubleArray31, 0.0995037190209989d);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double40 = rotation39.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation39.applyTo(rotation46);
        double double49 = rotation39.getQ0();
        double double50 = rotation39.getQ0();
        double[][] doubleArray51 = rotation39.getMatrix();
        double double52 = rotation39.getAngle();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation33.applyTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation5.applyInverseTo(rotation53);
        double double55 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2.3122509176395862d + "'", double18 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "XZY" + "'", str26, "XZY");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 52.0d + "'", double40 == 52.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.9999999926548937d + "'", double55 == 0.9999999926548937d);
    }

    @Test
    public void test09366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09366");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = java.util.Locale.GERMAN;
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale11 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str12 = locale11.getScript();
        java.util.Locale locale13 = java.util.Locale.KOREA;
        java.lang.String str14 = locale11.getDisplayLanguage(locale13);
        java.lang.String[] strArray17 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray17, (java.lang.Throwable) mathException19);
        java.io.PrintWriter printWriter21 = printWriter10.format(locale13, "YZY", (java.lang.Object[]) strArray17);
        java.io.PrintWriter printWriter22 = printWriter6.printf(locale7, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray17);
        java.io.PrintWriter printWriter24 = printWriter6.append('4');
        printWriter6.println();
        printWriter6.print(false);
        printWriter6.print(true);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.Writer) printWriter6);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(0.3331734424927659d, (double) 'a', (-0.8387792157661896d), 0.7374869648140232d, true);
        double[][] doubleArray38 = rotation37.getMatrix();
        java.io.PrintWriter printWriter39 = printWriter30.printf("org.apache.commons.math.MathException: chinois", (java.lang.Object[]) doubleArray38);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "de");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str14, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(printWriter39);
    }

    @Test
    public void test09367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09367");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        printStream16.println((float) 100L);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray27 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D29, (double) (byte) 100, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D34, (double) (byte) 100, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D31, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation26.applyInverseTo(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation26.getAxis();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation26.revert();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation41.revert();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation41.getAxis();
        double[][] doubleArray44 = rotation41.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException45 = new org.apache.commons.math.geometry.NotARotationMatrixException("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) doubleArray44);
        java.io.PrintStream printStream46 = printStream16.format("\u97d3\u6587)", (java.lang.Object[]) doubleArray44);
        java.io.PrintStream printStream48 = printStream46.append('4');
        printStream46.print('u');
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(printStream48);
    }

    @Test
    public void test09368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09368");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', 2.510959086225248d, 3.112216163995451d, 3.140233154802971d, true);
        double double6 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.09605185157004012d + "'", double6 == 0.09605185157004012d);
    }

    @Test
    public void test09369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09369");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D12, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation7.applyInverseTo(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation7.revert();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation7.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((-12804.0d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.negate();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(0.7954966866093076d, vector3D25);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D26, (-46.24849292130307d));
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 1.0f, (double) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double39 = rotation38.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double46 = rotation45.getQ0();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation38.applyTo(rotation45);
        double double48 = rotation45.getQ3();
        double double49 = rotation45.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation45.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray61 = rotation60.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation45.applyTo(rotation60);
        double double63 = rotation60.getQ2();
        double double64 = rotation60.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation60.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D65.orthogonal();
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D32, vector3D66);
        double double69 = vector3D66.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation28.applyTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.scalarMultiply(0.03576170706670322d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 52.0d + "'", double39 == 52.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 52.0d + "'", double46 == 52.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
    }

    @Test
    public void test09370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09370");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str3 = rotationOrder2.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder2.getA3();
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        double double11 = vector3D7.getY();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D4.subtract(vector3D7);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.negate();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.negate();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((-12.469000826984491d), vector3D12, 3.141592653589793d, vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str24 = rotationOrder23.toString();
        java.lang.String str25 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D(93.57684707871968d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D12.subtract(0.3403995840772179d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((-0.9950371902099893d), 0.44940223519156214d, 1.5699657548817936d);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale38 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str39 = locale38.getScript();
        java.util.Locale locale40 = java.util.Locale.KOREA;
        java.lang.String str41 = locale38.getDisplayLanguage(locale40);
        java.lang.String[] strArray44 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray44, (java.lang.Throwable) mathException46);
        java.io.PrintWriter printWriter48 = printWriter37.format(locale40, "YZY", (java.lang.Object[]) strArray44);
        printWriter48.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException54);
        java.lang.Object[] objArray56 = mathException54.getArguments();
        java.io.PrintWriter printWriter57 = printWriter48.format("org.apache.commons.math.MathException: ZXZ", objArray56);
        java.lang.Object[] objArray59 = null;
        java.io.PrintWriter printWriter60 = printWriter57.format("zho", objArray59);
        printWriter57.println((long) (byte) 0);
        printWriter57.println('u');
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str66 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA3();
        double double68 = vector3D67.getX();
        printWriter57.print((java.lang.Object) vector3D67);
        double double70 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((-1.6394241590049627E8d), vector3D27, 0.7083812450961114d, vector3D34, 0.07855646975817088d, vector3D67);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D67, (-117.0d));
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXZ" + "'", str3, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXZ" + "'", str15, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "YZY" + "'", str24, "YZY");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "YZY" + "'", str25, "YZY");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str41, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZXZ" + "'", str66, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    }

    @Test
    public void test09371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09371");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.4028887144651276d, 0.09966865249116202d, (-1.63942416E8d));
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9999999999999998d, (-0.3403913072297808d), 11983.257028037076d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZYZ" + "'", str9, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test09372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09372");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 100, (double) (-1L), (double) '4');
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1280400.0d), 102.8131477408346d, 1.0d);
        double double10 = rotation9.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.4083597724060194d + "'", double10 == 0.4083597724060194d);
    }

    @Test
    public void test09373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09373");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        byte[] byteArray91 = new byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 10 };
        printStream1.write(byteArray91);
        printStream1.println(0);
        printStream1.close();
        printStream1.println("\u6cd5\u56fd");
        java.io.PrintStream printStream98 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        java.io.PrintWriter printWriter99 = new java.io.PrintWriter((java.io.OutputStream) printStream98);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 100, -1, 10, 10]");
    }

    @Test
    public void test09374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09374");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9904757959510307d, (-0.0045352898212708305d), (-0.0307196161636463d));
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "YZX" + "'", str6, "YZX");
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test09375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09375");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        double double5 = rotation4.getAngle();
        double double6 = rotation4.getQ2();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation12.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation12.applyInverseTo(rotation28);
        double double31 = rotation12.getAngle();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double52 = rotation51.getQ0();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation44.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double60 = rotation59.getQ0();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double67 = rotation66.getQ0();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation59.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation59.revert();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation53.applyInverseTo(rotation59);
        double double71 = rotation70.getQ3();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation37.applyInverseTo(rotation70);
        double double73 = rotation72.getQ2();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation12.applyInverseTo(rotation72);
        double double75 = rotation74.getAngle();
        double double76 = rotation74.getQ0();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation4.applyTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation((double) 1L, 10.0d, (double) (byte) 1, (double) (-1L), false);
        double[][] doubleArray84 = rotation83.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation85 = rotation74.applyInverseTo(rotation83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation74.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 2.3122509176395862d + "'", double5 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.02937648959434208d) + "'", double6 == (-0.02937648959434208d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 52.0d + "'", double52 == 52.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 52.0d + "'", double67 == 52.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 128040.0d + "'", double71 == 128040.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.8373637568E10d + "'", double76 == 1.8373637568E10d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test09376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09376");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D19, (double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation11.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation11.revert();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((-12804.0d), vector3D27);
        double double29 = vector3D27.getY();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D3.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D30.normalize();
        double double32 = vector3D31.getZ();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 117.0d + "'", double4 == 117.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.0d) + "'", double29 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9110452364642151d + "'", double32 == 0.9110452364642151d);
    }

    @Test
    public void test09377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09377");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7003721519181171d, 10400.0d, (-10.0d), (double) (short) 10, true);
        double double6 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 9.615375703629842E-4d + "'", double6 == 9.615375703629842E-4d);
    }

    @Test
    public void test09378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09378");
        java.util.Locale.LanguageRange languageRange1 = new java.util.Locale.LanguageRange("inglese");
        double double2 = languageRange1.getWeight();
        double double3 = languageRange1.getWeight();
        java.lang.String str4 = languageRange1.getRange();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, 0.0d, 2.3122509176395862d, (double) (byte) 0);
        double double14 = rotation13.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation13.getAxis();
        boolean boolean16 = languageRange1.equals((java.lang.Object) rotation13);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "inglese" + "'", str4, "inglese");
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.40288871446512736d + "'", double14 == 0.40288871446512736d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09379");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3.122716047001691d, 102.8131477408346d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D7, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D17, (double) (byte) 100, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D7, (double) 0.0f, vector3D19);
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray29 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D42);
        double double44 = vector3D43.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D43.scalarMultiply((double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D21.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D2.add(vector3D47);
        double double49 = vector3D47.getDelta();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D47.normalize();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: cannot normalize a zero norm vector");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
    }

    @Test
    public void test09380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09380");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.5905084122975552d), (-1.5528772139202707E13d), (-58.089953051217215d), 1.0186212225436773d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation11.applyInverseTo(vector3D21);
        double double23 = vector3D21.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str25 = rotationOrder24.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D26.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D21.add(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ1();
        double double36 = rotation34.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D38, (double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.subtract((double) 10L, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation34.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D47.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D28.add(vector3D47);
        double double50 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation5.applyInverseTo(vector3D28);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ZXZ" + "'", str25, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 100.0d + "'", double35 == 100.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
    }

    @Test
    public void test09381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09381");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray20 = mathException18.getArguments();
        java.io.PrintWriter printWriter21 = printWriter12.format("org.apache.commons.math.MathException: ZXZ", objArray20);
        printWriter21.println();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter26 = printWriter24.append('#');
        java.lang.Object[] objArray28 = null;
        java.io.PrintWriter printWriter29 = printWriter26.format("fran\347ais", objArray28);
        java.util.Locale locale30 = null;
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray33 = mathException32.getSuppressed();
        java.io.PrintWriter printWriter34 = printWriter26.format(locale30, "zxz", (java.lang.Object[]) throwableArray33);
        char[] charArray38 = new char[] { 'a', ' ', '#' };
        printWriter34.println(charArray38);
        printWriter21.write(charArray38);
        printWriter21.println('u');
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray51 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D53, (double) (byte) 100, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D58, (double) (byte) 100, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation50.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation50.getAxis();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation50.revert();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation50.getAxis();
        double[][] doubleArray67 = rotation50.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException68 = new org.apache.commons.math.geometry.NotARotationMatrixException("zho", (java.lang.Object[]) doubleArray67);
        java.lang.Throwable[] throwableArray69 = notARotationMatrixException68.getSuppressed();
        java.io.PrintWriter printWriter70 = printWriter21.format("org.apache.commons.math.geometry.NotARotationMatrixException: yzy (KO-KR)", (java.lang.Object[]) throwableArray69);
        printWriter70.flush();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a,  , #]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(printWriter70);
    }

    @Test
    public void test09382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09382");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.KOREAN;
        java.lang.String str3 = locale2.getDisplayLanguage();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double11 = rotation10.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation10.applyTo(rotation17);
        double double20 = rotation10.getQ0();
        double double21 = rotation10.getQ0();
        double[][] doubleArray22 = rotation10.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter1.printf(locale2, "zh_CN", (java.lang.Object[]) doubleArray22);
        java.util.Locale locale24 = java.util.Locale.JAPAN;
        java.lang.String str25 = locale24.getDisplayVariant();
        java.lang.String str26 = locale24.getDisplayVariant();
        java.lang.String str27 = locale2.getDisplayVariant(locale24);
        java.lang.String str28 = locale2.getScript();
        java.lang.String str29 = locale2.getDisplayName();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "ko");
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\ud55c\uad6d\uc5b4" + "'", str3, "\ud55c\uad6d\uc5b4");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 52.0d + "'", double11 == 52.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "ja_JP");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\ud55c\uad6d\uc5b4" + "'", str29, "\ud55c\uad6d\uc5b4");
    }

    @Test
    public void test09383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09383");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (double) (byte) 1, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D(128040.0d, (-0.995037190209989d), (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation10.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D15, (-34365.38633275781d));
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D15.normalize();
        double double19 = vector3D18.getNorm();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(vector3D18, (-1.331616E8d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
    }

    @Test
    public void test09384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09384");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream91 = printStream85.append((java.lang.CharSequence) "KOR");
        printStream85.flush();
        java.lang.Object[] objArray94 = null;
        java.io.PrintStream printStream95 = printStream85.format("fr-CA", objArray94);
        printStream95.print(false);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream91);
        org.junit.Assert.assertNotNull(printStream95);
    }

    @Test
    public void test09385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09385");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fra");
        java.io.PrintWriter printWriter3 = printWriter1.append((java.lang.CharSequence) "Deutsch");
        java.io.PrintStream printStream5 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream7 = new java.io.PrintStream("ko-KR");
        printStream7.close();
        printStream7.println((double) '4');
        printStream7.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        double[][] doubleArray21 = rotation19.getMatrix();
        java.io.PrintStream printStream22 = printStream7.format("zh", (java.lang.Object[]) doubleArray21);
        printStream5.println((java.lang.Object) doubleArray21);
        char[] charArray27 = new char[] { 'a', 'a', '4' };
        printStream5.println(charArray27);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.OutputStream) printStream5, false);
        printStream5.print((int) (short) 100);
        printStream5.write((int) (byte) -1);
        java.io.PrintStream printStream36 = new java.io.PrintStream("ko-KR");
        printStream36.close();
        java.util.Locale locale38 = java.util.Locale.UK;
        java.lang.String[] strArray40 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream41 = printStream36.format(locale38, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray40);
        printStream36.println((long) 10);
        java.io.PrintStream printStream44 = new java.io.PrintStream((java.io.OutputStream) printStream36);
        char[] charArray51 = new char[] { 'u', 'x', 'x', 'a', ' ', 'x' };
        printStream44.print(charArray51);
        printStream5.println(charArray51);
        printWriter3.write(charArray51);
        printWriter3.print("org.apache.commons.math.MathException: ZH_CN");
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, a, 4]");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(printStream41);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "uxxa x");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "uxxa x");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[u, x, x, a,  , x]");
    }

    @Test
    public void test09386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09386");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println((double) (short) 100);
        byte[] byteArray17 = new byte[] { (byte) 1 };
        printStream6.write(byteArray17, 0, 1);
        printStream6.println(true);
        java.util.Locale locale23 = java.util.Locale.PRC;
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.lang.String str25 = locale23.getDisplayName(locale24);
        java.util.Locale locale28 = new java.util.Locale("ZXZ", "ko_KR");
        java.lang.String str29 = locale23.getDisplayName(locale28);
        java.lang.String str30 = locale23.getLanguage();
        java.util.Locale locale31 = locale23.stripExtensions();
        java.util.Locale locale32 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale32);
        java.lang.String str34 = locale32.toLanguageTag();
        java.lang.String str35 = locale32.getDisplayVariant();
        java.lang.String str36 = locale23.getDisplayCountry(locale32);
        java.util.Locale locale37 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str38 = locale37.getScript();
        java.util.Locale locale39 = java.util.Locale.KOREA;
        java.lang.String str40 = locale37.getDisplayLanguage(locale39);
        java.lang.String str41 = locale37.getDisplayLanguage();
        java.util.Set<java.lang.String> strSet42 = locale37.getUnicodeLocaleAttributes();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter46 = printWriter44.append('#');
        printWriter44.println((long) (short) 10);
        java.util.Locale locale49 = java.util.Locale.PRC;
        java.lang.String str50 = locale49.getDisplayVariant();
        java.lang.String[] strArray55 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray55, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray60 = mathException59.getSuppressed();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray55, (java.lang.Throwable) mathException59);
        java.lang.Throwable[] throwableArray62 = mathException59.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException63 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray62);
        java.io.PrintWriter printWriter64 = printWriter44.format(locale49, "", (java.lang.Object[]) throwableArray62);
        java.lang.String str65 = locale37.getDisplayCountry(locale49);
        java.lang.String str66 = locale23.getDisplayVariant(locale37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        double[][] doubleArray75 = rotation74.getMatrix();
        java.io.PrintStream printStream76 = printStream6.printf(locale23, "XYZ", (java.lang.Object[]) doubleArray75);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(doubleArray75, 0.6710053207609463d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(doubleArray75, (-7.026400555265525E-6d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1]");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Chinese (China)" + "'", str25, "Chinese (China)");
        org.junit.Assert.assertEquals(locale28.toString(), "zxz_KO_KR");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Chinese (China)" + "'", str29, "Chinese (China)");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "zh" + "'", str30, "zh");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ko-KR" + "'", str34, "ko-KR");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\uc911\uad6d" + "'", str36, "\uc911\uad6d");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str40, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str41, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\u53f0\u6e7e\u5730\u533a" + "'", str65, "\u53f0\u6e7e\u5730\u533a");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXZ" + "'", str69, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(printStream76);
    }

    @Test
    public void test09387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09387");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        double double21 = rotation20.getQ1();
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter25 = printWriter23.append('#');
        java.lang.Object[] objArray27 = null;
        java.io.PrintWriter printWriter28 = printWriter25.format("fran\347ais", objArray27);
        java.util.Locale locale29 = null;
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray32 = mathException31.getSuppressed();
        java.io.PrintWriter printWriter33 = printWriter25.format(locale29, "zxz", (java.lang.Object[]) throwableArray32);
        char[] charArray37 = new char[] { 'a', ' ', '#' };
        printWriter33.println(charArray37);
        java.util.Locale locale39 = java.util.Locale.FRENCH;
        java.util.Locale locale40 = java.util.Locale.FRENCH;
        java.util.Locale locale41 = java.util.Locale.TAIWAN;
        java.lang.String str42 = locale40.getDisplayScript(locale41);
        java.lang.String str43 = locale39.getDisplayLanguage(locale40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray55 = rotation54.getMatrix();
        java.io.PrintWriter printWriter56 = printWriter33.printf(locale39, "english", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(doubleArray55, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(doubleArray55, (double) (byte) 0);
        double double61 = rotation60.getQ2();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation20.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double69 = rotation68.getQ1();
        double double70 = rotation68.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D72, (double) (byte) 100, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D72.subtract((double) 10L, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation68.applyInverseTo(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.negate();
        double double83 = vector3D81.getX();
        double double84 = vector3D81.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation60.applyInverseTo(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder87.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D88.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D((-11094.094757084158d), (-0.9904757959510307d));
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D94.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D90.add((-6.797493410635224E-4d), vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D96.scalarMultiply(0.3403995840772179d);
        double double99 = org.apache.commons.math.geometry.Vector3D.angle(vector3D86, vector3D96);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "fr");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "fr");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "fran\347ais" + "'", str43, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 100.0d + "'", double69 == 100.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-121.55625799679436d) + "'", double83 == (-121.55625799679436d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 11770.079614583028d + "'", double84 == 11770.079614583028d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 2.410481519892021d + "'", double99 == 2.410481519892021d);
    }

    @Test
    public void test09388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09388");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyInverseTo(rotation11);
        double double14 = rotation5.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.getAxis();
        double double16 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double23 = rotation22.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double30 = rotation29.getQ0();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation22.applyTo(rotation29);
        double double32 = rotation22.getQ0();
        double double33 = rotation22.getQ0();
        double[][] doubleArray34 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ0();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double48 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation22.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation40.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation5.applyInverseTo(rotation51);
        double double53 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double68 = rotation67.getQ0();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation60.applyTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation60.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation76 = rotation70.applyTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation5.applyTo(rotation70);
        double double78 = rotation70.getQ1();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 52.0d + "'", double23 == 52.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 52.0d + "'", double53 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 52.0d + "'", double61 == 52.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 52.0d + "'", double68 == 52.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 100.0d + "'", double78 == 100.0d);
    }

    @Test
    public void test09389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09389");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale3 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str4 = locale3.getScript();
        java.util.Locale locale5 = java.util.Locale.KOREA;
        java.lang.String str6 = locale3.getDisplayLanguage(locale5);
        java.lang.String[] strArray9 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray9, (java.lang.Throwable) mathException11);
        java.io.PrintWriter printWriter13 = printWriter2.format(locale5, "YZY", (java.lang.Object[]) strArray9);
        printWriter13.println(0.0d);
        printWriter13.print((long) (byte) 10);
        printWriter13.println();
        printWriter13.print((int) (short) 0);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter24 = printWriter22.append('#');
        printWriter22.println((long) (short) 10);
        java.util.Locale locale27 = java.util.Locale.PRC;
        java.lang.String str28 = locale27.getDisplayVariant();
        java.lang.String[] strArray33 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray33, (java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray38 = mathException37.getSuppressed();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray33, (java.lang.Throwable) mathException37);
        java.lang.Throwable[] throwableArray40 = mathException37.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray40);
        java.io.PrintWriter printWriter42 = printWriter22.format(locale27, "", (java.lang.Object[]) throwableArray40);
        printWriter42.println((float) (short) 0);
        printWriter13.print((java.lang.Object) (short) 0);
        printWriter13.print(false);
        printWriter13.print((int) 'x');
        printWriter13.println("\ud504\ub791\uc2a4\uc5b4\ud504\ub791\uc2a4)");
        printWriter13.flush();
        printWriter13.print('#');
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ3();
        double[][] doubleArray64 = rotation62.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException65 = new org.apache.commons.math.geometry.NotARotationMatrixException("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) doubleArray64);
        java.io.PrintWriter printWriter66 = printWriter13.printf("en_CA", (java.lang.Object[]) doubleArray64);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("zxz_KOR_ko-KR", (java.lang.Object[]) doubleArray64);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str6, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 10.0d + "'", double63 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(printWriter66);
    }

    @Test
    public void test09390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09390");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ1();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation32 = rotation20.applyTo(rotation31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 100.0d + "'", double28 == 100.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(vector3D30);
    }

    @Test
    public void test09391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09391");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.884114997657917d, (double) 0, 93.57684707871968d);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-4408.190268206811d), 2.94415261623422d, (-1.8474111129762605E-13d));
        org.junit.Assert.assertNotNull(rotationOrder0);
    }

    @Test
    public void test09392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09392");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter6 = printWriter4.append('#');
        java.lang.Object[] objArray8 = null;
        java.io.PrintWriter printWriter9 = printWriter6.format("fran\347ais", objArray8);
        java.io.PrintWriter printWriter11 = printWriter6.append('a');
        printWriter6.print(100L);
        boolean boolean14 = printWriter6.checkError();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.applyTo(rotation28);
        double double31 = rotation28.getQ3();
        double[][] doubleArray32 = rotation28.getMatrix();
        java.io.PrintWriter printWriter33 = printWriter6.format("englisch", (java.lang.Object[]) doubleArray32);
        printWriter33.println(0.33033571077024615d);
        printStream1.print((java.lang.Object) printWriter33);
        printStream1.print((-3.1465847737936608E-6d));
        printStream1.close();
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(printWriter33);
    }

    @Test
    public void test09393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09393");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2000.0d), (-12804.0d), 18488.397824670512d, 0.0d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ1();
        double double20 = rotation18.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D22, (double) (byte) 100, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.subtract((double) 10L, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation18.applyInverseTo(vector3D29);
        double double32 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation11.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation18.getAxis();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((-52.0d), 1.8373637568E10d, (-0.9904757959510307d), 2.5657054957045693d, true);
        double double41 = rotation40.getQ1();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation18.applyInverseTo(rotation40);
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation5.applyTo(rotation42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation44.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        java.lang.String str48 = rotationOrder46.toString();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, 100.02049971110628d, 52.0d, 7.533817147959333E-6d);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray53 = rotation44.getAngles(rotationOrder46);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Cardan angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 100.0d + "'", double19 == 100.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-3.0171984405909804E-8d) + "'", double43 == (-3.0171984405909804E-8d));
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "XZY" + "'", str48, "XZY");
    }

    @Test
    public void test09394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09394");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract((double) 10L, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D28, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D22.subtract((double) 0, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D12.add((double) 1.0f, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D37.negate();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D38.orthogonal();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
    }

    @Test
    public void test09395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09395");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream91 = printStream85.append((java.lang.CharSequence) "KOR");
        java.io.PrintStream printStream95 = printStream85.append((java.lang.CharSequence) "Japanisch", 0, 1);
        printStream85.println('x');
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream91);
        org.junit.Assert.assertNotNull(printStream95);
    }

    @Test
    public void test09396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09396");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        double[] doubleArray10 = rotation8.getAngles(rotationOrder9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder9.getA2();
        java.lang.String str13 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (-0.09950371902099892d), 0.5309649148733835d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D19.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D14.add((-0.28722229304566843d), vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D14.negate();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D22.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXZ" + "'", str3, "ZXZ");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXZ" + "'", str4, "ZXZ");
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.7902180191116501, -0.5204312332296097, 1.8449601148260304]");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "XYZ" + "'", str13, "XYZ");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
    }

    @Test
    public void test09397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09397");
        java.io.PrintStream printStream1 = new java.io.PrintStream("Vereinigtes K\366nigreich");
        printStream1.println((long) ' ');
        java.io.PrintStream printStream5 = new java.io.PrintStream("ko-KR");
        printStream5.close();
        java.util.Locale locale7 = java.util.Locale.UK;
        java.lang.String[] strArray9 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream10 = printStream5.format(locale7, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray9);
        printStream10.write(10);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.OutputStream) printStream10);
        byte[] byteArray15 = new byte[] { (byte) -1 };
        printStream10.write(byteArray15);
        printStream10.close();
        printStream10.print((double) (-1));
        java.util.Locale.Builder builder20 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder22 = builder20.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder24 = builder22.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale25 = builder24.build();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double33 = rotation32.getQ0();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double40 = rotation39.getQ0();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation32.applyTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation32.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation48 = rotation42.applyTo(rotation47);
        double[][] doubleArray49 = rotation47.getMatrix();
        java.io.PrintStream printStream50 = printStream10.format(locale25, "ko-KR", (java.lang.Object[]) doubleArray49);
        java.io.PrintStream printStream52 = new java.io.PrintStream("ko-KR");
        printStream52.close();
        java.util.Locale locale54 = java.util.Locale.UK;
        java.lang.String[] strArray56 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream57 = printStream52.format(locale54, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray56);
        printStream52.println((long) 10);
        java.io.PrintStream printStream61 = printStream52.append('x');
        java.io.PrintStream printStream63 = printStream61.append('a');
        java.io.PrintStream printStream65 = new java.io.PrintStream("ko-KR");
        printStream65.close();
        java.util.Locale locale67 = java.util.Locale.UK;
        java.lang.String[] strArray69 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream70 = printStream65.format(locale67, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray69);
        printStream70.write(10);
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter((java.io.OutputStream) printStream70);
        byte[] byteArray75 = new byte[] { (byte) -1 };
        printStream70.write(byteArray75);
        printStream70.close();
        printStream70.println((double) (short) 100);
        byte[] byteArray81 = new byte[] { (byte) 1 };
        printStream70.write(byteArray81, 0, 1);
        printStream63.write(byteArray81, 0, (int) (short) 1);
        printStream10.write(byteArray81, (-1), (int) 'u');
        printStream1.write(byteArray81);
        printStream1.print((float) (-1));
        java.io.PrintWriter printWriter95 = new java.io.PrintWriter((java.io.OutputStream) printStream1, true);
        java.io.PrintWriter printWriter97 = new java.io.PrintWriter((java.io.Writer) printWriter95, true);
        printWriter97.write("chinois (Taiwan)");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(printStream10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1]");
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 52.0d + "'", double40 == 52.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(printStream50);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(printStream57);
        org.junit.Assert.assertNotNull(printStream61);
        org.junit.Assert.assertNotNull(printStream63);
        org.junit.Assert.assertNotNull(locale67);
        org.junit.Assert.assertEquals(locale67.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(printStream70);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[-1]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[1]");
    }

    @Test
    public void test09398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09398");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D9.negate();
        org.apache.commons.math.geometry.Vector3D vector3D12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D10.subtract(0.9998921296717797d, vector3D12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXZ" + "'", str6, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test09399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09399");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        double[][] doubleArray23 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(373547.3388035254d, (double) 1.0f, (-0.5063656411097588d), (-0.30821743242059296d), false);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation22.applyInverseTo(rotation29);
        double double31 = rotation29.getQ1();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((-0.9904757959510307d), 0.0d, (-0.0d), 0.0d, true);
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation29.applyTo(rotation40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D(0.995037190209989d, 0.0d, 198800.0d);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation41.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation53.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation53.revert();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double70 = rotation69.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation53.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation69.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D81.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D81, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation85.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D(110.14009524181563d, vector3D72, (-3.141592653589793d), vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D46.subtract(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D72.negate();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 52.0d + "'", double61 == 52.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test09400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09400");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 'a', 0.26237485370392877d, (-1.0d), 0.0d, false);
        double double6 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.negate();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
    }

    @Test
    public void test09401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09401");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream90 = new java.io.PrintStream((java.io.OutputStream) printStream85);
        printStream90.println("XYZ");
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream90);
        java.lang.Object[] objArray95 = null;
        java.io.PrintStream printStream96 = printStream90.format("\uc774\ud0c8\ub9ac\uc544\uc5b4", objArray95);
        printStream90.println("Italy");
        printStream90.println();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream96);
    }

    @Test
    public void test09402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09402");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (double) (byte) 1, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        java.lang.String str12 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "XYZ" + "'", str12, "XYZ");
    }

    @Test
    public void test09403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09403");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) (-1L), (double) (short) 10, (double) 'a');
        double double20 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation6.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation29.applyTo(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.subtract(vector3D38);
        double double40 = vector3D39.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation47.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder49.getA1();
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D48.add(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.add((double) (-1.0f), vector3D61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((-0.13715201283077028d), vector3D39, (double) (short) 0, vector3D62, 0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation19.applyInverseTo(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(3.122716047001691d, 43.364388609539944d);
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((-0.995037190209989d), vector3D72, 0.7291229553156825d, vector3D76, 1.912983406767073d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D81.negate();
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D(0.5763904177042349d, 0.0d, 1.7084812409253876d);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D81.add(vector3D87);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2.3122509176395862d + "'", double20 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 3.141592653589793d + "'", double40 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test09404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09404");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintStream printStream18 = printStream16.append('u');
        printStream16.println();
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter23 = printWriter21.append('#');
        java.lang.Object[] objArray25 = null;
        java.io.PrintWriter printWriter26 = printWriter23.format("fran\347ais", objArray25);
        java.io.PrintWriter printWriter28 = printWriter23.append('a');
        printWriter23.print(100L);
        printWriter23.println(1.7607846147136124d);
        printWriter23.flush();
        java.io.PrintWriter printWriter35 = printWriter23.append((java.lang.CharSequence) "English");
        java.io.PrintStream printStream37 = new java.io.PrintStream("ko-KR");
        printStream37.close();
        java.util.Locale locale39 = java.util.Locale.UK;
        java.lang.String[] strArray41 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream42 = printStream37.format(locale39, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray41);
        printStream42.write(10);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.OutputStream) printStream42);
        printWriter45.println(1);
        java.util.Locale locale48 = java.util.Locale.JAPANESE;
        java.util.Locale locale49 = java.util.Locale.FRENCH;
        java.util.Locale locale50 = java.util.Locale.TAIWAN;
        java.lang.String str51 = locale49.getDisplayScript(locale50);
        java.lang.String str52 = locale50.getVariant();
        java.lang.String str53 = locale48.getDisplayVariant(locale50);
        java.lang.String str54 = locale48.getDisplayCountry();
        java.lang.String[] strArray57 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray57, (java.lang.Throwable) mathException59);
        java.io.PrintWriter printWriter61 = printWriter45.format(locale48, "Englisch", (java.lang.Object[]) strArray57);
        java.io.PrintStream printStream63 = new java.io.PrintStream("ko-KR");
        printStream63.close();
        java.util.Locale locale65 = java.util.Locale.UK;
        java.lang.String[] strArray67 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream68 = printStream63.format(locale65, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray67);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter72 = printWriter70.append('#');
        java.lang.Object[] objArray74 = null;
        java.io.PrintWriter printWriter75 = printWriter72.format("fran\347ais", objArray74);
        java.util.Locale locale76 = null;
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray79 = mathException78.getSuppressed();
        java.io.PrintWriter printWriter80 = printWriter72.format(locale76, "zxz", (java.lang.Object[]) throwableArray79);
        char[] charArray84 = new char[] { 'a', ' ', '#' };
        printWriter80.println(charArray84);
        printStream63.println(charArray84);
        printWriter45.print(charArray84);
        printWriter35.write(charArray84);
        printStream16.println(charArray84);
        printStream16.println(true);
        java.io.PrintStream printStream93 = printStream16.append('#');
        java.io.PrintWriter printWriter94 = new java.io.PrintWriter((java.io.OutputStream) printStream93);
        printWriter94.println((long) 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(printStream42);
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "ja");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "fr");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(printStream68);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a,  , #]");
        org.junit.Assert.assertNotNull(printStream93);
    }

    @Test
    public void test09405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09405");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(Double.NaN, 3.140233154802971d, 1.8373637568E10d, 18488.397824670512d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, (double) '#', (double) 0L, (double) (short) 100, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double18 = rotation17.getQ3();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double25 = rotation24.getQ0();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation24.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double40 = rotation39.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation39.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation33.applyInverseTo(rotation39);
        double double51 = rotation50.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation17.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation11.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation5.applyInverseTo(rotation53);
        double double55 = rotation53.getQ3();
        double double56 = rotation53.getQ1();
        double double57 = rotation53.getQ1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D66, (double) (byte) 100, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation64.applyTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D66.subtract(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.scalarMultiply(1040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(0.5403023058681398d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation53.applyTo(vector3D78);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 52.0d + "'", double40 == 52.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 128040.0d + "'", double51 == 128040.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-8.950356005490573E7d) + "'", double55 == (-8.950356005490573E7d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-3.253905889552808E7d) + "'", double56 == (-3.253905889552808E7d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-3.253905889552808E7d) + "'", double57 == (-3.253905889552808E7d));
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test09406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09406");
        java.io.PrintStream printStream2 = new java.io.PrintStream("org.apache.commons.math.MathException: YZY");
        java.util.Locale.Category category3 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category4 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale5 = java.util.Locale.ROOT;
        java.lang.String str6 = locale5.getDisplayLanguage();
        java.util.Locale.setDefault(category4, locale5);
        java.util.Locale.setDefault(category3, locale5);
        java.util.Locale locale9 = java.util.Locale.getDefault(category3);
        java.util.Locale locale10 = java.util.Locale.getDefault(category3);
        java.util.Locale locale11 = java.util.Locale.getDefault(category3);
        java.util.Locale locale12 = java.util.Locale.JAPAN;
        java.lang.String str13 = locale12.getDisplayVariant();
        java.lang.String str14 = locale12.getDisplayVariant();
        java.util.Locale.setDefault(locale12);
        java.util.Locale.setDefault(category3, locale12);
        java.util.Locale locale17 = java.util.Locale.PRC;
        java.util.Locale locale18 = java.util.Locale.ROOT;
        java.lang.String str19 = locale17.getDisplayName(locale18);
        java.util.Locale locale22 = new java.util.Locale("ZXZ", "ko_KR");
        java.lang.String str23 = locale17.getDisplayName(locale22);
        java.util.Locale.setDefault(category3, locale17);
        java.util.Locale locale25 = java.util.Locale.ENGLISH;
        java.util.Locale locale26 = java.util.Locale.FRENCH;
        java.lang.String str27 = locale25.getDisplayCountry(locale26);
        java.util.Locale locale28 = java.util.Locale.ENGLISH;
        boolean boolean29 = locale28.hasExtensions();
        java.lang.String str30 = locale26.getDisplayCountry(locale28);
        java.lang.String str31 = locale28.getScript();
        java.util.Locale.setDefault(category3, locale28);
        java.lang.String str33 = locale28.getScript();
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter37 = printWriter35.append('#');
        java.util.Locale locale38 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double46 = rotation45.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double53 = rotation52.getQ0();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation45.applyTo(rotation52);
        double double55 = rotation52.getQ3();
        double[][] doubleArray56 = rotation52.getMatrix();
        java.io.PrintWriter printWriter57 = printWriter37.printf(locale38, "XZY", (java.lang.Object[]) doubleArray56);
        java.lang.String str58 = locale38.getISO3Language();
        java.util.Locale locale59 = java.util.Locale.PRC;
        java.util.Locale locale60 = java.util.Locale.ROOT;
        java.lang.String str61 = locale59.getDisplayName(locale60);
        java.lang.String str62 = locale38.getDisplayCountry(locale59);
        java.lang.String str63 = locale59.getDisplayName();
        java.lang.String str64 = locale28.getDisplayLanguage(locale59);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double73 = rotation72.getQ0();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double80 = rotation79.getQ0();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation72.applyTo(rotation79);
        double double82 = rotation72.getQ0();
        double double83 = rotation72.getQ0();
        double[][] doubleArray84 = rotation72.getMatrix();
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("zh-CN", (java.lang.Object[]) doubleArray84);
        java.io.PrintStream printStream86 = printStream2.printf(locale59, "org.apache.commons.math.mathexception: ", (java.lang.Object[]) doubleArray84);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("IT", (java.lang.Object[]) doubleArray84);
        java.lang.Object[] objArray88 = mathException87.getArguments();
        org.junit.Assert.assertTrue("'" + category3 + "' != '" + java.util.Locale.Category.FORMAT + "'", category3.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category4 + "' != '" + java.util.Locale.Category.FORMAT + "'", category4.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "");
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "ja_JP");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Chinese (China)" + "'", str19, "Chinese (China)");
        org.junit.Assert.assertEquals(locale22.toString(), "zxz_KO_KR");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Chinese (China)" + "'", str23, "Chinese (China)");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "fr");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 52.0d + "'", double46 == 52.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 52.0d + "'", double53 == 52.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "eng" + "'", str58, "eng");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Chinese (China)" + "'", str61, "Chinese (China)");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\u4e2d\u56fd\u8a9e\u4e2d\u83ef\u4eba\u6c11\u5171\u548c\u56fd)" + "'", str63, "\u4e2d\u56fd\u8a9e\u4e2d\u83ef\u4eba\u6c11\u5171\u548c\u56fd)");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\u82f1\u6587" + "'", str64, "\u82f1\u6587");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 52.0d + "'", double73 == 52.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 52.0d + "'", double80 == 52.0d);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 52.0d + "'", double82 == 52.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 52.0d + "'", double83 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(printStream86);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[[25407.0, 1040.0, 2000.0], [-1040.0, 5407.0, 10400.0], [2000.0, -10400.0, 5607.0]]");
    }

    @Test
    public void test09407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09407");
        java.io.PrintStream printStream2 = new java.io.PrintStream("ko-KR");
        printStream2.close();
        java.util.Locale locale4 = java.util.Locale.UK;
        java.lang.String[] strArray6 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream7 = printStream2.format(locale4, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray6);
        printStream7.write(10);
        printStream7.write((int) (short) 0);
        printStream7.write(0);
        printStream7.print("chinesisch (vereinigtes k\366nigreich)");
        printStream7.close();
        java.lang.Object[] objArray18 = null;
        java.io.PrintStream printStream19 = printStream7.format("it_IT", objArray18);
        java.util.Locale locale21 = new java.util.Locale("ko-KR");
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D30, (double) (byte) 100, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation28.applyTo(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation28.getAxis();
        double double36 = rotation28.getAngle();
        double double37 = rotation28.getQ0();
        double double38 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation28.revert();
        double[][] doubleArray40 = rotation39.getMatrix();
        java.io.PrintStream printStream41 = printStream7.printf(locale21, "France", (java.lang.Object[]) doubleArray40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("\u97d3\u56fd\u8a9e", (java.lang.Object[]) doubleArray40);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(printStream7);
        org.junit.Assert.assertNotNull(printStream19);
        org.junit.Assert.assertEquals(locale21.toString(), "ko-kr");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(printStream41);
    }

    @Test
    public void test09408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09408");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation21.revert();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D27, (double) (byte) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D32, (double) (byte) 100, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D29, (double) 0.0f, vector3D41);
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray52 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D54, (double) (byte) 100, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D59, (double) (byte) 100, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D56, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation51.applyInverseTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D64, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D64.negate();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D78, (double) (byte) 100, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation76.applyTo(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) 'x', vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) 1, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D43, 100.0d, vector3D67, 52.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation23.applyTo(vector3D85);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 60.912721436461325d + "'", double22 == 60.912721436461325d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test09409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09409");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        printStream6.println('a');
        java.io.PrintStream printStream18 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        printStream6.write(1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream6, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray29 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation28.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation43.revert();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation43.getAxis();
        double double46 = vector3D45.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D45.subtract(93.57684707871968d, vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ0();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double70 = rotation69.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation62.applyTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation62.revert();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation62.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D55.subtract(3.112216163995451d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D79, (double) (byte) 100, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.subtract((double) 10L, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D75.add(0.0657541776220426d, vector3D87);
        printStream6.print((java.lang.Object) 0.0657541776220426d);
        java.io.PrintStream printStream90 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9999999999999999d + "'", double46 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test09410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09410");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, (double) '#', (double) 0L, (double) (short) 100, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double double8 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double15 = rotation14.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyTo(rotation21);
        double double24 = rotation14.getQ0();
        double double25 = rotation14.getQ0();
        double[][] doubleArray26 = rotation14.getMatrix();
        double double27 = rotation14.getQ3();
        double double28 = rotation14.getAngle();
        double double29 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation5.applyInverseTo(rotation14);
        double double31 = rotation30.getAngle();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9438163164864175d + "'", double8 == 0.9438163164864175d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 52.0d + "'", double24 == 52.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test09411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09411");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 'a', 0.9994338863035022d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 100.0f, (double) 0.0f, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray21 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D23, (double) (byte) 100, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D28, (double) (byte) 100, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D25, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation20.applyInverseTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation35.revert();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation35.getAxis();
        double double38 = vector3D37.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str40 = rotationOrder39.toString();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D41.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D42.negate();
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D46.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str50 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D51.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D52.negate();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.subtract(10.0d, vector3D53);
        double double55 = vector3D46.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D43, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D37.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D37.scalarMultiply((-1.194520336698293d));
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D14, vector3D37);
        double double61 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D3, vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9999999999999999d + "'", double38 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ZXZ" + "'", str40, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ZXZ" + "'", str50, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-2.141592653589793d) + "'", double55 == (-2.141592653589793d));
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 34.92574904595243d + "'", double61 == 34.92574904595243d);
    }

    @Test
    public void test09412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09412");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((double) (byte) 100);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter10 = printWriter8.append('#');
        java.lang.Object[] objArray12 = null;
        java.io.PrintWriter printWriter13 = printWriter10.format("fran\347ais", objArray12);
        java.util.Locale locale14 = null;
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        java.io.PrintWriter printWriter18 = printWriter10.format(locale14, "zxz", (java.lang.Object[]) throwableArray17);
        char[] charArray22 = new char[] { 'a', ' ', '#' };
        printWriter18.println(charArray22);
        java.util.Locale locale24 = java.util.Locale.FRENCH;
        java.util.Locale locale25 = java.util.Locale.FRENCH;
        java.util.Locale locale26 = java.util.Locale.TAIWAN;
        java.lang.String str27 = locale25.getDisplayScript(locale26);
        java.lang.String str28 = locale24.getDisplayLanguage(locale25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray40 = rotation39.getMatrix();
        java.io.PrintWriter printWriter41 = printWriter18.printf(locale24, "english", (java.lang.Object[]) doubleArray40);
        printStream1.println((java.lang.Object) printWriter41);
        printStream1.println((-1.0f));
        java.io.PrintStream printStream46 = new java.io.PrintStream("ko-KR");
        printStream46.close();
        java.util.Locale locale48 = java.util.Locale.UK;
        java.lang.String[] strArray50 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream51 = printStream46.format(locale48, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray50);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter55 = printWriter53.append('#');
        java.lang.Object[] objArray57 = null;
        java.io.PrintWriter printWriter58 = printWriter55.format("fran\347ais", objArray57);
        java.util.Locale locale59 = null;
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray62 = mathException61.getSuppressed();
        java.io.PrintWriter printWriter63 = printWriter55.format(locale59, "zxz", (java.lang.Object[]) throwableArray62);
        char[] charArray67 = new char[] { 'a', ' ', '#' };
        printWriter63.println(charArray67);
        printStream46.println(charArray67);
        java.io.PrintStream printStream71 = new java.io.PrintStream("ko-KR");
        printStream71.close();
        java.util.Locale locale73 = java.util.Locale.UK;
        java.lang.String[] strArray75 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream76 = printStream71.format(locale73, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray75);
        printStream76.write(10);
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.OutputStream) printStream76);
        byte[] byteArray81 = new byte[] { (byte) -1 };
        printStream76.write(byteArray81);
        printStream46.write(byteArray81);
        java.lang.String[] strArray87 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray87, (java.lang.Throwable) mathException89);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray92 = mathException91.getSuppressed();
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray87, (java.lang.Throwable) mathException91);
        java.lang.Throwable[] throwableArray94 = mathException91.getSuppressed();
        java.io.PrintStream printStream95 = printStream46.format("", (java.lang.Object[]) throwableArray94);
        printStream1.println((java.lang.Object) printStream46);
        printStream1.println();
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "fr");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "fr");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "fran\347ais" + "'", str28, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(printStream51);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale73);
        org.junit.Assert.assertEquals(locale73.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printStream76);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[-1]");
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertNotNull(printStream95);
    }

    @Test
    public void test09413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09413");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        byte[] byteArray91 = new byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 10 };
        printStream1.write(byteArray91);
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        printStream1.println(false);
        printStream1.println('a');
        printStream1.print(true);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 100, -1, 10, 10]");
    }

    @Test
    public void test09414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09414");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.03286963174708454d), 32.0d, 1.5707963267948963d, 8095.122278323722d, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 1.5905084122975552d, (-12804.0d));
        double double24 = org.apache.commons.math.geometry.Vector3D.angle(vector3D19, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation5.applyTo(vector3D19);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray33 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D35, (double) (byte) 100, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D37, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation32.applyInverseTo(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation32.getAxis();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation32.revert();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D(0.3403995840772179d, vector3D48);
        double double50 = org.apache.commons.math.geometry.Vector3D.angle(vector3D19, vector3D49);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.4787032876674264d + "'", double24 == 1.4787032876674264d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }

    @Test
    public void test09415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09415");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        printStream1.flush();
        printStream1.println('#');
        printStream1.println(true);
        printStream1.print((float) 100L);
        printStream1.flush();
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
    }

    @Test
    public void test09416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09416");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println(true);
        byte[] byteArray18 = new byte[] { (byte) -1, (byte) 0 };
        printStream6.write(byteArray18);
        boolean boolean20 = printStream6.checkError();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D24, (double) (byte) 100, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D29, (double) (byte) 100, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D26, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D47, (double) (byte) 100, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D44, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D31, (double) (byte) 1, vector3D39, (double) (short) 100, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, vector3D39, (double) 0L, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D56.scalarMultiply((double) (byte) 10);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D70, (double) (byte) 100, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation68.applyTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) 'x', vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) 1, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D56.add((-10.358482905538347d), vector3D76);
        printStream6.print((java.lang.Object) (-10.358482905538347d));
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printWriter79.println();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D77);
    }

    @Test
    public void test09417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09417");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', 2.510959086225248d, 3.112216163995451d, 3.140233154802971d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 0.0d, 3.2539077042633276E7d, (-34365.38633275781d));
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.applyTo(rotation19);
        double double21 = rotation20.getQ2();
        double double22 = rotation20.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXZ" + "'", str7, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.22930785853209695d + "'", double21 == 0.22930785853209695d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2.8787514182131146d + "'", double22 == 2.8787514182131146d);
    }

    @Test
    public void test09418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09418");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.718040514139729d), (-0.4868480326421398d), 2.4926135173144037d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XZY" + "'", str2, "XZY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
    }

    @Test
    public void test09419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09419");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream91 = printStream85.append((java.lang.CharSequence) "KOR");
        java.io.PrintWriter printWriter92 = new java.io.PrintWriter((java.io.OutputStream) printStream85);
        printWriter92.print("coreano");
        printWriter92.println((long) (short) 1);
        printWriter92.println();
        printWriter92.print((double) (-1.0f));
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream91);
    }

    @Test
    public void test09420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09420");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.print((float) 100L);
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation11.applyInverseTo(rotation27);
        double[][] doubleArray30 = rotation11.getMatrix();
        java.io.PrintWriter printWriter31 = printWriter4.printf("zh", (java.lang.Object[]) doubleArray30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double39 = rotation38.getQ1();
        double double40 = rotation38.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.subtract((double) 10L, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyInverseTo(vector3D49);
        double[][] doubleArray52 = rotation38.getMatrix();
        java.io.PrintWriter printWriter53 = printWriter31.format("XZY", (java.lang.Object[]) doubleArray52);
        printWriter31.print('#');
        printWriter31.print(0L);
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter31);
        printWriter58.flush();
        printWriter58.print((float) (-1));
        boolean boolean62 = printWriter58.checkError();
        printWriter58.flush();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 100.0d + "'", double39 == 100.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 52.0d + "'", double40 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test09421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09421");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation5.applyInverseTo(rotation21);
        double double24 = rotation21.getQ1();
        double double25 = rotation21.getQ3();
        double double26 = rotation21.getQ1();
        double double27 = rotation21.getQ3();
        double double28 = rotation21.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 100.0d + "'", double24 == 100.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 100.0d + "'", double26 == 100.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
    }

    @Test
    public void test09422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09422");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder7.getA1();
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D6.add(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.add((double) (-1.0f), vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation36.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D49, vector3D50);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D60, (double) (byte) 100, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation58.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D60.subtract(vector3D67);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray75 = rotation74.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D77, (double) (byte) 100, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D82, (double) (byte) 100, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D79, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation74.applyInverseTo(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D87, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D67, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((-3.141592653589793d), vector3D25, (double) '4', vector3D29, (double) 0, vector3D49, 0.0d, vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D19.add((double) '4', vector3D29);
        double double93 = vector3D29.getNorm();
        double double94 = vector3D29.getNorm();
        double double95 = vector3D29.getNorm();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.9999999999999999d + "'", double93 == 0.9999999999999999d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.9999999999999999d + "'", double94 == 0.9999999999999999d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.9999999999999999d + "'", double95 == 0.9999999999999999d);
    }

    @Test
    public void test09423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09423");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        byte[] byteArray91 = new byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 10 };
        printStream1.write(byteArray91);
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        printStream1.println(false);
        java.io.PrintWriter printWriter96 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        printWriter96.println();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 100, -1, 10, 10]");
    }

    @Test
    public void test09424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09424");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100.0f, (double) 0.0f, 0.0d);
        double double10 = rotation9.getQ0();
        double double11 = rotation9.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation9.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(0.0d, 93.57684707871968d, 0.024645430941207122d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D(1040.0d, (double) (byte) 10, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D24, (double) (byte) 100, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D29, (double) (byte) 100, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D26, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D47, (double) (byte) 100, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D44, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D31, (double) (byte) 1, vector3D39, (double) (short) 100, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D31.negate();
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) (-1), vector3D31);
        double double55 = vector3D31.getAlpha();
        double double56 = vector3D31.getNorm();
        double double57 = vector3D31.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D20, vector3D31);
        double double59 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation9.applyInverseTo(vector3D20);
        double double61 = rotation9.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation9.getAxis();
        double double63 = rotation9.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D(0.0d, (double) 100.0f, (double) (-1.0f));
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.scalarMultiply((-11094.094757084158d));
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D69.negate();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation9.applyTo(vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9649660284921133d + "'", double10 == 0.9649660284921133d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9649660284921133d + "'", double11 == 0.9649660284921133d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 935.7438253562556d + "'", double59 == 935.7438253562556d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5309649148733836d + "'", double61 == 0.5309649148733836d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.5309649148733836d + "'", double63 == 0.5309649148733836d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
    }

    @Test
    public void test09425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09425");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        printWriter1.println((long) (short) 10);
        java.util.Locale locale6 = java.util.Locale.PRC;
        java.lang.String str7 = locale6.getDisplayVariant();
        java.lang.String[] strArray12 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray19 = mathException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray19);
        java.io.PrintWriter printWriter21 = printWriter1.format(locale6, "", (java.lang.Object[]) throwableArray19);
        printWriter1.println();
        printWriter1.println(true);
        printWriter1.println('#');
        printWriter1.close();
        printWriter1.println();
        java.io.PrintWriter printWriter30 = printWriter1.append((java.lang.CharSequence) "\u4e2d\u6587\u4e2d\u56fd)");
        java.io.PrintStream printStream32 = new java.io.PrintStream("ko-KR");
        printStream32.close();
        java.util.Locale locale34 = java.util.Locale.UK;
        java.lang.String[] strArray36 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream37 = printStream32.format(locale34, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray36);
        printStream37.write(10);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.OutputStream) printStream37);
        byte[] byteArray42 = new byte[] { (byte) -1 };
        printStream37.write(byteArray42);
        printStream37.close();
        printStream37.println((double) (short) 100);
        byte[] byteArray48 = new byte[] { (byte) 1 };
        printStream37.write(byteArray48, 0, 1);
        printStream37.println(true);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double60 = rotation59.getQ0();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double67 = rotation66.getQ0();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation59.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double75 = rotation74.getQ0();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double82 = rotation81.getQ0();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation74.applyTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation74.revert();
        org.apache.commons.math.geometry.Rotation rotation85 = rotation68.applyInverseTo(rotation74);
        printStream37.print((java.lang.Object) rotation74);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation74.getAxis();
        double double88 = rotation74.getQ3();
        printWriter30.println((java.lang.Object) rotation74);
        printWriter30.println((int) (byte) 100);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(printStream37);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 52.0d + "'", double67 == 52.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 52.0d + "'", double75 == 52.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 52.0d + "'", double82 == 52.0d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 10.0d + "'", double88 == 10.0d);
    }

    @Test
    public void test09426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09426");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation15.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray32 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D34, (double) (byte) 100, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D36, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation31.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D44, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D24.subtract((double) 100, vector3D46);
        double double48 = org.apache.commons.math.geometry.Vector3D.angle(vector3D22, vector3D24);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D24, (-1.569740199951139d));
        double double51 = vector3D24.getY();
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D(103.60501918343533d, (-3.0207621669026776E-6d), 0.09966865249116202d);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.normalize();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.4711276743037345d + "'", double48 == 1.4711276743037345d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
    }

    @Test
    public void test09427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09427");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        printStream1.println(1.4711276743037345d);
        java.io.PrintStream printStream94 = printStream1.append((java.lang.CharSequence) "org.apache.commons.math.geometry.NotARotationMatrixException: Germany");
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertNotNull(printStream94);
    }

    @Test
    public void test09428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09428");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((double) (byte) 100);
        printStream1.println((long) (short) -1);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        printWriter9.print((-1));
        java.io.PrintStream printStream13 = new java.io.PrintStream("ko-KR");
        printStream13.close();
        java.util.Locale locale15 = java.util.Locale.UK;
        java.lang.String[] strArray17 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream18 = printStream13.format(locale15, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray17);
        printStream18.write(10);
        printStream18.write((int) (short) 0);
        printStream18.write((int) (short) 10);
        char[] charArray27 = new char[] { 'x', 'a' };
        printStream18.println(charArray27);
        printWriter9.println(charArray27);
        printWriter9.println(false);
        printWriter9.print(false);
        java.util.Locale.Builder builder34 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder36 = builder34.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder38 = builder34.setLanguage("ZXZ");
        java.util.Locale.Builder builder39 = builder34.clearExtensions();
        java.util.Locale.Builder builder41 = builder39.setLanguage("fr");
        java.util.Locale.Builder builder43 = builder41.setLanguageTag("de");
        java.util.Locale.Category category44 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.lang.String str46 = locale45.getDisplayLanguage();
        java.util.Locale.setDefault(category44, locale45);
        java.util.Locale locale48 = java.util.Locale.getDefault(category44);
        java.util.Locale.Builder builder49 = builder43.setLocale(locale48);
        printWriter9.println((java.lang.Object) builder43);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("KOR");
        java.io.PrintWriter printWriter55 = printWriter53.append((java.lang.CharSequence) "englisch");
        java.io.PrintWriter printWriter57 = printWriter53.append((java.lang.CharSequence) "org.apache.commons.math.MathException: ZXZ");
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        printWriter58.close();
        java.io.PrintWriter printWriter61 = printWriter58.append(' ');
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException64 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray65 = cardanEulerSingularityException64.getSuppressed();
        java.io.PrintWriter printWriter66 = printWriter58.printf("\u30d5\u30e9\u30f3\u30b9\u8a9e", (java.lang.Object[]) throwableArray65);
        java.io.PrintWriter printWriter67 = printWriter9.printf("it", (java.lang.Object[]) throwableArray65);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "xa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "xa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[x, a]");
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + category44 + "' != '" + java.util.Locale.Category.FORMAT + "'", category44.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "");
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(printWriter67);
    }

    @Test
    public void test09429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09429");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter10 = printWriter8.append('#');
        java.lang.Object[] objArray12 = null;
        java.io.PrintWriter printWriter13 = printWriter10.format("fran\347ais", objArray12);
        java.util.Locale locale14 = null;
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        java.io.PrintWriter printWriter18 = printWriter10.format(locale14, "zxz", (java.lang.Object[]) throwableArray17);
        char[] charArray22 = new char[] { 'a', ' ', '#' };
        printWriter18.println(charArray22);
        printStream1.println(charArray22);
        java.io.PrintStream printStream26 = new java.io.PrintStream((java.io.OutputStream) printStream1, true);
        printStream26.flush();
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter31 = printWriter29.append('#');
        java.lang.Object[] objArray33 = null;
        java.io.PrintWriter printWriter34 = printWriter31.format("fran\347ais", objArray33);
        java.io.PrintWriter printWriter36 = printWriter31.append('a');
        printWriter31.print(100L);
        boolean boolean39 = printWriter31.checkError();
        printWriter31.flush();
        java.io.PrintWriter printWriter42 = printWriter31.append('#');
        printWriter42.println('a');
        printStream26.println((java.lang.Object) printWriter42);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation51.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder53.getA1();
        double double59 = vector3D58.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D58.add((double) (-1.0f), vector3D65);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation((-0.0d), 1.4711276743037345d, 128040.0d, 0.4028887144651276d, false);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation74.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D75.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D58.subtract((-8.950356005490573E7d), vector3D77);
        printWriter42.print((java.lang.Object) (-8.950356005490573E7d));
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , #]");
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
    }

    @Test
    public void test09430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09430");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray20 = mathException18.getArguments();
        java.io.PrintWriter printWriter21 = printWriter12.format("org.apache.commons.math.MathException: ZXZ", objArray20);
        java.lang.Object[] objArray23 = null;
        java.io.PrintWriter printWriter24 = printWriter21.format("zho", objArray23);
        printWriter21.println((long) (byte) 0);
        java.io.PrintStream printStream29 = new java.io.PrintStream("ko-KR");
        printStream29.close();
        java.util.Locale locale31 = java.util.Locale.UK;
        java.lang.String[] strArray33 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream34 = printStream29.format(locale31, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray33);
        printStream34.write(10);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.OutputStream) printStream34);
        printStream34.print((int) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation46.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double62 = rotation61.getQ0();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double69 = rotation68.getQ0();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation61.applyTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation61.revert();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation55.applyInverseTo(rotation61);
        double[][] doubleArray73 = rotation55.getMatrix();
        java.io.PrintStream printStream74 = printStream34.printf("zh", (java.lang.Object[]) doubleArray73);
        java.io.PrintWriter printWriter75 = printWriter21.printf("\u97d3\u6587)", (java.lang.Object[]) doubleArray73);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        boolean boolean77 = printWriter76.checkError();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(printStream34);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 52.0d + "'", double69 == 52.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(printStream74);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test09431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09431");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.close();
        java.util.Locale locale14 = java.util.Locale.FRANCE;
        printWriter12.println((java.lang.Object) locale14);
        printWriter12.println((int) (byte) 10);
        printWriter12.println((long) (short) 10);
        printWriter12.print("DEU");
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (-1L), (double) (short) 10, (double) 'a');
        double double35 = rotation34.getAngle();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.applyInverseTo(rotation34);
        double[][] doubleArray37 = rotation34.getMatrix();
        java.io.PrintWriter printWriter38 = printWriter12.printf("\u97d3\u6587\u5357\u97d3)", (java.lang.Object[]) doubleArray37);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter12, true);
        java.io.PrintWriter printWriter42 = printWriter12.append('u');
        java.io.PrintWriter printWriter44 = printWriter12.append((java.lang.CharSequence) "org.apache.commons.math.MathException: ZH_CN");
        printWriter44.print((long) 'a');
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr_FR");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2.3122509176395862d + "'", double35 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(printWriter44);
    }

    @Test
    public void test09432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09432");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter((java.io.OutputStream) printStream1, true);
        printStream1.print((long) (byte) 10);
        java.util.Locale locale8 = new java.util.Locale("hi!", "\u97d3\u6587");
        java.lang.String str10 = locale8.getExtension('x');
        java.util.Locale locale12 = new java.util.Locale("\uc911\uad6d\uc5b4");
        java.lang.String str13 = locale12.getCountry();
        java.lang.String str14 = locale12.toLanguageTag();
        java.lang.String str15 = locale8.getDisplayVariant(locale12);
        java.io.PrintStream printStream18 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream20 = new java.io.PrintStream("ko-KR");
        printStream20.close();
        printStream20.println((double) '4');
        printStream20.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double33 = rotation32.getQ0();
        double[][] doubleArray34 = rotation32.getMatrix();
        java.io.PrintStream printStream35 = printStream20.format("zh", (java.lang.Object[]) doubleArray34);
        printStream18.println((java.lang.Object) doubleArray34);
        char[] charArray40 = new char[] { 'a', 'a', '4' };
        printStream18.println(charArray40);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter((java.io.OutputStream) printStream18, false);
        printStream18.println(0.0f);
        java.util.Locale.Category category46 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale47 = java.util.Locale.ROOT;
        java.lang.String str48 = locale47.getDisplayLanguage();
        java.util.Locale.setDefault(category46, locale47);
        java.util.Locale locale50 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale50);
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.TAIWAN;
        java.lang.String str54 = locale52.getDisplayScript(locale53);
        java.lang.String str55 = locale50.getDisplayLanguage(locale53);
        java.util.Locale.setDefault(category46, locale53);
        java.lang.String str58 = locale53.getExtension('a');
        java.util.Set<java.lang.String> strSet59 = locale53.getUnicodeLocaleKeys();
        java.io.PrintStream printStream62 = new java.io.PrintStream("ko-KR");
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale66 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str67 = locale66.getScript();
        java.util.Locale locale68 = java.util.Locale.KOREA;
        java.lang.String str69 = locale66.getDisplayLanguage(locale68);
        java.lang.String[] strArray72 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray72, (java.lang.Throwable) mathException74);
        java.io.PrintWriter printWriter76 = printWriter65.format(locale68, "YZY", (java.lang.Object[]) strArray72);
        java.io.PrintStream printStream77 = printStream62.format("org.apache.commons.math.geometry.NotARotationMatrixException: ", (java.lang.Object[]) strArray72);
        java.io.PrintStream printStream78 = printStream18.format(locale53, "org.apache.commons.math.MathException: Deutsch", (java.lang.Object[]) strArray72);
        java.io.PrintStream printStream79 = printStream1.format(locale12, "ORG.APACHE.COMMONS.MATH.MATHEXCEPTION", (java.lang.Object[]) strArray72);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = locale12.getUnicodeLocaleType("org.apache.commons.math.MathException: cor\351en");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Ill-formed Unicode locale key: org.apache.commons.math.MathException: core?en");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals(locale8.toString(), "\u97d3\u6587");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals(locale12.toString(), "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "und" + "'", str14, "und");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(printStream35);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, a, 4]");
        org.junit.Assert.assertTrue("'" + category46 + "' != '" + java.util.Locale.Category.FORMAT + "'", category46.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\u97d3\u6587" + "'", str55, "\u97d3\u6587");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str69, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printStream77);
        org.junit.Assert.assertNotNull(printStream78);
        org.junit.Assert.assertNotNull(printStream79);
    }

    @Test
    public void test09433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09433");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintStream printStream18 = printStream16.append('u');
        java.io.PrintStream printStream20 = new java.io.PrintStream("ko-KR");
        printStream20.close();
        java.util.Locale locale22 = java.util.Locale.UK;
        java.lang.String[] strArray24 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream25 = printStream20.format(locale22, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray24);
        printStream25.write(10);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.OutputStream) printStream25);
        printStream25.print((int) (short) 1);
        java.io.PrintStream printStream32 = new java.io.PrintStream("ko-KR");
        printStream32.close();
        java.util.Locale locale34 = java.util.Locale.UK;
        java.lang.String[] strArray36 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream37 = printStream32.format(locale34, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray36);
        printStream37.write(10);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.OutputStream) printStream37);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale43 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str44 = locale43.getScript();
        java.util.Locale locale45 = java.util.Locale.KOREA;
        java.lang.String str46 = locale43.getDisplayLanguage(locale45);
        java.lang.String[] strArray49 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray49, (java.lang.Throwable) mathException51);
        java.io.PrintWriter printWriter53 = printWriter42.format(locale45, "YZY", (java.lang.Object[]) strArray49);
        printWriter53.println(0.0d);
        printWriter53.print((long) (byte) 10);
        printWriter53.println();
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter62 = printWriter60.append('#');
        java.lang.Object[] objArray64 = null;
        java.io.PrintWriter printWriter65 = printWriter62.format("fran\347ais", objArray64);
        java.util.Locale locale66 = null;
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray69 = mathException68.getSuppressed();
        java.io.PrintWriter printWriter70 = printWriter62.format(locale66, "zxz", (java.lang.Object[]) throwableArray69);
        char[] charArray74 = new char[] { 'a', ' ', '#' };
        printWriter70.println(charArray74);
        printWriter53.write(charArray74);
        printWriter40.write(charArray74);
        printStream25.println(charArray74);
        printStream16.print(charArray74);
        printStream16.println();
        printStream16.close();
        java.io.PrintStream printStream82 = new java.io.PrintStream((java.io.OutputStream) printStream16);
        printStream82.println((float) (short) 10);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(printStream25);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(printStream37);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str46, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a,  , #]");
    }

    @Test
    public void test09434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09434");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintStream printStream47 = new java.io.PrintStream((java.io.OutputStream) printStream46);
        java.io.PrintStream printStream49 = new java.io.PrintStream((java.io.OutputStream) printStream47, false);
        printStream49.println((long) '#');
        printStream49.println(0);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
    }

    @Test
    public void test09435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09435");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray20 = mathException18.getArguments();
        java.io.PrintWriter printWriter21 = printWriter12.format("org.apache.commons.math.MathException: ZXZ", objArray20);
        java.lang.Object[] objArray23 = null;
        java.io.PrintWriter printWriter24 = printWriter21.format("zho", objArray23);
        printWriter21.println((long) (byte) 0);
        java.io.PrintStream printStream29 = new java.io.PrintStream("ko-KR");
        printStream29.close();
        java.util.Locale locale31 = java.util.Locale.UK;
        java.lang.String[] strArray33 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream34 = printStream29.format(locale31, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray33);
        printStream34.write(10);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.OutputStream) printStream34);
        printStream34.print((int) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation46.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double62 = rotation61.getQ0();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double69 = rotation68.getQ0();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation61.applyTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation61.revert();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation55.applyInverseTo(rotation61);
        double[][] doubleArray73 = rotation55.getMatrix();
        java.io.PrintStream printStream74 = printStream34.printf("zh", (java.lang.Object[]) doubleArray73);
        java.io.PrintWriter printWriter75 = printWriter21.printf("\u97d3\u6587)", (java.lang.Object[]) doubleArray73);
        java.io.PrintWriter printWriter77 = new java.io.PrintWriter((java.io.Writer) printWriter21, true);
        printWriter21.print(100L);
        boolean boolean80 = printWriter21.checkError();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(printStream34);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 52.0d + "'", double69 == 52.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(printStream74);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test09436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09436");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        double[][] doubleArray23 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(373547.3388035254d, (double) 1.0f, (-0.5063656411097588d), (-0.30821743242059296d), false);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation22.applyInverseTo(rotation29);
        double double31 = rotation29.getQ1();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((-0.9904757959510307d), 0.0d, (-0.0d), 0.0d, true);
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation29.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double48 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double55 = rotation54.getQ0();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation47.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation47.revert();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double64 = rotation63.getQ0();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation47.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation47.revert();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D74.subtract(vector3D81);
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str84 = rotationOrder83.toString();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder83.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D85.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D82.subtract(vector3D86);
        double double88 = vector3D82.getY();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation47.applyInverseTo(vector3D82);
        double double90 = rotation47.getQ1();
        double double91 = rotation47.getQ1();
        org.apache.commons.math.geometry.Rotation rotation92 = rotation40.applyTo(rotation47);
        double double93 = rotation92.getQ1();
        double double94 = rotation92.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 52.0d + "'", double55 == 52.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 52.0d + "'", double64 == 52.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ZXZ" + "'", str84, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 100.0d + "'", double90 == 100.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
        org.junit.Assert.assertNotNull(rotation92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 99.99999999999999d + "'", double93 == 99.99999999999999d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 99.99999999999999d + "'", double94 == 99.99999999999999d);
    }

    @Test
    public void test09437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09437");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream91 = printStream85.append((java.lang.CharSequence) "KOR");
        java.io.PrintStream printStream92 = new java.io.PrintStream((java.io.OutputStream) printStream85);
        java.io.PrintStream printStream94 = new java.io.PrintStream((java.io.OutputStream) printStream92, true);
        boolean boolean95 = printStream92.checkError();
        printStream92.print('a');
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream91);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test09438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09438");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        printStream85.println((long) (short) 0);
        boolean boolean90 = printStream85.checkError();
        java.io.PrintStream printStream91 = new java.io.PrintStream((java.io.OutputStream) printStream85);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test09439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09439");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation6.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation21.applyTo(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D28.orthogonal();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
    }

    @Test
    public void test09440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09440");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("zxz_KO_KR");
        java.util.Locale.Builder builder2 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder4 = builder2.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder6 = builder2.setLanguage("ZXZ");
        java.util.Locale locale7 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder8 = builder2.setLocale(locale7);
        java.util.Locale locale9 = java.util.Locale.CANADA;
        java.util.Locale.Builder builder10 = builder2.setLocale(locale9);
        java.util.Locale.Builder builder12 = builder2.setScript("");
        java.util.Locale locale13 = builder2.build();
        java.util.Locale.Builder builder14 = builder2.clearExtensions();
        java.util.Locale locale15 = builder14.build();
        java.util.Set<java.lang.Character> charSet16 = locale15.getExtensionKeys();
        java.util.Locale locale17 = java.util.Locale.JAPANESE;
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.lang.String str21 = locale19.getVariant();
        java.lang.String str22 = locale17.getDisplayVariant(locale19);
        java.lang.String str23 = locale15.getDisplayVariant(locale19);
        java.lang.String str24 = locale15.getDisplayCountry();
        java.io.PrintStream printStream27 = new java.io.PrintStream("ko-KR");
        printStream27.close();
        printStream27.println((double) '4');
        printStream27.print("\ub3c5\uc77c\uc5b4");
        printStream27.print(false);
        printStream27.println(true);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.OutputStream) printStream27, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str41 = rotationOrder40.toString();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D46, 2.3122509176395862d);
        double[][] doubleArray49 = rotation48.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(doubleArray49, 0.0d);
        java.io.PrintWriter printWriter52 = printWriter38.printf("\uc774\ud0c8\ub9ac\uc544\uc5b4", (java.lang.Object[]) doubleArray49);
        java.io.PrintWriter printWriter53 = printWriter1.printf(locale15, "cor\351en", (java.lang.Object[]) doubleArray49);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_CA");
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_CA");
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_CA");
        org.junit.Assert.assertNotNull(charSet16);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "ja");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Canada" + "'", str24, "Canada");
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "XZY" + "'", str41, "XZY");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(printWriter53);
    }

    @Test
    public void test09441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09441");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println(true);
        printStream6.print(true);
        printStream6.println();
        java.io.PrintStream printStream20 = printStream6.append('u');
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter((java.io.OutputStream) printStream20);
        printStream20.println("zxz");
        java.io.PrintStream printStream24 = new java.io.PrintStream((java.io.OutputStream) printStream20);
        java.io.PrintStream printStream26 = new java.io.PrintStream("ko-KR");
        printStream26.close();
        java.util.Locale locale28 = java.util.Locale.UK;
        java.lang.String[] strArray30 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream31 = printStream26.format(locale28, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray30);
        printStream31.write(10);
        printStream31.print((double) (byte) 100);
        printStream31.println(false);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.OutputStream) printStream31);
        java.io.PrintStream printStream39 = new java.io.PrintStream((java.io.OutputStream) printStream31);
        java.io.PrintStream printStream41 = new java.io.PrintStream((java.io.OutputStream) printStream39, false);
        java.io.PrintStream printStream43 = new java.io.PrintStream("ko-KR");
        printStream43.close();
        java.util.Locale locale45 = java.util.Locale.UK;
        java.lang.String[] strArray47 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream48 = printStream43.format(locale45, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray47);
        printStream48.write(10);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter((java.io.OutputStream) printStream48);
        printStream48.print((int) (short) 1);
        printStream48.println((double) 100L);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.OutputStream) printStream48, false);
        printWriter57.print((float) (byte) 10);
        java.io.PrintStream printStream61 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream63 = new java.io.PrintStream("ko-KR");
        printStream63.close();
        printStream63.println((double) '4');
        printStream63.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double76 = rotation75.getQ0();
        double[][] doubleArray77 = rotation75.getMatrix();
        java.io.PrintStream printStream78 = printStream63.format("zh", (java.lang.Object[]) doubleArray77);
        printStream61.println((java.lang.Object) doubleArray77);
        char[] charArray83 = new char[] { 'a', 'a', '4' };
        printStream61.println(charArray83);
        printWriter57.print(charArray83);
        printStream41.print(charArray83);
        printStream24.print(charArray83);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(printStream20);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(printStream31);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(printStream48);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 52.0d + "'", double76 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(printStream78);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[a, a, 4]");
    }

    @Test
    public void test09442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09442");
        java.io.PrintStream printStream2 = new java.io.PrintStream("ko-KR");
        printStream2.close();
        printStream2.println((double) '4');
        printStream2.print("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream9 = printStream2.append((java.lang.CharSequence) "yzy");
        printStream2.println((long) 100);
        printStream2.println("UNITED KINGDOM");
        printStream2.close();
        java.io.PrintStream printStream17 = new java.io.PrintStream("ko-KR");
        printStream17.close();
        java.util.Locale locale19 = java.util.Locale.UK;
        java.lang.String[] strArray21 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream22 = printStream17.format(locale19, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray21);
        printStream17.println((long) 10);
        java.io.PrintStream printStream26 = printStream17.append('x');
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.OutputStream) printStream26, false);
        printStream26.close();
        printStream26.println((int) 'x');
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double46 = rotation45.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) (-1L), (double) (short) 10, (double) 'a');
        double double52 = rotation51.getAngle();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation45.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation38.applyTo(rotation51);
        double[][] doubleArray55 = rotation54.getMatrix();
        java.io.PrintStream printStream56 = printStream26.format("\ud55c\uad6d\uc5b4\ub300\ud55c\ubbfc\uad6d)", (java.lang.Object[]) doubleArray55);
        java.io.PrintStream printStream57 = printStream2.printf("Germany", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("zh-TW", (java.lang.Object[]) doubleArray55);
        java.lang.Throwable[] throwableArray59 = mathException58.getSuppressed();
        org.junit.Assert.assertNotNull(printStream9);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(printStream26);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 52.0d + "'", double46 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2.3122509176395862d + "'", double52 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(printStream56);
        org.junit.Assert.assertNotNull(printStream57);
        org.junit.Assert.assertNotNull(throwableArray59);
    }

    @Test
    public void test09443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09443");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double[][] doubleArray15 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation21.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation14.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder33.getA1();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray37 = rotation31.getAngles(rotationOrder33);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Cardan angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
    }

    @Test
    public void test09444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09444");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        printStream90.print(' ');
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream90);
        printWriter93.print((int) 'u');
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
    }

    @Test
    public void test09445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09445");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\u65e5\u672c");
        java.util.Locale locale2 = null;
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException5.getSuppressed();
        java.io.PrintStream printStream7 = printStream1.printf(locale2, "\uc601\uc5b4\uc601\uad6d)", (java.lang.Object[]) throwableArray6);
        printStream1.println(1.9114895613862057d);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(printStream7);
    }

    @Test
    public void test09446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09446");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D18, (double) (byte) 100, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D23, (double) (byte) 100, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D20, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D30, (double) (byte) 100, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D41, (double) (byte) 100, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D38, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D25, (double) (byte) 1, vector3D33, (double) (short) 100, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D25.negate();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D25.negate();
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D48);
        double double51 = vector3D48.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double58 = rotation57.getQ1();
        double double59 = rotation57.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D61, (double) (byte) 100, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D61.subtract((double) 10L, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation57.applyInverseTo(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D70.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D48.subtract(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.scalarMultiply((double) 'x');
        double double76 = vector3D75.getX();
        double double77 = vector3D75.getNorm();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.0d) + "'", double49 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-3.141592653589793d) + "'", double51 == (-3.141592653589793d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 100.0d + "'", double58 == 100.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 52.0d + "'", double59 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-14586.750959615323d) + "'", double76 == (-14586.750959615323d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1412409.5537499634d + "'", double77 == 1412409.5537499634d);
    }

    @Test
    public void test09447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09447");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str6 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 1, (double) (byte) 0, 0.0d);
        double[] doubleArray11 = rotation4.getAngles(rotationOrder5);
        java.lang.String str12 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (-8.796375736716321d), (-1.4112305789528137d), 3.1415635545425706d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XZY" + "'", str6, "XZY");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[NaN, NaN, NaN]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "XZY" + "'", str12, "XZY");
    }

    @Test
    public void test09448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09448");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((double) (byte) 100);
        printStream1.println((long) (short) -1);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        printWriter9.print((-1));
        java.io.PrintStream printStream13 = new java.io.PrintStream("ko-KR");
        printStream13.close();
        java.util.Locale locale15 = java.util.Locale.UK;
        java.lang.String[] strArray17 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream18 = printStream13.format(locale15, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray17);
        printStream18.write(10);
        printStream18.write((int) (short) 0);
        printStream18.write((int) (short) 10);
        char[] charArray27 = new char[] { 'x', 'a' };
        printStream18.println(charArray27);
        printWriter9.println(charArray27);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter9, false);
        printWriter31.write(0);
        java.util.Locale locale34 = java.util.Locale.FRENCH;
        java.util.Locale locale35 = java.util.Locale.FRENCH;
        java.util.Locale locale36 = java.util.Locale.TAIWAN;
        java.lang.String str37 = locale35.getDisplayScript(locale36);
        java.lang.String str38 = locale34.getDisplayLanguage(locale35);
        boolean boolean39 = locale35.hasExtensions();
        java.util.Locale.Builder builder40 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder42 = builder40.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale43 = builder40.build();
        java.lang.String str44 = locale35.getDisplayLanguage(locale43);
        java.lang.String str45 = locale43.getCountry();
        java.util.Set<java.lang.String> strSet46 = locale43.getUnicodeLocaleKeys();
        java.lang.String str47 = locale43.getDisplayCountry();
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation60.getAxis();
        double[][] doubleArray62 = rotation60.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(doubleArray62, (double) (short) 0);
        java.io.PrintWriter printWriter65 = printWriter31.printf(locale43, "zxz_KO_KR", (java.lang.Object[]) doubleArray62);
        printWriter65.close();
        printWriter65.println(100);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("ja");
        printWriter70.print(false);
        printWriter70.write((int) (byte) 100);
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter((java.io.Writer) printWriter70);
        printWriter70.write((int) 'a');
        char[] charArray83 = new char[] { '#', 'u', 'a', '4', 'a' };
        printWriter70.write(charArray83);
        printWriter65.write(charArray83, (int) (byte) 0, (-1));
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "xa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "xa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[x, a]");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "fr");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "fr");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "fran\347ais" + "'", str38, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "French" + "'", str44, "French");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#ua4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#ua4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, u, a, 4, a]");
    }

    @Test
    public void test09449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09449");
        java.util.Locale.Category category0 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale1 = java.util.Locale.ROOT;
        java.lang.String str2 = locale1.getDisplayLanguage();
        java.util.Locale.setDefault(category0, locale1);
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale4);
        java.util.Locale locale6 = java.util.Locale.FRENCH;
        java.util.Locale locale7 = java.util.Locale.TAIWAN;
        java.lang.String str8 = locale6.getDisplayScript(locale7);
        java.lang.String str9 = locale4.getDisplayLanguage(locale7);
        java.util.Locale.setDefault(category0, locale7);
        java.util.Locale locale11 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale11);
        java.util.Locale locale13 = java.util.Locale.FRENCH;
        java.util.Locale locale14 = java.util.Locale.TAIWAN;
        java.lang.String str15 = locale13.getDisplayScript(locale14);
        java.lang.String str16 = locale11.getDisplayLanguage(locale14);
        java.lang.String str17 = locale11.getISO3Country();
        java.util.Locale.setDefault(category0, locale11);
        java.util.Locale locale19 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale19);
        java.util.Locale locale21 = java.util.Locale.FRENCH;
        java.util.Locale locale22 = java.util.Locale.TAIWAN;
        java.lang.String str23 = locale21.getDisplayScript(locale22);
        java.lang.String str24 = locale19.getDisplayLanguage(locale22);
        java.util.Locale locale25 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale25);
        java.lang.String str27 = locale25.toLanguageTag();
        java.lang.String str28 = locale19.getDisplayVariant(locale25);
        java.util.Locale.setDefault(category0, locale25);
        java.util.Locale locale30 = locale25.stripExtensions();
        java.lang.String str31 = locale30.getDisplayCountry();
        java.util.Locale locale32 = java.util.Locale.ROOT;
        java.util.Locale.Category category33 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category34 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale35.getDisplayLanguage();
        java.util.Locale.setDefault(category34, locale35);
        java.util.Locale.setDefault(category33, locale35);
        java.lang.String str39 = locale32.getDisplayVariant(locale35);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale42 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str43 = locale42.getScript();
        java.util.Locale locale44 = java.util.Locale.KOREA;
        java.lang.String str45 = locale42.getDisplayLanguage(locale44);
        java.lang.String[] strArray48 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray48, (java.lang.Throwable) mathException50);
        java.io.PrintWriter printWriter52 = printWriter41.format(locale44, "YZY", (java.lang.Object[]) strArray48);
        java.lang.String str53 = locale35.getDisplayVariant(locale44);
        java.lang.String str54 = locale35.getCountry();
        java.lang.String str55 = locale35.getCountry();
        java.lang.String str56 = locale30.getDisplayCountry(locale35);
        java.util.Locale locale57 = locale35.stripExtensions();
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("_JA");
        java.util.Locale locale60 = java.util.Locale.FRANCE;
        java.lang.String str61 = locale60.getDisplayName();
        java.lang.String str62 = locale60.getCountry();
        java.lang.String str63 = locale60.getISO3Language();
        java.lang.String str64 = locale60.getVariant();
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter("KOR");
        printWriter67.println(' ');
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray81 = rotation80.getMatrix();
        java.io.PrintWriter printWriter82 = printWriter67.format("YZY", (java.lang.Object[]) doubleArray81);
        java.lang.String[] strArray84 = java.util.Locale.getISOCountries();
        java.io.PrintWriter printWriter85 = printWriter82.printf("\u97d3\u6587)", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter86 = printWriter59.format(locale60, "English", (java.lang.Object[]) strArray84);
        java.lang.String str87 = locale57.getDisplayScript(locale60);
        java.lang.String str88 = locale60.getCountry();
        org.junit.Assert.assertTrue("'" + category0 + "' != '" + java.util.Locale.Category.FORMAT + "'", category0.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale1);
        org.junit.Assert.assertEquals(locale1.toString(), "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "fr");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\u97d3\u6587" + "'", str9, "\u97d3\u6587");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "fr");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\u97d3\u6587" + "'", str16, "\u97d3\u6587");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "KOR" + "'", str17, "KOR");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "fr");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\u97d3\u6587" + "'", str24, "\u97d3\u6587");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ko-KR" + "'", str27, "ko-KR");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\ub300\ud55c\ubbfc\uad6d" + "'", str31, "\ub300\ud55c\ubbfc\uad6d");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "");
        org.junit.Assert.assertTrue("'" + category33 + "' != '" + java.util.Locale.Category.FORMAT + "'", category33.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category34 + "' != '" + java.util.Locale.Category.FORMAT + "'", category34.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str45, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "South Korea" + "'", str56, "South Korea");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "fr_FR");
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\ud504\ub791\uc2a4\uc5b4\ud504\ub791\uc2a4)" + "'", str61, "\ud504\ub791\uc2a4\uc5b4\ud504\ub791\uc2a4)");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "FR" + "'", str62, "FR");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "fra" + "'", str63, "fra");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "FR" + "'", str88, "FR");
    }

    @Test
    public void test09450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09450");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        char[] charArray23 = new char[] { 'a', 'a', '4' };
        printStream1.println(charArray23);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.OutputStream) printStream1, false);
        printStream1.print((int) (short) 100);
        java.io.PrintStream printStream30 = new java.io.PrintStream((java.io.OutputStream) printStream1, true);
        printStream1.println(10.0f);
        java.io.PrintStream printStream34 = printStream1.append((java.lang.CharSequence) "en-GB");
        java.lang.Object[] objArray36 = null;
        java.io.PrintStream printStream37 = printStream1.printf("\u6cd5\u56fd", objArray36);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException40);
        java.lang.Object[] objArray42 = mathException40.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("\u4e2d\u6587\u53f0\u7063)", objArray42);
        java.io.PrintStream printStream44 = printStream1.format("zxz (ko_kr)", objArray42);
        printStream1.println(2.787811979705859d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, a, 4]");
        org.junit.Assert.assertNotNull(printStream34);
        org.junit.Assert.assertNotNull(printStream37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(printStream44);
    }

    @Test
    public void test09451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09451");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), 0.8775825618903728d, 3.2539077042633276E7d, 0.0d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double[] doubleArray12 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder6.getA2();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[3.141592599649569, 9.654830250635621E-8, 3.1415926535897905]");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test09452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09452");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation12.revert();
        double[][] doubleArray17 = rotation12.getMatrix();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(doubleArray17);
    }

    @Test
    public void test09453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09453");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((-0.09966865249116204d), (-0.02937648959434208d), (double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.add(vector3D6);
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray20 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D22, (double) (byte) 100, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D27, (double) (byte) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D41, (double) (byte) 100, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D38, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D48, (double) (byte) 100, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D54, (double) (byte) 100, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D59, (double) (byte) 100, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D56, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D43, (double) (byte) 1, vector3D51, (double) (short) 100, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D43.negate();
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (-1), vector3D43);
        double double67 = vector3D43.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D43);
        double double69 = vector3D68.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D12.subtract(0.5131281635700607d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D2.add(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D71.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
    }

    @Test
    public void test09454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09454");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.995037190209989d, (double) 0.0f, 0.995037190209989d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-16145.892056774162d), 0.9797960513459658d, 0.9999999999999998d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.331616E8d), 2.8842928999183055d, 2.2295122953242523d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test09455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09455");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("KOR");
        java.util.Locale locale2 = java.util.Locale.ENGLISH;
        boolean boolean3 = locale2.hasExtensions();
        java.io.PrintStream printStream6 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream6.format("", objArray79);
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale2, "KOR", objArray79);
        printWriter91.print('#');
        printWriter91.write("");
        boolean boolean96 = printWriter91.checkError();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09456");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.03286963174708454d), 32.0d, 1.5707963267948963d, 8095.122278323722d, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder8.getA1();
        java.lang.String str14 = rotationOrder8.toString();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) (byte) 0, (-1280400.0d), (-0.02937648959434208d));
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D19.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double27 = rotation26.getQ0();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double34 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation26.applyTo(rotation33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation26.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D39.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation26.applyInverseTo(vector3D39);
        double double42 = vector3D39.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D19, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((-0.851099441814107d), vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D6.add(vector3D44);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "XYZ" + "'", str14, "XYZ");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
    }

    @Test
    public void test09457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09457");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        printStream85.println(false);
        printStream85.flush();
        java.io.PrintStream printStream91 = new java.io.PrintStream((java.io.OutputStream) printStream85);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09458");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintStream printStream18 = printStream16.append('u');
        printStream16.println();
        java.io.PrintStream printStream21 = new java.io.PrintStream((java.io.OutputStream) printStream16, false);
        printStream21.print('a');
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream26 = new java.io.PrintStream((java.io.OutputStream) printStream21, false, "xzy");
            org.junit.Assert.fail("Expected exception of type java.io.UnsupportedEncodingException; message: xzy");
        } catch (java.io.UnsupportedEncodingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(printStream18);
    }

    @Test
    public void test09459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09459");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        printStream85.println((long) 100);
        printStream85.println((int) (byte) 10);
        printStream85.print('u');
        printStream85.close();
        printStream85.print((long) 1);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test09460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09460");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test09461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09461");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        boolean boolean47 = printStream6.checkError();
        java.util.Locale locale51 = new java.util.Locale("\u97d3\u6587)", "yzy", "und");
        java.io.PrintStream printStream54 = new java.io.PrintStream("ko-KR");
        printStream54.println("fr");
        java.lang.String[] strArray61 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray61, (java.lang.Throwable) mathException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray66 = mathException65.getSuppressed();
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray61, (java.lang.Throwable) mathException65);
        java.lang.Throwable[] throwableArray68 = mathException65.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException69 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray68);
        java.lang.Throwable[] throwableArray70 = notARotationMatrixException69.getSuppressed();
        java.io.PrintStream printStream71 = printStream54.format("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) throwableArray70);
        java.io.PrintStream printStream72 = printStream6.printf(locale51, "cor\351en", (java.lang.Object[]) throwableArray70);
        printStream72.print((int) '#');
        java.util.Locale locale76 = new java.util.Locale("\uc911\uad6d\uc5b4");
        java.lang.String str77 = locale76.getCountry();
        java.lang.String str78 = locale76.toLanguageTag();
        java.util.Set<java.lang.String> strSet79 = locale76.getUnicodeLocaleAttributes();
        java.lang.String[] strArray84 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ko_KR", (java.lang.Object[]) strArray84);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException86 = new org.apache.commons.math.geometry.NotARotationMatrixException("ENGLISH", (java.lang.Object[]) strArray84);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("xzy", (java.lang.Object[]) strArray84);
        java.io.PrintStream printStream88 = printStream72.printf(locale76, "", (java.lang.Object[]) strArray84);
        java.io.PrintStream printStream90 = printStream88.append((java.lang.CharSequence) "\u6cd5\u56fd");
        boolean boolean91 = printStream88.checkError();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals(locale51.toString(), "\u97d3\u6587)_YZY_und");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(printStream71);
        org.junit.Assert.assertNotNull(printStream72);
        org.junit.Assert.assertEquals(locale76.toString(), "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "und" + "'", str78, "und");
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printStream88);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test09462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09462");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 100, (double) (-1L), (double) '4');
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1280400.0d), 102.8131477408346d, 1.0d);
        org.apache.commons.math.geometry.Rotation rotation10 = rotation9.revert();
        double double11 = rotation9.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.35857395401370884d + "'", double11 == 0.35857395401370884d);
    }

    @Test
    public void test09463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09463");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, (-34365.38633275781d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZY" + "'", str1, "XZY");
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test09464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09464");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation12.getQ2();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation12.revert();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.revert();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation12.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D21.negate();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation12.applyInverseTo(vector3D22);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
    }

    @Test
    public void test09465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09465");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation12.getQ3();
        double double16 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation12.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str24 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str29 = rotationOrder23.toString();
        java.lang.String str30 = rotationOrder23.toString();
        double[] doubleArray31 = rotation22.getAngles(rotationOrder23);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D32.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D32.negate();
        double double35 = vector3D34.getNorm();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXZ" + "'", str19, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXZ" + "'", str24, "ZXZ");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXZ" + "'", str29, "ZXZ");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ZXZ" + "'", str30, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.5707963267948966, 1.6704649792860589, -1.5707963267948966]");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
    }

    @Test
    public void test09466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09466");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation37.applyInverseTo(rotation43);
        double[][] doubleArray55 = rotation37.getMatrix();
        double double56 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation21.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation21.revert();
        double double59 = rotation21.getQ3();
        double[][] doubleArray60 = rotation21.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(doubleArray60, (-3.420117683550649E-5d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-10.358482905538347d) + "'", double22 == (-10.358482905538347d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1040.0d + "'", double56 == 1040.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-10.358482905538347d) + "'", double59 == (-10.358482905538347d));
        org.junit.Assert.assertNotNull(doubleArray60);
    }

    @Test
    public void test09467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09467");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D19, (double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation11.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation11.revert();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((-12804.0d), vector3D27);
        double double29 = vector3D27.getY();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D3.subtract(vector3D27);
        double double31 = vector3D3.getZ();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (-1L), (double) (short) 10, (double) 'a');
        double double51 = rotation50.getAngle();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation44.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation37.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation53.revert();
        double double55 = rotation53.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation53.getAxis();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D56, (-0.28153953114270075d));
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D3.subtract(vector3D56);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 117.0d + "'", double4 == 117.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.0d) + "'", double29 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 117.0d + "'", double31 == 117.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2.3122509176395862d + "'", double51 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 102.8131477408346d + "'", double55 == 102.8131477408346d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D59);
    }

    @Test
    public void test09468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09468");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D16);
        double double19 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation5.getAxis();
        double double21 = vector3D20.getZ();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.09950371902099892d) + "'", double21 == (-0.09950371902099892d));
    }

    @Test
    public void test09469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09469");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        printStream6.println('a');
        java.io.PrintStream printStream18 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        java.io.PrintStream printStream20 = printStream18.append('u');
        java.util.Locale locale21 = java.util.Locale.FRENCH;
        java.util.Locale locale22 = locale21.stripExtensions();
        java.util.Locale locale23 = locale22.stripExtensions();
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.lang.String str25 = locale22.getDisplayScript(locale24);
        java.io.PrintStream printStream28 = new java.io.PrintStream("ko-KR");
        printStream28.close();
        java.util.Locale locale30 = java.util.Locale.UK;
        java.lang.String[] strArray32 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream33 = printStream28.format(locale30, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter37 = printWriter35.append('#');
        java.lang.Object[] objArray39 = null;
        java.io.PrintWriter printWriter40 = printWriter37.format("fran\347ais", objArray39);
        java.util.Locale locale41 = null;
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray44 = mathException43.getSuppressed();
        java.io.PrintWriter printWriter45 = printWriter37.format(locale41, "zxz", (java.lang.Object[]) throwableArray44);
        char[] charArray49 = new char[] { 'a', ' ', '#' };
        printWriter45.println(charArray49);
        printStream28.println(charArray49);
        java.io.PrintStream printStream53 = new java.io.PrintStream("ko-KR");
        printStream53.close();
        java.util.Locale locale55 = java.util.Locale.UK;
        java.lang.String[] strArray57 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream58 = printStream53.format(locale55, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray57);
        printStream58.write(10);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter((java.io.OutputStream) printStream58);
        byte[] byteArray63 = new byte[] { (byte) -1 };
        printStream58.write(byteArray63);
        printStream28.write(byteArray63);
        java.lang.String[] strArray69 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray69, (java.lang.Throwable) mathException71);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray74 = mathException73.getSuppressed();
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray69, (java.lang.Throwable) mathException73);
        java.lang.Throwable[] throwableArray76 = mathException73.getSuppressed();
        java.io.PrintStream printStream77 = printStream28.format("", (java.lang.Object[]) throwableArray76);
        java.io.PrintStream printStream78 = printStream20.format(locale24, "", (java.lang.Object[]) throwableArray76);
        printStream78.print(17426.563293542316d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str83 = rotationOrder82.toString();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder82.getA2();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(rotationOrder82, (double) '#', 2.0790806738125385d, (-0.2868032122551722d));
        double double89 = rotation88.getQ1();
        double[][] doubleArray90 = rotation88.getMatrix();
        java.io.PrintStream printStream91 = printStream78.format("org.apache.commons.math.MathException: deu__Koreanisch", (java.lang.Object[]) doubleArray90);
        java.io.PrintWriter printWriter92 = new java.io.PrintWriter((java.io.OutputStream) printStream78);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(printStream20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "fr");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "fr");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "fr");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(printStream33);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(printStream58);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1]");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(printStream77);
        org.junit.Assert.assertNotNull(printStream78);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "YZY" + "'", str83, "YZY");
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.8054849532414718d + "'", double89 == 0.8054849532414718d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(printStream91);
    }

    @Test
    public void test09470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09470");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation15.getAxis();
        double double23 = rotation15.getQ2();
        double double24 = rotation15.getQ1();
        double double25 = rotation15.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation15.getAxis();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation15.revert();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation27.getAxis();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 100.0d + "'", double24 == 100.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
    }

    @Test
    public void test09471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09471");
        java.io.PrintStream printStream1 = new java.io.PrintStream("Englisch (Vereinigtes K\366nigreich)");
        printStream1.flush();
        java.io.PrintStream printStream4 = printStream1.append(' ');
        printStream1.print((int) (byte) 0);
        printStream1.println("en-gb");
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (-0.02937648959434208d), (-3.141592653589793d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 100.0d, (double) (-1), (-0.9904757959510307d));
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder9.getA1();
        double double25 = vector3D24.getNorm();
        printStream1.print((java.lang.Object) vector3D24);
        org.junit.Assert.assertNotNull(printStream4);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
    }

    @Test
    public void test09472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09472");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(doubleArray12, 1.5707963267948966d);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("french_DE_fr", (java.lang.Object[]) doubleArray12);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("fr_ca (ORG.APACHE.COMMONS.MATH.MATHEXCEPTION: YZY)", (java.lang.Object[]) doubleArray12);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray12);
    }

    @Test
    public void test09473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09473");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        double[] doubleArray10 = rotation8.getAngles(rotationOrder9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double34 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation33.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation27.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation44.getAxis();
        double double46 = vector3D45.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str49 = rotationOrder48.toString();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder48.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D47.subtract(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D53);
        java.lang.Class<?> wildcardClass55 = vector3D12.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXZ" + "'", str3, "ZXZ");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXZ" + "'", str4, "ZXZ");
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.7902180191116501, -0.5204312332296097, 1.8449601148260304]");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "XZY" + "'", str49, "XZY");
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test09474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09474");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(10.0d, (double) (-1.0f), (double) (byte) 100);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double11 = rotation10.getQ1();
        double double12 = rotation10.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D14.subtract((double) 10L, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation10.applyInverseTo(vector3D21);
        double[][] doubleArray24 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double39 = rotation38.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation31.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyTo(rotation46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation10.applyTo(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double57 = rotation56.getQ0();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double64 = rotation63.getQ0();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation56.applyTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double72 = rotation71.getQ0();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double79 = rotation78.getQ0();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation71.applyTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation71.revert();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation65.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation82.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation10.applyTo(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D3.add(11770.079614583028d, vector3D83);
        double double86 = vector3D3.getY();
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 100.0d + "'", double11 == 100.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 52.0d + "'", double39 == 52.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 52.0d + "'", double57 == 52.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 52.0d + "'", double64 == 52.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 52.0d + "'", double72 == 52.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 52.0d + "'", double79 == 52.0d);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-1.0d) + "'", double86 == (-1.0d));
    }

    @Test
    public void test09475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09475");
        java.lang.String[] strArray4 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray4);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) strArray4);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("Chinese (China)", (java.lang.Object[]) strArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        notARotationMatrixException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("Japonais (CHINA)", (java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.Object[] objArray12 = mathException11.getArguments();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test09476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09476");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, (double) '#', (double) 0L, (double) (short) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double34 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation33.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation27.applyInverseTo(rotation33);
        double double45 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation11.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation5.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        double[] doubleArray50 = rotation5.getAngles(rotationOrder48);
        java.lang.String str51 = rotationOrder48.toString();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 128040.0d + "'", double45 == 128040.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[3.118801979878033, -0.6732785806770867, 0.00797612984943012]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZYX" + "'", str51, "ZYX");
    }

    @Test
    public void test09477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09477");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((-0.09966865249116204d), (-0.02937648959434208d), (double) 0.0f);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D8.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D8.scalarMultiply((double) 10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.negate();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D20, (double) (byte) 100, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation18.applyTo(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D20.subtract(vector3D27);
        double double29 = vector3D28.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D4.subtract(93.57684707871968d, vector3D28);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation39.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) 1, vector3D40);
        double double42 = vector3D40.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D31.subtract(2.510959086225248d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((-34365.38633275781d), (double) 1.0f, (-3.253905889552808E7d));
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double57 = rotation56.getQ0();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double64 = rotation63.getQ0();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation56.applyTo(rotation63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation56.applyInverseTo(vector3D66);
        double double68 = vector3D66.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str70 = rotationOrder69.toString();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D71.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D66.add(vector3D71);
        double double74 = vector3D66.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D49.add(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, (double) (short) 0);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((-1.581752731678261d), vector3D79);
        double double81 = org.apache.commons.math.geometry.Vector3D.angle(vector3D66, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((-0.5309649148733837d), vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((-0.08632211498915138d), vector3D43, (double) 100, vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXZ" + "'", str7, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 3.141592653589793d + "'", double29 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.09966865249116204d) + "'", double42 == (-0.09966865249116204d));
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 52.0d + "'", double57 == 52.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 52.0d + "'", double64 == 52.0d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ZXZ" + "'", str70, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1.5707963267948966d) + "'", double74 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(vector3D83);
    }

    @Test
    public void test09478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09478");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5699657548817936d, (-0.9998151400298466d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (-0.0833773303360936d), (-13.643492392604296d));
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test09479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09479");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) (-1.0f), (-0.33317344249276587d));
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str5 = rotationOrder4.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.scalarMultiply((double) 10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA3();
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D16, (double) (byte) 100, vector3D18);
        double double20 = vector3D16.getY();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D13.subtract(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D30, (double) (byte) 100, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation28.applyTo(vector3D30);
        double double35 = vector3D30.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D21.add((double) 0L, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.scalarMultiply(11770.102600641243d);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D9.add((-45.50528353764515d), vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D9.scalarMultiply(362212.73358915845d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D3.subtract(vector3D9);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZXZ" + "'", str5, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXZ" + "'", str12, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
    }

    @Test
    public void test09480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09480");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation12.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation27.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation27.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation21.applyInverseTo(rotation27);
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation5.applyInverseTo(rotation38);
        double[][] doubleArray41 = rotation5.getMatrix();
        double double42 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.0d, 2.3452374597334977E7d, 32.0d, 0.4047934756653486d, false);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation5.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder51.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D58, (double) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder63.getA1();
        double[] doubleArray67 = rotation62.getAngles(rotationOrder63);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder63.getA1();
        double[] doubleArray69 = rotation48.getAngles(rotationOrder63);
        java.lang.String str70 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder63.getA2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 128040.0d + "'", double39 == 128040.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.5707963267948966, 0.530964914873383, -1.5707963267948966]");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.3644673748139974E-6, 2.308086726435825, 3.1415912891224185]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ZYZ" + "'", str70, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D71);
    }

    @Test
    public void test09481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09481");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation14.applyInverseTo(rotation20);
        double double32 = rotation14.getQ1();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation14.revert();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation33.getAxis();
        double[][] doubleArray35 = rotation33.getMatrix();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10400.0d + "'", double32 == 10400.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(doubleArray35);
    }

    @Test
    public void test09482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09482");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.print((float) 100L);
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation11.applyInverseTo(rotation27);
        double[][] doubleArray30 = rotation11.getMatrix();
        java.io.PrintWriter printWriter31 = printWriter4.printf("zh", (java.lang.Object[]) doubleArray30);
        java.io.PrintWriter printWriter33 = printWriter4.append((java.lang.CharSequence) "\uc601\uad6d");
        java.io.PrintWriter printWriter35 = printWriter33.append((java.lang.CharSequence) "zh");
        java.lang.Object[] objArray37 = null;
        java.io.PrintWriter printWriter38 = printWriter35.format("\ub300\ud55c\ubbfc\uad6d", objArray37);
        java.io.PrintWriter printWriter40 = printWriter38.append('u');
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter40);
    }

    @Test
    public void test09483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09483");
        java.util.Locale.LanguageRange languageRange2 = new java.util.Locale.LanguageRange("XZY", 0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str4 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) (byte) 100, (double) (-1L), (double) '4');
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (-1280400.0d), 102.8131477408346d, 1.0d);
        boolean boolean13 = languageRange2.equals((java.lang.Object) rotation12);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXZ" + "'", str4, "ZXZ");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09484");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation6.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation21.getAxis();
        double[][] doubleArray24 = rotation21.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException25 = new org.apache.commons.math.geometry.NotARotationMatrixException("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) doubleArray24);
        java.lang.String str26 = notARotationMatrixException25.toString();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(doubleArray24);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\uc77c\ubcf8\uc5b4" + "'", str26, "\uc77c\ubcf8\uc5b4");
    }

    @Test
    public void test09485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09485");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintStream printStream48 = new java.io.PrintStream("ko-KR");
        printStream48.close();
        java.util.Locale locale50 = java.util.Locale.UK;
        java.lang.String[] strArray52 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream53 = printStream48.format(locale50, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray52);
        printStream48.println((long) 10);
        java.io.PrintStream printStream57 = printStream48.append('x');
        java.io.PrintStream printStream59 = printStream57.append('a');
        java.io.PrintStream printStream61 = new java.io.PrintStream("ko-KR");
        printStream61.close();
        java.util.Locale locale63 = java.util.Locale.UK;
        java.lang.String[] strArray65 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream66 = printStream61.format(locale63, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray65);
        printStream66.write(10);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.OutputStream) printStream66);
        byte[] byteArray71 = new byte[] { (byte) -1 };
        printStream66.write(byteArray71);
        printStream66.close();
        printStream66.println((double) (short) 100);
        byte[] byteArray77 = new byte[] { (byte) 1 };
        printStream66.write(byteArray77, 0, 1);
        printStream59.write(byteArray77, 0, (int) (short) 1);
        printStream6.write(byteArray77, (-1), (int) 'u');
        printStream6.print("\u97d3\u6587");
        printStream6.println((long) (-1));
        printStream6.close();
        printStream6.print("Deutschland");
        printStream6.println('x');
        printStream6.println();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(printStream53);
        org.junit.Assert.assertNotNull(printStream57);
        org.junit.Assert.assertNotNull(printStream59);
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(printStream66);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-1]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[1]");
    }

    @Test
    public void test09486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09486");
        java.util.Locale.Builder builder0 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder2 = builder0.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder4 = builder0.setLanguage("ZXZ");
        java.util.Locale locale5 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder6 = builder0.setLocale(locale5);
        java.util.Locale.Builder builder8 = builder6.removeUnicodeLocaleAttribute("Deutsch");
        java.util.Locale.Builder builder9 = builder8.clear();
        java.util.Locale.Builder builder11 = builder9.removeUnicodeLocaleAttribute("Deutsch");
        java.util.Locale.Builder builder12 = builder9.clearExtensions();
        java.util.Locale.Builder builder15 = builder9.setExtension('a', "de-DE");
        java.util.Locale locale16 = builder15.build();
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("CN");
        printWriter18.print(0L);
        java.util.Locale.Builder builder21 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder23 = builder21.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder25 = builder21.setLanguage("ZXZ");
        java.util.Locale locale26 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder27 = builder21.setLocale(locale26);
        java.lang.String str29 = locale26.getUnicodeLocaleType("fr");
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation36.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation36.getAxis();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation36.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation51.revert();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double59 = rotation58.getQ1();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation51.applyTo(rotation58);
        double[][] doubleArray61 = rotation58.getMatrix();
        java.io.PrintWriter printWriter62 = printWriter18.printf(locale26, "ko-KR", (java.lang.Object[]) doubleArray61);
        java.lang.String str63 = locale26.getDisplayName();
        java.util.Locale.Builder builder64 = builder15.setLocale(locale26);
        java.util.Locale locale65 = java.util.Locale.JAPANESE;
        java.lang.String str66 = locale65.getLanguage();
        java.lang.String str67 = locale65.getDisplayLanguage();
        java.lang.String str68 = locale65.getDisplayLanguage();
        java.util.Locale.Builder builder69 = builder15.setLocale(locale65);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "");
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 100.0d + "'", double59 == 100.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(printWriter62);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "German (Germany)" + "'", str63, "German (Germany)");
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "ja");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ja" + "'", str66, "ja");
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Japanese" + "'", str67, "Japanese");
// flaky:         org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Japanese" + "'", str68, "Japanese");
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test09487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09487");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation20.revert();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation20.getAxis();
        double[][] doubleArray23 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(10.0d, 2.3122509176395862d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation37.applyTo(rotation44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation37.applyInverseTo(vector3D47);
        double double49 = vector3D47.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str51 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D52.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D47.add(vector3D52);
        double double55 = vector3D54.getY();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D31, vector3D54);
        double double57 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D26, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation20.applyInverseTo(vector3D31);
        double double59 = vector3D58.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D58.negate();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D(1.0d, 100.00645942428783d);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D61.subtract(vector3D64);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str68 = rotationOrder67.toString();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D73, 2.3122509176395862d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str77 = rotationOrder76.toString();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder76.getA1();
        java.lang.String str79 = rotationOrder76.toString();
        java.lang.String str80 = rotationOrder76.toString();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        double[] doubleArray86 = rotation84.getAngles(rotationOrder85);
        double[] doubleArray87 = rotation75.getAngles(rotationOrder85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder85.getA2();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D88, (-3931.344915677076d));
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D65.subtract(0.915248973644132d, vector3D88);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXZ" + "'", str28, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZXZ" + "'", str51, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.7374869648140232d + "'", double57 == 0.7374869648140232d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 11983.257028037076d + "'", double59 == 11983.257028037076d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "XZY" + "'", str68, "XZY");
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ZXZ" + "'", str77, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ZXZ" + "'", str79, "ZXZ");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ZXZ" + "'", str80, "ZXZ");
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.7902180191116501, -0.5204312332296097, 1.8449601148260304]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[2.3122509176395862, 0.0, -0.0]");
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test09488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09488");
        java.io.PrintStream printStream2 = new java.io.PrintStream("FR");
        java.io.PrintStream printStream3 = new java.io.PrintStream((java.io.OutputStream) printStream2);
        java.io.PrintStream printStream4 = new java.io.PrintStream((java.io.OutputStream) printStream3);
        java.util.Locale locale7 = new java.util.Locale("zh_TW", "GERMANY");
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA1();
        java.lang.String str12 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 2.1098021193192458d, (double) 100L, (-381.8802471205947d));
        double[][] doubleArray18 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray18, 40.309233691728366d);
        java.io.PrintStream printStream21 = printStream4.printf(locale7, "de_de", (java.lang.Object[]) doubleArray18);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale30 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str31 = locale30.getScript();
        java.util.Locale locale32 = java.util.Locale.KOREA;
        java.lang.String str33 = locale30.getDisplayLanguage(locale32);
        java.lang.String[] strArray36 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray36, (java.lang.Throwable) mathException38);
        java.io.PrintWriter printWriter40 = printWriter29.format(locale32, "YZY", (java.lang.Object[]) strArray36);
        printWriter40.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException46);
        java.lang.Object[] objArray48 = mathException46.getArguments();
        java.io.PrintWriter printWriter49 = printWriter40.format("org.apache.commons.math.MathException: ZXZ", objArray48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("\u97d3\u6587", objArray48);
        java.lang.Throwable[] throwableArray51 = mathException50.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException52 = new org.apache.commons.math.geometry.NotARotationMatrixException("fran\347ais", (java.lang.Object[]) throwableArray51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("Englisch", (java.lang.Throwable) notARotationMatrixException52);
        java.lang.Object[] objArray54 = notARotationMatrixException52.getArguments();
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("\uc911\uad6d", objArray54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("\u4e2d\u6587\u53f0\u7063)", (java.lang.Throwable) mathException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException55);
        java.lang.Throwable[] throwableArray58 = mathException57.getSuppressed();
        java.lang.Throwable[] throwableArray59 = mathException57.getSuppressed();
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.mathexception: ko_kr (GERMANY)", (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: und", (java.lang.Object[]) doubleArray18, (java.lang.Throwable) mathException60);
        org.junit.Assert.assertEquals(locale7.toString(), "zh_tw_GERMANY");
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXZ" + "'", str12, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(printStream21);
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str33, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray59);
    }

    @Test
    public void test09489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09489");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.7084812409253876d, (-3.0171984405909804E-8d));
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation8.applyTo(vector3D10);
        double double15 = rotation8.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str17 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 0.0d, 52.0d, 0.9649660284921133d);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation8.applyTo(rotation21);
        double double23 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyTo(rotation50);
        double double53 = rotation43.getQ0();
        double double54 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double68 = rotation67.getQ0();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation60.applyTo(rotation67);
        double double70 = rotation60.getQ0();
        double double71 = rotation60.getQ0();
        double[][] doubleArray72 = rotation60.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double79 = rotation78.getQ0();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double86 = rotation85.getQ0();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation78.applyTo(rotation85);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation60.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation60.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D89.scalarMultiply((double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation43.applyTo(vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation37.applyTo(vector3D92);
        double double94 = vector3D93.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation21.applyInverseTo(vector3D93);
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D95);
        double double97 = vector3D2.getDelta();
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXZ" + "'", str17, "ZXZ");
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-0.30015773766214787d) + "'", double23 == (-0.30015773766214787d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 52.0d + "'", double53 == 52.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 52.0d + "'", double61 == 52.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 52.0d + "'", double68 == 52.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 52.0d + "'", double71 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 52.0d + "'", double79 == 52.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 52.0d + "'", double86 == 52.0d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 8.396146867417E12d + "'", double94 == 8.396146867417E12d);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-3.0171984405909804E-8d) + "'", double97 == (-3.0171984405909804E-8d));
    }

    @Test
    public void test09490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09490");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        printStream85.println((long) 100);
        java.io.PrintStream printStream93 = printStream85.append((java.lang.CharSequence) "DE");
        printStream85.print((float) ' ');
        java.io.PrintStream printStream97 = printStream85.append((java.lang.CharSequence) "CN");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream93);
        org.junit.Assert.assertNotNull(printStream97);
    }

    @Test
    public void test09491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09491");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D19, (double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation11.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation11.revert();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((-12804.0d), vector3D27);
        double double29 = vector3D27.getY();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D3.subtract(vector3D27);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation38.applyTo(vector3D40);
        double double45 = vector3D40.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D40, (double) 10, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D40.negate();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D3.add(3.112216163995451d, vector3D40);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D50, 0.4047934756653486d);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double59 = rotation58.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) (-1L), (double) (short) 10, (double) 'a');
        double double65 = rotation64.getAngle();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation58.applyInverseTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation58.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation67.applyTo(rotation73);
        double[][] doubleArray75 = rotation73.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str77 = rotationOrder76.toString();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (double) (byte) 100, (double) (-1L), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder76.getA2();
        double[] doubleArray83 = rotation73.getAngles(rotationOrder76);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder76.getA2();
        double[] doubleArray86 = rotation52.getAngles(rotationOrder76);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder76.getA1();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 117.0d + "'", double4 == 117.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.0d) + "'", double29 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 52.0d + "'", double59 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2.3122509176395862d + "'", double65 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ZXZ" + "'", str77, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.8684551666865963, 0.9755797911776904, -0.9459705383891546]");
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.18536731687107422, 0.1634639897439722, 0.18536731687107422]");
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test09492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09492");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation14.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation37.applyTo(rotation44);
        double double47 = rotation44.getQ3();
        double[][] doubleArray48 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation31.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double56 = rotation55.getQ0();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ0();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation55.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation55.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation71 = rotation65.applyTo(rotation70);
        double double72 = rotation70.getAngle();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation44.applyInverseTo(rotation70);
        double double74 = rotation70.getQ3();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation81.getAxis();
        double[][] doubleArray83 = rotation81.getMatrix();
        double double84 = rotation81.getQ1();
        org.apache.commons.math.geometry.Rotation rotation85 = rotation75.applyInverseTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation70.applyInverseTo(rotation85);
        double double87 = rotation85.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 52.0d + "'", double56 == 52.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2.3122509176395862d + "'", double72 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.3331734424927659d + "'", double74 == 0.3331734424927659d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 100.0d + "'", double84 == 100.0d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
    }

    @Test
    public void test09493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09493");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 2.76080851738281E-6d, 4253.469029887802d, 1.3964058484385629E-10d, true);
    }

    @Test
    public void test09494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09494");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        byte[] byteArray91 = new byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 10 };
        printStream1.write(byteArray91);
        printStream1.println((float) (byte) 0);
        printStream1.print(' ');
        char[] charArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            printStream1.println(charArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 100, -1, 10, 10]");
    }

    @Test
    public void test09495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09495");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(11983.257028037076d, 198800.0d, (-1.4070751110264845d), 17426.563293542316d, true);
        double double6 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-7.038127688017774E-6d) + "'", double6 == (-7.038127688017774E-6d));
    }

    @Test
    public void test09496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09496");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D5, (double) 'u');
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YZY" + "'", str1, "YZY");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YZY" + "'", str2, "YZY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test09497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09497");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.negate();
        double double20 = vector3D18.getX();
        double double21 = vector3D18.getAlpha();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-121.55625799679436d) + "'", double20 == (-121.55625799679436d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.581752731678261d) + "'", double21 == (-1.581752731678261d));
    }

    @Test
    public void test09498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09498");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D3, (double) (byte) 100, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D10, (double) (byte) 1, vector3D18, (double) (short) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D10.negate();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D34, (double) (byte) 100, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D32.subtract(vector3D37);
        double double39 = vector3D32.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(0.0d, 93.57684707871968d);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((-10.358482905538347d), vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D53.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D(0.9999999999999999d, vector3D32, (-0.3403913072297808d), vector3D47, 0.964142738069021d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((-6.797493410635224E-4d), 60.912721436461325d, 0.7069393147060633d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str66 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder60.getA1();
        double double68 = vector3D67.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D59.add(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D55.add(vector3D67);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D70, (-0.5063656411097588d));
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-3.141592653589793d) + "'", double39 == (-3.141592653589793d));
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ZXZ" + "'", str61, "ZXZ");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZXZ" + "'", str66, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
    }

    @Test
    public void test09499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09499");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D1);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D1.negate();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (-381.8802471205947d));
        double double6 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.7667532234373223d) + "'", double6 == (-0.7667532234373223d));
    }

    @Test
    public void test09500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09500");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D3, (double) (byte) 100, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D10, (double) (byte) 1, vector3D18, (double) (short) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, vector3D18, (double) 0L, vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D38.orthogonal();
        double double40 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D35, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D35.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D35.normalize();
        double double43 = vector3D35.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double50 = rotation49.getQ0();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double57 = rotation56.getQ0();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation49.applyTo(rotation56);
        double double59 = rotation56.getQ3();
        double double60 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation56.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray72 = rotation71.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation56.applyTo(rotation71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation73.getAxis();
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D35, vector3D74);
        double double77 = vector3D76.getNorm();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5403023058681398d + "'", double40 == 0.5403023058681398d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 52.0d + "'", double57 == 52.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.9959035832181172d) + "'", double75 == (-0.9959035832181172d));
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.7912363453354789d + "'", double77 == 0.7912363453354789d);
    }
}
