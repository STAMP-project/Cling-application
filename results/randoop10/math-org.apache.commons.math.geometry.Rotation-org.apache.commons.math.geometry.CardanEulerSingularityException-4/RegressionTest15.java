import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest15 {

    public static boolean debug = false;

    @Test
    public void test07501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07501");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        java.io.PrintWriter printWriter11 = printWriter3.format(locale7, "zxz", (java.lang.Object[]) throwableArray10);
        char[] charArray15 = new char[] { 'a', ' ', '#' };
        printWriter11.println(charArray15);
        java.util.Locale locale17 = java.util.Locale.FRENCH;
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.lang.String str21 = locale17.getDisplayLanguage(locale18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray33 = rotation32.getMatrix();
        java.io.PrintWriter printWriter34 = printWriter11.printf(locale17, "english", (java.lang.Object[]) doubleArray33);
        printWriter34.println();
        printWriter34.close();
        printWriter34.write("hi!", (int) '4', (int) (short) 0);
        java.io.PrintWriter printWriter42 = printWriter34.append('4');
        java.util.Locale.Category category43 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category44 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.lang.String str46 = locale45.getDisplayLanguage();
        java.util.Locale.setDefault(category44, locale45);
        java.util.Locale.setDefault(category43, locale45);
        java.util.Locale locale49 = java.util.Locale.getDefault(category43);
        java.util.Locale locale50 = java.util.Locale.getDefault(category43);
        java.util.Locale locale51 = java.util.Locale.getDefault(category43);
        java.util.Locale locale52 = java.util.Locale.JAPAN;
        java.lang.String str53 = locale52.getDisplayVariant();
        java.lang.String str54 = locale52.getDisplayVariant();
        java.util.Locale.setDefault(locale52);
        java.util.Locale.setDefault(category43, locale52);
        java.lang.String str57 = locale52.getCountry();
        java.util.Locale locale58 = locale52.stripExtensions();
        java.util.Locale.setDefault(locale58);
        java.util.Locale locale60 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale60);
        java.util.Locale locale62 = locale60.stripExtensions();
        java.lang.String str63 = locale62.getDisplayCountry();
        java.lang.String str64 = locale58.getDisplayLanguage(locale62);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException69);
        java.lang.Object[] objArray71 = mathException69.getArguments();
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("deu", (java.lang.Throwable) mathException69);
        java.lang.Throwable[] throwableArray73 = mathException72.getSuppressed();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4\u97d3\u6587,ko,KR)", (java.lang.Object[]) throwableArray73);
        java.lang.String[] strArray83 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray83, (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray88 = mathException87.getSuppressed();
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray83, (java.lang.Throwable) mathException87);
        java.lang.Throwable[] throwableArray90 = mathException87.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException91 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray90);
        java.lang.String str92 = notARotationMatrixException91.getPattern();
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) notARotationMatrixException91);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("", (java.lang.Throwable) notARotationMatrixException91);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("", (java.lang.Throwable) notARotationMatrixException91);
        org.apache.commons.math.MathException mathException96 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException95);
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException("\uc911\uad6d", (java.lang.Throwable) mathException95);
        org.apache.commons.math.MathException mathException98 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4_ORG.APACHE.COMMONS.MATH.GEOMETRY.CARDANEULERSINGULARITYEXCEPTION: CARDAN ANGLES SINGULARITY_cn", (java.lang.Object[]) throwableArray73, (java.lang.Throwable) mathException95);
        java.io.PrintWriter printWriter99 = printWriter42.printf(locale58, "zxz_KO_KR", (java.lang.Object[]) throwableArray73);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "fr");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "fran\347ais" + "'", str21, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertTrue("'" + category43 + "' != '" + java.util.Locale.Category.FORMAT + "'", category43.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category44 + "' != '" + java.util.Locale.Category.FORMAT + "'", category44.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "ja_JP");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "JP" + "'", str57, "JP");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "ja_JP");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\ub300\ud55c\ubbfc\uad6d" + "'", str63, "\ub300\ud55c\ubbfc\uad6d");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\uc77c\ubcf8\uc5b4" + "'", str64, "\uc77c\ubcf8\uc5b4");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertNotNull(printWriter99);
    }

    @Test
    public void test07502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07502");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        printStream6.println('a');
        java.io.PrintStream printStream18 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        printStream6.write(1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream6, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray29 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation28.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation43.revert();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation43.getAxis();
        double double46 = vector3D45.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D45.subtract(93.57684707871968d, vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ0();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double70 = rotation69.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation62.applyTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation62.revert();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation62.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D55.subtract(3.112216163995451d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D79, (double) (byte) 100, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.subtract((double) 10L, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D75.add(0.0657541776220426d, vector3D87);
        printStream6.print((java.lang.Object) 0.0657541776220426d);
        java.io.PrintStream printStream91 = new java.io.PrintStream((java.io.OutputStream) printStream6, false);
        printStream6.flush();
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream95 = new java.io.PrintStream((java.io.OutputStream) printStream6, true, "org.apache.commons.math.MathException: CN");
            org.junit.Assert.fail("Expected exception of type java.io.UnsupportedEncodingException; message: org.apache.commons.math.MathException: CN");
        } catch (java.io.UnsupportedEncodingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9999999999999999d + "'", double46 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test07503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07503");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation22.revert();
        java.io.PrintStream printStream25 = new java.io.PrintStream("ko-KR");
        printStream25.close();
        java.util.Locale locale27 = java.util.Locale.UK;
        java.lang.String[] strArray29 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream30 = printStream25.format(locale27, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray29);
        printStream25.println((long) 10);
        java.io.PrintStream printStream34 = printStream25.append('x');
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.OutputStream) printStream34, false);
        printWriter36.println();
        java.io.PrintWriter printWriter39 = printWriter36.append('4');
        printWriter36.print(100);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray48 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D55, (double) (byte) 100, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D52, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation47.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation47.revert();
        double double63 = rotation62.getQ1();
        printWriter36.println((java.lang.Object) rotation62);
        double double65 = rotation62.getQ2();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation22.applyTo(rotation62);
        double double67 = rotation62.getQ0();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation62.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printStream30);
        org.junit.Assert.assertNotNull(printStream34);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 100.0d + "'", double63 == 100.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-52.0d) + "'", double67 == (-52.0d));
        org.junit.Assert.assertNotNull(rotation68);
    }

    @Test
    public void test07504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07504");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((double) (byte) 100);
        printStream1.println((long) (short) -1);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        printWriter9.print((-1));
        java.io.PrintStream printStream13 = new java.io.PrintStream("ko-KR");
        printStream13.close();
        java.util.Locale locale15 = java.util.Locale.UK;
        java.lang.String[] strArray17 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream18 = printStream13.format(locale15, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray17);
        printStream18.write(10);
        printStream18.write((int) (short) 0);
        printStream18.write((int) (short) 10);
        char[] charArray27 = new char[] { 'x', 'a' };
        printStream18.println(charArray27);
        printWriter9.println(charArray27);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter9, false);
        printWriter31.write(0);
        java.util.Locale locale34 = java.util.Locale.FRENCH;
        java.util.Locale locale35 = java.util.Locale.FRENCH;
        java.util.Locale locale36 = java.util.Locale.TAIWAN;
        java.lang.String str37 = locale35.getDisplayScript(locale36);
        java.lang.String str38 = locale34.getDisplayLanguage(locale35);
        boolean boolean39 = locale35.hasExtensions();
        java.util.Locale.Builder builder40 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder42 = builder40.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale43 = builder40.build();
        java.lang.String str44 = locale35.getDisplayLanguage(locale43);
        java.lang.String str45 = locale43.getCountry();
        java.util.Set<java.lang.String> strSet46 = locale43.getUnicodeLocaleKeys();
        java.lang.String str47 = locale43.getDisplayCountry();
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D56, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation60.getAxis();
        double[][] doubleArray62 = rotation60.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(doubleArray62, (double) (short) 0);
        java.io.PrintWriter printWriter65 = printWriter31.printf(locale43, "zxz_KO_KR", (java.lang.Object[]) doubleArray62);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray73 = rotation72.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D75, (double) (byte) 100, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D80, (double) (byte) 100, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D77, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation72.applyInverseTo(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation72.getAxis();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation72.revert();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation87.revert();
        double[][] doubleArray89 = rotation88.getMatrix();
        java.io.PrintWriter printWriter90 = printWriter65.printf("french (Germany,fr)", (java.lang.Object[]) doubleArray89);
        java.io.PrintWriter printWriter92 = printWriter65.append((java.lang.CharSequence) "org.apache.commons.math.MathException: Francia");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "xa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "xa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[x, a]");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "fr");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "fr");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "fran\347ais" + "'", str38, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "French" + "'", str44, "French");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter92);
    }

    @Test
    public void test07505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07505");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        printWriter1.println((long) (short) 10);
        java.util.Locale locale6 = java.util.Locale.PRC;
        java.lang.String str7 = locale6.getDisplayVariant();
        java.lang.String[] strArray12 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray19 = mathException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray19);
        java.io.PrintWriter printWriter21 = printWriter1.format(locale6, "", (java.lang.Object[]) throwableArray19);
        printWriter1.println();
        printWriter1.println(true);
        printWriter1.println('#');
        printWriter1.close();
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.println((float) 100L);
        java.util.Locale.Builder builder32 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder34 = builder32.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder36 = builder32.setLanguage("ZXZ");
        java.util.Locale locale37 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder38 = builder32.setLocale(locale37);
        java.util.Locale.Builder builder40 = builder32.setLanguage("");
        java.util.Locale.Builder builder41 = builder32.clear();
        java.util.Locale.Builder builder42 = builder41.clear();
        java.util.Locale locale43 = builder42.build();
        java.lang.String str44 = locale43.getDisplayVariant();
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("yzy");
        printWriter47.write("zh-CN", (int) (short) 10, (int) (short) -1);
        java.io.PrintWriter printWriter53 = printWriter47.append((java.lang.CharSequence) "\u6cd5\u6587");
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter47);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation62.getAxis();
        double[][] doubleArray64 = rotation62.getMatrix();
        double double65 = rotation62.getQ1();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation56.applyInverseTo(rotation62);
        double[][] doubleArray67 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(doubleArray67, (double) (short) 100);
        java.io.PrintWriter printWriter70 = printWriter54.format("\uc911\uad6d\uc5b4", (java.lang.Object[]) doubleArray67);
        java.io.PrintWriter printWriter71 = printWriter1.format(locale43, "KR", (java.lang.Object[]) doubleArray67);
        printWriter71.println((java.lang.Object) 0.9999999999999998d);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 100.0d + "'", double65 == 100.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(printWriter71);
    }

    @Test
    public void test07506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07506");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        printStream6.write((int) (short) 0);
        printStream6.write(0);
        java.io.PrintStream printStream14 = printStream6.append('u');
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("ja");
        printWriter16.print(0);
        java.io.PrintStream printStream20 = new java.io.PrintStream("ko-KR");
        printStream20.close();
        java.util.Locale locale22 = java.util.Locale.UK;
        java.lang.String[] strArray24 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream25 = printStream20.format(locale22, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray24);
        printStream25.write(10);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.OutputStream) printStream25);
        printStream25.print((int) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation37.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double53 = rotation52.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double60 = rotation59.getQ0();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation52.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation52.revert();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation46.applyInverseTo(rotation52);
        double[][] doubleArray64 = rotation46.getMatrix();
        java.io.PrintStream printStream65 = printStream25.printf("zh", (java.lang.Object[]) doubleArray64);
        printStream65.print((long) 1);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter71 = printWriter69.append('#');
        java.lang.Object[] objArray73 = null;
        java.io.PrintWriter printWriter74 = printWriter71.format("fran\347ais", objArray73);
        printWriter71.print("zxz");
        java.io.PrintStream printStream78 = new java.io.PrintStream("ko-KR");
        printStream78.close();
        java.util.Locale locale80 = java.util.Locale.UK;
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream83 = printStream78.format(locale80, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray82);
        printStream83.write(10);
        printStream83.write((int) (short) 0);
        printStream83.write((int) (short) 10);
        char[] charArray92 = new char[] { 'x', 'a' };
        printStream83.println(charArray92);
        printWriter71.write(charArray92);
        printStream65.println(charArray92);
        printWriter16.write(charArray92);
        printStream6.println(charArray92);
        printStream6.print((long) (byte) 1);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream14);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(printStream25);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 52.0d + "'", double53 == 52.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(printStream65);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertNotNull(locale80);
        org.junit.Assert.assertEquals(locale80.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(printStream83);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "xa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "xa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[x, a]");
    }

    @Test
    public void test07507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07507");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        double double21 = rotation20.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        double double38 = rotation28.getQ0();
        double double39 = rotation28.getQ0();
        double[][] doubleArray40 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation46.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation28.applyInverseTo(rotation46);
        double[][] doubleArray57 = rotation46.getMatrix();
        double double58 = rotation46.getQ3();
        double double59 = rotation46.getAngle();
        double[][] doubleArray60 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation20.applyInverseTo(rotation46);
        double[][] doubleArray62 = rotation61.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(doubleArray62, 0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 52.0d + "'", double39 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(doubleArray62);
    }

    @Test
    public void test07508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07508");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((-34365.38633275781d), (-0.33317344249276587d));
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((-1.569740199951139d), vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D(0.8775825618903728d, 0.34036798076772956d, 1.884114997657917d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply(43.364388609539944d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, (double) (short) 10, (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.scalarMultiply(11770.102600641243d);
        double double20 = vector3D17.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D33, (double) (byte) 100, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D38, (double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D35, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation30.applyInverseTo(vector3D35);
        double double44 = rotation30.getQ0();
        double double45 = rotation30.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation30.applyInverseTo(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(1.873542278417901d, vector3D4, 0.7003721519181171d, vector3D10, (-0.6217166533367139d), vector3D17, 0.7069393147060633d, vector3D49);
        double double53 = vector3D52.getDelta();
        double double54 = vector3D52.getX();
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 33.54101966249684d + "'", double20 == 33.54101966249684d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 70.37287811284375d + "'", double54 == 70.37287811284375d);
    }

    @Test
    public void test07509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07509");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.9904757959510307d), 0.0d, (-0.0d), 0.0d, true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ3();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) (-1L), (double) (short) 10, (double) 'a');
        double double27 = rotation26.getAngle();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation20.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation13.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation29.revert();
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(373547.3388035254d, (double) 1.0f, (-0.5063656411097588d), (-0.30821743242059296d), false);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation30.applyInverseTo(rotation37);
        double double39 = rotation37.getQ1();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation37.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation7.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation7.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2.3122509176395862d + "'", double27 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
    }

    @Test
    public void test07510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07510");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        char[] charArray23 = new char[] { 'a', 'a', '4' };
        printStream1.println(charArray23);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.OutputStream) printStream1, false);
        printStream1.println(' ');
        java.util.Locale locale32 = new java.util.Locale("cor\351en", "hi!", "XZY");
        printStream1.print((java.lang.Object) "hi!");
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray40 = rotation39.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D47, (double) (byte) 100, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D44, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation39.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation39.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation54.revert();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation54.getAxis();
        double double57 = vector3D56.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA3();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder59.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D56.subtract(93.57684707871968d, vector3D65);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double74 = rotation73.getQ0();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double81 = rotation80.getQ0();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation73.applyTo(rotation80);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation73.revert();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D84.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D66.subtract(3.112216163995451d, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D86.negate();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D86.negate();
        double double89 = vector3D86.getZ();
        printStream1.print((java.lang.Object) vector3D86);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, a, 4]");
        org.junit.Assert.assertEquals(locale32.toString(), "cor\351en_HI!_XZY");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.9999999999999999d + "'", double57 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 52.0d + "'", double74 == 52.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 52.0d + "'", double81 == 52.0d);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.196274546169144d + "'", double89 == 3.196274546169144d);
    }

    @Test
    public void test07511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07511");
        double[][] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(doubleArray0, (-9.2092440727286d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07512");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.12861157776525933d), 3517.607846147136d, (-0.0045352898212708305d));
        double double4 = vector3D3.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str6 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str11 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder5.getA3();
        double double13 = vector3D12.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str20 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder14.getA2();
        double double23 = org.apache.commons.math.geometry.Vector3D.angle(vector3D12, vector3D22);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale27 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str28 = locale27.getScript();
        java.util.Locale locale29 = java.util.Locale.KOREA;
        java.lang.String str30 = locale27.getDisplayLanguage(locale29);
        java.lang.String[] strArray33 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray33, (java.lang.Throwable) mathException35);
        java.io.PrintWriter printWriter37 = printWriter26.format(locale29, "YZY", (java.lang.Object[]) strArray33);
        printWriter37.println(0.0d);
        printWriter37.print((long) (byte) 10);
        printWriter37.println();
        printWriter37.print((int) (short) 0);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter48 = printWriter46.append('#');
        printWriter46.println((long) (short) 10);
        java.util.Locale locale51 = java.util.Locale.PRC;
        java.lang.String str52 = locale51.getDisplayVariant();
        java.lang.String[] strArray57 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray57, (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray62 = mathException61.getSuppressed();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray57, (java.lang.Throwable) mathException61);
        java.lang.Throwable[] throwableArray64 = mathException61.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException65 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray64);
        java.io.PrintWriter printWriter66 = printWriter46.format(locale51, "", (java.lang.Object[]) throwableArray64);
        printWriter66.println((float) (short) 0);
        printWriter37.print((java.lang.Object) (short) 0);
        printWriter37.print(false);
        printWriter37.print((long) (byte) 10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder74.getA1();
        java.lang.String str80 = rotationOrder74.toString();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder74.getA2();
        printWriter37.println((java.lang.Object) rotationOrder74);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D12.add(362212.73358915845d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D3.subtract(vector3D12);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 3517.607846147136d + "'", double4 == 3517.607846147136d);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXZ" + "'", str6, "ZXZ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXZ" + "'", str11, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXZ" + "'", str15, "ZXZ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ZXZ" + "'", str20, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.5707963267948966d + "'", double23 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str30, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "XYZ" + "'", str80, "XYZ");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test07513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07513");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.6237485370392872d), 0.0d, (-10400.0d), 100.02049971110628d, false);
    }

    @Test
    public void test07514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07514");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("Koreanisch");
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale4 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str5 = locale4.getScript();
        java.util.Locale locale6 = java.util.Locale.KOREA;
        java.lang.String str7 = locale4.getDisplayLanguage(locale6);
        java.lang.String[] strArray10 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray10, (java.lang.Throwable) mathException12);
        java.io.PrintWriter printWriter14 = printWriter3.format(locale6, "YZY", (java.lang.Object[]) strArray10);
        printWriter14.close();
        printWriter14.println('a');
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter21 = printWriter19.append('#');
        java.util.Locale locale22 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double30 = rotation29.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double37 = rotation36.getQ0();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation29.applyTo(rotation36);
        double double39 = rotation36.getQ3();
        double[][] doubleArray40 = rotation36.getMatrix();
        java.io.PrintWriter printWriter41 = printWriter21.printf(locale22, "XZY", (java.lang.Object[]) doubleArray40);
        java.io.PrintStream printStream43 = new java.io.PrintStream("ko-KR");
        printStream43.close();
        java.util.Locale locale45 = java.util.Locale.UK;
        java.lang.String[] strArray47 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream48 = printStream43.format(locale45, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray47);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter52 = printWriter50.append('#');
        java.lang.Object[] objArray54 = null;
        java.io.PrintWriter printWriter55 = printWriter52.format("fran\347ais", objArray54);
        java.util.Locale locale56 = null;
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray59 = mathException58.getSuppressed();
        java.io.PrintWriter printWriter60 = printWriter52.format(locale56, "zxz", (java.lang.Object[]) throwableArray59);
        char[] charArray64 = new char[] { 'a', ' ', '#' };
        printWriter60.println(charArray64);
        printStream43.println(charArray64);
        printWriter41.write(charArray64);
        printWriter14.write(charArray64);
        printWriter1.println(charArray64);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter72 = printWriter1.append((java.lang.CharSequence) "Korean (South Korea)");
        printWriter1.print("\u53f0\u6e7e\u5730\u533a");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str7, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(printStream48);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a,  , #]");
        org.junit.Assert.assertNotNull(printWriter72);
    }

    @Test
    public void test07515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07515");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D7.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D7, (double) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder12.getA1();
        double[] doubleArray16 = rotation11.getAngles(rotationOrder12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D27, (double) (byte) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation25.applyTo(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D34);
        double double36 = vector3D35.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation43.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder45.getA1();
        double double51 = vector3D50.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D50.add((double) (-1.0f), vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((-0.13715201283077028d), vector3D35, (double) (short) 0, vector3D58, 0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D17.add(1.911187634024677d, vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.5707963267948966, 0.530964914873383, -1.5707963267948966]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 3.141592653589793d + "'", double36 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
    }

    @Test
    public void test07516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07516");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D(11770.079614583028d, 0.3403913072297808d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D12, (-0.0341424923312518d));
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyInverseTo(rotation14);
        double double17 = rotation16.getQ2();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0056990606844794945d + "'", double15 == 0.0056990606844794945d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.24591075000480545d) + "'", double17 == (-0.24591075000480545d));
    }

    @Test
    public void test07517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07517");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.println((float) 100L);
        printStream1.println("zxz");
        printStream1.close();
        printStream1.print((long) (short) 1);
        printStream1.println(10L);
        printStream1.print(' ');
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07518");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        printStream16.write(10);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("ja");
        printWriter20.print(' ');
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.Writer) printWriter20);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter23, true);
        java.io.PrintStream printStream27 = new java.io.PrintStream("ko-KR");
        printStream27.println("fr");
        printStream27.println("deu");
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale34 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str35 = locale34.getScript();
        java.util.Locale locale36 = java.util.Locale.KOREA;
        java.lang.String str37 = locale34.getDisplayLanguage(locale36);
        java.lang.String[] strArray40 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray40, (java.lang.Throwable) mathException42);
        java.io.PrintWriter printWriter44 = printWriter33.format(locale36, "YZY", (java.lang.Object[]) strArray40);
        printWriter44.println(0.0d);
        printWriter44.print((long) (byte) 10);
        printWriter44.println();
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter53 = printWriter51.append('#');
        java.lang.Object[] objArray55 = null;
        java.io.PrintWriter printWriter56 = printWriter53.format("fran\347ais", objArray55);
        java.util.Locale locale57 = null;
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray60 = mathException59.getSuppressed();
        java.io.PrintWriter printWriter61 = printWriter53.format(locale57, "zxz", (java.lang.Object[]) throwableArray60);
        char[] charArray65 = new char[] { 'a', ' ', '#' };
        printWriter61.println(charArray65);
        printWriter44.write(charArray65);
        printStream27.println(charArray65);
        printWriter25.write(charArray65);
        java.io.PrintStream printStream71 = new java.io.PrintStream("ko-KR");
        printStream71.close();
        java.util.Locale locale73 = java.util.Locale.UK;
        java.lang.String[] strArray75 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream76 = printStream71.format(locale73, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray75);
        printStream76.write(10);
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.OutputStream) printStream76);
        printStream76.print((int) (short) 1);
        java.io.PrintStream printStream83 = new java.io.PrintStream("ko-KR");
        printStream83.println("fr");
        printStream76.print((java.lang.Object) "fr");
        char[] charArray90 = new char[] { '#', '4', 'a' };
        printStream76.print(charArray90);
        printWriter25.write(charArray90);
        printStream16.println(charArray90);
        printStream16.println((int) (byte) 0);
        printStream16.println((float) (short) 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str37, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale73);
        org.junit.Assert.assertEquals(locale73.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printStream76);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "#4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "#4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[#, 4, a]");
    }

    @Test
    public void test07519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07519");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.util.Locale locale4 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        double double21 = rotation18.getQ3();
        double[][] doubleArray22 = rotation18.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter3.printf(locale4, "XZY", (java.lang.Object[]) doubleArray22);
        java.lang.String str24 = locale4.getISO3Language();
        java.util.Locale locale25 = java.util.Locale.PRC;
        java.util.Locale locale26 = java.util.Locale.ROOT;
        java.lang.String str27 = locale25.getDisplayName(locale26);
        java.lang.String str28 = locale4.getDisplayCountry(locale25);
        java.lang.String str29 = locale4.getCountry();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "eng" + "'", str24, "eng");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Chinese (China)" + "'", str27, "Chinese (China)");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test07520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07520");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray20 = mathException18.getArguments();
        java.io.PrintWriter printWriter21 = printWriter12.format("org.apache.commons.math.MathException: ZXZ", objArray20);
        printWriter21.println();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter26 = printWriter24.append('#');
        java.lang.Object[] objArray28 = null;
        java.io.PrintWriter printWriter29 = printWriter26.format("fran\347ais", objArray28);
        java.util.Locale locale30 = null;
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray33 = mathException32.getSuppressed();
        java.io.PrintWriter printWriter34 = printWriter26.format(locale30, "zxz", (java.lang.Object[]) throwableArray33);
        char[] charArray38 = new char[] { 'a', ' ', '#' };
        printWriter34.println(charArray38);
        printWriter21.write(charArray38);
        printWriter21.print(false);
        printWriter21.println();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double52 = rotation51.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) (-1L), (double) (short) 10, (double) 'a');
        double double58 = rotation57.getAngle();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation51.applyInverseTo(rotation57);
        double[][] doubleArray60 = rotation57.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(doubleArray60, 2.3122509176395862d);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(doubleArray60, 0.2623748537039287d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException65 = new org.apache.commons.math.geometry.NotARotationMatrixException("anglais (Royaume-Uni)", (java.lang.Object[]) doubleArray60);
        java.io.PrintWriter printWriter66 = printWriter21.printf("und", (java.lang.Object[]) doubleArray60);
        printWriter21.println("de");
        printWriter21.print((float) 0);
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a,  , #]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 52.0d + "'", double52 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2.3122509176395862d + "'", double58 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(printWriter66);
    }

    @Test
    public void test07521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07521");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.995037190209989d, (double) 0.0f, 0.995037190209989d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D20, (double) (byte) 100, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation18.applyTo(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation18.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 1.5905084122975552d, (-12804.0d));
        double double30 = org.apache.commons.math.geometry.Vector3D.angle(vector3D25, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 10, vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str34 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D35.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D36.negate();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D37.negate();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.add((double) 'a', vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((-0.014627082323922274d), vector3D10, 11983.257028037076d, vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D10.subtract((double) (byte) 0, vector3D44);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D55, (double) (byte) 100, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation53.applyTo(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.subtract(vector3D62);
        double double64 = vector3D63.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation71.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder73.getA1();
        double double79 = vector3D78.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D72.add(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D78.add((double) (-1.0f), vector3D85);
        org.apache.commons.math.geometry.RotationOrder rotationOrder88 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(rotationOrder88, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotationOrder88.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder88.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D((-0.13715201283077028d), vector3D63, (double) (short) 0, vector3D86, 0.0d, vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D96 = new org.apache.commons.math.geometry.Vector3D((-11094.094757084158d), vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D10.subtract(vector3D96);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.4787032876674264d + "'", double30 == 1.4787032876674264d);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ZXZ" + "'", str34, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 3.141592653589793d + "'", double64 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotationOrder88);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test07522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07522");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(2.2225112653956535E-5d, 1.2128128763110742E8d, 40.309233691728366d, 2.1098021193192458d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((-0.09667091924386814d), vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D17, (double) (byte) 100, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D22, (double) (byte) 100, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D19, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D29, (double) (byte) 100, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D35, (double) (byte) 100, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D37, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D24, (double) (byte) 1, vector3D32, (double) (short) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D54, (double) (byte) 100, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D61, (double) (byte) 100, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D51, (double) 0.0f, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D24.subtract((double) 10L, vector3D63);
        double double67 = vector3D24.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str74 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D75.negate();
        double double78 = org.apache.commons.math.geometry.Vector3D.angle(vector3D14, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation6.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D(17426.563293542316d, 1040.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((-2000.0d), vector3D79, 0.0d, vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXZ" + "'", str69, "ZXZ");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ZXZ" + "'", str74, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.039831411921513d + "'", double78 == 1.039831411921513d);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test07523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07523");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter4 = printWriter2.append('#');
        java.lang.Object[] objArray6 = null;
        java.io.PrintWriter printWriter7 = printWriter4.format("fran\347ais", objArray6);
        printWriter7.print(true);
        java.util.Locale.Builder builder10 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder12 = builder10.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder13 = builder12.clearExtensions();
        java.util.Locale locale14 = builder13.build();
        java.util.Set<java.lang.Character> charSet15 = locale14.getExtensionKeys();
        java.util.Locale locale16 = locale14.stripExtensions();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation24.getAxis();
        double[][] doubleArray26 = rotation24.getMatrix();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray26);
        java.io.PrintWriter printWriter28 = printWriter7.printf(locale14, "org.apache.commons.math.MathException: YZY", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("GERMANY", (java.lang.Object[]) doubleArray26);
        org.junit.Assert.assertNotNull(printWriter4);
        org.junit.Assert.assertNotNull(printWriter7);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "");
        org.junit.Assert.assertNotNull(charSet15);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(printWriter28);
    }

    @Test
    public void test07524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07524");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintStream printStream18 = printStream16.append('u');
        printStream16.println();
        java.io.PrintStream printStream22 = new java.io.PrintStream("ko-KR");
        printStream22.close();
        printStream22.println((double) '4');
        printStream22.println((double) (byte) 100);
        printStream22.println((long) (short) -1);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.OutputStream) printStream22);
        printWriter30.println(false);
        java.util.Locale.Builder builder33 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder35 = builder33.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder37 = builder33.setLanguage("ZXZ");
        java.util.Locale locale38 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder39 = builder33.setLocale(locale38);
        java.util.Locale.setDefault(locale38);
        java.util.Set<java.lang.String> strSet41 = locale38.getUnicodeLocaleAttributes();
        java.lang.String str42 = locale38.getDisplayScript();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException45);
        java.lang.Object[] objArray47 = mathException45.getArguments();
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("deu", (java.lang.Throwable) mathException45);
        java.lang.Object[] objArray49 = mathException45.getArguments();
        java.io.PrintWriter printWriter50 = printWriter30.format(locale38, "German (Germany)", objArray49);
        java.io.PrintStream printStream51 = printStream16.format("Chinesisch", objArray49);
        java.io.PrintStream printStream52 = new java.io.PrintStream((java.io.OutputStream) printStream51);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream56 = printStream51.append((java.lang.CharSequence) "KR", (int) (short) 10, (int) 'u');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 117");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(printStream51);
    }

    @Test
    public void test07525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07525");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation14.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation37.applyTo(rotation44);
        double double47 = rotation44.getQ3();
        double[][] doubleArray48 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation31.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double56 = rotation55.getQ0();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ0();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation55.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation55.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation71 = rotation65.applyTo(rotation70);
        double double72 = rotation70.getAngle();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation44.applyInverseTo(rotation70);
        double double74 = rotation70.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation70.getAxis();
        double double76 = rotation70.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 52.0d + "'", double56 == 52.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2.3122509176395862d + "'", double72 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.3331734424927659d + "'", double74 == 0.3331734424927659d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.4028887144651276d + "'", double76 == 0.4028887144651276d);
    }

    @Test
    public void test07526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07526");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        java.io.PrintWriter printWriter11 = printWriter3.format(locale7, "zxz", (java.lang.Object[]) throwableArray10);
        char[] charArray15 = new char[] { 'a', ' ', '#' };
        printWriter11.println(charArray15);
        java.util.Locale locale17 = java.util.Locale.FRENCH;
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.lang.String str21 = locale17.getDisplayLanguage(locale18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray33 = rotation32.getMatrix();
        java.io.PrintWriter printWriter34 = printWriter11.printf(locale17, "english", (java.lang.Object[]) doubleArray33);
        printWriter34.println();
        printWriter34.close();
        printWriter34.write("hi!", (int) '4', (int) (short) 0);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter44 = printWriter42.append('#');
        java.util.Locale locale45 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double53 = rotation52.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double60 = rotation59.getQ0();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation52.applyTo(rotation59);
        double double62 = rotation59.getQ3();
        double[][] doubleArray63 = rotation59.getMatrix();
        java.io.PrintWriter printWriter64 = printWriter44.printf(locale45, "XZY", (java.lang.Object[]) doubleArray63);
        java.io.PrintStream printStream66 = new java.io.PrintStream("ko-KR");
        printStream66.close();
        java.util.Locale locale68 = java.util.Locale.UK;
        java.lang.String[] strArray70 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream71 = printStream66.format(locale68, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray70);
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter75 = printWriter73.append('#');
        java.lang.Object[] objArray77 = null;
        java.io.PrintWriter printWriter78 = printWriter75.format("fran\347ais", objArray77);
        java.util.Locale locale79 = null;
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        java.io.PrintWriter printWriter83 = printWriter75.format(locale79, "zxz", (java.lang.Object[]) throwableArray82);
        char[] charArray87 = new char[] { 'a', ' ', '#' };
        printWriter83.println(charArray87);
        printStream66.println(charArray87);
        printWriter64.write(charArray87);
        printWriter34.print(charArray87);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "fr");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "fran\347ais" + "'", str21, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 52.0d + "'", double53 == 52.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(printStream71);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[a,  , #]");
    }

    @Test
    public void test07527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07527");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D3, (double) (byte) 100, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D10, (double) (byte) 1, vector3D18, (double) (short) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, vector3D18, (double) 0L, vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D38.orthogonal();
        double double40 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D35, vector3D38);
        double double41 = vector3D35.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D(10.0d, 2.3122509176395862d);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D(0.851099441814107d, vector3D44, 27.29993135674214d, vector3D48);
        double double50 = vector3D49.getDelta();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray58 = rotation57.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D60, (double) (byte) 100, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D65, (double) (byte) 100, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D62, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation57.applyInverseTo(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation57.getAxis();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation57.revert();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation72.revert();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation72.getAxis();
        double double75 = vector3D74.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(0.2623748537039287d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D49, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D35.add(1.6312889998277815E7d, vector3D77);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5403023058681398d + "'", double40 == 0.5403023058681398d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.8414709848078965d + "'", double41 == 0.8414709848078965d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.8077946005619026d + "'", double50 == 0.8077946005619026d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9999999999999999d + "'", double75 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test07528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07528");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        printWriter1.println((long) (short) 10);
        java.util.Locale locale6 = java.util.Locale.PRC;
        java.lang.String str7 = locale6.getDisplayVariant();
        java.lang.String[] strArray12 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray19 = mathException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray19);
        java.io.PrintWriter printWriter21 = printWriter1.format(locale6, "", (java.lang.Object[]) throwableArray19);
        printWriter1.println();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale25 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str26 = locale25.getScript();
        java.util.Locale locale27 = java.util.Locale.KOREA;
        java.lang.String str28 = locale25.getDisplayLanguage(locale27);
        java.lang.String[] strArray31 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray31, (java.lang.Throwable) mathException33);
        java.io.PrintWriter printWriter35 = printWriter24.format(locale27, "YZY", (java.lang.Object[]) strArray31);
        printWriter35.close();
        java.io.PrintStream printStream38 = new java.io.PrintStream("ko-KR");
        printStream38.close();
        java.util.Locale locale40 = java.util.Locale.UK;
        java.lang.String[] strArray42 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream43 = printStream38.format(locale40, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray42);
        printStream43.write(10);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter((java.io.OutputStream) printStream43);
        printStream43.print((int) (short) 1);
        java.io.PrintStream printStream50 = new java.io.PrintStream("ko-KR");
        printStream50.println("fr");
        printStream43.print((java.lang.Object) "fr");
        char[] charArray57 = new char[] { '#', '4', 'a' };
        printStream43.print(charArray57);
        printWriter35.write(charArray57, (int) (byte) -1, 1);
        printWriter1.write(charArray57);
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double72 = rotation71.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, (double) (-1L), (double) (short) 10, (double) 'a');
        double double78 = rotation77.getAngle();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation71.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation71.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA3();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation80.applyTo(rotation86);
        double[][] doubleArray88 = rotation86.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(doubleArray88, 3929.5113857326546d);
        java.io.PrintWriter printWriter91 = printWriter1.format("chinesisch (vereinigtes k\366nigreich)", (java.lang.Object[]) doubleArray88);
        printWriter1.write("xyz");
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str28, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(printStream43);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, 4, a]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 52.0d + "'", double72 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2.3122509176395862d + "'", double78 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test07529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07529");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation20.getAxis();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray29 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation28.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ1();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyTo(rotation50);
        double double53 = rotation43.getQ2();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double60 = rotation59.getQ0();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double67 = rotation66.getQ0();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation59.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation59.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation75 = rotation69.applyTo(rotation74);
        double double76 = rotation74.getAngle();
        double double77 = rotation74.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation83 = rotation74.applyInverseTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation43.applyTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation20.applyInverseTo(rotation84);
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder86.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder86.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder86.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder86.getA2();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(rotationOrder86, 0.4028887144651276d, 0.09966865249116202d, (-1.63942416E8d));
        double double95 = rotation94.getQ0();
        org.apache.commons.math.geometry.Rotation rotation96 = rotation84.applyInverseTo(rotation94);
        double double97 = rotation96.getQ1();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 100.0d + "'", double51 == 100.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 52.0d + "'", double67 == 52.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2.3122509176395862d + "'", double76 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.4028887144651276d + "'", double77 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.851099441814107d + "'", double95 == 0.851099441814107d);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 95.36559603096835d + "'", double97 == 95.36559603096835d);
    }

    @Test
    public void test07530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07530");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        java.lang.String[] strArray15 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray20 = mathException19.getSuppressed();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException19);
        java.io.PrintStream printStream22 = printStream6.format("deu", (java.lang.Object[]) strArray15);
        java.io.PrintStream printStream24 = printStream22.append('x');
        printStream22.print(true);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.OutputStream) printStream22);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter((java.io.Writer) printWriter27, false);
        printWriter29.println('#');
        printWriter29.flush();
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("ja");
        printWriter34.print(' ');
        printWriter34.println((double) 0L);
        printWriter29.println((java.lang.Object) 0L);
        printWriter29.println(1.5707963267948966d);
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("CN");
        printWriter44.print(0L);
        java.util.Locale.Builder builder47 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder49 = builder47.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder51 = builder47.setLanguage("ZXZ");
        java.util.Locale locale52 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder53 = builder47.setLocale(locale52);
        java.lang.String str55 = locale52.getUnicodeLocaleType("fr");
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray63 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D65, (double) (byte) 100, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D70, (double) (byte) 100, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D67, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation62.applyInverseTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation62.revert();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation77.revert();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double85 = rotation84.getQ1();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation77.applyTo(rotation84);
        double[][] doubleArray87 = rotation84.getMatrix();
        java.io.PrintWriter printWriter88 = printWriter44.printf(locale52, "ko-KR", (java.lang.Object[]) doubleArray87);
        java.io.PrintWriter printWriter89 = printWriter29.printf("ko-KR", (java.lang.Object[]) doubleArray87);
        printWriter29.println((float) '4');
        printWriter29.write((int) (byte) 100);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(printStream24);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 100.0d + "'", double85 == 100.0d);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test07531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07531");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = java.util.Locale.GERMAN;
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale11 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str12 = locale11.getScript();
        java.util.Locale locale13 = java.util.Locale.KOREA;
        java.lang.String str14 = locale11.getDisplayLanguage(locale13);
        java.lang.String[] strArray17 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray17, (java.lang.Throwable) mathException19);
        java.io.PrintWriter printWriter21 = printWriter10.format(locale13, "YZY", (java.lang.Object[]) strArray17);
        java.io.PrintWriter printWriter22 = printWriter6.printf(locale7, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray17);
        printWriter22.println('a');
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale28 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str29 = locale28.getScript();
        java.util.Locale locale30 = java.util.Locale.KOREA;
        java.lang.String str31 = locale28.getDisplayLanguage(locale30);
        java.lang.String[] strArray34 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray34, (java.lang.Throwable) mathException36);
        java.io.PrintWriter printWriter38 = printWriter27.format(locale30, "YZY", (java.lang.Object[]) strArray34);
        printWriter38.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException44);
        java.lang.Object[] objArray46 = mathException44.getArguments();
        java.io.PrintWriter printWriter47 = printWriter38.format("org.apache.commons.math.MathException: ZXZ", objArray46);
        java.lang.String[] strArray51 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray51, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray56 = mathException55.getSuppressed();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray51, (java.lang.Throwable) mathException55);
        java.io.PrintWriter printWriter58 = printWriter47.printf("KOR", (java.lang.Object[]) strArray51);
        java.io.PrintWriter printWriter59 = printWriter22.printf("\u97d3\u6587)", (java.lang.Object[]) strArray51);
        printWriter22.println((-68.77819630729812d));
        java.io.PrintWriter printWriter63 = printWriter22.append('a');
        printWriter22.println();
        java.util.Locale.Builder builder65 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder67 = builder65.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder69 = builder65.setLanguage("ZXZ");
        java.util.Locale locale70 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder71 = builder65.setLocale(locale70);
        java.util.Locale locale72 = java.util.Locale.KOREA;
        java.util.Locale.Builder builder73 = builder71.setLocale(locale72);
        java.util.Locale locale74 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str75 = locale74.getScript();
        java.util.Locale locale76 = java.util.Locale.KOREA;
        java.lang.String str77 = locale74.getDisplayLanguage(locale76);
        java.util.Locale.Builder builder78 = builder71.setLocale(locale76);
        java.util.Locale.Builder builder79 = builder71.clear();
        java.util.Locale.Builder builder80 = builder79.clearExtensions();
        java.util.Locale locale81 = builder80.build();
        java.lang.String str82 = locale81.getDisplayCountry();
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double90 = rotation89.getQ0();
        double[][] doubleArray91 = rotation89.getMatrix();
        java.io.PrintWriter printWriter92 = printWriter22.format(locale81, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: cor\351en", (java.lang.Object[]) doubleArray91);
        printWriter92.write("\ud504\ub791\uc2a4", (int) (short) 10, (-1));
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "de");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str14, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str31, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(locale72);
        org.junit.Assert.assertEquals(locale72.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str77, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 52.0d + "'", double90 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(printWriter92);
    }

    @Test
    public void test07532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07532");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        double[] doubleArray10 = rotation8.getAngles(rotationOrder9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 3.112216163995451d, 1.5394043111576534d, 0.0d);
        double double18 = rotation17.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXZ" + "'", str3, "ZXZ");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXZ" + "'", str4, "ZXZ");
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.7902180191116501, -0.5204312332296097, 1.8449601148260304]");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.718040514139729d) + "'", double18 == (-0.718040514139729d));
    }

    @Test
    public void test07533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07533");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        printWriter1.println((long) (short) 10);
        java.util.Locale locale6 = java.util.Locale.PRC;
        java.lang.String str7 = locale6.getDisplayVariant();
        java.lang.String[] strArray12 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray19 = mathException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray19);
        java.io.PrintWriter printWriter21 = printWriter1.format(locale6, "", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException23);
        java.lang.Object[] objArray25 = mathException23.getArguments();
        java.io.PrintWriter printWriter26 = printWriter1.printf("zh", objArray25);
        printWriter1.println((-1.5707963267948966d));
        java.util.Locale locale29 = java.util.Locale.ROOT;
        java.lang.String str30 = locale29.getDisplayLanguage();
        java.util.Locale locale31 = java.util.Locale.FRENCH;
        java.util.Locale locale32 = java.util.Locale.TAIWAN;
        java.lang.String str33 = locale31.getDisplayScript(locale32);
        java.lang.String str34 = locale29.getDisplayLanguage(locale31);
        java.util.Locale locale35 = locale31.stripExtensions();
        java.util.Set<java.lang.String> strSet36 = locale35.getUnicodeLocaleAttributes();
        java.lang.String str37 = locale35.getVariant();
        java.util.Locale.Builder builder38 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder40 = builder38.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder42 = builder38.setLanguage("ZXZ");
        java.util.Locale locale43 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder44 = builder38.setLocale(locale43);
        java.util.Locale.setDefault(locale43);
        java.lang.String str46 = locale35.getDisplayName(locale43);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double61 = rotation60.getQ1();
        double double62 = rotation60.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D64, (double) (byte) 100, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.subtract((double) 10L, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation60.applyInverseTo(vector3D71);
        double double74 = rotation60.getAngle();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation53.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation60.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA3();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, (-0.8519466901357562d), 0.5763904177042349d, (double) 0L);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation60.applyTo(rotation82);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((-0.02937648959434208d), 10.0d);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation83.applyTo(vector3D86);
        double[][] doubleArray88 = rotation83.getMatrix();
        java.io.PrintWriter printWriter89 = printWriter1.printf(locale43, "ORG.APACHE.COMMONS.MATH.GEOMETRY.CARDANEULERSINGULARITYEXCEPTION: EULER ANGLES SINGULARITY", (java.lang.Object[]) doubleArray88);
        printWriter1.println('#');
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "fr");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "fr");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Franz\366sisch" + "'", str46, "Franz\366sisch");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 100.0d + "'", double61 == 100.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test07534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07534");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D11, (double) (byte) 100, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D16, (double) (byte) 100, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D13, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation8.applyInverseTo(vector3D13);
        double double22 = rotation8.getQ0();
        double double23 = rotation8.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation8.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D27.negate();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray38 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D45, (double) (byte) 100, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D42, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation37.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D50, vector3D51);
        double double53 = vector3D52.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D52.scalarMultiply((double) 10L);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ0();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double70 = rotation69.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation62.applyTo(rotation69);
        double double72 = rotation62.getQ0();
        double double73 = rotation62.getQ0();
        double[][] doubleArray74 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double81 = rotation80.getQ0();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double88 = rotation87.getQ0();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation80.applyTo(rotation87);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation62.applyInverseTo(rotation80);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation62.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((double) 1, vector3D55, (-1.0d), vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D91.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D30.subtract(vector3D91);
        double double95 = vector3D94.getDelta();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 52.0d + "'", double72 == 52.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 52.0d + "'", double73 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 52.0d + "'", double81 == 52.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 52.0d + "'", double88 == 52.0d);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
    }

    @Test
    public void test07535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07535");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.util.Locale locale4 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        double double21 = rotation18.getQ3();
        double[][] doubleArray22 = rotation18.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter3.printf(locale4, "XZY", (java.lang.Object[]) doubleArray22);
        printWriter23.print(true);
        java.io.PrintWriter printWriter27 = printWriter23.append((java.lang.CharSequence) "fra");
        printWriter27.println((float) 0);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(printWriter27);
    }

    @Test
    public void test07536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07536");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream91 = printStream85.append((java.lang.CharSequence) "KOR");
        java.io.PrintWriter printWriter92 = new java.io.PrintWriter((java.io.OutputStream) printStream85);
        printStream85.print((-0.02937648959434208d));
        printStream85.print(0.4933137960202428d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream91);
    }

    @Test
    public void test07537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07537");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D14);
        double double16 = vector3D15.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.negate();
        double double18 = vector3D15.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) (-1L), (double) (short) 10, (double) 'a');
        double double32 = rotation31.getAngle();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyTo(rotation40);
        double[][] doubleArray42 = rotation40.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str44 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) (byte) 100, (double) (-1L), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder43.getA2();
        double[] doubleArray50 = rotation40.getAngles(rotationOrder43);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder43.getA2();
        double double53 = vector3D52.getY();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D15.add(18488.397824670512d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D15.negate();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 3.141592653589793d + "'", double16 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.141592653589793d + "'", double18 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2.3122509176395862d + "'", double32 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ZXZ" + "'", str44, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.8684551666865963, 0.9755797911776904, -0.9459705383891546]");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
    }

    @Test
    public void test07538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07538");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation13.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder15.getA1();
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D14.add(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D20.add((double) (-1.0f), vector3D27);
        double double29 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D(2.3122509176395862d, vector3D6, (double) 0.0f, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D6.negate();
        double double32 = vector3D6.getNorm();
        double double33 = vector3D6.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.5707963267948966d + "'", double33 == 1.5707963267948966d);
    }

    @Test
    public void test07539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07539");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.5403023058681398d, (double) (short) 0, 1.884114997657917d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double11 = rotation10.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation10.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation10.applyInverseTo(vector3D20);
        double double22 = vector3D20.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str24 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D25.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D20.add(vector3D25);
        double double28 = vector3D20.getDelta();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray36 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D38, (double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D43, (double) (byte) 100, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D52, (double) (byte) 100, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D57, (double) (byte) 100, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D54, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D64, (double) (byte) 100, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D70, (double) (byte) 100, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D75, (double) (byte) 100, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D72, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D59, (double) (byte) 1, vector3D67, (double) (short) 100, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D59.negate();
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) (-1), vector3D59);
        double double83 = vector3D59.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D20.add(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D3.add((-0.09950371902099892d), vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D87.orthogonal();
        double double89 = vector3D88.getZ();
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 52.0d + "'", double11 == 52.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXZ" + "'", str24, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.5707963267948966d) + "'", double28 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-0.0d) + "'", double89 == (-0.0d));
    }

    @Test
    public void test07540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07540");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        java.io.PrintWriter printWriter11 = printWriter3.format(locale7, "zxz", (java.lang.Object[]) throwableArray10);
        char[] charArray15 = new char[] { 'a', ' ', '#' };
        printWriter11.println(charArray15);
        java.util.Locale locale17 = java.util.Locale.FRENCH;
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.lang.String str21 = locale17.getDisplayLanguage(locale18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray33 = rotation32.getMatrix();
        java.io.PrintWriter printWriter34 = printWriter11.printf(locale17, "english", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray33, (double) '#');
        double double37 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D(0.0d, 93.57684707871968d, 0.024645430941207122d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D(1040.0d, (double) (byte) 10, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D54, (double) (byte) 100, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D61, (double) (byte) 100, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D67, (double) (byte) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D72, (double) (byte) 100, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D69, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D56, (double) (byte) 1, vector3D64, (double) (short) 100, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D56.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) (-1), vector3D56);
        double double80 = vector3D56.getAlpha();
        double double81 = vector3D56.getNorm();
        double double82 = vector3D56.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D45, vector3D56);
        double double84 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D41, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation36.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D41.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D86, 93.57684707871968d);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "fr");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "fran\347ais" + "'", str21, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.5309649148733835d + "'", double37 == 0.5309649148733835d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 935.7438253562556d + "'", double84 == 935.7438253562556d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test07541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07541");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        char[] charArray23 = new char[] { 'a', 'a', '4' };
        printStream1.println(charArray23);
        printStream1.print((long) 'x');
        printStream1.println();
        java.io.PrintStream printStream28 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        printStream28.println(0.0f);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream33 = new java.io.PrintStream((java.io.OutputStream) printStream28, true, "\uc911\uad6d\uc5b4)");
            org.junit.Assert.fail("Expected exception of type java.io.UnsupportedEncodingException; message: cn (????????)");
        } catch (java.io.UnsupportedEncodingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, a, 4]");
    }

    @Test
    public void test07542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07542");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D14);
        double double16 = vector3D15.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.negate();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D15.scalarMultiply(0.9866275920404853d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 3.141592653589793d + "'", double16 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
    }

    @Test
    public void test07543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07543");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.negate();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D18.scalarMultiply(1.3964058484385629E-10d);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.scalarMultiply(1.5905084122975552d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
    }

    @Test
    public void test07544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07544");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation5.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation5.applyInverseTo(vector3D18);
        double double21 = rotation5.getQ1();
        double double22 = rotation5.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, 0.0d, (double) (byte) 1, (double) (byte) 0);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (-0.09966865249116204d), (-4.79425538604203d), 2.5657054957045693d);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, 0.09855974846637475d, (-121.55625799679436d), (-3.0171984405909804E-8d));
        org.apache.commons.math.geometry.Rotation rotation44 = rotation5.applyTo(rotation43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder46.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.scalarMultiply(0.5309649148733835d);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray57 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D59, (double) (byte) 100, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D64, (double) (byte) 100, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D61, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation56.applyInverseTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation56.getAxis();
        double double71 = vector3D70.getAlpha();
        double double72 = vector3D70.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D50.add(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(1040000.0d, 0.8775825618903728d);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D70.add((-0.33317344249276587d), vector3D77);
        double double79 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D77.scalarMultiply(25506.807895148308d);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D45, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D45.scalarMultiply(2.2295122953242523d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-3.141592653589793d) + "'", double71 == (-3.141592653589793d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-3.141592653589793d) + "'", double72 == (-3.141592653589793d));
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.4047934756653486d + "'", double79 == 0.4047934756653486d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
    }

    @Test
    public void test07545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07545");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = vector3D1.normalize();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double9 = rotation8.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyTo(rotation15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation8.applyInverseTo(vector3D18);
        double double20 = vector3D18.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str22 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D18.add(vector3D23);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ1();
        double double33 = rotation31.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D35, (double) (byte) 100, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract((double) 10L, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation31.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D44.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D25.add(vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract((double) (-1), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D49.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str54 = rotationOrder53.toString();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder53.getA1();
        java.lang.String str56 = rotationOrder53.toString();
        java.lang.String str57 = rotationOrder53.toString();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, (double) (short) 0);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((-1.581752731678261d), vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation61.applyTo(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(2.3122509176395862d, vector3D71, (double) 10.0f, vector3D74);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D52, vector3D67, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D67.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D67.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXZ" + "'", str22, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 100.0d + "'", double32 == 100.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ZXZ" + "'", str54, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ZXZ" + "'", str56, "ZXZ");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZXZ" + "'", str57, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test07546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07546");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D2, (double) (byte) 100, vector3D4);
        double double6 = vector3D4.getDelta();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D20, (double) (byte) 100, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D17, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation12.applyInverseTo(vector3D17);
        double double26 = vector3D17.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D17);
        double double28 = vector3D17.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.subtract((double) 10L, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D47, (double) (byte) 100, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D44, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D38.subtract((double) 0, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D54, (double) (byte) 100, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((-10.358482905538347d), vector3D17, 69.08270017035626d, vector3D51);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder61.getA3();
        double double69 = vector3D68.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D59.add((-121.55625799679436d), vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = org.apache.commons.math.geometry.Vector3D.angle(vector3D70, vector3D71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
    }

    @Test
    public void test07547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07547");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.OutputStream) printStream16, false);
        printWriter18.print((int) '#');
        printWriter18.write("japonais");
        java.io.PrintWriter printWriter24 = printWriter18.append((java.lang.CharSequence) "cn");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test07548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07548");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        boolean boolean47 = printStream6.checkError();
        printStream6.flush();
        java.io.PrintStream printStream52 = printStream6.append((java.lang.CharSequence) "XYZ", (int) (short) 0, 0);
        printStream6.print(10L);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream57 = new java.io.PrintStream((java.io.OutputStream) printStream6, true, "deu__Koreanisch");
            org.junit.Assert.fail("Expected exception of type java.io.UnsupportedEncodingException; message: deu__Koreanisch");
        } catch (java.io.UnsupportedEncodingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(printStream52);
    }

    @Test
    public void test07549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07549");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.println((float) 100L);
        printStream1.println("hi!");
        printStream1.print("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)");
        printStream1.print('4');
        boolean boolean94 = printStream1.checkError();
        printStream1.print((long) 'x');
        printStream1.print('x');
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test07550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07550");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.KOREAN;
        java.lang.String str3 = locale2.getDisplayLanguage();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double11 = rotation10.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation10.applyTo(rotation17);
        double double20 = rotation10.getQ0();
        double double21 = rotation10.getQ0();
        double[][] doubleArray22 = rotation10.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter1.printf(locale2, "zh_CN", (java.lang.Object[]) doubleArray22);
        java.util.Locale locale24 = java.util.Locale.FRENCH;
        java.util.Locale locale25 = java.util.Locale.TAIWAN;
        java.lang.String str26 = locale24.getDisplayScript(locale25);
        java.lang.String str27 = locale25.getVariant();
        java.util.Locale locale28 = java.util.Locale.CHINESE;
        java.lang.String str29 = locale25.getDisplayName(locale28);
        java.lang.String str31 = locale25.getExtension('x');
        java.util.Locale.Category category32 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category33 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale34 = java.util.Locale.ROOT;
        java.lang.String str35 = locale34.getDisplayLanguage();
        java.util.Locale.setDefault(category33, locale34);
        java.util.Locale.setDefault(category32, locale34);
        java.util.Locale locale38 = java.util.Locale.getDefault(category32);
        java.util.Locale locale39 = null;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.ROOT;
        java.util.Locale.Category category42 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category43 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale44 = java.util.Locale.ROOT;
        java.lang.String str45 = locale44.getDisplayLanguage();
        java.util.Locale.setDefault(category43, locale44);
        java.util.Locale.setDefault(category42, locale44);
        java.lang.String str48 = locale41.getDisplayVariant(locale44);
        java.lang.String str49 = locale38.getDisplayCountry(locale44);
        java.lang.String str50 = locale25.getDisplayLanguage(locale38);
        java.util.Locale locale51 = java.util.Locale.FRENCH;
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.TAIWAN;
        java.lang.String str54 = locale52.getDisplayScript(locale53);
        java.lang.String str55 = locale51.getDisplayLanguage(locale52);
        boolean boolean56 = locale52.hasExtensions();
        java.util.Locale.Builder builder57 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder59 = builder57.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale60 = builder57.build();
        java.lang.String str61 = locale52.getDisplayLanguage(locale60);
        java.lang.String str62 = locale52.getDisplayVariant();
        java.lang.String str63 = locale38.getDisplayCountry(locale52);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double71 = rotation70.getQ0();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double78 = rotation77.getQ0();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation70.applyTo(rotation77);
        double double80 = rotation70.getQ0();
        double double81 = rotation70.getQ0();
        double[][] doubleArray82 = rotation70.getMatrix();
        java.io.PrintWriter printWriter83 = printWriter1.format(locale52, "\u671d\u9c9c\u6587\u97e9\u56fd)", (java.lang.Object[]) doubleArray82);
        printWriter1.print((long) 'a');
        printWriter1.println("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)");
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter89.print("org.apache.commons.math.mathexception: fr");
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "ko");
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\ud55c\uad6d\uc5b4" + "'", str3, "\ud55c\uad6d\uc5b4");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 52.0d + "'", double11 == 52.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "fr");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "zh");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)" + "'", str29, "\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + category32 + "' != '" + java.util.Locale.Category.FORMAT + "'", category32.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category33 + "' != '" + java.util.Locale.Category.FORMAT + "'", category33.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "");
        org.junit.Assert.assertTrue("'" + category42 + "' != '" + java.util.Locale.Category.FORMAT + "'", category42.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category43 + "' != '" + java.util.Locale.Category.FORMAT + "'", category43.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Chinese" + "'", str50, "Chinese");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "fr");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "fran\347ais" + "'", str55, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "French" + "'", str61, "French");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 52.0d + "'", double71 == 52.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 52.0d + "'", double78 == 52.0d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 52.0d + "'", double80 == 52.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 52.0d + "'", double81 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test07551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07551");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter4 = printWriter2.append('#');
        java.util.Locale locale5 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation12.applyTo(rotation19);
        double double22 = rotation19.getQ3();
        double[][] doubleArray23 = rotation19.getMatrix();
        java.io.PrintWriter printWriter24 = printWriter4.printf(locale5, "XZY", (java.lang.Object[]) doubleArray23);
        printWriter24.println("KOR");
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.util.Locale.Category category28 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category29 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale.setDefault(category29, locale30);
        java.util.Locale.setDefault(category28, locale30);
        java.lang.String str34 = locale27.getDisplayVariant(locale30);
        java.lang.String str35 = locale30.getISO3Country();
        java.lang.String[] strArray39 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) strArray39);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray43 = mathException42.getSuppressed();
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException42);
        notARotationMatrixException41.addSuppressed((java.lang.Throwable) mathException42);
        java.lang.Object[] objArray46 = notARotationMatrixException41.getArguments();
        java.io.PrintWriter printWriter47 = printWriter24.printf(locale30, "Chinese (Taiwan)", objArray46);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("Vereinigtes K\366nigreich", objArray46);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("German (Germany)");
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("\ud504\ub791\uc2a4 (UNITED KINGDOM)", (java.lang.Throwable) mathException51);
        java.lang.Object[] objArray53 = mathException52.getArguments();
        java.lang.Object[] objArray54 = mathException52.getArguments();
        notARotationMatrixException48.addSuppressed((java.lang.Throwable) mathException52);
        java.lang.Throwable[] throwableArray56 = mathException52.getSuppressed();
        org.junit.Assert.assertNotNull(printWriter4);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "");
        org.junit.Assert.assertTrue("'" + category28 + "' != '" + java.util.Locale.Category.FORMAT + "'", category28.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category29 + "' != '" + java.util.Locale.Category.FORMAT + "'", category29.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[aa, ab, ae, af, ak, am, an, ar, as, av, ay, az, ba, be, bg, bh, bi, bm, bn, bo, br, bs, ca, ce, ch, co, cr, cs, cu, cv, cy, da, de, dv, dz, ee, el, en, eo, es, et, eu, fa, ff, fi, fj, fo, fr, fy, ga, gd, gl, gn, gu, gv, ha, he, hi, ho, hr, ht, hu, hy, hz, ia, id, ie, ig, ii, ik, in, io, is, it, iu, iw, ja, ji, jv, ka, kg, ki, kj, kk, kl, km, kn, ko, kr, ks, ku, kv, kw, ky, la, lb, lg, li, ln, lo, lt, lu, lv, mg, mh, mi, mk, ml, mn, mo, mr, ms, mt, my, na, nb, nd, ne, ng, nl, nn, no, nr, nv, ny, oc, oj, om, or, os, pa, pi, pl, ps, pt, qu, rm, rn, ro, ru, rw, sa, sc, sd, se, sg, si, sk, sl, sm, sn, so, sq, sr, ss, st, su, sv, sw, ta, te, tg, th, ti, tk, tl, tn, to, tr, ts, tt, tw, ty, ug, uk, ur, uz, ve, vi, vo, wa, wo, xh, yi, yo, za, zh, zu]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[aa, ab, ae, af, ak, am, an, ar, as, av, ay, az, ba, be, bg, bh, bi, bm, bn, bo, br, bs, ca, ce, ch, co, cr, cs, cu, cv, cy, da, de, dv, dz, ee, el, en, eo, es, et, eu, fa, ff, fi, fj, fo, fr, fy, ga, gd, gl, gn, gu, gv, ha, he, hi, ho, hr, ht, hu, hy, hz, ia, id, ie, ig, ii, ik, in, io, is, it, iu, iw, ja, ji, jv, ka, kg, ki, kj, kk, kl, km, kn, ko, kr, ks, ku, kv, kw, ky, la, lb, lg, li, ln, lo, lt, lu, lv, mg, mh, mi, mk, ml, mn, mo, mr, ms, mt, my, na, nb, nd, ne, ng, nl, nn, no, nr, nv, ny, oc, oj, om, or, os, pa, pi, pl, ps, pt, qu, rm, rn, ro, ru, rw, sa, sc, sd, se, sg, si, sk, sl, sm, sn, so, sq, sr, ss, st, su, sv, sw, ta, te, tg, th, ti, tk, tl, tn, to, tr, ts, tt, tw, ty, ug, uk, ur, uz, ve, vi, vo, wa, wo, xh, yi, yo, za, zh, zu]");
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
    }

    @Test
    public void test07552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07552");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        java.io.PrintWriter printWriter11 = printWriter3.format(locale7, "zxz", (java.lang.Object[]) throwableArray10);
        char[] charArray15 = new char[] { 'a', ' ', '#' };
        printWriter11.println(charArray15);
        java.util.Locale locale17 = java.util.Locale.ROOT;
        java.lang.String[] strArray21 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray21, (java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray26 = mathException25.getSuppressed();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray21, (java.lang.Throwable) mathException25);
        java.io.PrintWriter printWriter28 = printWriter11.printf(locale17, "\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray21);
        printWriter28.println((long) (byte) -1);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(24.291555113709315d, 0.0d, (-52.0d), 0.0d, true);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyTo(vector3D44);
        double double49 = vector3D48.getNorm();
        double double50 = vector3D48.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation36.applyTo(vector3D48);
        printWriter28.print((java.lang.Object) vector3D48);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
    }

    @Test
    public void test07553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07553");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.lang.Object[] objArray85 = mathException83.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException86 = new org.apache.commons.math.geometry.NotARotationMatrixException("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)", objArray85);
        java.lang.Object[] objArray87 = notARotationMatrixException86.getArguments();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Taiwan", (java.lang.Throwable) notARotationMatrixException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: chinois", (java.lang.Throwable) notARotationMatrixException86);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("\u65e5\u6587\u65e5\u672c)");
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException91);
        mathException89.addSuppressed((java.lang.Throwable) mathException91);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
    }

    @Test
    public void test07554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07554");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.8775825618903728d, 0.34036798076772956d, 1.884114997657917d);
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D3, (-10.0d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.884114997657917d + "'", double4 == 1.884114997657917d);
    }

    @Test
    public void test07555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07555");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        printStream6.println((double) 100L);
        printStream6.print((int) (short) 10);
        java.util.Locale locale17 = java.util.Locale.forLanguageTag("Chinesisch");
        java.util.Set<java.lang.String> strSet18 = locale17.getUnicodeLocaleKeys();
        java.util.Locale locale21 = new java.util.Locale("CN", "\uc911\uad6d\uc5b4");
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        java.lang.String str23 = locale17.getDisplayVariant(locale21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter28 = printWriter26.append('#');
        java.lang.Object[] objArray30 = null;
        java.io.PrintWriter printWriter31 = printWriter28.format("fran\347ais", objArray30);
        java.util.Locale locale32 = null;
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray35 = mathException34.getSuppressed();
        java.io.PrintWriter printWriter36 = printWriter28.format(locale32, "zxz", (java.lang.Object[]) throwableArray35);
        char[] charArray40 = new char[] { 'a', ' ', '#' };
        printWriter36.println(charArray40);
        java.util.Locale locale42 = java.util.Locale.FRENCH;
        java.util.Locale locale43 = java.util.Locale.FRENCH;
        java.util.Locale locale44 = java.util.Locale.TAIWAN;
        java.lang.String str45 = locale43.getDisplayScript(locale44);
        java.lang.String str46 = locale42.getDisplayLanguage(locale43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray58 = rotation57.getMatrix();
        java.io.PrintWriter printWriter59 = printWriter36.printf(locale42, "english", (java.lang.Object[]) doubleArray58);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(doubleArray58, (double) '#');
        java.io.PrintStream printStream62 = printStream6.printf(locale21, "france", (java.lang.Object[]) doubleArray58);
        java.lang.String str63 = locale21.getDisplayLanguage();
        java.util.Set<java.lang.Character> charSet64 = locale21.getExtensionKeys();
        java.util.Locale locale65 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str66 = locale65.getScript();
        java.util.Locale locale67 = java.util.Locale.KOREA;
        java.lang.String str68 = locale65.getDisplayLanguage(locale67);
        java.lang.String str69 = locale65.getLanguage();
        java.util.Locale.Builder builder70 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder72 = builder70.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder74 = builder70.setLanguage("ZXZ");
        java.util.Locale.Builder builder75 = builder70.clearExtensions();
        java.util.Locale locale76 = builder75.build();
        java.lang.String str77 = locale65.getDisplayName(locale76);
        java.lang.String str79 = locale65.getExtension('a');
        boolean boolean80 = locale65.hasExtensions();
        java.lang.String str81 = locale21.getDisplayCountry(locale65);
        java.util.Locale.setDefault(locale21);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "");
        org.junit.Assert.assertNotNull(strSet18);
// flaky:         org.junit.Assert.assertEquals(locale21.toString(), "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "fr");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "fr");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "fran\347ais" + "'", str46, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(printStream62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "cn" + "'", str63, "cn");
        org.junit.Assert.assertNotNull(charSet64);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(locale67);
        org.junit.Assert.assertEquals(locale67.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str68, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "zh" + "'", str69, "zh");
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "zxz");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Chinese (Taiwan)" + "'", str77, "Chinese (Taiwan)");
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str81, "\uc911\uad6d\uc5b4");
    }

    @Test
    public void test07556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07556");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) ' ', 1.5599296019390303d, (-2000.0d));
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray16 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D18, (double) (byte) 100, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D23, (double) (byte) 100, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D20, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation15.applyInverseTo(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation15.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation30.revert();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ1();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation30.applyTo(rotation37);
        double double40 = rotation30.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation7.applyTo(rotation30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray51 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D53, (double) (byte) 100, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D58, (double) (byte) 100, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation50.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D63, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D43.subtract((double) 100, vector3D65);
        double double67 = vector3D66.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation7.applyInverseTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((-0.5984409558750676d), vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.6768344993499346d) + "'", double8 == (-0.6768344993499346d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.20950313148972322d + "'", double9 == 0.20950313148972322d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 100.0d + "'", double38 == 100.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.5707963267948966d + "'", double67 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D68);
    }

    @Test
    public void test07557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07557");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-22.972100123945783d), 665808.0d, 184670.56960207602d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation9.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXZ" + "'", str3, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZXZ" + "'", str5, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test07558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07558");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        java.lang.String[] strArray15 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray20 = mathException19.getSuppressed();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException19);
        java.io.PrintStream printStream22 = printStream6.format("deu", (java.lang.Object[]) strArray15);
        java.io.PrintStream printStream24 = new java.io.PrintStream((java.io.OutputStream) printStream6, true);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) (byte) -1, 0.0d, 0.995037190209989d, Double.NaN, false);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation30.revert();
        printStream24.print((java.lang.Object) rotation30);
        java.io.PrintStream printStream34 = new java.io.PrintStream((java.io.OutputStream) printStream24, true);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(rotation31);
    }

    @Test
    public void test07559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07559");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 0.0f, (-3.141592653589793d), (double) (byte) 10, 24.291555113709315d, false);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("deu__Koreanisch", (java.lang.Object[]) doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test07560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07560");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D16);
        double double19 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str21 = rotationOrder20.toString();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation5.applyTo(vector3D29);
        double double31 = rotation5.getQ1();
        double double32 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation();
        double double34 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(128040.0d, (-11094.094757084158d), 0.9649660284921133d, (-0.5063656411097588d), true);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyTo(rotation41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation35.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D43.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, 0.0d, 2.3122509176395862d, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder46.getA2();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, 2.4301483865914943d, 2.3122509176395862d, 1.9114895613862057d);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder46.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D44.add(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation5.applyTo(vector3D61);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZXZ" + "'", str21, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 100.0d + "'", double31 == 100.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
    }

    @Test
    public void test07561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07561");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (-0.029833622621918302d), 3.0419240010986313d, (-2.564013114057005E-11d), true);
    }

    @Test
    public void test07562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07562");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str9 = rotationOrder8.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA3();
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        double double17 = vector3D13.getY();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract(vector3D13);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str21 = rotationOrder20.toString();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D22.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((-12.469000826984491d), vector3D18, 3.141592653589793d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) 1L, (double) '4', (double) 1.0f);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D31.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.subtract(1.0d, vector3D32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ0();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double48 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation40.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation56 = rotation50.applyTo(rotation55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation50.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str59 = rotationOrder58.toString();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder58.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation50.applyInverseTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D(1.0d, vector3D5, (-2.566370614359173d), vector3D25, (-34194.83745702809d), vector3D61);
        double double64 = vector3D63.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXZ" + "'", str9, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZXZ" + "'", str21, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ZXZ" + "'", str59, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test07563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07563");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println(true);
        byte[] byteArray18 = new byte[] { (byte) -1, (byte) 0 };
        printStream6.write(byteArray18);
        boolean boolean20 = printStream6.checkError();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream6, false);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException27.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("zxz_KO_KR", (java.lang.Object[]) throwableArray28);
        java.io.PrintWriter printWriter31 = printWriter22.format("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray28);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter22);
        java.io.PrintStream printStream34 = new java.io.PrintStream("\u97d3\u6587)");
        java.io.PrintStream printStream36 = new java.io.PrintStream("ko-KR");
        printStream36.close();
        java.util.Locale locale38 = java.util.Locale.UK;
        java.lang.String[] strArray40 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream41 = printStream36.format(locale38, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray40);
        printStream36.println((long) 10);
        java.io.PrintStream printStream44 = new java.io.PrintStream((java.io.OutputStream) printStream36);
        char[] charArray51 = new char[] { 'u', 'x', 'x', 'a', ' ', 'x' };
        printStream44.print(charArray51);
        printStream34.println(charArray51);
        printWriter22.println(charArray51);
        printWriter22.write("DE");
        java.util.Locale.Builder builder57 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder59 = builder57.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder61 = builder57.setVariant("");
        java.util.Locale.Builder builder62 = builder57.clear();
        java.util.Locale.Builder builder64 = builder57.setLanguage("cinese");
        java.util.Locale locale65 = builder64.build();
        java.lang.String[] strArray68 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("ZXZ");
        java.lang.Object[] objArray72 = mathException71.getArguments();
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("Chinesisch", (java.lang.Throwable) mathException71);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray68, (java.lang.Throwable) mathException71);
        java.io.PrintWriter printWriter75 = printWriter22.format(locale65, "ja-JP", (java.lang.Object[]) strArray68);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(printStream41);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "uxxa x");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "uxxa x");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[u, x, x, a,  , x]");
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "cinese");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test07564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07564");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.OutputStream) printStream16, false);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double25 = rotation24.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) (-1L), (double) (short) 10, (double) 'a');
        double double31 = rotation30.getAngle();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation24.applyInverseTo(rotation30);
        double double33 = rotation32.getQ0();
        printStream16.println((java.lang.Object) double33);
        java.io.PrintStream printStream35 = new java.io.PrintStream((java.io.OutputStream) printStream16);
        java.io.PrintStream printStream37 = new java.io.PrintStream((java.io.OutputStream) printStream16, false);
        printStream37.println(5.566226206460602E7d);
        printStream37.print(1);
        printStream37.print(0.0f);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2.3122509176395862d + "'", double31 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 60.912721436461325d + "'", double33 == 60.912721436461325d);
    }

    @Test
    public void test07565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07565");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        printStream6.println('a');
        java.io.PrintStream printStream18 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        printStream6.write(1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream6, true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray29 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation28.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation43.revert();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation43.getAxis();
        double double46 = vector3D45.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D45.subtract(93.57684707871968d, vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ0();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double70 = rotation69.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation62.applyTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation62.revert();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation62.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D55.subtract(3.112216163995451d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D79, (double) (byte) 100, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.subtract((double) 10L, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D75.add(0.0657541776220426d, vector3D87);
        printStream6.print((java.lang.Object) 0.0657541776220426d);
        java.io.PrintStream printStream91 = new java.io.PrintStream((java.io.OutputStream) printStream6, false);
        printStream6.flush();
        printStream6.println(1255.0d);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9999999999999999d + "'", double46 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test07566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07566");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter10 = printWriter8.append('#');
        java.lang.Object[] objArray12 = null;
        java.io.PrintWriter printWriter13 = printWriter10.format("fran\347ais", objArray12);
        java.util.Locale locale14 = null;
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        java.io.PrintWriter printWriter18 = printWriter10.format(locale14, "zxz", (java.lang.Object[]) throwableArray17);
        char[] charArray22 = new char[] { 'a', ' ', '#' };
        printWriter18.println(charArray22);
        printStream1.println(charArray22);
        printStream1.println((double) (byte) 0);
        java.util.Locale locale27 = java.util.Locale.ENGLISH;
        java.util.Locale locale28 = java.util.Locale.ENGLISH;
        boolean boolean29 = locale28.hasExtensions();
        java.lang.String str30 = locale27.getDisplayVariant(locale28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter35 = printWriter33.append('#');
        java.lang.Object[] objArray37 = null;
        java.io.PrintWriter printWriter38 = printWriter35.format("fran\347ais", objArray37);
        printWriter35.print("zxz");
        java.io.PrintWriter printWriter44 = printWriter35.append((java.lang.CharSequence) "org.apache.commons.math.MathException: ZXZ", 0, 1);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("ZXZ");
        java.lang.Object[] objArray48 = mathException47.getArguments();
        java.io.PrintWriter printWriter49 = printWriter44.printf("\u97d3\u6587", objArray48);
        java.io.PrintStream printStream50 = printStream1.printf(locale28, "zxz", objArray48);
        java.io.PrintStream printStream52 = new java.io.PrintStream("ko-KR");
        printStream52.close();
        java.util.Locale locale54 = java.util.Locale.UK;
        java.lang.String[] strArray56 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream57 = printStream52.format(locale54, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray56);
        printStream57.write(10);
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.OutputStream) printStream57);
        byte[] byteArray62 = new byte[] { (byte) -1 };
        printStream57.write(byteArray62);
        printStream57.close();
        printStream57.println((double) (short) 100);
        byte[] byteArray68 = new byte[] { (byte) 1 };
        printStream57.write(byteArray68, 0, 1);
        printStream50.write(byteArray68, 0, (int) (byte) 0);
        printStream50.println("Franz\366sisch (Frankreich)");
        java.io.PrintStream printStream77 = new java.io.PrintStream((java.io.OutputStream) printStream50);
        printStream77.println(true);
        java.io.PrintStream printStream80 = new java.io.PrintStream((java.io.OutputStream) printStream77);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double87 = rotation86.getQ1();
        printStream80.print((java.lang.Object) double87);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(printStream50);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(printStream57);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 100.0d + "'", double87 == 100.0d);
    }

    @Test
    public void test07567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07567");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        printWriter1.println((long) (short) 10);
        java.util.Locale locale6 = java.util.Locale.PRC;
        java.lang.String str7 = locale6.getDisplayVariant();
        java.lang.String[] strArray12 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray19 = mathException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray19);
        java.io.PrintWriter printWriter21 = printWriter1.format(locale6, "", (java.lang.Object[]) throwableArray19);
        printWriter1.println();
        printWriter1.println(true);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale28 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str29 = locale28.getScript();
        java.util.Locale locale30 = java.util.Locale.KOREA;
        java.lang.String str31 = locale28.getDisplayLanguage(locale30);
        java.lang.String[] strArray34 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray34, (java.lang.Throwable) mathException36);
        java.io.PrintWriter printWriter38 = printWriter27.format(locale30, "YZY", (java.lang.Object[]) strArray34);
        java.lang.String[] strArray41 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray41);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) strArray41);
        printWriter38.print((java.lang.Object) notARotationMatrixException43);
        java.lang.Object[] objArray45 = notARotationMatrixException43.getArguments();
        java.io.PrintWriter printWriter46 = printWriter1.printf("und", objArray45);
        printWriter1.print((double) 'x');
        java.util.Locale locale50 = new java.util.Locale("France");
        java.util.Locale locale51 = locale50.stripExtensions();
        java.lang.String str52 = locale51.getDisplayVariant();
        java.lang.String str53 = locale51.getDisplayScript();
        java.util.Locale.setDefault(locale51);
        java.util.Locale locale55 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str56 = locale55.getScript();
        java.util.Locale locale57 = java.util.Locale.KOREA;
        java.lang.String str58 = locale55.getDisplayLanguage(locale57);
        java.lang.String str59 = locale57.toLanguageTag();
        java.lang.String str60 = locale57.getISO3Language();
        java.util.Locale.setDefault(locale57);
        java.lang.String str62 = locale51.getDisplayCountry(locale57);
        java.util.Locale locale66 = new java.util.Locale("\u6cd5\u56fd", "zxz,KO,KR", "\ud55c\uad6d\uc5b4");
        java.lang.String str67 = locale51.getDisplayScript(locale66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str71 = rotationOrder70.toString();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D76, 2.3122509176395862d);
        double double79 = rotation78.getQ1();
        double[][] doubleArray80 = rotation78.getMatrix();
        java.lang.Throwable throwable81 = null;
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)", (java.lang.Object[]) doubleArray80, throwable81);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(doubleArray80, 0.0d);
        java.io.PrintWriter printWriter85 = printWriter1.printf(locale51, "UNITED KINGDOM", (java.lang.Object[]) doubleArray80);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str31, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[aa, ab, ae, af, ak, am, an, ar, as, av, ay, az, ba, be, bg, bh, bi, bm, bn, bo, br, bs, ca, ce, ch, co, cr, cs, cu, cv, cy, da, de, dv, dz, ee, el, en, eo, es, et, eu, fa, ff, fi, fj, fo, fr, fy, ga, gd, gl, gn, gu, gv, ha, he, hi, ho, hr, ht, hu, hy, hz, ia, id, ie, ig, ii, ik, in, io, is, it, iu, iw, ja, ji, jv, ka, kg, ki, kj, kk, kl, km, kn, ko, kr, ks, ku, kv, kw, ky, la, lb, lg, li, ln, lo, lt, lu, lv, mg, mh, mi, mk, ml, mn, mo, mr, ms, mt, my, na, nb, nd, ne, ng, nl, nn, no, nr, nv, ny, oc, oj, om, or, os, pa, pi, pl, ps, pt, qu, rm, rn, ro, ru, rw, sa, sc, sd, se, sg, si, sk, sl, sm, sn, so, sq, sr, ss, st, su, sv, sw, ta, te, tg, th, ti, tk, tl, tn, to, tr, ts, tt, tw, ty, ug, uk, ur, uz, ve, vi, vo, wa, wo, xh, yi, yo, za, zh, zu]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[aa, ab, ae, af, ak, am, an, ar, as, av, ay, az, ba, be, bg, bh, bi, bm, bn, bo, br, bs, ca, ce, ch, co, cr, cs, cu, cv, cy, da, de, dv, dz, ee, el, en, eo, es, et, eu, fa, ff, fi, fj, fo, fr, fy, ga, gd, gl, gn, gu, gv, ha, he, hi, ho, hr, ht, hu, hy, hz, ia, id, ie, ig, ii, ik, in, io, is, it, iu, iw, ja, ji, jv, ka, kg, ki, kj, kk, kl, km, kn, ko, kr, ks, ku, kv, kw, ky, la, lb, lg, li, ln, lo, lt, lu, lv, mg, mh, mi, mk, ml, mn, mo, mr, ms, mt, my, na, nb, nd, ne, ng, nl, nn, no, nr, nv, ny, oc, oj, om, or, os, pa, pi, pl, ps, pt, qu, rm, rn, ro, ru, rw, sa, sc, sd, se, sg, si, sk, sl, sm, sn, so, sq, sr, ss, st, su, sv, sw, ta, te, tg, th, ti, tk, tl, tn, to, tr, ts, tt, tw, ty, ug, uk, ur, uz, ve, vi, vo, wa, wo, xh, yi, yo, za, zh, zu]");
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertEquals(locale50.toString(), "france");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "france");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str58, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ko-KR" + "'", str59, "ko-KR");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "kor" + "'", str60, "kor");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
// flaky:         org.junit.Assert.assertEquals(locale66.toString(), "\u6cd5\u56fd\ud55c\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "XZY" + "'", str71, "XZY");
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.915248973644132d) + "'", double79 == (-0.915248973644132d));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(printWriter85);
    }

    @Test
    public void test07568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07568");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA1();
        java.lang.String str10 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXZ" + "'", str10, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test07569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07569");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        printWriter3.print("zxz");
        java.io.PrintWriter printWriter12 = printWriter3.append((java.lang.CharSequence) "org.apache.commons.math.MathException: ZXZ", 0, 1);
        java.io.PrintWriter printWriter14 = printWriter12.append('a');
        printWriter14.close();
        printWriter14.write("coreano", (int) '4', (int) '4');
        printWriter14.write("Franz\366sisch");
        printWriter14.println("\ud55c\uad6d\uc5b4\ub300\ud55c\ubbfc\uad6d)");
        printWriter14.print(true);
        java.util.Locale locale26 = java.util.Locale.FRENCH;
        java.util.Locale locale27 = locale26.stripExtensions();
        java.util.Locale locale29 = java.util.Locale.forLanguageTag("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)");
        java.util.Locale locale30 = java.util.Locale.UK;
        java.lang.String str31 = locale30.getVariant();
        java.lang.String str32 = locale30.getDisplayCountry();
        java.util.Locale locale33 = locale30.stripExtensions();
        java.lang.String str34 = locale29.getDisplayCountry(locale33);
        java.lang.String str35 = locale27.getDisplayName(locale33);
        java.lang.String str36 = locale27.getDisplayName();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        double[][] doubleArray44 = rotation43.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException45 = new org.apache.commons.math.geometry.NotARotationMatrixException("en_CA", (java.lang.Object[]) doubleArray44);
        java.io.PrintWriter printWriter46 = printWriter14.format(locale27, "Canad\340", (java.lang.Object[]) doubleArray44);
        java.lang.String str47 = locale27.getScript();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "fr");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "United Kingdom" + "'", str32, "United Kingdom");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "French" + "'", str35, "French");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "French" + "'", str36, "French");
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
    }

    @Test
    public void test07570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07570");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        printWriter89.write((int) (byte) 100);
        printWriter89.print('#');
        printWriter89.print(' ');
        printWriter89.print('#');
        printWriter89.print('x');
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07571");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream91 = printStream85.append((java.lang.CharSequence) "KOR");
        printStream91.close();
        java.io.PrintWriter printWriter94 = new java.io.PrintWriter((java.io.OutputStream) printStream91, true);
        printStream91.println(264731.915496303d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream91);
    }

    @Test
    public void test07572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07572");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((-0.009438163164864176d), 100.02049971110628d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) 1L, (double) '4', (double) 1.0f);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.normalize();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ1();
        double double21 = rotation19.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D23, (double) (byte) 100, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.subtract((double) 10L, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D32.negate();
        double double34 = vector3D33.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.subtract((double) 10L, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D55, (double) (byte) 100, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D52, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D46.subtract((double) 0, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D62, (double) (byte) 100, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D59, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D66.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str71 = rotationOrder70.toString();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D(10.0d, vector3D66, (-1.581752731678261d), vector3D72);
        double double74 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D36, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((-3.253905889552808E7d), vector3D12, (double) (byte) -1, vector3D33, 0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(35.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(0.07180241366097878d, vector3D4, 32.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D(0.0d, 2.874987211050439d, (-0.9996400101546701d));
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.orthogonal();
        double double83 = org.apache.commons.math.geometry.Vector3D.angle(vector3D76, vector3D82);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 100.0d + "'", double20 == 100.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 11770.079614583028d + "'", double34 == 11770.079614583028d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "XZY" + "'", str71, "XZY");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.924582976919787d + "'", double83 == 1.924582976919787d);
    }

    @Test
    public void test07573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07573");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println((double) (short) 100);
        byte[] byteArray17 = new byte[] { (byte) 1 };
        printStream6.write(byteArray17, 0, 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream6, true);
        printStream6.println((-1.0d));
        printStream6.close();
        java.lang.String[] strArray28 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray28);
        java.lang.String[] strArray32 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray32, (java.lang.Throwable) mathException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray37 = mathException36.getSuppressed();
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray32, (java.lang.Throwable) mathException36);
        java.lang.Throwable[] throwableArray39 = mathException36.getSuppressed();
        mathException29.addSuppressed((java.lang.Throwable) mathException36);
        java.lang.String str41 = mathException29.getPattern();
        java.lang.Throwable[] throwableArray42 = mathException29.getSuppressed();
        java.io.PrintStream printStream43 = printStream6.format("zxz,KO,KR", (java.lang.Object[]) throwableArray42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder44.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D51, (double) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder56.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder56.getA1();
        double[] doubleArray60 = rotation55.getAngles(rotationOrder56);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder56.getA2();
        printStream6.print((java.lang.Object) rotationOrder56);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream65 = new java.io.PrintStream((java.io.OutputStream) printStream6, false, "\u97d3\u56fd\u8a9e\uc911\uad6d\uc5b4\ub300\ub9cc))");
            org.junit.Assert.fail("Expected exception of type java.io.UnsupportedEncodingException; message: ??? (ORG.APACHE.COMMONS.MATH.MATHEXCEPTION,???????? (?????))");
        } catch (java.io.UnsupportedEncodingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ZXZ" + "'", str41, "ZXZ");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(printStream43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.5707963267948966, 0.530964914873383, -1.5707963267948966]");
        org.junit.Assert.assertNotNull(vector3D61);
    }

    @Test
    public void test07574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07574");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.negate();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ1();
        double double17 = rotation15.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D19, (double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract((double) 10L, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation15.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D28.negate();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D38, (double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyTo(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.subtract(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray53 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D55, (double) (byte) 100, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D60, (double) (byte) 100, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D57, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation52.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D65, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D45, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D(35.0d, vector3D8, (-3.141592653589793d), vector3D29, (-0.09966865249116204d), vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((-0.009438163164864176d), 100.02049971110628d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, 0.3390884220308755d);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D73, vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 100.0d + "'", double16 == 100.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D78);
    }

    @Test
    public void test07575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07575");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("KOR");
        java.util.Locale locale2 = java.util.Locale.ENGLISH;
        boolean boolean3 = locale2.hasExtensions();
        java.io.PrintStream printStream6 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream6.format("", objArray79);
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale2, "KOR", objArray79);
        java.io.PrintWriter printWriter93 = printWriter91.append(' ');
        printWriter93.print((long) (short) 10);
        printWriter93.println((long) '#');
        printWriter93.flush();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertNotNull(printWriter93);
    }

    @Test
    public void test07576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07576");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, (-1280400.0d), (-0.02937648959434208d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XYZ" + "'", str6, "XYZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test07577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07577");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9866275920404853d, 2.2675524168679715d, (-2.6237485370392872d));
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YXY" + "'", str4, "YXY");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test07578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07578");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation7.applyTo(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D(0.8623188722876841d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D18, (-0.15630007634061657d), vector3D20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
    }

    @Test
    public void test07579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07579");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        java.util.Locale locale7 = new java.util.Locale("ja", "Kanada");
        java.io.PrintStream printStream10 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream12 = new java.io.PrintStream("ko-KR");
        printStream12.close();
        printStream12.println((double) '4');
        printStream12.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double25 = rotation24.getQ0();
        double[][] doubleArray26 = rotation24.getMatrix();
        java.io.PrintStream printStream27 = printStream12.format("zh", (java.lang.Object[]) doubleArray26);
        printStream10.println((java.lang.Object) doubleArray26);
        printStream10.println(false);
        java.io.PrintStream printStream32 = printStream10.append((java.lang.CharSequence) "org.apache.commons.math.MathException: und");
        java.io.PrintStream printStream34 = printStream10.append('4');
        printStream34.println(true);
        printStream34.print('u');
        java.util.Locale locale39 = java.util.Locale.FRENCH;
        java.util.Locale locale40 = java.util.Locale.FRENCH;
        java.util.Locale locale41 = java.util.Locale.TAIWAN;
        java.lang.String str42 = locale40.getDisplayScript(locale41);
        java.lang.String str43 = locale39.getDisplayLanguage(locale40);
        boolean boolean44 = locale40.hasExtensions();
        java.util.Locale.Builder builder45 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder47 = builder45.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale48 = builder45.build();
        java.lang.String str49 = locale40.getDisplayLanguage(locale48);
        java.lang.String str50 = locale48.getCountry();
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("ja");
        printWriter53.print(' ');
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter53);
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter56, true);
        printWriter58.print(false);
        java.util.Locale locale62 = new java.util.Locale("KOR");
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale69 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str70 = locale69.getScript();
        java.util.Locale locale71 = java.util.Locale.KOREA;
        java.lang.String str72 = locale69.getDisplayLanguage(locale71);
        java.lang.String[] strArray75 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray75, (java.lang.Throwable) mathException77);
        java.io.PrintWriter printWriter79 = printWriter68.format(locale71, "YZY", (java.lang.Object[]) strArray75);
        printWriter79.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException85);
        java.lang.Object[] objArray87 = mathException85.getArguments();
        java.io.PrintWriter printWriter88 = printWriter79.format("org.apache.commons.math.MathException: ZXZ", objArray87);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\u97d3\u6587", objArray87);
        java.lang.Throwable[] throwableArray90 = mathException89.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException91 = new org.apache.commons.math.geometry.NotARotationMatrixException("fran\347ais", (java.lang.Object[]) throwableArray90);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("Englisch", (java.lang.Throwable) notARotationMatrixException91);
        java.lang.Throwable[] throwableArray93 = notARotationMatrixException91.getSuppressed();
        java.io.PrintWriter printWriter94 = printWriter58.format(locale62, "\ub3c5\uc77c\uc5b4", (java.lang.Object[]) throwableArray93);
        java.io.PrintStream printStream95 = printStream34.format(locale48, "ORG.APACHE.COMMONS.MATH.MATHEXCEPTION: YZY", (java.lang.Object[]) throwableArray93);
        java.io.PrintStream printStream96 = printStream1.printf(locale7, "\ud504\ub791\uc2a4\uc5b4\uce90\ub098\ub2e4)", (java.lang.Object[]) throwableArray93);
        printStream96.close();
        org.junit.Assert.assertEquals(locale7.toString(), "ja_KANADA");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(printStream27);
        org.junit.Assert.assertNotNull(printStream32);
        org.junit.Assert.assertNotNull(printStream34);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "fr");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "fr");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "fran\347ais" + "'", str43, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "French" + "'", str49, "French");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals(locale62.toString(), "kor");
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str72, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(throwableArray93);
        org.junit.Assert.assertNotNull(printWriter94);
        org.junit.Assert.assertNotNull(printStream95);
        org.junit.Assert.assertNotNull(printStream96);
    }

    @Test
    public void test07580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07580");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        printWriter1.println((long) (short) 10);
        java.util.Locale locale6 = java.util.Locale.PRC;
        java.lang.String str7 = locale6.getDisplayVariant();
        java.lang.String[] strArray12 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray19 = mathException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray19);
        java.io.PrintWriter printWriter21 = printWriter1.format(locale6, "", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException23);
        java.lang.Object[] objArray25 = mathException23.getArguments();
        java.io.PrintWriter printWriter26 = printWriter1.printf("zh", objArray25);
        printWriter1.println("Japanese");
        java.util.Locale locale29 = java.util.Locale.CHINESE;
        java.util.Set<java.lang.String> strSet30 = locale29.getUnicodeLocaleAttributes();
        java.util.Set<java.lang.String> strSet31 = locale29.getUnicodeLocaleKeys();
        printWriter1.print((java.lang.Object) strSet31);
        java.lang.Object obj33 = null;
        printWriter1.print(obj33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray47 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(doubleArray47, 1.5707963267948966d);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("french_DE_fr", (java.lang.Object[]) doubleArray47);
        java.lang.String str51 = mathException50.getPattern();
        java.lang.Throwable[] throwableArray52 = mathException50.getSuppressed();
        java.io.PrintWriter printWriter53 = printWriter1.printf("org.apache.commons.math.MathException: ko,KR", (java.lang.Object[]) throwableArray52);
        printWriter53.println('#');
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "zh");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "french_DE_fr" + "'", str51, "french_DE_fr");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(printWriter53);
    }

    @Test
    public void test07581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07581");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        boolean boolean47 = printStream6.checkError();
        printStream6.print((int) '4');
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test07582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07582");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println((double) (short) 100);
        byte[] byteArray17 = new byte[] { (byte) 1 };
        printStream6.write(byteArray17, 0, 1);
        printStream6.println(true);
        java.util.Locale locale23 = java.util.Locale.PRC;
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.lang.String str25 = locale23.getDisplayName(locale24);
        java.util.Locale locale28 = new java.util.Locale("ZXZ", "ko_KR");
        java.lang.String str29 = locale23.getDisplayName(locale28);
        java.lang.String str30 = locale23.getLanguage();
        java.util.Locale locale31 = locale23.stripExtensions();
        java.util.Locale locale32 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale32);
        java.lang.String str34 = locale32.toLanguageTag();
        java.lang.String str35 = locale32.getDisplayVariant();
        java.lang.String str36 = locale23.getDisplayCountry(locale32);
        java.util.Locale locale37 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str38 = locale37.getScript();
        java.util.Locale locale39 = java.util.Locale.KOREA;
        java.lang.String str40 = locale37.getDisplayLanguage(locale39);
        java.lang.String str41 = locale37.getDisplayLanguage();
        java.util.Set<java.lang.String> strSet42 = locale37.getUnicodeLocaleAttributes();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter46 = printWriter44.append('#');
        printWriter44.println((long) (short) 10);
        java.util.Locale locale49 = java.util.Locale.PRC;
        java.lang.String str50 = locale49.getDisplayVariant();
        java.lang.String[] strArray55 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray55, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray60 = mathException59.getSuppressed();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray55, (java.lang.Throwable) mathException59);
        java.lang.Throwable[] throwableArray62 = mathException59.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException63 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray62);
        java.io.PrintWriter printWriter64 = printWriter44.format(locale49, "", (java.lang.Object[]) throwableArray62);
        java.lang.String str65 = locale37.getDisplayCountry(locale49);
        java.lang.String str66 = locale23.getDisplayVariant(locale37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        double[][] doubleArray75 = rotation74.getMatrix();
        java.io.PrintStream printStream76 = printStream6.printf(locale23, "XYZ", (java.lang.Object[]) doubleArray75);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter((java.io.OutputStream) printStream76, true);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1]");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Chinese (China)" + "'", str25, "Chinese (China)");
        org.junit.Assert.assertEquals(locale28.toString(), "zxz_KO_KR");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Chinese (China)" + "'", str29, "Chinese (China)");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "zh" + "'", str30, "zh");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ko-KR" + "'", str34, "ko-KR");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\uc911\uad6d" + "'", str36, "\uc911\uad6d");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str40, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str41, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\u53f0\u6e7e\u5730\u533a" + "'", str65, "\u53f0\u6e7e\u5730\u533a");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXZ" + "'", str69, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(printStream76);
    }

    @Test
    public void test07583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07583");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyTo(rotation13);
        double double16 = rotation6.getQ0();
        double double17 = rotation6.getQ0();
        double[][] doubleArray18 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double25 = rotation24.getQ0();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation24.applyTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation6.applyInverseTo(rotation24);
        double double35 = rotation34.getAngle();
        double double36 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation42.revert();
        double double51 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation34.applyTo(rotation42);
        double double53 = rotation42.getQ0();
        double[][] doubleArray54 = rotation42.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D56.negate();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.negate();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation42.applyTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((-3.141592653589793d), vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.negate();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-12804.0d) + "'", double36 == (-12804.0d));
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 52.0d + "'", double53 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.0d) + "'", double61 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D62);
    }

    @Test
    public void test07584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07584");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double8 = rotation7.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double15 = rotation14.getQ0();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation7.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyTo(rotation22);
        double double24 = rotation22.getAngle();
        double double25 = rotation22.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation31 = rotation22.applyInverseTo(rotation30);
        double[][] doubleArray32 = rotation31.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException33 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray32);
        java.lang.String str34 = notARotationMatrixException33.getPattern();
        java.io.PrintStream printStream38 = new java.io.PrintStream("ko-KR");
        printStream38.print((float) 100L);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.OutputStream) printStream38);
        java.lang.String[] strArray44 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray44, (java.lang.Throwable) mathException46);
        java.lang.String[] strArray51 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray51, (java.lang.Throwable) mathException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray56 = mathException55.getSuppressed();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray51, (java.lang.Throwable) mathException55);
        java.lang.Throwable[] throwableArray58 = mathException55.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException59 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray58);
        mathException47.addSuppressed((java.lang.Throwable) notARotationMatrixException59);
        java.lang.Throwable[] throwableArray61 = notARotationMatrixException59.getSuppressed();
        java.io.PrintWriter printWriter62 = printWriter41.format("ZXZ", (java.lang.Object[]) throwableArray61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("\uc911\uad6d\uc5b4", (java.lang.Object[]) throwableArray61);
        java.lang.String[] strArray65 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray65, (java.lang.Throwable) mathException67);
        java.lang.String[] strArray72 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray72, (java.lang.Throwable) mathException74);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray77 = mathException76.getSuppressed();
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray72, (java.lang.Throwable) mathException76);
        java.lang.Throwable[] throwableArray79 = mathException76.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException80 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray79);
        mathException68.addSuppressed((java.lang.Throwable) notARotationMatrixException80);
        java.lang.String str82 = mathException68.getPattern();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray61, (java.lang.Throwable) mathException68);
        java.lang.Throwable[] throwableArray84 = mathException68.getSuppressed();
        notARotationMatrixException33.addSuppressed((java.lang.Throwable) mathException68);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("ZH_CN", (java.lang.Throwable) notARotationMatrixException33);
        java.lang.String str87 = notARotationMatrixException33.getPattern();
        java.lang.Throwable throwable88 = null;
        // The following exception was thrown during execution in test generation
        try {
            notARotationMatrixException33.addSuppressed(throwable88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2.3122509176395862d + "'", double24 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.4028887144651276d + "'", double25 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ZXZ" + "'", str82, "ZXZ");
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
    }

    @Test
    public void test07585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07585");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray20 = mathException18.getArguments();
        java.io.PrintWriter printWriter21 = printWriter12.format("org.apache.commons.math.MathException: ZXZ", objArray20);
        printWriter21.println();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter26 = printWriter24.append('#');
        java.lang.Object[] objArray28 = null;
        java.io.PrintWriter printWriter29 = printWriter26.format("fran\347ais", objArray28);
        java.util.Locale locale30 = null;
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray33 = mathException32.getSuppressed();
        java.io.PrintWriter printWriter34 = printWriter26.format(locale30, "zxz", (java.lang.Object[]) throwableArray33);
        char[] charArray38 = new char[] { 'a', ' ', '#' };
        printWriter34.println(charArray38);
        printWriter21.write(charArray38);
        printWriter21.print(false);
        printWriter21.println();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double52 = rotation51.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) (-1L), (double) (short) 10, (double) 'a');
        double double58 = rotation57.getAngle();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation51.applyInverseTo(rotation57);
        double[][] doubleArray60 = rotation57.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(doubleArray60, 2.3122509176395862d);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(doubleArray60, 0.2623748537039287d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException65 = new org.apache.commons.math.geometry.NotARotationMatrixException("anglais (Royaume-Uni)", (java.lang.Object[]) doubleArray60);
        java.io.PrintWriter printWriter66 = printWriter21.printf("und", (java.lang.Object[]) doubleArray60);
        java.io.PrintWriter printWriter68 = printWriter21.append((java.lang.CharSequence) "Taiwan");
        printWriter21.println(false);
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a,  , #]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 52.0d + "'", double52 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2.3122509176395862d + "'", double58 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(printWriter68);
    }

    @Test
    public void test07586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07586");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        printStream1.println(false);
        java.io.PrintStream printStream23 = printStream1.append((java.lang.CharSequence) "org.apache.commons.math.MathException: und");
        java.io.PrintStream printStream25 = printStream1.append('4');
        printStream25.flush();
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(printStream23);
        org.junit.Assert.assertNotNull(printStream25);
    }

    @Test
    public void test07587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07587");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str6 = rotationOrder0.toString();
        java.lang.String str7 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.4787032876674264d, 0.9438163164864175d, 0.18569266648043586d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.3403995840772179d), (-22.972100123945783d), 3.196274546169144d);
        double[][] doubleArray16 = rotation15.getMatrix();
        double[][] doubleArray17 = rotation15.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXZ" + "'", str6, "ZXZ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXZ" + "'", str7, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray17);
    }

    @Test
    public void test07588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07588");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale3 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str4 = locale3.getScript();
        java.util.Locale locale5 = java.util.Locale.KOREA;
        java.lang.String str6 = locale3.getDisplayLanguage(locale5);
        java.lang.String[] strArray9 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray9, (java.lang.Throwable) mathException11);
        java.io.PrintWriter printWriter13 = printWriter2.format(locale5, "YZY", (java.lang.Object[]) strArray9);
        printWriter13.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException19);
        java.lang.Object[] objArray21 = mathException19.getArguments();
        java.io.PrintWriter printWriter22 = printWriter13.format("org.apache.commons.math.MathException: ZXZ", objArray21);
        java.lang.Object[] objArray24 = null;
        java.io.PrintWriter printWriter25 = printWriter22.format("zho", objArray24);
        printWriter22.println((long) (byte) 0);
        java.io.PrintStream printStream30 = new java.io.PrintStream("ko-KR");
        printStream30.close();
        java.util.Locale locale32 = java.util.Locale.UK;
        java.lang.String[] strArray34 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream35 = printStream30.format(locale32, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray34);
        printStream35.write(10);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.OutputStream) printStream35);
        printStream35.print((int) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double48 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double55 = rotation54.getQ0();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation47.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ0();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double70 = rotation69.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation62.applyTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation62.revert();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation56.applyInverseTo(rotation62);
        double[][] doubleArray74 = rotation56.getMatrix();
        java.io.PrintStream printStream75 = printStream35.printf("zh", (java.lang.Object[]) doubleArray74);
        java.io.PrintWriter printWriter76 = printWriter22.printf("\u97d3\u6587)", (java.lang.Object[]) doubleArray74);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException77 = new org.apache.commons.math.geometry.NotARotationMatrixException("zh-tw", (java.lang.Object[]) doubleArray74);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str6, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(printStream35);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 52.0d + "'", double55 == 52.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(printStream75);
        org.junit.Assert.assertNotNull(printWriter76);
    }

    @Test
    public void test07589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07589");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(560586.5993173601d, 0.49504334270191586d, (-0.14305934587215352d), (-1.569740199951139d), true);
    }

    @Test
    public void test07590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07590");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream90 = new java.io.PrintStream((java.io.OutputStream) printStream85);
        printStream85.print("org.apache.commons.math.MathException: org.apache.commons.math.MathException: fr");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07591");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        printStream1.println(true);
        printStream1.print(0.0f);
        java.io.PrintStream printStream23 = new java.io.PrintStream("ko-KR");
        printStream23.close();
        java.util.Locale locale25 = java.util.Locale.UK;
        java.lang.String[] strArray27 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream28 = printStream23.format(locale25, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray27);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter32 = printWriter30.append('#');
        java.lang.Object[] objArray34 = null;
        java.io.PrintWriter printWriter35 = printWriter32.format("fran\347ais", objArray34);
        java.util.Locale locale36 = null;
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray39 = mathException38.getSuppressed();
        java.io.PrintWriter printWriter40 = printWriter32.format(locale36, "zxz", (java.lang.Object[]) throwableArray39);
        char[] charArray44 = new char[] { 'a', ' ', '#' };
        printWriter40.println(charArray44);
        printStream23.println(charArray44);
        printStream23.println((double) (byte) 0);
        printStream23.println((int) (short) 10);
        java.util.Locale locale53 = new java.util.Locale("\ud55c\uad6d\uc5b4\ub300\ud55c\ubbfc\uad6d)", "org.apache.commons.math.MathException: eng");
        java.lang.String str55 = locale53.getUnicodeLocaleType("cn");
        boolean boolean56 = locale53.hasExtensions();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray64 = rotation63.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D66, (double) (byte) 100, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D71, (double) (byte) 100, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D68, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation63.applyInverseTo(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation63.getAxis();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation63.revert();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation78.revert();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation78.getAxis();
        double[][] doubleArray81 = rotation78.getMatrix();
        java.io.PrintStream printStream82 = printStream23.printf(locale53, "de-DE-Korean", (java.lang.Object[]) doubleArray81);
        java.io.PrintStream printStream83 = printStream1.printf("xzy", (java.lang.Object[]) doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(doubleArray81, 35.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(printStream28);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a,  , #]");
        org.junit.Assert.assertEquals(locale53.toString(), "\ud55c\uad6d\uc5b4\ub300\ud55c\ubbfc\uad6d)_ORG.APACHE.COMMONS.MATH.MATHEXCEPTION: ENG");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(printStream82);
        org.junit.Assert.assertNotNull(printStream83);
    }

    @Test
    public void test07592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07592");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.flush();
        java.io.PrintStream printStream87 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        printStream87.println((long) 100);
        printStream87.print('a');
        printStream87.println("\uc77c\ubcf8\uc5b4");
        printStream87.println(false);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07593");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D3, (double) (byte) 100, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D10, (double) (byte) 1, vector3D18, (double) (short) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, vector3D18, (double) 0L, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D35.scalarMultiply((double) (byte) 10);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation47.applyTo(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) 'x', vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) 1, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D35.add((-10.358482905538347d), vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D35.negate();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D57.normalize();
        double double59 = vector3D58.getAlpha();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-3.141592653589793d) + "'", double59 == (-3.141592653589793d));
    }

    @Test
    public void test07594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07594");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream90 = new java.io.PrintStream((java.io.OutputStream) printStream85);
        java.util.Locale locale91 = java.util.Locale.GERMAN;
        java.util.Locale.setDefault(locale91);
        printStream90.print((java.lang.Object) locale91);
        java.util.Locale locale94 = java.util.Locale.ENGLISH;
        java.util.Locale locale95 = java.util.Locale.FRENCH;
        java.lang.String str96 = locale94.getDisplayCountry(locale95);
        java.lang.String str97 = locale91.getDisplayVariant(locale94);
        java.lang.String str98 = locale94.toLanguageTag();
        java.lang.String str99 = locale94.toLanguageTag();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(locale91);
        org.junit.Assert.assertEquals(locale91.toString(), "de");
        org.junit.Assert.assertNotNull(locale94);
        org.junit.Assert.assertEquals(locale94.toString(), "en");
        org.junit.Assert.assertNotNull(locale95);
        org.junit.Assert.assertEquals(locale95.toString(), "fr");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "en" + "'", str98, "en");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "en" + "'", str99, "en");
    }

    @Test
    public void test07595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07595");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.close();
        java.io.PrintStream printStream15 = printStream6.append('a');
        java.io.PrintStream printStream17 = new java.io.PrintStream((java.io.OutputStream) printStream6, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str20 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D25, 2.3122509176395862d);
        double[][] doubleArray28 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(doubleArray28, 0.0d);
        java.io.PrintStream printStream31 = printStream17.printf("org.apache.commons.math.geometry.NotARotationMatrixException: cor\351en", (java.lang.Object[]) doubleArray28);
        java.io.PrintStream printStream33 = printStream17.append(' ');
        printStream33.println('#');
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream15);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "XZY" + "'", str20, "XZY");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(printStream31);
        org.junit.Assert.assertNotNull(printStream33);
    }

    @Test
    public void test07596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07596");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.println((float) 100L);
        printStream1.println("hi!");
        printStream1.println((int) (short) 10);
        char[] charArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            printStream1.print(charArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07597");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        printStream85.println((long) (short) 0);
        printStream85.println('#');
        printStream85.println((-0.40288871446512736d));
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07598");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        printStream90.println("\uc911\uad6d\uc5b4");
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream90);
        printStream90.println(false);
        java.io.PrintStream printStream97 = printStream90.append('4');
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertNotNull(printStream97);
    }

    @Test
    public void test07599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07599");
        java.io.PrintStream printStream1 = new java.io.PrintStream("yzy");
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("French");
        java.util.Locale.Builder builder4 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder6 = builder4.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder8 = builder4.setLanguage("ZXZ");
        java.util.Locale locale9 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder10 = builder4.setLocale(locale9);
        java.util.Locale.setDefault(locale9);
        printWriter3.print((java.lang.Object) locale9);
        java.lang.String str14 = locale9.getExtension('a');
        java.util.Locale locale16 = java.util.Locale.forLanguageTag("Koreanisch");
        java.util.Locale.Category category17 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale18 = java.util.Locale.getDefault(category17);
        java.util.Locale.Builder builder19 = new java.util.Locale.Builder();
        java.util.Locale locale20 = builder19.build();
        java.util.Locale.setDefault(category17, locale20);
        java.lang.String str22 = locale16.getDisplayVariant(locale20);
        java.lang.String str23 = locale9.getDisplayLanguage(locale16);
        printStream1.print((java.lang.Object) locale16);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double39 = rotation38.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation31.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyTo(rotation46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation41.getAxis();
        double double49 = rotation41.getQ2();
        double double50 = rotation41.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation41.getAxis();
        double[][] doubleArray52 = rotation41.getMatrix();
        java.io.PrintStream printStream53 = printStream1.printf("\u4e2d\u6587", (java.lang.Object[]) doubleArray52);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "");
        org.junit.Assert.assertTrue("'" + category17 + "' != '" + java.util.Locale.Category.DISPLAY + "'", category17.equals(java.util.Locale.Category.DISPLAY));
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "German" + "'", str23, "German");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 52.0d + "'", double39 == 52.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-52.0d) + "'", double50 == (-52.0d));
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(printStream53);
    }

    @Test
    public void test07600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07600");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.print((float) 100L);
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation11.applyInverseTo(rotation27);
        double[][] doubleArray30 = rotation11.getMatrix();
        java.io.PrintWriter printWriter31 = printWriter4.printf("zh", (java.lang.Object[]) doubleArray30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double39 = rotation38.getQ1();
        double double40 = rotation38.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.subtract((double) 10L, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyInverseTo(vector3D49);
        double[][] doubleArray52 = rotation38.getMatrix();
        java.io.PrintWriter printWriter53 = printWriter31.format("XZY", (java.lang.Object[]) doubleArray52);
        printWriter31.print('#');
        printWriter31.print(0L);
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        printWriter59.println((int) (short) 10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 100.0d + "'", double39 == 100.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 52.0d + "'", double40 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(printWriter53);
    }

    @Test
    public void test07601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07601");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation5.getQ0();
        double double16 = rotation5.getQ0();
        double[][] doubleArray17 = rotation5.getMatrix();
        double double18 = rotation5.getQ3();
        double double19 = rotation5.getAngle();
        double double20 = rotation5.getQ3();
        double double21 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) 1L, 10.0d, (double) (byte) 1, (double) (-1L), false);
        double[][] doubleArray28 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation5.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(0.3403995840772179d, 0.35381200009177294d, 0.33033571077024615d, 0.33033571077024615d, false);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray52 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D54, (double) (byte) 100, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D59, (double) (byte) 100, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D56, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation51.applyInverseTo(vector3D56);
        double double65 = rotation51.getQ0();
        double double66 = rotation51.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation51.applyInverseTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D45, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D42, vector3D70);
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D73, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation35.applyInverseTo(rotation76);
        double[][] doubleArray78 = rotation76.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation27.applyInverseTo(rotation76);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 52.0d + "'", double65 == 52.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(rotation79);
    }

    @Test
    public void test07602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07602");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray10 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D12, (double) (byte) 100, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D17, (double) (byte) 100, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D14, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation9.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D22, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D2.subtract((double) 100, vector3D24);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation31.getAxis();
        double double33 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D24, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D32.negate();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D32);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter39 = printWriter37.append('#');
        java.lang.Object[] objArray41 = null;
        java.io.PrintWriter printWriter42 = printWriter39.format("fran\347ais", objArray41);
        java.util.Locale locale43 = null;
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray46 = mathException45.getSuppressed();
        java.io.PrintWriter printWriter47 = printWriter39.format(locale43, "zxz", (java.lang.Object[]) throwableArray46);
        char[] charArray51 = new char[] { 'a', ' ', '#' };
        printWriter47.println(charArray51);
        java.util.Locale locale53 = java.util.Locale.FRENCH;
        java.util.Locale locale54 = java.util.Locale.FRENCH;
        java.util.Locale locale55 = java.util.Locale.TAIWAN;
        java.lang.String str56 = locale54.getDisplayScript(locale55);
        java.lang.String str57 = locale53.getDisplayLanguage(locale54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray69 = rotation68.getMatrix();
        java.io.PrintWriter printWriter70 = printWriter47.printf(locale53, "english", (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(doubleArray69, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(doubleArray69, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str76 = rotationOrder75.toString();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder75.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder75.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D78.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation74.applyInverseTo(vector3D79);
        double double81 = vector3D79.getNorm();
        double double82 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D32, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D32.scalarMultiply(1.3165168133380822d);
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((double) 'u', (-1.5708078163893535d), 560586.5993173601d);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D32.add(vector3D88);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.0d) + "'", double33 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "fr");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "fr");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "fran\347ais" + "'", str57, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ZXZ" + "'", str76, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.995037190209989d) + "'", double82 == (-0.995037190209989d));
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test07603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07603");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = java.util.Locale.GERMAN;
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale11 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str12 = locale11.getScript();
        java.util.Locale locale13 = java.util.Locale.KOREA;
        java.lang.String str14 = locale11.getDisplayLanguage(locale13);
        java.lang.String[] strArray17 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray17, (java.lang.Throwable) mathException19);
        java.io.PrintWriter printWriter21 = printWriter10.format(locale13, "YZY", (java.lang.Object[]) strArray17);
        java.io.PrintWriter printWriter22 = printWriter6.printf(locale7, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray17);
        java.io.PrintWriter printWriter24 = printWriter6.append('4');
        java.io.PrintWriter printWriter26 = printWriter6.append((java.lang.CharSequence) "\uc911\uad6d\uc5b4");
        printWriter26.close();
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter32 = printWriter30.append('#');
        java.util.Locale locale33 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ0();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double48 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyTo(rotation47);
        double double50 = rotation47.getQ3();
        double[][] doubleArray51 = rotation47.getMatrix();
        java.io.PrintWriter printWriter52 = printWriter32.printf(locale33, "XZY", (java.lang.Object[]) doubleArray51);
        java.io.PrintWriter printWriter53 = printWriter26.printf("fran\347ais", (java.lang.Object[]) doubleArray51);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter((java.io.Writer) printWriter26, true);
        printWriter55.println((float) (-1L));
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "de");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str14, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(printWriter53);
    }

    @Test
    public void test07604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07604");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7954966866093076d, (-1.2664921426622615d), (double) 10);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.7071067811865475d), (-5.3907441696578843E-11d), 2000.0d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
    }

    @Test
    public void test07605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07605");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintStream printStream47 = new java.io.PrintStream((java.io.OutputStream) printStream46);
        java.io.PrintStream printStream48 = new java.io.PrintStream((java.io.OutputStream) printStream47);
        printStream47.println((long) 1);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
    }

    @Test
    public void test07606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07606");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation5.getAxis();
        double double13 = rotation5.getAngle();
        double double14 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        double double16 = rotation15.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation15.getAxis();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-52.0d) + "'", double16 == (-52.0d));
        org.junit.Assert.assertNotNull(vector3D17);
    }

    @Test
    public void test07607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07607");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.OutputStream) printStream16, false);
        java.io.PrintStream printStream20 = printStream16.append('u');
        printStream20.println((float) 1);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(printStream20);
    }

    @Test
    public void test07608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07608");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.print((float) 100L);
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        printStream1.println();
        printStream1.write((int) '#');
        java.io.PrintStream printStream9 = printStream1.append((java.lang.CharSequence) "\uc911\uad6d\uc5b4");
        java.io.PrintStream printStream12 = new java.io.PrintStream("ko-KR");
        printStream12.close();
        java.util.Locale locale14 = java.util.Locale.UK;
        java.lang.String[] strArray16 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream17 = printStream12.format(locale14, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray16);
        printStream17.write(10);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter((java.io.OutputStream) printStream17);
        byte[] byteArray22 = new byte[] { (byte) -1 };
        printStream17.write(byteArray22);
        printStream17.close();
        printStream17.println((double) (short) 100);
        byte[] byteArray28 = new byte[] { (byte) 1 };
        printStream17.write(byteArray28, 0, 1);
        printStream17.println(true);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double40 = rotation39.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation39.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double55 = rotation54.getQ0();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double62 = rotation61.getQ0();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation54.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation48.applyInverseTo(rotation54);
        printStream17.print((java.lang.Object) rotation54);
        double[][] doubleArray67 = rotation54.getMatrix();
        java.io.PrintStream printStream68 = printStream9.printf("\u82f1\u8a9e", (java.lang.Object[]) doubleArray67);
        printStream9.println((-1));
        printStream9.println(true);
        printStream9.println();
        org.junit.Assert.assertNotNull(printStream9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(printStream17);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 52.0d + "'", double40 == 52.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 52.0d + "'", double55 == 52.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(printStream68);
    }

    @Test
    public void test07609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07609");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("ja");
        printWriter1.print(' ');
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter4, true);
        java.io.PrintStream printStream8 = new java.io.PrintStream("ko-KR");
        printStream8.println("fr");
        printStream8.println("deu");
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale15 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str16 = locale15.getScript();
        java.util.Locale locale17 = java.util.Locale.KOREA;
        java.lang.String str18 = locale15.getDisplayLanguage(locale17);
        java.lang.String[] strArray21 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray21, (java.lang.Throwable) mathException23);
        java.io.PrintWriter printWriter25 = printWriter14.format(locale17, "YZY", (java.lang.Object[]) strArray21);
        printWriter25.println(0.0d);
        printWriter25.print((long) (byte) 10);
        printWriter25.println();
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter34 = printWriter32.append('#');
        java.lang.Object[] objArray36 = null;
        java.io.PrintWriter printWriter37 = printWriter34.format("fran\347ais", objArray36);
        java.util.Locale locale38 = null;
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray41 = mathException40.getSuppressed();
        java.io.PrintWriter printWriter42 = printWriter34.format(locale38, "zxz", (java.lang.Object[]) throwableArray41);
        char[] charArray46 = new char[] { 'a', ' ', '#' };
        printWriter42.println(charArray46);
        printWriter25.write(charArray46);
        printStream8.println(charArray46);
        printWriter6.write(charArray46);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter((java.io.Writer) printWriter6, false);
        printWriter6.print('x');
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale57 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str58 = locale57.getScript();
        java.util.Locale locale59 = java.util.Locale.KOREA;
        java.lang.String str60 = locale57.getDisplayLanguage(locale59);
        java.lang.String[] strArray63 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray63, (java.lang.Throwable) mathException65);
        java.io.PrintWriter printWriter67 = printWriter56.format(locale59, "YZY", (java.lang.Object[]) strArray63);
        printWriter67.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException73);
        java.lang.Object[] objArray75 = mathException73.getArguments();
        java.io.PrintWriter printWriter76 = printWriter67.format("org.apache.commons.math.MathException: ZXZ", objArray75);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation83.getAxis();
        double[][] doubleArray85 = rotation83.getMatrix();
        double double86 = rotation83.getQ1();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation77.applyInverseTo(rotation83);
        double double88 = rotation77.getQ3();
        printWriter76.print((java.lang.Object) double88);
        printWriter76.close();
        printWriter6.print((java.lang.Object) printWriter76);
        printWriter6.println((-1));
        java.util.Locale locale95 = java.util.Locale.forLanguageTag("ZXZ");
        java.lang.String str96 = locale95.getLanguage();
        printWriter6.print((java.lang.Object) locale95);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str18, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str60, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 100.0d + "'", double86 == 100.0d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(locale95);
        org.junit.Assert.assertEquals(locale95.toString(), "zxz");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "zxz" + "'", str96, "zxz");
    }

    @Test
    public void test07610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07610");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation7.applyTo(vector3D9);
        double double14 = vector3D9.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D9, (double) 10, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D9.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str20 = rotationOrder19.toString();
        java.lang.String str21 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D9.add(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D(1.7551651237807455d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.normalize();
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "YZY" + "'", str20, "YZY");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "YZY" + "'", str21, "YZY");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
    }

    @Test
    public void test07611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07611");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-60.912721436461325d), (double) (byte) 0, (-0.3403913072297808d), (-3.0207621669026776E-6d), true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        double double21 = rotation18.getQ2();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation5.applyInverseTo(rotation18);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
    }

    @Test
    public void test07612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07612");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        java.lang.String str7 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA1();
        java.lang.String str10 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXZ" + "'", str7, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXZ" + "'", str10, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test07613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07613");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.print((float) 100L);
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation11.applyInverseTo(rotation27);
        double[][] doubleArray30 = rotation11.getMatrix();
        java.io.PrintWriter printWriter31 = printWriter4.printf("zh", (java.lang.Object[]) doubleArray30);
        java.io.PrintWriter printWriter33 = printWriter4.append((java.lang.CharSequence) "\uc601\uad6d");
        printWriter4.println((long) 0);
        printWriter4.write("Taiwan");
        printWriter4.println();
        boolean boolean39 = printWriter4.checkError();
        printWriter4.println(true);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test07614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07614");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1040.0d, (-1.149479279664553d), (-2.3460959669804855d), 1.5803629412025218E-6d, true);
    }

    @Test
    public void test07615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07615");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation20.revert();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation20.getAxis();
        double[][] doubleArray23 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(10.0d, 2.3122509176395862d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation37.applyTo(rotation44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation37.applyInverseTo(vector3D47);
        double double49 = vector3D47.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str51 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D52.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D47.add(vector3D52);
        double double55 = vector3D54.getY();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D31, vector3D54);
        double double57 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D26, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation20.applyInverseTo(vector3D31);
        double double59 = vector3D58.getNorm();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double67 = rotation66.getQ0();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double74 = rotation73.getQ0();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation66.applyTo(rotation73);
        double double76 = rotation73.getQ3();
        double double77 = rotation73.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation73.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder79, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(rotationOrder79, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray89 = rotation88.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation73.applyTo(rotation88);
        double double91 = rotation88.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder92 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str93 = rotationOrder92.toString();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder92.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotationOrder92.getA1();
        double[] doubleArray96 = rotation88.getAngles(rotationOrder92);
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotationOrder92.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D58.add(93.58219012821877d, vector3D97);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXZ" + "'", str28, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZXZ" + "'", str51, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.7374869648140232d + "'", double57 == 0.7374869648140232d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 11983.257028037076d + "'", double59 == 11983.257028037076d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 52.0d + "'", double67 == 52.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 52.0d + "'", double74 == 52.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 10.0d + "'", double76 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "YZY" + "'", str93, "YZY");
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-1.5707963267948966, 0.530964914873383, 1.5707963267948966]");
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test07616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07616");
        java.io.PrintStream printStream1 = new java.io.PrintStream("und");
        java.io.PrintStream printStream2 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        printStream1.println((long) (-1));
        printStream1.print('4');
        printStream1.write((int) (byte) 10);
        printStream1.close();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) '#', 2.0790806738125385d, (-0.2868032122551722d));
        double double18 = rotation17.getQ1();
        double[][] doubleArray19 = rotation17.getMatrix();
        java.io.PrintStream printStream20 = printStream1.format("\u82f1\u6587\u52a0\u62ff\u5927)", (java.lang.Object[]) doubleArray19);
        printStream1.println();
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "YZY" + "'", str12, "YZY");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.8054849532414718d + "'", double18 == 0.8054849532414718d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(printStream20);
    }

    @Test
    public void test07617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07617");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation5.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D32, (double) (byte) 100, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation30.applyTo(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.subtract(vector3D39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str42 = rotationOrder41.toString();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D43.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(vector3D44);
        double double46 = vector3D40.getY();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation5.applyInverseTo(vector3D40);
        double double48 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double55 = rotation54.getQ0();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double62 = rotation61.getQ0();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation54.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation54.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation70 = rotation64.applyTo(rotation69);
        double double71 = rotation69.getAngle();
        double double72 = rotation69.getQ0();
        double double73 = rotation69.getQ0();
        double double74 = rotation69.getQ1();
        double double75 = rotation69.getQ3();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation5.applyTo(rotation69);
        double double77 = rotation5.getQ1();
        double double78 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ZXZ" + "'", str42, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 52.0d + "'", double55 == 52.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2.3122509176395862d + "'", double71 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.4028887144651276d + "'", double72 == 0.4028887144651276d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.4028887144651276d + "'", double73 == 0.4028887144651276d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.8519466901357562d) + "'", double74 == (-0.8519466901357562d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.3331734424927659d + "'", double75 == 0.3331734424927659d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 100.0d + "'", double77 == 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
    }

    @Test
    public void test07618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07618");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("Korean (South Korea)");
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("fr-FR");
        java.io.PrintWriter printWriter5 = printWriter3.append((java.lang.CharSequence) "Korean");
        java.io.PrintStream printStream7 = new java.io.PrintStream("ko-KR");
        printStream7.print((float) 100L);
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.OutputStream) printStream7);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double25 = rotation24.getQ0();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation17.applyTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation27 = rotation17.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double34 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation17.applyInverseTo(rotation33);
        double[][] doubleArray36 = rotation17.getMatrix();
        java.io.PrintWriter printWriter37 = printWriter10.printf("zh", (java.lang.Object[]) doubleArray36);
        java.io.PrintWriter printWriter39 = printWriter10.append((java.lang.CharSequence) "\uc601\uad6d");
        printWriter10.println((long) 0);
        boolean boolean42 = printWriter10.checkError();
        printWriter10.print("org.apache.commons.math.MathException: zxz");
        java.io.PrintStream printStream46 = new java.io.PrintStream("ko-KR");
        printStream46.println("fr");
        printStream46.println("deu");
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale53 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str54 = locale53.getScript();
        java.util.Locale locale55 = java.util.Locale.KOREA;
        java.lang.String str56 = locale53.getDisplayLanguage(locale55);
        java.lang.String[] strArray59 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray59, (java.lang.Throwable) mathException61);
        java.io.PrintWriter printWriter63 = printWriter52.format(locale55, "YZY", (java.lang.Object[]) strArray59);
        printWriter63.println(0.0d);
        printWriter63.print((long) (byte) 10);
        printWriter63.println();
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter72 = printWriter70.append('#');
        java.lang.Object[] objArray74 = null;
        java.io.PrintWriter printWriter75 = printWriter72.format("fran\347ais", objArray74);
        java.util.Locale locale76 = null;
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray79 = mathException78.getSuppressed();
        java.io.PrintWriter printWriter80 = printWriter72.format(locale76, "zxz", (java.lang.Object[]) throwableArray79);
        char[] charArray84 = new char[] { 'a', ' ', '#' };
        printWriter80.println(charArray84);
        printWriter63.write(charArray84);
        printStream46.println(charArray84);
        printWriter10.print(charArray84);
        printWriter3.write(charArray84);
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write(charArray84, (int) (byte) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str56, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a,  , #]");
    }

    @Test
    public void test07619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07619");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        boolean boolean86 = printStream1.checkError();
        printStream1.println((int) 'x');
        printStream1.flush();
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.OutputStream) printStream1, true);
        java.io.PrintWriter printWriter93 = printWriter91.append(' ');
        java.io.PrintWriter printWriter95 = printWriter93.append('u');
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(printWriter93);
        org.junit.Assert.assertNotNull(printWriter95);
    }

    @Test
    public void test07620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07620");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.07749534631904303d, 18488.397824670512d, (-0.32687887109859115d), 1.6312889998277815E7d, false);
    }

    @Test
    public void test07621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07621");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D2.scalarMultiply((double) 10);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.negate();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation12.applyTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D14.subtract(vector3D21);
        double double23 = vector3D22.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str26 = rotationOrder25.toString();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder25.getA1();
        java.lang.String str28 = rotationOrder25.toString();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, 0.33033571077024615d, (double) 1, (-0.995037190209989d));
        double[] doubleArray33 = rotation24.getAngles(rotationOrder25);
        double double34 = rotation24.getQ3();
        double[][] doubleArray35 = rotation24.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 3.141592653589793d + "'", double23 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ZXZ" + "'", str26, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXZ" + "'", str28, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.5707963267948966, 1.5707963267948963, -1.5707963267948966]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
    }

    @Test
    public void test07622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07622");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.print((float) 100L);
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        java.lang.String[] strArray7 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray7, (java.lang.Throwable) mathException9);
        java.lang.String[] strArray14 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray14, (java.lang.Throwable) mathException16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray19 = mathException18.getSuppressed();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray14, (java.lang.Throwable) mathException18);
        java.lang.Throwable[] throwableArray21 = mathException18.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException22 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray21);
        mathException10.addSuppressed((java.lang.Throwable) notARotationMatrixException22);
        java.lang.Throwable[] throwableArray24 = notARotationMatrixException22.getSuppressed();
        java.io.PrintWriter printWriter25 = printWriter4.format("ZXZ", (java.lang.Object[]) throwableArray24);
        printWriter4.println(100);
        printWriter4.println("\u97d3\u6587)");
        java.lang.String[] strArray32 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("Japan", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter34 = printWriter4.printf("\u4e2d\u6587\u4e2d\u56fd)", (java.lang.Object[]) strArray32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str37 = rotationOrder36.toString();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D42, 2.3122509176395862d);
        double[][] doubleArray45 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(doubleArray45, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(doubleArray45, 0.964142738069021d);
        java.io.PrintWriter printWriter50 = printWriter34.printf("French (France)", (java.lang.Object[]) doubleArray45);
        printWriter50.println("Korean (CHINESE (TAIWAN))");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "XZY" + "'", str37, "XZY");
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printWriter50);
    }

    @Test
    public void test07623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07623");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        java.io.PrintStream printStream49 = printStream6.append((java.lang.CharSequence) "Franz\366sisch (Frankreich)");
        printStream6.close();
        printStream6.println(0.3331734424927659d);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(printStream49);
    }

    @Test
    public void test07624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07624");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale3 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str4 = locale3.getScript();
        java.util.Locale locale5 = java.util.Locale.KOREA;
        java.lang.String str6 = locale3.getDisplayLanguage(locale5);
        java.lang.String[] strArray9 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray9, (java.lang.Throwable) mathException11);
        java.io.PrintWriter printWriter13 = printWriter2.format(locale5, "YZY", (java.lang.Object[]) strArray9);
        printWriter13.close();
        java.util.Locale locale15 = java.util.Locale.FRANCE;
        printWriter13.println((java.lang.Object) locale15);
        printWriter13.println((int) (byte) 10);
        printWriter13.println((long) (short) 10);
        printWriter13.print("DEU");
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double30 = rotation29.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) (-1L), (double) (short) 10, (double) 'a');
        double double36 = rotation35.getAngle();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation29.applyInverseTo(rotation35);
        double[][] doubleArray38 = rotation35.getMatrix();
        java.io.PrintWriter printWriter39 = printWriter13.printf("\u97d3\u6587\u5357\u97d3)", (java.lang.Object[]) doubleArray38);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter13, true);
        java.io.PrintWriter printWriter43 = printWriter13.append('u');
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (-1L), (double) (short) 10, (double) 'a');
        double double57 = rotation56.getAngle();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation50.applyInverseTo(rotation56);
        double[][] doubleArray59 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(doubleArray59, 2.3122509176395862d);
        java.io.PrintWriter printWriter62 = printWriter13.printf("French", (java.lang.Object[]) doubleArray59);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException66 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray67 = cardanEulerSingularityException66.getSuppressed();
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("Frankreich");
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("\u97d3\u6587)", (java.lang.Object[]) throwableArray67, (java.lang.Throwable) mathException69);
        java.lang.Throwable[] throwableArray71 = mathException69.getSuppressed();
        java.io.PrintWriter printWriter72 = printWriter62.printf("\u30d5\u30e9\u30f3\u30b9\u8a9e", (java.lang.Object[]) throwableArray71);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException73 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: KOR", (java.lang.Object[]) throwableArray71);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str6, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "fr_FR");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2.3122509176395862d + "'", double36 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2.3122509176395862d + "'", double57 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(printWriter72);
    }

    @Test
    public void test07625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07625");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        double[][] doubleArray8 = rotation6.getMatrix();
        double double9 = rotation6.getQ1();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation0.applyInverseTo(rotation6);
        double double11 = rotation0.getAngle();
        double double12 = rotation0.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str14 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation29.applyTo(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.subtract(vector3D38);
        double double40 = vector3D39.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation47.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder49.getA1();
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D48.add(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.add((double) (-1.0f), vector3D61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((-0.13715201283077028d), vector3D39, (double) (short) 0, vector3D62, 0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((-52.0d), vector3D39);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D21, vector3D72);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation0.applyTo(rotation73);
        double double75 = rotation74.getQ0();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXZ" + "'", str14, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 3.141592653589793d + "'", double40 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.7071067811865476d + "'", double75 == 0.7071067811865476d);
    }

    @Test
    public void test07626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07626");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D27, (double) (byte) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D32, (double) (byte) 100, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D16, (double) (byte) 1, vector3D24, (double) (short) 100, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D16.negate();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double48 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double55 = rotation54.getQ0();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation47.applyTo(rotation54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation47.applyInverseTo(vector3D57);
        double double59 = vector3D57.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D57.add(vector3D62);
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (-1), vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((-9.95037190209989d), vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D38.add(0.34036798076772956d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D(60.912721436461325d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D(69.77330444867783d, vector3D4, 2.9982917474683775d, vector3D69);
        double double71 = vector3D4.getNorm();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D4, 3.140233154802971d);
        double double74 = vector3D4.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 52.0d + "'", double55 == 52.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ZXZ" + "'", str61, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
    }

    @Test
    public void test07627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07627");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        java.lang.String str91 = locale2.getDisplayCountry();
        java.util.Locale locale92 = locale2.stripExtensions();
        java.util.Set<java.lang.String> strSet93 = locale92.getUnicodeLocaleKeys();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertNotNull(locale92);
        org.junit.Assert.assertEquals(locale92.toString(), "fr");
        org.junit.Assert.assertNotNull(strSet93);
    }

    @Test
    public void test07628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07628");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.2711440071012736d, 4788.244814560393d, 32.0d, (-81.00118819117556d), true);
    }

    @Test
    public void test07629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07629");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D3, (double) (byte) 100, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D10, (double) (byte) 1, vector3D18, (double) (short) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D10.negate();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D10.negate();
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D(0.9904757959510307d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D35.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str38 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder37.getA3();
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        double double46 = vector3D42.getY();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D61, (double) (byte) 100, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation59.applyTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.negate();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D52.add(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D47.subtract((-4.79425538604203d), vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D36.subtract(vector3D68);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str72 = rotationOrder71.toString();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder71.getA3();
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D76, (double) (byte) 100, vector3D78);
        double double80 = vector3D76.getY();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D73.subtract(vector3D76);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D92 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D90, (double) (byte) 100, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation88.applyTo(vector3D90);
        double double95 = vector3D90.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D81.add((double) 0L, vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D68.add((double) (byte) 100, vector3D90);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D90.orthogonal();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null norm");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.0d) + "'", double34 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ZXZ" + "'", str38, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ZXZ" + "'", str72, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test07630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07630");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation15.getAxis();
        double double23 = rotation15.getQ2();
        double double24 = rotation15.getQ0();
        double double25 = rotation15.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation15.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(24.291555113709315d, 0.0d, (-52.0d), 0.0d, true);
        double double33 = rotation32.getAngle();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation15.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation32.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str37 = rotationOrder36.toString();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double48 = rotation47.getQ1();
        double double49 = rotation47.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D51, (double) (byte) 100, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D51.subtract((double) 10L, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation47.applyInverseTo(vector3D58);
        double double61 = rotation47.getQ2();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation41.applyTo(rotation47);
        double double63 = rotation62.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str65 = rotationOrder64.toString();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder64.getA3();
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        double double73 = vector3D69.getY();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D66.subtract(vector3D69);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D83, (double) (byte) 100, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation81.applyTo(vector3D83);
        double double88 = vector3D83.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D74.add((double) 0L, vector3D83);
        double double90 = vector3D83.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D83.scalarMultiply(1.7607846147136124d);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation62.applyInverseTo(vector3D83);
        double double94 = rotation62.getQ2();
        org.apache.commons.math.geometry.Rotation rotation95 = rotation32.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Vector3D vector3D96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D97 = rotation62.applyInverseTo(vector3D96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-52.0d) + "'", double24 == (-52.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2.2675524168679715d + "'", double33 == 2.2675524168679715d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "XZY" + "'", str37, "XZY");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 100.0d + "'", double48 == 100.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-4.79425538604203d) + "'", double63 == (-4.79425538604203d));
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ZXZ" + "'", str65, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-4.79425538604203d) + "'", double94 == (-4.79425538604203d));
        org.junit.Assert.assertNotNull(rotation95);
    }

    @Test
    public void test07631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07631");
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale4 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str5 = locale4.getScript();
        java.util.Locale locale6 = java.util.Locale.KOREA;
        java.lang.String str7 = locale4.getDisplayLanguage(locale6);
        java.lang.String[] strArray10 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray10, (java.lang.Throwable) mathException12);
        java.io.PrintWriter printWriter14 = printWriter3.format(locale6, "YZY", (java.lang.Object[]) strArray10);
        printWriter14.println(0.0d);
        printWriter14.print((long) (byte) 10);
        printWriter14.println();
        printWriter14.print((int) (short) 0);
        java.io.PrintWriter printWriter23 = printWriter14.append('x');
        java.util.Locale locale25 = java.util.Locale.forLanguageTag("Chinesisch");
        java.util.Set<java.lang.Character> charSet26 = locale25.getExtensionKeys();
        printWriter14.println((java.lang.Object) locale25);
        java.io.PrintWriter printWriter29 = printWriter14.append('4');
        printWriter14.print(false);
        printWriter14.flush();
        java.util.Locale.Category category33 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale34 = java.util.Locale.ENGLISH;
        boolean boolean35 = locale34.hasExtensions();
        java.util.Locale.setDefault(category33, locale34);
        java.util.Locale locale37 = java.util.Locale.GERMANY;
        java.util.Set<java.lang.String> strSet38 = locale37.getUnicodeLocaleKeys();
        java.lang.String str39 = locale34.getDisplayCountry(locale37);
        java.util.Set<java.lang.String> strSet40 = locale34.getUnicodeLocaleAttributes();
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray52 = rotation51.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(doubleArray52, 1.5707963267948966d);
        java.io.PrintWriter printWriter55 = printWriter14.printf(locale34, "\u97d3\u6587\u5357\u97d3)", (java.lang.Object[]) doubleArray52);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException56 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: Englisch (Vereinigtes K\366nigreich)", (java.lang.Object[]) doubleArray52);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("\u30d5\u30e9\u30f3\u30b9\u8a9e\u30d5\u30e9\u30f3\u30b9)", (java.lang.Throwable) notARotationMatrixException56);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str7, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(charSet26);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertTrue("'" + category33 + "' != '" + java.util.Locale.Category.DISPLAY + "'", category33.equals(java.util.Locale.Category.DISPLAY));
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "de_DE");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(printWriter55);
    }

    @Test
    public void test07632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07632");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.KOREAN;
        java.lang.String str3 = locale2.getDisplayLanguage();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double11 = rotation10.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation10.applyTo(rotation17);
        double double20 = rotation10.getQ0();
        double double21 = rotation10.getQ0();
        double[][] doubleArray22 = rotation10.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter1.printf(locale2, "zh_CN", (java.lang.Object[]) doubleArray22);
        java.util.Locale locale24 = java.util.Locale.FRENCH;
        java.util.Locale locale25 = java.util.Locale.TAIWAN;
        java.lang.String str26 = locale24.getDisplayScript(locale25);
        java.lang.String str27 = locale25.getVariant();
        java.util.Locale locale28 = java.util.Locale.CHINESE;
        java.lang.String str29 = locale25.getDisplayName(locale28);
        java.lang.String str31 = locale25.getExtension('x');
        java.util.Locale.Category category32 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category33 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale34 = java.util.Locale.ROOT;
        java.lang.String str35 = locale34.getDisplayLanguage();
        java.util.Locale.setDefault(category33, locale34);
        java.util.Locale.setDefault(category32, locale34);
        java.util.Locale locale38 = java.util.Locale.getDefault(category32);
        java.util.Locale locale39 = null;
        java.lang.String str40 = locale38.getDisplayScript(locale39);
        java.util.Locale locale41 = java.util.Locale.ROOT;
        java.util.Locale.Category category42 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category43 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale44 = java.util.Locale.ROOT;
        java.lang.String str45 = locale44.getDisplayLanguage();
        java.util.Locale.setDefault(category43, locale44);
        java.util.Locale.setDefault(category42, locale44);
        java.lang.String str48 = locale41.getDisplayVariant(locale44);
        java.lang.String str49 = locale38.getDisplayCountry(locale44);
        java.lang.String str50 = locale25.getDisplayLanguage(locale38);
        java.util.Locale locale51 = java.util.Locale.FRENCH;
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.TAIWAN;
        java.lang.String str54 = locale52.getDisplayScript(locale53);
        java.lang.String str55 = locale51.getDisplayLanguage(locale52);
        boolean boolean56 = locale52.hasExtensions();
        java.util.Locale.Builder builder57 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder59 = builder57.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale60 = builder57.build();
        java.lang.String str61 = locale52.getDisplayLanguage(locale60);
        java.lang.String str62 = locale52.getDisplayVariant();
        java.lang.String str63 = locale38.getDisplayCountry(locale52);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double71 = rotation70.getQ0();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double78 = rotation77.getQ0();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation70.applyTo(rotation77);
        double double80 = rotation70.getQ0();
        double double81 = rotation70.getQ0();
        double[][] doubleArray82 = rotation70.getMatrix();
        java.io.PrintWriter printWriter83 = printWriter1.format(locale52, "\u671d\u9c9c\u6587\u97e9\u56fd)", (java.lang.Object[]) doubleArray82);
        printWriter1.print(3.0419240010986313d);
        printWriter1.println("CHN");
        java.lang.String[] strArray90 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("Japan", (java.lang.Object[]) strArray90);
        java.io.PrintWriter printWriter92 = printWriter1.format("korean", (java.lang.Object[]) strArray90);
        boolean boolean93 = printWriter92.checkError();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "ko");
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\ud55c\uad6d\uc5b4" + "'", str3, "\ud55c\uad6d\uc5b4");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 52.0d + "'", double11 == 52.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "fr");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "zh");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)" + "'", str29, "\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + category32 + "' != '" + java.util.Locale.Category.FORMAT + "'", category32.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category33 + "' != '" + java.util.Locale.Category.FORMAT + "'", category33.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "");
        org.junit.Assert.assertTrue("'" + category42 + "' != '" + java.util.Locale.Category.FORMAT + "'", category42.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category43 + "' != '" + java.util.Locale.Category.FORMAT + "'", category43.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Chinese" + "'", str50, "Chinese");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "fr");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "fran\347ais" + "'", str55, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "French" + "'", str61, "French");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 52.0d + "'", double71 == 52.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 52.0d + "'", double78 == 52.0d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 52.0d + "'", double80 == 52.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 52.0d + "'", double81 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(printWriter92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test07633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07633");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D2, (double) (byte) 100, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D4, (double) 0.0f, vector3D16);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation24.applyTo(vector3D26);
        double double31 = vector3D26.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D16.add(vector3D26);
        double double33 = vector3D26.getZ();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ1();
        double double42 = rotation40.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.subtract((double) 10L, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation40.applyInverseTo(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D53.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double68 = rotation67.getQ0();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation60.applyTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation60.revert();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation60.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D53.subtract(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D26.add(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D71.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.scalarMultiply((-2.43465333888373d));
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D71, 0.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 100.0d + "'", double41 == 100.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 52.0d + "'", double42 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 52.0d + "'", double61 == 52.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 52.0d + "'", double68 == 52.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
    }

    @Test
    public void test07634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07634");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D2, (double) (byte) 100, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D4, (double) 0.0f, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.scalarMultiply((double) 0.0f);
        double double21 = vector3D20.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D27, (double) (byte) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D32, (double) (byte) 100, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D45, (double) (byte) 100, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D47, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D34, (double) (byte) 1, vector3D42, (double) (short) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, vector3D42, (double) 0L, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D59.scalarMultiply((double) (byte) 10);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D73, (double) (byte) 100, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation71.applyTo(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) 'x', vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) 1, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D59.add((-10.358482905538347d), vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D59.negate();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.normalize();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D20, vector3D81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: zero norm for rotation defining vector");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test07635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07635");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.print((int) (short) 1);
        printWriter12.print((double) ' ');
        printWriter12.print((long) (short) 100);
        java.io.PrintStream printStream20 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream22 = new java.io.PrintStream("ko-KR");
        printStream22.close();
        printStream22.println((double) '4');
        printStream22.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ0();
        double[][] doubleArray36 = rotation34.getMatrix();
        java.io.PrintStream printStream37 = printStream22.format("zh", (java.lang.Object[]) doubleArray36);
        printStream20.println((java.lang.Object) doubleArray36);
        printStream20.println(false);
        java.io.PrintStream printStream42 = printStream20.append((java.lang.CharSequence) "org.apache.commons.math.MathException: und");
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale45 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str46 = locale45.getScript();
        java.util.Locale locale47 = java.util.Locale.KOREA;
        java.lang.String str48 = locale45.getDisplayLanguage(locale47);
        java.lang.String[] strArray51 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray51, (java.lang.Throwable) mathException53);
        java.io.PrintWriter printWriter55 = printWriter44.format(locale47, "YZY", (java.lang.Object[]) strArray51);
        printWriter55.println(0.0d);
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale60 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str61 = locale60.getScript();
        java.util.Locale locale62 = java.util.Locale.KOREA;
        java.lang.String str63 = locale60.getDisplayLanguage(locale62);
        java.lang.String[] strArray66 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray66, (java.lang.Throwable) mathException68);
        java.io.PrintWriter printWriter70 = printWriter59.format(locale62, "YZY", (java.lang.Object[]) strArray66);
        printWriter70.close();
        java.io.PrintStream printStream73 = new java.io.PrintStream("ko-KR");
        printStream73.close();
        java.util.Locale locale75 = java.util.Locale.UK;
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream78 = printStream73.format(locale75, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray77);
        printStream78.write(10);
        java.io.PrintWriter printWriter81 = new java.io.PrintWriter((java.io.OutputStream) printStream78);
        printStream78.print((int) (short) 1);
        java.io.PrintStream printStream85 = new java.io.PrintStream("ko-KR");
        printStream85.println("fr");
        printStream78.print((java.lang.Object) "fr");
        char[] charArray92 = new char[] { '#', '4', 'a' };
        printStream78.print(charArray92);
        printWriter70.write(charArray92, (int) (byte) -1, 1);
        printWriter55.write(charArray92);
        printStream20.print(charArray92);
        printWriter12.print(charArray92);
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(printStream37);
        org.junit.Assert.assertNotNull(printStream42);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str48, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str63, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(printStream78);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "#4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "#4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[#, 4, a]");
    }

    @Test
    public void test07636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07636");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation14.applyInverseTo(rotation20);
        double[][] doubleArray32 = rotation14.getMatrix();
        double double33 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray40 = rotation39.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D47, (double) (byte) 100, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D44, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation39.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D52, vector3D53);
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D54.scalarMultiply((double) 10L);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double65 = rotation64.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double72 = rotation71.getQ0();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation64.applyTo(rotation71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation64.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D54.add((-0.0d), vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation14.applyInverseTo(vector3D54);
        double double78 = vector3D54.getX();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1040.0d + "'", double33 == 1040.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 52.0d + "'", double65 == 52.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 52.0d + "'", double72 == 52.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test07637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07637");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.println((float) 100L);
        printStream1.print('4');
        printStream1.println("Germany");
        java.io.PrintStream printStream93 = printStream1.append((java.lang.CharSequence) "\ud504\ub791\uc2a4\uc5b4\ud504\ub791\uc2a4)");
        java.io.PrintStream printStream95 = new java.io.PrintStream((java.io.OutputStream) printStream93, false);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream93);
    }

    @Test
    public void test07638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07638");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println((double) (short) 100);
        byte[] byteArray17 = new byte[] { (byte) 1 };
        printStream6.write(byteArray17, 0, 1);
        printStream6.println(true);
        java.util.Locale locale23 = java.util.Locale.PRC;
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.lang.String str25 = locale23.getDisplayName(locale24);
        java.util.Locale locale28 = new java.util.Locale("ZXZ", "ko_KR");
        java.lang.String str29 = locale23.getDisplayName(locale28);
        java.lang.String str30 = locale23.getLanguage();
        java.util.Locale locale31 = locale23.stripExtensions();
        java.util.Locale locale32 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale32);
        java.lang.String str34 = locale32.toLanguageTag();
        java.lang.String str35 = locale32.getDisplayVariant();
        java.lang.String str36 = locale23.getDisplayCountry(locale32);
        java.util.Locale locale37 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str38 = locale37.getScript();
        java.util.Locale locale39 = java.util.Locale.KOREA;
        java.lang.String str40 = locale37.getDisplayLanguage(locale39);
        java.lang.String str41 = locale37.getDisplayLanguage();
        java.util.Set<java.lang.String> strSet42 = locale37.getUnicodeLocaleAttributes();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter46 = printWriter44.append('#');
        printWriter44.println((long) (short) 10);
        java.util.Locale locale49 = java.util.Locale.PRC;
        java.lang.String str50 = locale49.getDisplayVariant();
        java.lang.String[] strArray55 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray55, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray60 = mathException59.getSuppressed();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray55, (java.lang.Throwable) mathException59);
        java.lang.Throwable[] throwableArray62 = mathException59.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException63 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray62);
        java.io.PrintWriter printWriter64 = printWriter44.format(locale49, "", (java.lang.Object[]) throwableArray62);
        java.lang.String str65 = locale37.getDisplayCountry(locale49);
        java.lang.String str66 = locale23.getDisplayVariant(locale37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        double[][] doubleArray75 = rotation74.getMatrix();
        java.io.PrintStream printStream76 = printStream6.printf(locale23, "XYZ", (java.lang.Object[]) doubleArray75);
        java.io.PrintStream printStream78 = printStream76.append('4');
        printStream78.println(1);
        printStream78.flush();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1]");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Chinese (China)" + "'", str25, "Chinese (China)");
        org.junit.Assert.assertEquals(locale28.toString(), "zxz_KO_KR");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Chinese (China)" + "'", str29, "Chinese (China)");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "zh" + "'", str30, "zh");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ko-KR" + "'", str34, "ko-KR");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\uc911\uad6d" + "'", str36, "\uc911\uad6d");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str40, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str41, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\u53f0\u6e7e\u5730\u533a" + "'", str65, "\u53f0\u6e7e\u5730\u533a");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXZ" + "'", str69, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(printStream76);
        org.junit.Assert.assertNotNull(printStream78);
    }

    @Test
    public void test07639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07639");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.close();
        java.util.Locale locale14 = java.util.Locale.FRANCE;
        printWriter12.println((java.lang.Object) locale14);
        printWriter12.println((int) (byte) 10);
        printWriter12.println((long) (short) 10);
        printWriter12.print("DEU");
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (-1L), (double) (short) 10, (double) 'a');
        double double35 = rotation34.getAngle();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.applyInverseTo(rotation34);
        double[][] doubleArray37 = rotation34.getMatrix();
        java.io.PrintWriter printWriter38 = printWriter12.printf("\u97d3\u6587\u5357\u97d3)", (java.lang.Object[]) doubleArray37);
        printWriter38.println((float) 1);
        printWriter38.println((int) (byte) 0);
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr_FR");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2.3122509176395862d + "'", double35 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(printWriter38);
    }

    @Test
    public void test07640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07640");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.print((float) 100L);
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation11.applyInverseTo(rotation27);
        double[][] doubleArray30 = rotation11.getMatrix();
        java.io.PrintWriter printWriter31 = printWriter4.printf("zh", (java.lang.Object[]) doubleArray30);
        java.io.PrintWriter printWriter33 = printWriter4.append((java.lang.CharSequence) "\uc601\uad6d");
        printWriter33.print("Royaume-Uni");
        java.io.PrintStream printStream37 = new java.io.PrintStream("ko-KR");
        printStream37.close();
        java.util.Locale locale39 = java.util.Locale.UK;
        java.lang.String[] strArray41 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream42 = printStream37.format(locale39, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray41);
        printStream42.write(10);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.OutputStream) printStream42);
        printStream42.print((int) (short) 1);
        printStream42.println((double) 100L);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter((java.io.OutputStream) printStream42, false);
        printStream42.flush();
        java.io.PrintStream printStream54 = printStream42.append(' ');
        java.util.Locale locale55 = java.util.Locale.UK;
        java.lang.String str56 = locale55.getVariant();
        java.util.Locale locale58 = new java.util.Locale("org.apache.commons.math.MathException");
        java.lang.String str59 = locale58.getScript();
        java.lang.String str60 = locale55.getDisplayVariant(locale58);
        java.lang.String[] strArray65 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray65, (java.lang.Throwable) mathException67);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray70 = mathException69.getSuppressed();
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray65, (java.lang.Throwable) mathException69);
        java.lang.Throwable[] throwableArray72 = mathException69.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException73 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray72);
        java.io.PrintStream printStream74 = printStream42.format(locale55, "XYZ", (java.lang.Object[]) throwableArray72);
        printWriter33.print((java.lang.Object) throwableArray72);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(printStream42);
        org.junit.Assert.assertNotNull(printStream54);
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals(locale58.toString(), "org.apache.commons.math.mathexception");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(printStream74);
    }

    @Test
    public void test07641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07641");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation12.getQ3();
        double double16 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation12.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str24 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str29 = rotationOrder23.toString();
        java.lang.String str30 = rotationOrder23.toString();
        double[] doubleArray31 = rotation22.getAngles(rotationOrder23);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (-6163.014294720684d), 1.5699657548817936d, (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D45, (double) (byte) 100, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D42, vector3D47);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D52.negate();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D55.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusI;
        double double59 = vector3D58.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.add(52.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D(2.510959086225248d, vector3D49, 1.5064266830314104d, vector3D53, 100.0d, vector3D55);
        double double62 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D37.subtract(vector3D53);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXZ" + "'", str19, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXZ" + "'", str24, "ZXZ");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXZ" + "'", str29, "ZXZ");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ZXZ" + "'", str30, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.5707963267948966, 1.6704649792860589, -1.5707963267948966]");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.141592653589793d + "'", double59 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-1.0d) + "'", double62 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D63);
    }

    @Test
    public void test07642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07642");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.println("fr");
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray13 = mathException12.getSuppressed();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException12);
        java.lang.Throwable[] throwableArray15 = mathException12.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray15);
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException16.getSuppressed();
        java.io.PrintStream printStream18 = printStream1.format("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) throwableArray17);
        printStream1.println((-1.0f));
        java.io.PrintStream printStream22 = new java.io.PrintStream((java.io.OutputStream) printStream1, false);
        boolean boolean23 = printStream22.checkError();
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str26 = rotationOrder25.toString();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder25.getA3();
        java.lang.String str28 = rotationOrder25.toString();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (-3.0171984405909804E-8d), (-0.13768695521062307d), (double) (-1L));
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (-1.194520336698293d), (-0.02937648959434208d), (double) 'x');
        double[][] doubleArray37 = rotation36.getMatrix();
        java.io.PrintStream printStream38 = printStream22.format("\ub3c5\uc77c\uc5b4\u97d3\u6587,ko,KR)", (java.lang.Object[]) doubleArray37);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ZXY" + "'", str26, "ZXY");
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXY" + "'", str28, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(printStream38);
    }

    @Test
    public void test07643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07643");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D2, (-0.03051975118364517d));
        double double5 = rotation4.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test07644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07644");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        printStream6.print((double) (byte) 100);
        printStream6.println(false);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printWriter13.println();
        printWriter13.println(' ');
        printWriter13.print((int) (byte) -1);
        printWriter13.println(false);
        printWriter13.write((int) (byte) 1);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray27 = mathException26.getSuppressed();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Throwable) mathException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("Deutsch", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) mathException31);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("Englisch", (java.lang.Object[]) throwableArray27);
        java.io.PrintWriter printWriter35 = printWriter13.printf("\u65e5\u6587\u65e5\u672c)", (java.lang.Object[]) throwableArray27);
        printWriter35.close();
        java.util.Locale.Builder builder37 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder39 = builder37.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder40 = builder39.clearExtensions();
        java.util.Locale locale41 = builder40.build();
        java.lang.String str42 = locale41.getLanguage();
        java.util.Locale locale44 = java.util.Locale.forLanguageTag("Chinesisch");
        java.util.Set<java.lang.String> strSet45 = locale44.getUnicodeLocaleKeys();
        java.lang.String str46 = locale41.getDisplayScript(locale44);
        java.lang.String str47 = locale41.getDisplayName();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException52);
        java.lang.Object[] objArray54 = mathException52.getArguments();
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("deu", (java.lang.Throwable) mathException52);
        java.lang.Throwable[] throwableArray56 = mathException55.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation63.getAxis();
        double[][] doubleArray65 = rotation63.getMatrix();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray56, (java.lang.Throwable) mathException66);
        java.lang.String str68 = mathException66.getPattern();
        java.lang.Object[] objArray69 = mathException66.getArguments();
        java.lang.Throwable[] throwableArray70 = mathException66.getSuppressed();
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException66);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Throwable) mathException74);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException75);
        mathException71.addSuppressed((java.lang.Throwable) mathException75);
        java.lang.Throwable[] throwableArray78 = mathException71.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException79 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: und", (java.lang.Object[]) throwableArray78);
        java.io.PrintWriter printWriter80 = printWriter35.format(locale41, "China", (java.lang.Object[]) throwableArray78);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "French" + "'", str68, "French");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[[25407.0, 1040.0, 2000.0], [-1040.0, 5407.0, 10400.0], [2000.0, -10400.0, 5607.0]]");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertNotNull(printWriter80);
    }

    @Test
    public void test07645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07645");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("KOR");
        java.util.Locale locale2 = java.util.Locale.ENGLISH;
        boolean boolean3 = locale2.hasExtensions();
        java.io.PrintStream printStream6 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream6.format("", objArray79);
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale2, "KOR", objArray79);
        printWriter1.write("\u6cd5\u6587\u6cd5\u570b)");
        boolean boolean94 = printWriter1.checkError();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test07646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07646");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-6.797493410635224E-4d), 1.7607846147136124d, 0.09667091924386816d, 0.29881975027361524d, true);
    }

    @Test
    public void test07647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07647");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, 2.3122509176395862d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str10 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA1();
        java.lang.String str12 = rotationOrder9.toString();
        java.lang.String str13 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        double[] doubleArray19 = rotation17.getAngles(rotationOrder18);
        double[] doubleArray20 = rotation8.getAngles(rotationOrder18);
        java.lang.String str21 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder18.getA1();
        double double24 = vector3D23.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZY" + "'", str1, "XZY");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXZ" + "'", str10, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXZ" + "'", str12, "ZXZ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXZ" + "'", str13, "ZXZ");
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.7902180191116501, -0.5204312332296097, 1.8449601148260304]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[2.3122509176395862, 0.0, -0.0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "XYZ" + "'", str21, "XYZ");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    }

    @Test
    public void test07648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07648");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        printStream85.println(false);
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        printStream85.print(false);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07649");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.print((float) 100L);
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation11.applyInverseTo(rotation27);
        double[][] doubleArray30 = rotation11.getMatrix();
        java.io.PrintWriter printWriter31 = printWriter4.printf("zh", (java.lang.Object[]) doubleArray30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double39 = rotation38.getQ1();
        double double40 = rotation38.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.subtract((double) 10L, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyInverseTo(vector3D49);
        double[][] doubleArray52 = rotation38.getMatrix();
        java.io.PrintWriter printWriter53 = printWriter31.format("XZY", (java.lang.Object[]) doubleArray52);
        printWriter31.print((long) 100);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D57, (double) (byte) 100, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D62, (double) (byte) 100, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D59, vector3D64);
        double double67 = vector3D59.getAlpha();
        printWriter31.println((java.lang.Object) double67);
        boolean boolean69 = printWriter31.checkError();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 100.0d + "'", double39 == 100.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 52.0d + "'", double40 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test07650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07650");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.lang.String str47 = locale21.getDisplayScript();
        java.lang.String str48 = locale21.getScript();
        java.util.Locale.setDefault(locale21);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test07651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07651");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.println(0.0d);
        printWriter12.print((long) (byte) 10);
        printWriter12.println();
        printWriter12.print((int) (short) 0);
        printWriter12.println();
        printWriter12.println((int) ' ');
        printWriter12.write("\u53f0\u6e7e\u5730\u533a");
        java.io.PrintWriter printWriter26 = printWriter12.append((java.lang.CharSequence) "Franz\366sisch");
        java.io.PrintStream printStream29 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream31 = new java.io.PrintStream("ko-KR");
        printStream31.close();
        printStream31.println((double) '4');
        printStream31.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream31.format("zh", (java.lang.Object[]) doubleArray45);
        printStream29.println((java.lang.Object) doubleArray45);
        char[] charArray51 = new char[] { 'a', 'a', '4' };
        printStream29.println(charArray51);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.OutputStream) printStream29, false);
        printStream29.println(' ');
        java.io.PrintStream printStream59 = new java.io.PrintStream("ko-KR");
        printStream59.close();
        java.util.Locale locale61 = java.util.Locale.UK;
        java.lang.String[] strArray63 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream64 = printStream59.format(locale61, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray63);
        printStream64.write(10);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter((java.io.OutputStream) printStream64);
        byte[] byteArray69 = new byte[] { (byte) -1 };
        printStream64.write(byteArray69);
        printStream64.close();
        printStream64.println(true);
        printStream64.print(true);
        printStream64.println();
        java.io.PrintStream printStream78 = printStream64.append('u');
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.OutputStream) printStream78);
        java.lang.String[] strArray83 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray83);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException85 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) strArray83);
        java.lang.Throwable[] throwableArray86 = notARotationMatrixException85.getSuppressed();
        java.io.PrintWriter printWriter87 = printWriter79.format("Canad\340", (java.lang.Object[]) throwableArray86);
        java.io.PrintStream printStream88 = printStream29.printf("\ub3c5\uc77c\uc5b4\ub3c5\uc77c)", (java.lang.Object[]) throwableArray86);
        java.io.PrintWriter printWriter89 = printWriter26.printf("\uc601\uad6d", (java.lang.Object[]) throwableArray86);
        // The following exception was thrown during execution in test generation
        try {
            printWriter89.write("Cor\351e du Sud", (int) (short) 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 45");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a, a, 4]");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(printStream64);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[-1]");
        org.junit.Assert.assertNotNull(printStream78);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(printWriter87);
        org.junit.Assert.assertNotNull(printStream88);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test07652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07652");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray16 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D18, (double) (byte) 100, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D23, (double) (byte) 100, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D20, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation15.applyInverseTo(vector3D20);
        double double29 = rotation15.getQ0();
        double double30 = rotation15.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation15.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D6.negate();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
    }

    @Test
    public void test07653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07653");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation13.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder15.getA1();
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D14.add(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D20.add((double) (-1.0f), vector3D27);
        double double29 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D(2.3122509176395862d, vector3D6, (double) 0.0f, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D6.normalize();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D31, 0.4028887144651276d);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double40 = rotation39.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation39.applyTo(rotation46);
        double double49 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation46.revert();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation46.revert();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.revert();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation33.applyInverseTo(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 52.0d + "'", double40 == 52.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
    }

    @Test
    public void test07654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07654");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((-0.009438163164864176d), 100.02049971110628d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) 1L, (double) '4', (double) 1.0f);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.normalize();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ1();
        double double21 = rotation19.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D23, (double) (byte) 100, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.subtract((double) 10L, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D32.negate();
        double double34 = vector3D33.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.subtract((double) 10L, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D55, (double) (byte) 100, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D52, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D46.subtract((double) 0, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D62, (double) (byte) 100, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D59, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D66.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str71 = rotationOrder70.toString();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D(10.0d, vector3D66, (-1.581752731678261d), vector3D72);
        double double74 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D36, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((-3.253905889552808E7d), vector3D12, (double) (byte) -1, vector3D33, 0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(35.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(0.07180241366097878d, vector3D4, 32.0d, vector3D76);
        double double78 = vector3D4.getDelta();
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 100.0d + "'", double20 == 100.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 11770.079614583028d + "'", double34 == 11770.079614583028d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "XZY" + "'", str71, "XZY");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test07655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07655");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 'a', 0.26237485370392877d, (-1.0d), 0.0d, false);
        double double6 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.getAxis();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(1.912983406767073d, 100.02049971110628d, 1.3964058484385629E-10d, (-0.915248973644132d), false);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation21.applyInverseTo(rotation27);
        double double30 = rotation21.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation21.getAxis();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray38 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D45, (double) (byte) 100, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D42, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation37.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation37.getAxis();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation37.revert();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation52.getAxis();
        double double54 = rotation52.getQ2();
        double double55 = rotation52.getQ1();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation21.applyInverseTo(rotation52);
        double double57 = rotation52.getQ0();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation5.applyInverseTo(rotation52);
        double double59 = rotation52.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder60.getA2();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, 0.4028887144651276d, 0.09966865249116202d, (-1.63942416E8d));
        java.lang.String str69 = rotationOrder60.toString();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray70 = rotation52.getAngles(rotationOrder60);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 100.0d + "'", double30 == 100.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 100.0d + "'", double55 == 100.0d);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-52.0d) + "'", double57 == (-52.0d));
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 100.0d + "'", double59 == 100.0d);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZYZ" + "'", str69, "ZYZ");
    }

    @Test
    public void test07656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07656");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(3.068116008146203d, (-1040.0d), (-2547.991732970719d), 935.7438253562556d, true);
    }

    @Test
    public void test07657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07657");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream1.println((long) 10);
        java.io.PrintStream printStream10 = printStream1.append('x');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.OutputStream) printStream10, false);
        printWriter12.println();
        java.io.PrintWriter printWriter15 = printWriter12.append('4');
        printWriter12.print(100);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray24 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D28, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation23.applyInverseTo(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation23.getAxis();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation23.revert();
        double double39 = rotation38.getQ1();
        printWriter12.println((java.lang.Object) rotation38);
        java.io.PrintStream printStream42 = new java.io.PrintStream("Francia");
        printStream42.flush();
        boolean boolean44 = printStream42.checkError();
        java.io.PrintStream printStream46 = printStream42.append('#');
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter((java.io.OutputStream) printStream46, false);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale51 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str52 = locale51.getScript();
        java.util.Locale locale53 = java.util.Locale.KOREA;
        java.lang.String str54 = locale51.getDisplayLanguage(locale53);
        java.lang.String[] strArray57 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray57, (java.lang.Throwable) mathException59);
        java.io.PrintWriter printWriter61 = printWriter50.format(locale53, "YZY", (java.lang.Object[]) strArray57);
        printWriter61.println(0.0d);
        printWriter61.print((long) (byte) 10);
        printWriter61.println();
        java.io.PrintStream printStream68 = new java.io.PrintStream("ko-KR");
        printStream68.close();
        java.util.Locale locale70 = java.util.Locale.UK;
        java.lang.String[] strArray72 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream73 = printStream68.format(locale70, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray72);
        printStream73.write(10);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter((java.io.OutputStream) printStream73);
        printStream73.print((int) (short) 1);
        java.io.PrintStream printStream80 = new java.io.PrintStream("ko-KR");
        printStream80.println("fr");
        printStream73.print((java.lang.Object) "fr");
        char[] charArray87 = new char[] { '#', '4', 'a' };
        printStream73.print(charArray87);
        printWriter61.write(charArray87);
        printWriter48.println(charArray87);
        // The following exception was thrown during execution in test generation
        try {
            printWriter12.write(charArray87, (int) (byte) 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream10);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 100.0d + "'", double39 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str54, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(printStream73);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, 4, a]");
    }

    @Test
    public void test07658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07658");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        double[] doubleArray10 = rotation8.getAngles(rotationOrder9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder9.getA2();
        java.lang.String str13 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (-0.09950371902099892d), 0.5309649148733835d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D19.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D14.add((-0.28722229304566843d), vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, 0.995037190209989d, (double) 0.0f, 0.995037190209989d);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, 3.1415782498482008d, (double) '#', 1.3964058484385629E-10d);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation34.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D20, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D36.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA2();
        java.lang.String str41 = rotationOrder39.toString();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (-12.469000826984491d), (-0.6612892638247344d), 100.00645942428783d);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D47, (double) (byte) 100, vector3D49);
        double double51 = vector3D49.getDelta();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray58 = rotation57.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D60, (double) (byte) 100, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D65, (double) (byte) 100, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D62, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation57.applyInverseTo(vector3D62);
        double double71 = vector3D62.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D49, vector3D62);
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation45.applyInverseTo(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D37.subtract((-0.5850203481805564d), vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXZ" + "'", str3, "ZXZ");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXZ" + "'", str4, "ZXZ");
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.7902180191116501, -0.5204312332296097, 1.8449601148260304]");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "XYZ" + "'", str13, "XYZ");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "XZY" + "'", str41, "XZY");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
    }

    @Test
    public void test07659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07659");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation5.getQ0();
        double double16 = rotation5.getQ0();
        double[][] doubleArray17 = rotation5.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder18.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation5.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D(3.2539077042633276E7d, 0.33033571077024615d, (double) 0L);
        double double31 = vector3D30.getY();
        double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D26, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.orthogonal();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.33033571077024615d + "'", double31 == 0.33033571077024615d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-3.384063833821342E10d) + "'", double32 == (-3.384063833821342E10d));
        org.junit.Assert.assertNotNull(vector3D33);
    }

    @Test
    public void test07660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07660");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation5.getQ0();
        double double16 = rotation5.getQ0();
        double[][] doubleArray17 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double24 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation23.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation5.applyInverseTo(rotation23);
        double[][] doubleArray34 = rotation23.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray34, (-11094.094757084158d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 52.0d + "'", double24 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(doubleArray34);
    }

    @Test
    public void test07661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07661");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = java.util.Locale.GERMAN;
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale11 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str12 = locale11.getScript();
        java.util.Locale locale13 = java.util.Locale.KOREA;
        java.lang.String str14 = locale11.getDisplayLanguage(locale13);
        java.lang.String[] strArray17 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray17, (java.lang.Throwable) mathException19);
        java.io.PrintWriter printWriter21 = printWriter10.format(locale13, "YZY", (java.lang.Object[]) strArray17);
        java.io.PrintWriter printWriter22 = printWriter6.printf(locale7, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray17);
        java.io.PrintWriter printWriter26 = null; // flaky: printWriter6.append((java.lang.CharSequence) "\u97d3\u6587)", 0, (int) (short) 10);
        java.io.PrintStream printStream29 = new java.io.PrintStream("ko-KR");
        printStream29.print((float) 100L);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.OutputStream) printStream29);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double40 = rotation39.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation39.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double56 = rotation55.getQ0();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation39.applyInverseTo(rotation55);
        double[][] doubleArray58 = rotation39.getMatrix();
        java.io.PrintWriter printWriter59 = printWriter32.printf("zh", (java.lang.Object[]) doubleArray58);
        java.io.PrintWriter printWriter60 = printWriter6.format("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) doubleArray58);
        printWriter6.println('u');
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "de");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str14, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter22);
// flaky:         org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 52.0d + "'", double40 == 52.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 52.0d + "'", double56 == 52.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(printWriter60);
    }

    @Test
    public void test07662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07662");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D16);
        double[][] doubleArray19 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double27 = rotation26.getQ0();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double34 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation26.applyTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation26.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation42 = rotation36.applyTo(rotation41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation5.applyTo(vector3D44);
        double[][] doubleArray46 = rotation5.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA3();
        double double49 = vector3D48.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation5.applyTo(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.scalarMultiply(0.4232415250820731d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
    }

    @Test
    public void test07663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07663");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D12, (double) (byte) 100, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D19, (double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D25, (double) (byte) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D30, (double) (byte) 100, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D27, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D14, (double) (byte) 1, vector3D22, (double) (short) 100, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.negate();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D32.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation47.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder49.getA1();
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D48.add(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.add((double) (-1.0f), vector3D61);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((-0.0d), 1.4711276743037345d, 128040.0d, 0.4028887144651276d, false);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation70.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D54.subtract((-8.950356005490573E7d), vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(1.4922398570367257d, vector3D39, (-0.9093956197081616d), vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D(0.8806429469916819d, (-0.995037190209989d));
        double double79 = vector3D78.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D39.add(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
    }

    @Test
    public void test07664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07664");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println((double) (short) 100);
        byte[] byteArray17 = new byte[] { (byte) 1 };
        printStream6.write(byteArray17, 0, 1);
        printStream6.println(true);
        java.util.Locale locale23 = java.util.Locale.PRC;
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.lang.String str25 = locale23.getDisplayName(locale24);
        java.util.Locale locale28 = new java.util.Locale("ZXZ", "ko_KR");
        java.lang.String str29 = locale23.getDisplayName(locale28);
        java.lang.String str30 = locale23.getLanguage();
        java.util.Locale locale31 = locale23.stripExtensions();
        java.util.Locale locale32 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale32);
        java.lang.String str34 = locale32.toLanguageTag();
        java.lang.String str35 = locale32.getDisplayVariant();
        java.lang.String str36 = locale23.getDisplayCountry(locale32);
        java.util.Locale locale37 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str38 = locale37.getScript();
        java.util.Locale locale39 = java.util.Locale.KOREA;
        java.lang.String str40 = locale37.getDisplayLanguage(locale39);
        java.lang.String str41 = locale37.getDisplayLanguage();
        java.util.Set<java.lang.String> strSet42 = locale37.getUnicodeLocaleAttributes();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter46 = printWriter44.append('#');
        printWriter44.println((long) (short) 10);
        java.util.Locale locale49 = java.util.Locale.PRC;
        java.lang.String str50 = locale49.getDisplayVariant();
        java.lang.String[] strArray55 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray55, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray60 = mathException59.getSuppressed();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray55, (java.lang.Throwable) mathException59);
        java.lang.Throwable[] throwableArray62 = mathException59.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException63 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray62);
        java.io.PrintWriter printWriter64 = printWriter44.format(locale49, "", (java.lang.Object[]) throwableArray62);
        java.lang.String str65 = locale37.getDisplayCountry(locale49);
        java.lang.String str66 = locale23.getDisplayVariant(locale37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        double[][] doubleArray75 = rotation74.getMatrix();
        java.io.PrintStream printStream76 = printStream6.printf(locale23, "XYZ", (java.lang.Object[]) doubleArray75);
        java.io.PrintStream printStream78 = printStream76.append('4');
        java.io.PrintStream printStream80 = printStream78.append((java.lang.CharSequence) "\u65e5\u672c");
        java.io.PrintWriter printWriter81 = new java.io.PrintWriter((java.io.OutputStream) printStream78);
        printStream78.println();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1]");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Chinese (China)" + "'", str25, "Chinese (China)");
        org.junit.Assert.assertEquals(locale28.toString(), "zxz_KO_KR");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Chinese (China)" + "'", str29, "Chinese (China)");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "zh" + "'", str30, "zh");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ko-KR" + "'", str34, "ko-KR");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\uc911\uad6d" + "'", str36, "\uc911\uad6d");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str40, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str41, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\u53f0\u6e7e\u5730\u533a" + "'", str65, "\u53f0\u6e7e\u5730\u533a");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXZ" + "'", str69, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(printStream76);
        org.junit.Assert.assertNotNull(printStream78);
        org.junit.Assert.assertNotNull(printStream80);
    }

    @Test
    public void test07665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07665");
        java.util.Locale.Builder builder0 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder2 = builder0.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale3 = builder0.build();
        java.util.Locale.Builder builder5 = builder0.setRegion("ja");
        java.util.Locale locale6 = java.util.Locale.FRANCE;
        java.lang.String str7 = locale6.getDisplayCountry();
        java.lang.String str8 = locale6.toLanguageTag();
        java.util.Locale.Builder builder9 = builder0.setLocale(locale6);
        java.util.Locale.Builder builder10 = builder9.clear();
        java.util.Locale.Builder builder11 = builder10.clear();
        java.util.Locale locale12 = builder11.build();
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter16 = printWriter14.append('#');
        java.lang.Object[] objArray18 = null;
        java.io.PrintWriter printWriter19 = printWriter16.format("fran\347ais", objArray18);
        printWriter19.print(true);
        java.util.Locale.Builder builder22 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder24 = builder22.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder25 = builder24.clearExtensions();
        java.util.Locale locale26 = builder25.build();
        java.util.Set<java.lang.Character> charSet27 = locale26.getExtensionKeys();
        java.util.Locale locale28 = locale26.stripExtensions();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation36.getAxis();
        double[][] doubleArray38 = rotation36.getMatrix();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray38);
        java.io.PrintWriter printWriter40 = printWriter19.printf(locale26, "org.apache.commons.math.MathException: YZY", (java.lang.Object[]) doubleArray38);
        java.lang.String str41 = locale26.getVariant();
        java.util.Set<java.lang.String> strSet42 = locale26.getUnicodeLocaleKeys();
        java.util.Locale.Builder builder43 = builder11.setLocale(locale26);
        java.util.Locale.Builder builder44 = builder43.clearExtensions();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "fr_FR");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\ud504\ub791\uc2a4" + "'", str7, "\ud504\ub791\uc2a4");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "fr-FR" + "'", str8, "fr-FR");
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "");
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "");
        org.junit.Assert.assertNotNull(charSet27);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test07666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07666");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        byte[] byteArray91 = new byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 10 };
        printStream1.write(byteArray91);
        java.io.PrintStream printStream94 = printStream1.append(' ');
        java.io.PrintWriter printWriter96 = new java.io.PrintWriter((java.io.OutputStream) printStream1, true);
        boolean boolean97 = printStream1.checkError();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 100, -1, 10, 10]");
        org.junit.Assert.assertNotNull(printStream94);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test07667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07667");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D11, (double) (byte) 100, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D16, (double) (byte) 100, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D13, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation8.applyInverseTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D21, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D1.subtract((double) 100, vector3D23);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation30.getAxis();
        double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D23, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D31.negate();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D41, (double) (byte) 100, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D38, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D48, (double) (byte) 100, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D38, (double) 0.0f, vector3D50);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D60, (double) (byte) 100, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation58.applyTo(vector3D60);
        double double65 = vector3D60.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D50.add(vector3D60);
        double double67 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D33, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D66.scalarMultiply(0.7522431036695408d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-0.0d) + "'", double32 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
    }

    @Test
    public void test07668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07668");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        byte[] byteArray91 = new byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 10 };
        printStream1.write(byteArray91);
        boolean boolean93 = printStream1.checkError();
        java.io.PrintStream printStream95 = printStream1.append('u');
        java.io.PrintWriter printWriter97 = new java.io.PrintWriter((java.io.OutputStream) printStream95, true);
        printWriter97.println();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 100, -1, 10, 10]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(printStream95);
    }

    @Test
    public void test07669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07669");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        boolean boolean86 = printStream1.checkError();
        java.io.PrintStream printStream88 = printStream1.append((java.lang.CharSequence) "de-de");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(printStream88);
    }

    @Test
    public void test07670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07670");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        double[][] doubleArray5 = rotation4.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(doubleArray5);
    }

    @Test
    public void test07671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07671");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.995037190209989d), 76.58711610605957d, (double) (short) 100);
        double double12 = rotation11.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.12878886736526227d + "'", double12 == 0.12878886736526227d);
    }

    @Test
    public void test07672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07672");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, (double) '#', (double) 0L, (double) (short) 100, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation12.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation12.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation28 = rotation22.applyTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation22.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray39 = rotation38.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D41, (double) (byte) 100, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D46, (double) (byte) 100, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D43, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation38.applyInverseTo(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D31.subtract((double) 100, vector3D53);
        double double55 = org.apache.commons.math.geometry.Vector3D.angle(vector3D29, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D31, (-1.569740199951139d));
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation5.applyTo(vector3D31);
        double[][] doubleArray59 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.4711276743037345d + "'", double55 == 1.4711276743037345d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray59);
    }

    @Test
    public void test07673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07673");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        double double21 = rotation20.getQ1();
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter25 = printWriter23.append('#');
        java.lang.Object[] objArray27 = null;
        java.io.PrintWriter printWriter28 = printWriter25.format("fran\347ais", objArray27);
        java.util.Locale locale29 = null;
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray32 = mathException31.getSuppressed();
        java.io.PrintWriter printWriter33 = printWriter25.format(locale29, "zxz", (java.lang.Object[]) throwableArray32);
        char[] charArray37 = new char[] { 'a', ' ', '#' };
        printWriter33.println(charArray37);
        java.util.Locale locale39 = java.util.Locale.FRENCH;
        java.util.Locale locale40 = java.util.Locale.FRENCH;
        java.util.Locale locale41 = java.util.Locale.TAIWAN;
        java.lang.String str42 = locale40.getDisplayScript(locale41);
        java.lang.String str43 = locale39.getDisplayLanguage(locale40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray55 = rotation54.getMatrix();
        java.io.PrintWriter printWriter56 = printWriter33.printf(locale39, "english", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(doubleArray55, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(doubleArray55, (double) (byte) 0);
        double double61 = rotation60.getQ2();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation20.applyTo(rotation60);
        double[][] doubleArray63 = rotation60.getMatrix();
        double double64 = rotation60.getQ1();
        double double65 = rotation60.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation60.getAxis();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "fr");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "fr");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "fran\347ais" + "'", str43, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.2623748537039287d + "'", double64 == 0.2623748537039287d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
    }

    @Test
    public void test07674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07674");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        printWriter1.println((long) (short) 10);
        java.util.Locale locale6 = java.util.Locale.PRC;
        java.lang.String str7 = locale6.getDisplayVariant();
        java.lang.String[] strArray12 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray19 = mathException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray19);
        java.io.PrintWriter printWriter21 = printWriter1.format(locale6, "", (java.lang.Object[]) throwableArray19);
        printWriter1.println();
        printWriter1.println(true);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale28 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str29 = locale28.getScript();
        java.util.Locale locale30 = java.util.Locale.KOREA;
        java.lang.String str31 = locale28.getDisplayLanguage(locale30);
        java.lang.String[] strArray34 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray34, (java.lang.Throwable) mathException36);
        java.io.PrintWriter printWriter38 = printWriter27.format(locale30, "YZY", (java.lang.Object[]) strArray34);
        java.lang.String[] strArray41 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray41);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) strArray41);
        printWriter38.print((java.lang.Object) notARotationMatrixException43);
        java.lang.Object[] objArray45 = notARotationMatrixException43.getArguments();
        java.io.PrintWriter printWriter46 = printWriter1.printf("und", objArray45);
        printWriter1.print((double) 'x');
        printWriter1.println((int) (byte) 0);
        printWriter1.print((-1L));
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException55);
        java.lang.String str57 = mathException55.getPattern();
        java.lang.Object[] objArray58 = mathException55.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException59 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", objArray58);
        java.io.PrintWriter printWriter60 = printWriter1.format("\u97e9\u56fd", objArray58);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double69 = rotation68.getQ3();
        double[][] doubleArray70 = rotation68.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException71 = new org.apache.commons.math.geometry.NotARotationMatrixException("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) doubleArray70);
        java.io.PrintWriter printWriter72 = printWriter1.format("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) doubleArray70);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str31, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[aa, ab, ae, af, ak, am, an, ar, as, av, ay, az, ba, be, bg, bh, bi, bm, bn, bo, br, bs, ca, ce, ch, co, cr, cs, cu, cv, cy, da, de, dv, dz, ee, el, en, eo, es, et, eu, fa, ff, fi, fj, fo, fr, fy, ga, gd, gl, gn, gu, gv, ha, he, hi, ho, hr, ht, hu, hy, hz, ia, id, ie, ig, ii, ik, in, io, is, it, iu, iw, ja, ji, jv, ka, kg, ki, kj, kk, kl, km, kn, ko, kr, ks, ku, kv, kw, ky, la, lb, lg, li, ln, lo, lt, lu, lv, mg, mh, mi, mk, ml, mn, mo, mr, ms, mt, my, na, nb, nd, ne, ng, nl, nn, no, nr, nv, ny, oc, oj, om, or, os, pa, pi, pl, ps, pt, qu, rm, rn, ro, ru, rw, sa, sc, sd, se, sg, si, sk, sl, sm, sn, so, sq, sr, ss, st, su, sv, sw, ta, te, tg, th, ti, tk, tl, tn, to, tr, ts, tt, tw, ty, ug, uk, ur, uz, ve, vi, vo, wa, wo, xh, yi, yo, za, zh, zu]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[aa, ab, ae, af, ak, am, an, ar, as, av, ay, az, ba, be, bg, bh, bi, bm, bn, bo, br, bs, ca, ce, ch, co, cr, cs, cu, cv, cy, da, de, dv, dz, ee, el, en, eo, es, et, eu, fa, ff, fi, fj, fo, fr, fy, ga, gd, gl, gn, gu, gv, ha, he, hi, ho, hr, ht, hu, hy, hz, ia, id, ie, ig, ii, ik, in, io, is, it, iu, iw, ja, ji, jv, ka, kg, ki, kj, kk, kl, km, kn, ko, kr, ks, ku, kv, kw, ky, la, lb, lg, li, ln, lo, lt, lu, lv, mg, mh, mi, mk, ml, mn, mo, mr, ms, mt, my, na, nb, nd, ne, ng, nl, nn, no, nr, nv, ny, oc, oj, om, or, os, pa, pi, pl, ps, pt, qu, rm, rn, ro, ru, rw, sa, sc, sd, se, sg, si, sk, sl, sm, sn, so, sq, sr, ss, st, su, sv, sw, ta, te, tg, th, ti, tk, tl, tn, to, tr, ts, tt, tw, ty, ug, uk, ur, uz, ve, vi, vo, wa, wo, xh, yi, yo, za, zh, zu]");
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(printWriter72);
    }

    @Test
    public void test07675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07675");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        java.io.PrintStream printStream13 = new java.io.PrintStream("ko-KR");
        printStream13.println("fr");
        printStream6.print((java.lang.Object) "fr");
        java.io.PrintStream printStream18 = printStream6.append('u');
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation24.getAxis();
        double[][] doubleArray26 = rotation24.getMatrix();
        double double27 = rotation24.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder28.getA3();
        java.lang.String str35 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation24.getAxis();
        double double39 = rotation24.getQ1();
        printStream18.print((java.lang.Object) double39);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter((java.io.OutputStream) printStream18, true);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 100.0d + "'", double27 == 100.0d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "XZY" + "'", str35, "XZY");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 100.0d + "'", double39 == 100.0d);
    }

    @Test
    public void test07676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07676");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        double[][] doubleArray7 = rotation5.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, (-1.4070751110264845d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test07677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07677");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-2.141592653589793d), 0.5131281635700607d, (-0.707030505345974d));
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.30821743242059296d), (double) 'x', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZYZ" + "'", str3, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test07678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07678");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        byte[] byteArray91 = new byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 10 };
        printStream1.write(byteArray91);
        java.io.PrintStream printStream94 = printStream1.append('#');
        printStream1.write(100);
        java.io.PrintStream printStream97 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        java.io.PrintStream printStream99 = printStream1.append('u');
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 100, -1, 10, 10]");
        org.junit.Assert.assertNotNull(printStream94);
        org.junit.Assert.assertNotNull(printStream99);
    }

    @Test
    public void test07679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07679");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray16 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D18, (double) (byte) 100, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D23, (double) (byte) 100, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D20, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation15.applyInverseTo(vector3D20);
        double double29 = rotation15.getQ0();
        double double30 = rotation15.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation15.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D34);
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D37, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D37.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D43.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((-11094.094757084158d), (-0.9904757959510307d));
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D45.add((-6.797493410635224E-4d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.scalarMultiply(0.3403995840772179d);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D37.add(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D55.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusI;
        double double59 = vector3D58.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.add(52.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D62, (double) (byte) 100, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D62.subtract((double) 10L, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D73, (double) (byte) 100, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D78, (double) (byte) 100, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D75, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D69.subtract((double) 0, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D85, (double) (byte) 100, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D82, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D60.add(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D91 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D85);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 3.141592653589793d + "'", double59 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test07680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07680");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\uc911\uad6d\uc5b4");
        printStream1.print(93.57684707871968d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder5.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D12, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation16.getAxis();
        double[][] doubleArray18 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray18, 1.7607846147136124d);
        java.io.PrintStream printStream21 = printStream1.format("FRA", (java.lang.Object[]) doubleArray18);
        java.io.PrintStream printStream22 = new java.io.PrintStream((java.io.OutputStream) printStream21);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(printStream21);
    }

    @Test
    public void test07681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07681");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0.0f, (-3.141592653589793d), (double) (byte) 10, 24.291555113709315d, false);
        double double6 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
    }

    @Test
    public void test07682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07682");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 11983.257028037076d, 1.7607846147136124d, 100.00645942428783d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.0826847380006286d, 1.5905084122975552d, (-381.8802471205947d));
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(1.3964058484385629E-10d, (double) 100.0f, (-6163.014294720684d), (-17653.7669100508d), true);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        double double38 = rotation28.getQ0();
        double double39 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double46 = rotation45.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double53 = rotation52.getQ0();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation45.applyTo(rotation52);
        double double55 = rotation45.getQ0();
        double double56 = rotation45.getQ0();
        double[][] doubleArray57 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double64 = rotation63.getQ0();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double71 = rotation70.getQ0();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation63.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation45.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.scalarMultiply((double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation28.applyTo(vector3D74);
        double[][] doubleArray78 = rotation28.getMatrix();
        double double79 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation85.getAxis();
        double[][] doubleArray87 = rotation85.getMatrix();
        double double88 = rotation85.getQ2();
        double double89 = rotation85.getQ2();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation28.applyInverseTo(rotation85);
        org.apache.commons.math.geometry.Rotation rotation91 = rotation22.applyTo(rotation85);
        org.apache.commons.math.geometry.Rotation rotation92 = rotation15.applyInverseTo(rotation91);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 52.0d + "'", double39 == 52.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 52.0d + "'", double46 == 52.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 52.0d + "'", double53 == 52.0d);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 52.0d + "'", double55 == 52.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 52.0d + "'", double56 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 52.0d + "'", double64 == 52.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 52.0d + "'", double71 == 52.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 52.0d + "'", double79 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertNotNull(rotation92);
    }

    @Test
    public void test07683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07683");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((double) (byte) 100);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter10 = printWriter8.append('#');
        java.lang.Object[] objArray12 = null;
        java.io.PrintWriter printWriter13 = printWriter10.format("fran\347ais", objArray12);
        java.util.Locale locale14 = null;
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        java.io.PrintWriter printWriter18 = printWriter10.format(locale14, "zxz", (java.lang.Object[]) throwableArray17);
        char[] charArray22 = new char[] { 'a', ' ', '#' };
        printWriter18.println(charArray22);
        java.util.Locale locale24 = java.util.Locale.FRENCH;
        java.util.Locale locale25 = java.util.Locale.FRENCH;
        java.util.Locale locale26 = java.util.Locale.TAIWAN;
        java.lang.String str27 = locale25.getDisplayScript(locale26);
        java.lang.String str28 = locale24.getDisplayLanguage(locale25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray40 = rotation39.getMatrix();
        java.io.PrintWriter printWriter41 = printWriter18.printf(locale24, "english", (java.lang.Object[]) doubleArray40);
        printStream1.println((java.lang.Object) printWriter41);
        printStream1.println((-1.0f));
        printStream1.println(false);
        boolean boolean47 = printStream1.checkError();
        printStream1.write((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream52 = new java.io.PrintStream((java.io.OutputStream) printStream1, true, "\ud504\ub791\uc2a4");
            org.junit.Assert.fail("Expected exception of type java.io.UnsupportedEncodingException; message: ???????");
        } catch (java.io.UnsupportedEncodingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "fr");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "fr");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "fran\347ais" + "'", str28, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test07684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07684");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str3 = rotationOrder2.toString();
        java.lang.String str4 = rotationOrder2.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, vector3D5);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation13.applyTo(vector3D15);
        double double20 = vector3D15.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D15, (double) 10, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D15.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str26 = rotationOrder25.toString();
        java.lang.String str27 = rotationOrder25.toString();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D15.add(vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder30.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder30.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D15.add(vector3D33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str36 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA3();
        double double45 = org.apache.commons.math.geometry.Vector3D.angle(vector3D42, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D15.add(vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.add(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = null;
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((-0.0d), 1.4711276743037345d, 128040.0d, 0.4028887144651276d, false);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation60.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, 0.0d, 2.3122509176395862d, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D62.add(vector3D74);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(2.0918418036628577d, vector3D6, 0.6728281420951934d, vector3D52, 0.34042596363908495d, vector3D74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XZY" + "'", str3, "XZY");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "XZY" + "'", str4, "XZY");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "YZY" + "'", str26, "YZY");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "YZY" + "'", str27, "YZY");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZXZ" + "'", str36, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
    }

    @Test
    public void test07685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07685");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.0d, (double) (byte) 1, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder1.getA1();
        double double13 = vector3D12.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), vector3D12, (-1274162.0376961245d), vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyTo(rotation42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation35.applyInverseTo(vector3D45);
        double double47 = vector3D45.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str49 = rotationOrder48.toString();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D50.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D45.add(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double59 = rotation58.getQ1();
        double double60 = rotation58.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D62, (double) (byte) 100, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D62.subtract((double) 10L, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation58.applyInverseTo(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D71.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D52.add(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D29.add(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D26.add((double) 100L, vector3D52);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D85, (double) (byte) 100, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation83.applyTo(vector3D85);
        double double90 = vector3D85.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D92 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D85, (double) 10, vector3D92);
        org.apache.commons.math.geometry.RotationOrder rotationOrder94 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotationOrder94.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotationOrder94.getA3();
        double double97 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D85, vector3D96);
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D52.subtract(0.33033571077024615d, vector3D96);
        double double99 = org.apache.commons.math.geometry.Vector3D.angle(vector3D22, vector3D96);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 52.0d + "'", double43 == 52.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ZXZ" + "'", str49, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 100.0d + "'", double59 == 100.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(rotationOrder94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 1.5707963267948966d + "'", double99 == 1.5707963267948966d);
    }

    @Test
    public void test07686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07686");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation12.getQ3();
        double double16 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation12.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray28 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation12.applyTo(rotation27);
        double double30 = rotation27.getQ2();
        double double31 = rotation27.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D35, (double) (byte) 100, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D37, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D47, (double) (byte) 100, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D53, (double) (byte) 100, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D58, (double) (byte) 100, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D42, (double) (byte) 1, vector3D50, (double) (short) 100, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D67, (double) (byte) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D72, (double) (byte) 100, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D69, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D79, (double) (byte) 100, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D69, (double) 0.0f, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D42.subtract((double) 10L, vector3D81);
        double double85 = vector3D81.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation27.applyInverseTo(vector3D81);
        double double87 = rotation27.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder88 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(rotationOrder88, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotationOrder88.getA1();
        double[] doubleArray94 = rotation27.getAngles(rotationOrder88);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotationOrder88.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotationOrder88.getA3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.26237485370392877d + "'", double87 == 0.26237485370392877d);
        org.junit.Assert.assertNotNull(rotationOrder88);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[0.0, -0.0, -0.5309649148733835]");
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
    }

    @Test
    public void test07687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07687");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D12, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation7.applyInverseTo(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation7.revert();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation7.getAxis();
        double[][] doubleArray24 = rotation7.getMatrix();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("japonais", (java.lang.Object[]) doubleArray24);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException26 = new org.apache.commons.math.geometry.NotARotationMatrixException("south korea", (java.lang.Object[]) doubleArray24);
        java.lang.Object[] objArray27 = notARotationMatrixException26.getArguments();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[[25407.0, 1040.0, 2000.0], [-1040.0, 5407.0, 10400.0], [2000.0, -10400.0, 5607.0]]");
    }

    @Test
    public void test07688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07688");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.30821743242059296d), (-45.50528353764515d), 1.912983406767073d, 52.0d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation27 = rotation21.applyTo(rotation26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation21.getAxis();
        double double29 = rotation21.getQ2();
        double double30 = rotation21.getQ3();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double37 = rotation36.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation36.applyTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation36.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation46.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation21.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double68 = rotation67.getQ0();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation60.applyTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation60.revert();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double77 = rotation76.getQ0();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation60.applyInverseTo(rotation76);
        double double79 = rotation78.getQ1();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation21.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation5.applyTo(rotation80);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation88.getAxis();
        double[][] doubleArray90 = rotation88.getMatrix();
        double double91 = rotation88.getQ1();
        org.apache.commons.math.geometry.Rotation rotation92 = rotation82.applyInverseTo(rotation88);
        double[][] doubleArray93 = rotation82.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(doubleArray93, (double) (short) 100);
        double double96 = rotation95.getQ2();
        org.apache.commons.math.geometry.Rotation rotation97 = rotation81.applyTo(rotation95);
        double double98 = rotation81.getQ1();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 52.0d + "'", double61 == 52.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 52.0d + "'", double68 == 52.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 52.0d + "'", double77 == 52.0d);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
        org.junit.Assert.assertNotNull(rotation92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 447546.48217208526d + "'", double98 == 447546.48217208526d);
    }

    @Test
    public void test07689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07689");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.write((int) ' ');
        printStream6.println("English");
        printStream6.println(2.510959086225248d);
        java.util.Locale locale55 = java.util.Locale.forLanguageTag("\uc911\uad6d\uc5b4");
        java.io.PrintStream printStream59 = new java.io.PrintStream("ko-KR");
        printStream59.close();
        java.util.Locale locale61 = java.util.Locale.UK;
        java.lang.String[] strArray63 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream64 = printStream59.format(locale61, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray63);
        printStream64.write(10);
        printStream64.print((double) (byte) 100);
        printStream64.print((float) 0);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException73);
        java.lang.Object[] objArray75 = mathException73.getArguments();
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("DEU", (java.lang.Throwable) mathException73);
        java.lang.Throwable[] throwableArray77 = mathException76.getSuppressed();
        java.io.PrintStream printStream78 = printStream64.format("zxz (KO_KR)", (java.lang.Object[]) throwableArray77);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("Deutsch", (java.lang.Object[]) throwableArray77);
        java.io.PrintStream printStream80 = printStream6.printf(locale55, "\u65e5\u672c", (java.lang.Object[]) throwableArray77);
        printStream80.close();
        boolean boolean82 = printStream80.checkError();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(printStream64);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(printStream78);
        org.junit.Assert.assertNotNull(printStream80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test07690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07690");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, (double) '#', (double) 0L, (double) (short) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        double double21 = rotation11.getQ0();
        double double22 = rotation11.getQ0();
        double[][] doubleArray23 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double30 = rotation29.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double37 = rotation36.getQ0();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation29.applyTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation11.applyInverseTo(rotation29);
        double[][] doubleArray40 = rotation29.getMatrix();
        double double41 = rotation29.getQ3();
        double double42 = rotation29.getQ1();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation5.applyTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation43.revert();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 100.0d + "'", double42 == 100.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
    }

    @Test
    public void test07691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07691");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation20.revert();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation20.getAxis();
        double[][] doubleArray23 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(10.0d, 2.3122509176395862d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation37.applyTo(rotation44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation37.applyInverseTo(vector3D47);
        double double49 = vector3D47.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str51 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D52.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D47.add(vector3D52);
        double double55 = vector3D54.getY();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D31, vector3D54);
        double double57 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D26, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation20.applyInverseTo(vector3D31);
        double double59 = vector3D58.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D58.negate();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D(1.0d, 100.00645942428783d);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D61.subtract(vector3D64);
        double double66 = vector3D65.getDelta();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXZ" + "'", str28, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZXZ" + "'", str51, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.7374869648140232d + "'", double57 == 0.7374869648140232d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 11983.257028037076d + "'", double59 == 11983.257028037076d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.4868480326421398d) + "'", double66 == (-0.4868480326421398d));
    }

    @Test
    public void test07692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07692");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.5707963363763575d), 4133.759842626198d, (-0.5063656411097589d), (-1.331616E7d), false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ1();
        double double13 = rotation11.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract((double) 10L, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation11.applyInverseTo(vector3D22);
        double double25 = rotation11.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray32 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D34, (double) (byte) 100, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D36, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation31.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation31.getAxis();
        double double46 = rotation31.getQ2();
        double double47 = rotation31.getQ2();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ1();
        double double55 = rotation53.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D57, (double) (byte) 100, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D57.subtract((double) 10L, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation53.applyInverseTo(vector3D64);
        double double67 = rotation53.getAngle();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation31.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double82 = rotation81.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder83, (double) (-1L), (double) (short) 10, (double) 'a');
        double double88 = rotation87.getAngle();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation81.applyInverseTo(rotation87);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation74.applyTo(rotation87);
        org.apache.commons.math.geometry.Rotation rotation91 = rotation90.revert();
        double double92 = rotation90.getQ0();
        double double93 = rotation90.getQ3();
        org.apache.commons.math.geometry.Rotation rotation94 = rotation90.revert();
        double double95 = rotation90.getQ3();
        org.apache.commons.math.geometry.Rotation rotation96 = rotation68.applyTo(rotation90);
        org.apache.commons.math.geometry.Rotation rotation97 = rotation96.revert();
        org.apache.commons.math.geometry.Rotation rotation98 = rotation11.applyInverseTo(rotation96);
        org.apache.commons.math.geometry.Rotation rotation99 = rotation5.applyTo(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 52.0d + "'", double55 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 10.0d + "'", double75 == 10.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 52.0d + "'", double82 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2.3122509176395862d + "'", double88 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 102.8131477408346d + "'", double92 == 102.8131477408346d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 24.291555113709315d + "'", double93 == 24.291555113709315d);
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 24.291555113709315d + "'", double95 == 24.291555113709315d);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertNotNull(rotation98);
        org.junit.Assert.assertNotNull(rotation99);
    }

    @Test
    public void test07693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07693");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder7.getA1();
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D6.add(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D17, (double) (byte) 100, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D22, (double) (byte) 100, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D19, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D29, (double) (byte) 100, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D19, (double) 0.0f, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D6.subtract(vector3D31);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D34, 0.329442370586082d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D34);
    }

    @Test
    public void test07694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07694");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        boolean boolean86 = printStream1.checkError();
        printStream1.print((long) (-1));
        java.io.PrintStream printStream90 = printStream1.append((java.lang.CharSequence) "Korean");
        java.io.PrintStream printStream92 = printStream90.append('#');
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream95 = new java.io.PrintStream((java.io.OutputStream) printStream92, false, "ORG.APACHE.COMMONS.MATH.MATHEXCEPTION: HI!");
            org.junit.Assert.fail("Expected exception of type java.io.UnsupportedEncodingException; message: ORG.APACHE.COMMONS.MATH.MATHEXCEPTION: HI!");
        } catch (java.io.UnsupportedEncodingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertNotNull(printStream92);
    }

    @Test
    public void test07695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07695");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        double[][] doubleArray8 = rotation6.getMatrix();
        double double9 = rotation6.getQ1();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation0.applyInverseTo(rotation6);
        double double11 = rotation0.getAngle();
        double double12 = rotation0.getAngle();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation19.applyTo(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.subtract(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D38, (double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation36.applyTo(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.subtract(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray53 = rotation52.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D55, (double) (byte) 100, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D60, (double) (byte) 100, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D57, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation52.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D65, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D45, vector3D67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str71 = rotationOrder70.toString();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA3();
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D75, (double) (byte) 100, vector3D77);
        double double79 = vector3D75.getY();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D72.subtract(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D28, (double) (short) 10, vector3D67, (-0.02937648959434208d), vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.negate();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D81, 0.6710053207609463d);
        double double85 = rotation84.getQ1();
        double[][] doubleArray86 = rotation84.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation0.applyTo(rotation84);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ZXZ" + "'", str71, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.3292438459648405d) + "'", double85 == (-0.3292438459648405d));
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(rotation87);
    }

    @Test
    public void test07696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07696");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (double) (byte) 1, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D(128040.0d, (-0.995037190209989d), (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation10.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D15, (-34365.38633275781d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA2();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) '#', 2.0790806738125385d, (-0.2868032122551722d));
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder18.getA1();
        double[] doubleArray27 = rotation17.getAngles(rotationOrder18);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, 1.873542278417901d, (-0.33616890417074025d), 21.530500547046188d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "YZY" + "'", str19, "YZY");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-2.571679393645854, 2.6458877924102975, 2.571740813324686]");
    }

    @Test
    public void test07697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07697");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray20 = mathException18.getArguments();
        java.io.PrintWriter printWriter21 = printWriter12.format("org.apache.commons.math.MathException: ZXZ", objArray20);
        printWriter21.println();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter26 = printWriter24.append('#');
        java.lang.Object[] objArray28 = null;
        java.io.PrintWriter printWriter29 = printWriter26.format("fran\347ais", objArray28);
        java.util.Locale locale30 = null;
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray33 = mathException32.getSuppressed();
        java.io.PrintWriter printWriter34 = printWriter26.format(locale30, "zxz", (java.lang.Object[]) throwableArray33);
        char[] charArray38 = new char[] { 'a', ' ', '#' };
        printWriter34.println(charArray38);
        printWriter21.write(charArray38);
        printWriter21.println('u');
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray51 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D53, (double) (byte) 100, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D58, (double) (byte) 100, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation50.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation50.getAxis();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation50.revert();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation50.getAxis();
        double[][] doubleArray67 = rotation50.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException68 = new org.apache.commons.math.geometry.NotARotationMatrixException("zho", (java.lang.Object[]) doubleArray67);
        java.lang.Throwable[] throwableArray69 = notARotationMatrixException68.getSuppressed();
        java.io.PrintWriter printWriter70 = printWriter21.format("org.apache.commons.math.geometry.NotARotationMatrixException: yzy (KO-KR)", (java.lang.Object[]) throwableArray69);
        printWriter70.print(' ');
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a,  , #]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(printWriter70);
    }

    @Test
    public void test07698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07698");
        java.io.PrintStream printStream1 = new java.io.PrintStream("und");
        java.io.PrintStream printStream3 = printStream1.append('a');
        printStream3.print(true);
        java.io.PrintStream printStream8 = new java.io.PrintStream("ko-KR");
        printStream8.close();
        java.util.Locale locale10 = java.util.Locale.UK;
        java.lang.String[] strArray12 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream13 = printStream8.format(locale10, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray12);
        printStream13.write(10);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter((java.io.OutputStream) printStream13);
        byte[] byteArray18 = new byte[] { (byte) -1 };
        printStream13.write(byteArray18);
        printStream13.close();
        printStream13.println(true);
        byte[] byteArray25 = new byte[] { (byte) -1, (byte) 0 };
        printStream13.write(byteArray25);
        boolean boolean27 = printStream13.checkError();
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter((java.io.OutputStream) printStream13, false);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException34.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException36 = new org.apache.commons.math.geometry.NotARotationMatrixException("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("zxz_KO_KR", (java.lang.Object[]) throwableArray35);
        java.io.PrintWriter printWriter38 = printWriter29.format("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray35);
        java.io.PrintStream printStream39 = printStream3.printf("zh-cn (ORG.APACHE.COMMONS.MATH.MATHEXCEPTION: HI!,UNITED KINGDOM)", (java.lang.Object[]) throwableArray35);
        printStream39.println((float) (short) -1);
        org.junit.Assert.assertNotNull(printStream3);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(printStream13);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printStream39);
    }

    @Test
    public void test07699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07699");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 11983.257028037076d, 1.7607846147136124d, 100.00645942428783d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D13.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test07700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07700");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.OutputStream) printStream85, true);
        printWriter91.write(0);
        printWriter91.print(10L);
        printWriter91.println((long) (byte) 0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07701");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("KOR");
        java.util.Locale locale2 = java.util.Locale.ENGLISH;
        boolean boolean3 = locale2.hasExtensions();
        java.io.PrintStream printStream6 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream6.format("", objArray79);
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale2, "KOR", objArray79);
        printWriter91.write((int) (byte) 10);
        printWriter91.print(10);
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test07702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07702");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        double double9 = vector3D5.getY();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D5);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D19, (double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation17.applyTo(vector3D19);
        double double24 = vector3D19.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D10.add((double) 0L, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D10.orthogonal();
        double double27 = vector3D10.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.5707963267948966d + "'", double27 == 1.5707963267948966d);
    }

    @Test
    public void test07703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07703");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ1();
        double double14 = rotation12.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D16, (double) (byte) 100, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract((double) 10L, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation12.applyInverseTo(vector3D23);
        double double26 = rotation12.getAngle();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation5.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation12.getAxis();
        double double30 = rotation12.getQ0();
        double double31 = rotation12.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation12.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertNotNull(rotation32);
    }

    @Test
    public void test07704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07704");
        java.util.Locale.LanguageRange languageRange2 = new java.util.Locale.LanguageRange("ZXZ", (double) 0L);
        java.lang.String str3 = languageRange2.getRange();
        double double4 = languageRange2.getWeight();
        double double5 = languageRange2.getWeight();
        java.lang.String str6 = languageRange2.getRange();
        java.lang.String str7 = languageRange2.getRange();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray14 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D16, (double) (byte) 100, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D18, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation13.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation13.getAxis();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation13.revert();
        double double29 = rotation13.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation50.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation50.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation44.applyInverseTo(rotation50);
        double[][] doubleArray62 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double69 = rotation68.getQ0();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double76 = rotation75.getQ0();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation68.applyTo(rotation75);
        double double78 = rotation75.getQ3();
        double double79 = rotation75.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation75.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray91 = rotation90.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation92 = rotation75.applyTo(rotation90);
        double double93 = rotation90.getQ2();
        org.apache.commons.math.geometry.Rotation rotation94 = rotation44.applyTo(rotation90);
        double double95 = rotation90.getAngle();
        org.apache.commons.math.geometry.Rotation rotation96 = rotation13.applyTo(rotation90);
        boolean boolean97 = languageRange2.equals((java.lang.Object) rotation90);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "zxz" + "'", str3, "zxz");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "zxz" + "'", str6, "zxz");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "zxz" + "'", str7, "zxz");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 52.0d + "'", double43 == 52.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 52.0d + "'", double58 == 52.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 52.0d + "'", double69 == 52.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 52.0d + "'", double76 == 52.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(rotation92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.5309649148733836d + "'", double95 == 0.5309649148733836d);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test07705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07705");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder4.getA1();
        java.lang.String str10 = rotationOrder4.toString();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) (byte) 0, (-1280400.0d), (-0.02937648959434208d));
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D24, (double) (byte) 100, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation22.applyTo(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation22.getAxis();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation22.revert();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D34, (double) (byte) 100, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D36, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D46, (double) (byte) 100, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D52, (double) (byte) 100, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D57, (double) (byte) 100, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D54, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D41, (double) (byte) 1, vector3D49, (double) (short) 100, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, vector3D49, (double) 0L, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D66.scalarMultiply((double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation22.applyInverseTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D16.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D16.scalarMultiply(0.5403023058681398d);
        double double74 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D3, vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YZY" + "'", str1, "YZY");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YZY" + "'", str2, "YZY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "XYZ" + "'", str10, "XYZ");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.5403023058681398d + "'", double74 == 0.5403023058681398d);
    }

    @Test
    public void test07706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07706");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation5.getAxis();
        double double13 = rotation5.getAngle();
        double double14 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation15.revert();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation15.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((-0.420609110205706d), 11095.094757084158d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract((-416.6682655750724d), vector3D21);
        double double23 = vector3D22.getNorm();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 417.06769837007187d + "'", double23 == 417.06769837007187d);
    }

    @Test
    public void test07707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07707");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.close();
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printWriter14.print(' ');
        printWriter14.write("chinesisch (vereinigtes k\366\uc601\uad6d,zh-TW)");
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter((java.io.Writer) printWriter14, true);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("ja");
        printWriter22.print(' ');
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter22);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter25, true);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale30 = java.util.Locale.KOREAN;
        java.lang.String str31 = locale30.getDisplayLanguage();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double39 = rotation38.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double46 = rotation45.getQ0();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation38.applyTo(rotation45);
        double double48 = rotation38.getQ0();
        double double49 = rotation38.getQ0();
        double[][] doubleArray50 = rotation38.getMatrix();
        java.io.PrintWriter printWriter51 = printWriter29.printf(locale30, "zh_CN", (java.lang.Object[]) doubleArray50);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale54 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str55 = locale54.getScript();
        java.util.Locale locale56 = java.util.Locale.KOREA;
        java.lang.String str57 = locale54.getDisplayLanguage(locale56);
        java.lang.String[] strArray60 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray60, (java.lang.Throwable) mathException62);
        java.io.PrintWriter printWriter64 = printWriter53.format(locale56, "YZY", (java.lang.Object[]) strArray60);
        printWriter64.println(0.0d);
        java.io.PrintStream printStream68 = new java.io.PrintStream("ko-KR");
        printStream68.close();
        java.util.Locale locale70 = java.util.Locale.UK;
        java.lang.String[] strArray72 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream73 = printStream68.format(locale70, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray72);
        printStream73.write(10);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter((java.io.OutputStream) printStream73);
        printStream73.print((int) (short) 1);
        java.io.PrintStream printStream80 = new java.io.PrintStream("ko-KR");
        printStream80.println("fr");
        printStream73.print((java.lang.Object) "fr");
        char[] charArray87 = new char[] { '#', '4', 'a' };
        printStream73.print(charArray87);
        printWriter64.write(charArray87);
        printWriter51.write(charArray87);
        printWriter27.print(charArray87);
        // The following exception was thrown during execution in test generation
        try {
            printWriter14.write(charArray87, (int) (byte) 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "ko");
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Koreanisch" + "'", str31, "Koreanisch");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 52.0d + "'", double39 == 52.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 52.0d + "'", double46 == 52.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str57, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(printStream73);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, 4, a]");
    }

    @Test
    public void test07708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07708");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        printStream90.print(' ');
        boolean boolean93 = printStream90.checkError();
        printStream90.println("");
        printStream90.println("japanese");
        printStream90.println('4');
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test07709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07709");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("de");
        printWriter1.print('x');
        java.io.PrintStream printStream5 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream7 = new java.io.PrintStream("ko-KR");
        printStream7.close();
        printStream7.println((double) '4');
        printStream7.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        double[][] doubleArray21 = rotation19.getMatrix();
        java.io.PrintStream printStream22 = printStream7.format("zh", (java.lang.Object[]) doubleArray21);
        printStream5.println((java.lang.Object) doubleArray21);
        char[] charArray27 = new char[] { 'a', 'a', '4' };
        printStream5.println(charArray27);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.OutputStream) printStream5, false);
        printWriter30.write(0);
        printWriter1.println((java.lang.Object) printWriter30);
        java.io.PrintWriter printWriter35 = printWriter30.append((java.lang.CharSequence) "United Kingdom");
        printWriter35.print(0L);
        java.util.Locale locale39 = new java.util.Locale("org.apache.commons.math.geometry.NotARotationMatrixException: zxz");
        printWriter35.print((java.lang.Object) locale39);
        java.lang.String str41 = locale39.getDisplayCountry();
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, a, 4]");
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertEquals(locale39.toString(), "org.apache.commons.math.geometry.notarotationmatrixexception: zxz");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test07710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07710");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D20, (double) (byte) 100, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D28, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D15, (double) (byte) 1, vector3D23, (double) (short) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D33);
        double double38 = vector3D33.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str41 = rotationOrder40.toString();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        java.lang.String str47 = rotationOrder40.toString();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D33.add((-52.0d), vector3D48);
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str53 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double65 = rotation64.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) (-1L), (double) (short) 10, (double) 'a');
        double double71 = rotation70.getAngle();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation64.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation64.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation73.applyTo(rotation79);
        double double81 = rotation73.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D(59.5713161054898d, (-0.009438163164864176d));
        double double88 = vector3D87.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D(3.140233154802971d, vector3D49, (-12804.0d), vector3D57, 0.0d, vector3D82, (-1.1063987533543037E7d), vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZYZ" + "'", str2, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ZXZ" + "'", str41, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ZXZ" + "'", str47, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZXZ" + "'", str53, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 52.0d + "'", double65 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2.3122509176395862d + "'", double71 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 100.0d + "'", double81 == 100.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-0.009438023041918516d) + "'", double88 == (-0.009438023041918516d));
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test07711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07711");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        boolean boolean10 = printStream6.checkError();
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.OutputStream) printStream6, false);
        printWriter12.print((float) (short) -1);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter((java.io.Writer) printWriter12, true);
        printWriter16.write(10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, 0.995037190209989d, (double) 0.0f, 0.995037190209989d);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) (-1), 1.7607846147136124d, (double) 100.0f);
        double double33 = vector3D32.getNorm();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double40 = rotation39.getQ1();
        double double41 = rotation39.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D43, (double) (byte) 100, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.subtract((double) 10L, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation39.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D52.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double60 = rotation59.getQ0();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double67 = rotation66.getQ0();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation59.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation59.revert();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation59.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D52.subtract(vector3D70);
        double double72 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D32, vector3D71);
        double double73 = vector3D71.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D28.subtract(vector3D71);
        double double75 = vector3D74.getY();
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(7.316495385752939E-4d, vector3D74);
        printWriter16.print((java.lang.Object) 7.316495385752939E-4d);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 100.02049971110628d + "'", double33 == 100.02049971110628d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 100.0d + "'", double40 == 100.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 52.0d + "'", double67 == 52.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 373547.3388035254d + "'", double72 == 373547.3388035254d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 11770.102600641243d + "'", double73 == 11770.102600641243d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 11095.094757084158d + "'", double75 == 11095.094757084158d);
    }

    @Test
    public void test07712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07712");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        double double22 = rotation20.getAngle();
        double double23 = rotation20.getQ0();
        double double24 = rotation20.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str26 = rotationOrder25.toString();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, 0.0d, 52.0d, 0.9649660284921133d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, 110.14009524181563d, (-5.3907441696578843E-11d), 74.59637898875364d);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder25.getA3();
        double[] doubleArray36 = rotation20.getAngles(rotationOrder25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str38 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str43 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder37.getA1();
        double[] doubleArray47 = rotation20.getAngles(rotationOrder37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str49 = rotationOrder48.toString();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D54, 2.3122509176395862d);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation20.applyInverseTo(vector3D54);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2.3122509176395862d + "'", double22 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.4028887144651276d + "'", double23 == 0.4028887144651276d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.8519466901357562d) + "'", double24 == (-0.8519466901357562d));
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ZXZ" + "'", str26, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-0.6564980782696592, 2.0413190668629926, -0.7254339765740545]");
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ZXZ" + "'", str38, "ZXZ");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ZXZ" + "'", str43, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-0.6564980782696592, 2.0413190668629926, -0.7254339765740545]");
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "XZY" + "'", str49, "XZY");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
    }

    @Test
    public void test07713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07713");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.3964058484385629E-10d, (-58.089953051217215d), (-0.9060168935766048d), 0.0d, true);
    }

    @Test
    public void test07714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07714");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.8775825618903728d, 0.34036798076772956d, 1.884114997657917d);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation9.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder11.getA1();
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.add(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, (-0.02937648959434208d));
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D3.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D3.normalize();
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test07715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07715");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.util.Locale locale4 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        double double21 = rotation18.getQ3();
        double[][] doubleArray22 = rotation18.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter3.printf(locale4, "XZY", (java.lang.Object[]) doubleArray22);
        printWriter23.print(true);
        java.io.PrintWriter printWriter27 = printWriter23.append((java.lang.CharSequence) "fra");
        printWriter23.print((int) ' ');
        java.lang.Object[] objArray31 = null;
        java.io.PrintWriter printWriter32 = printWriter23.printf("\u53f0\u7063", objArray31);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter32);
    }

    @Test
    public void test07716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07716");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.close();
        printStream1.println('a');
        printStream1.print(1L);
        printStream1.print((long) (short) 1);
        printStream1.println();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07717");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, 52.0d, 0.9649660284921133d);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 110.14009524181563d, (-5.3907441696578843E-11d), 74.59637898875364d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str13 = rotationOrder12.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder12.getA1();
        java.lang.String str16 = rotationOrder12.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "YZY" + "'", str13, "YZY");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "YZY" + "'", str16, "YZY");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
    }

    @Test
    public void test07718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07718");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray20 = mathException18.getArguments();
        java.io.PrintWriter printWriter21 = printWriter12.format("org.apache.commons.math.MathException: ZXZ", objArray20);
        java.lang.String[] strArray25 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray25, (java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray30 = mathException29.getSuppressed();
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray25, (java.lang.Throwable) mathException29);
        java.io.PrintWriter printWriter32 = printWriter21.printf("KOR", (java.lang.Object[]) strArray25);
        java.io.PrintWriter printWriter34 = printWriter21.append((java.lang.CharSequence) "deu");
        printWriter34.print(27.29993135674214d);
        printWriter34.print((-8.950356005490573E7d));
        java.util.Locale.Category category39 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category40 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale41 = java.util.Locale.ROOT;
        java.lang.String str42 = locale41.getDisplayLanguage();
        java.util.Locale.setDefault(category40, locale41);
        java.util.Locale.setDefault(category39, locale41);
        java.util.Locale locale45 = java.util.Locale.getDefault(category39);
        java.util.Locale locale46 = java.util.Locale.getDefault(category39);
        java.util.Locale locale47 = java.util.Locale.GERMAN;
        java.lang.String str48 = locale47.getDisplayLanguage();
        java.util.Locale locale49 = locale47.stripExtensions();
        java.lang.String str50 = locale46.getDisplayScript(locale47);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray58 = rotation57.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D60, (double) (byte) 100, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D65, (double) (byte) 100, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D62, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation57.applyInverseTo(vector3D62);
        double double71 = rotation57.getQ0();
        double double72 = rotation57.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation57.applyInverseTo(vector3D76);
        double[][] doubleArray78 = rotation57.getMatrix();
        java.io.PrintWriter printWriter79 = printWriter34.printf(locale47, "", (java.lang.Object[]) doubleArray78);
        java.lang.String str80 = locale47.toLanguageTag();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertTrue("'" + category39 + "' != '" + java.util.Locale.Category.FORMAT + "'", category39.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category40 + "' != '" + java.util.Locale.Category.FORMAT + "'", category40.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "de");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\u30c9\u30a4\u30c4\u8a9e" + "'", str48, "\u30c9\u30a4\u30c4\u8a9e");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 52.0d + "'", double71 == 52.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "de" + "'", str80, "de");
    }

    @Test
    public void test07719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07719");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation5.getQ0();
        double double16 = rotation5.getQ0();
        double[][] doubleArray17 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double24 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation23.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation23.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation39 = rotation33.applyTo(rotation38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation33.getAxis();
        double double41 = rotation33.getQ2();
        double double42 = rotation33.getQ1();
        double double43 = rotation33.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation33.getAxis();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation5.applyTo(rotation33);
        double double47 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA3();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder48.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation5.applyInverseTo(vector3D54);
        double[][] doubleArray56 = rotation5.getMatrix();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 52.0d + "'", double24 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 100.0d + "'", double42 == 100.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(doubleArray56);
    }

    @Test
    public void test07720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07720");
        java.util.Locale.Category category0 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category1 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale2 = java.util.Locale.ROOT;
        java.lang.String str3 = locale2.getDisplayLanguage();
        java.util.Locale.setDefault(category1, locale2);
        java.util.Locale locale5 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale5);
        java.util.Locale locale7 = java.util.Locale.FRENCH;
        java.util.Locale locale8 = java.util.Locale.TAIWAN;
        java.lang.String str9 = locale7.getDisplayScript(locale8);
        java.lang.String str10 = locale5.getDisplayLanguage(locale8);
        java.util.Locale.setDefault(category1, locale8);
        java.util.Locale locale12 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.lang.String str17 = locale12.getDisplayLanguage(locale15);
        java.lang.String str18 = locale12.getISO3Country();
        java.util.Locale.setDefault(category1, locale12);
        java.util.Locale locale20 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale20);
        java.util.Locale locale22 = java.util.Locale.FRENCH;
        java.util.Locale locale23 = java.util.Locale.TAIWAN;
        java.lang.String str24 = locale22.getDisplayScript(locale23);
        java.lang.String str25 = locale20.getDisplayLanguage(locale23);
        java.util.Locale locale26 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale26);
        java.lang.String str28 = locale26.toLanguageTag();
        java.lang.String str29 = locale20.getDisplayVariant(locale26);
        java.util.Locale.setDefault(category1, locale26);
        java.util.Locale locale31 = locale26.stripExtensions();
        java.util.Locale.setDefault(category0, locale31);
        java.util.Locale locale33 = java.util.Locale.CHINA;
        java.lang.String str34 = locale33.getDisplayScript();
        java.lang.String str35 = locale33.getDisplayCountry();
        java.lang.String str36 = locale31.getDisplayName(locale33);
        java.util.Set<java.lang.String> strSet37 = locale33.getUnicodeLocaleAttributes();
        java.util.Locale.Category category38 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category39 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale40 = java.util.Locale.ROOT;
        java.lang.String str41 = locale40.getDisplayLanguage();
        java.util.Locale.setDefault(category39, locale40);
        java.util.Locale.setDefault(category38, locale40);
        java.util.Locale locale44 = java.util.Locale.getDefault(category38);
        java.util.Locale locale45 = java.util.Locale.getDefault(category38);
        java.util.Locale locale46 = java.util.Locale.getDefault(category38);
        java.util.Locale locale47 = java.util.Locale.JAPAN;
        java.lang.String str48 = locale47.getDisplayVariant();
        java.lang.String str49 = locale47.getDisplayVariant();
        java.util.Locale.setDefault(locale47);
        java.util.Locale.setDefault(category38, locale47);
        java.lang.String str52 = locale47.getCountry();
        java.util.Locale locale53 = locale47.stripExtensions();
        java.util.Locale.setDefault(locale53);
        java.util.Locale locale55 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale55);
        java.util.Locale locale57 = locale55.stripExtensions();
        java.lang.String str58 = locale57.getDisplayCountry();
        java.lang.String str59 = locale53.getDisplayLanguage(locale57);
        java.util.Locale locale60 = locale57.stripExtensions();
        java.lang.String str61 = locale33.getDisplayName(locale57);
        java.util.Locale locale64 = new java.util.Locale("Chinesisch", "Vereinigtes K\366nigreich");
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter("_JA");
        java.util.Locale locale67 = java.util.Locale.FRANCE;
        java.lang.String str68 = locale67.getDisplayName();
        java.lang.String str69 = locale67.getCountry();
        java.lang.String str70 = locale67.getISO3Language();
        java.lang.String str71 = locale67.getVariant();
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter("KOR");
        printWriter74.println(' ');
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder78.getA1();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray88 = rotation87.getMatrix();
        java.io.PrintWriter printWriter89 = printWriter74.format("YZY", (java.lang.Object[]) doubleArray88);
        java.lang.String[] strArray91 = java.util.Locale.getISOCountries();
        java.io.PrintWriter printWriter92 = printWriter89.printf("\u97d3\u6587)", (java.lang.Object[]) strArray91);
        java.io.PrintWriter printWriter93 = printWriter66.format(locale67, "English", (java.lang.Object[]) strArray91);
        java.lang.String str94 = locale64.getDisplayCountry(locale67);
        java.lang.String str95 = locale67.getVariant();
        java.lang.String str96 = locale57.getDisplayCountry(locale67);
        org.junit.Assert.assertTrue("'" + category0 + "' != '" + java.util.Locale.Category.FORMAT + "'", category0.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category1 + "' != '" + java.util.Locale.Category.FORMAT + "'", category1.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "fr");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\u97d3\u6587" + "'", str10, "\u97d3\u6587");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\u97d3\u6587" + "'", str17, "\u97d3\u6587");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "KOR" + "'", str18, "KOR");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "fr");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\u97d3\u6587" + "'", str25, "\u97d3\u6587");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ko-KR" + "'", str28, "ko-KR");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\uc911\uad6d" + "'", str35, "\uc911\uad6d");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\u671d\u9c9c\u6587\u97e9\u56fd)" + "'", str36, "\u671d\u9c9c\u6587\u97e9\u56fd)");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + category38 + "' != '" + java.util.Locale.Category.FORMAT + "'", category38.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category39 + "' != '" + java.util.Locale.Category.FORMAT + "'", category39.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "ja_JP");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "JP" + "'", str52, "JP");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "ja_JP");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\ub300\ud55c\ubbfc\uad6d" + "'", str58, "\ub300\ud55c\ubbfc\uad6d");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\uc77c\ubcf8\uc5b4" + "'", str59, "\uc77c\ubcf8\uc5b4");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "ko_KR");
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\uc911\uad6d\uc5b4\uc911\uad6d)" + "'", str61, "\uc911\uad6d\uc5b4\uc911\uad6d)");
        org.junit.Assert.assertEquals(locale64.toString(), "chinesisch_VEREINIGTES K\366NIGREICH");
        org.junit.Assert.assertNotNull(locale67);
        org.junit.Assert.assertEquals(locale67.toString(), "fr_FR");
// flaky:         org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\ud504\ub791\uc2a4\uc5b4\ud504\ub791\uc2a4)" + "'", str68, "\ud504\ub791\uc2a4\uc5b4\ud504\ub791\uc2a4)");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "FR" + "'", str69, "FR");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "fra" + "'", str70, "fra");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(printWriter92);
        org.junit.Assert.assertNotNull(printWriter93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "VEREINIGTES K\366NIGREICH" + "'", str94, "VEREINIGTES K\366NIGREICH");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Cor\351e du Sud" + "'", str96, "Cor\351e du Sud");
    }

    @Test
    public void test07721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07721");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation6.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation21.getAxis();
        double double24 = vector3D23.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D23.subtract(93.57684707871968d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D(0.995037190209989d, (-2000.0d));
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double52 = rotation51.getQ0();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation44.applyTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation44.applyInverseTo(vector3D54);
        double double56 = vector3D54.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str58 = rotationOrder57.toString();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D59.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D54.add(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D59.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D(0.33033571077024615d, vector3D23, 0.024645430941207122d, vector3D37, 117.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D37.scalarMultiply(120.00420798388816d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9999999999999999d + "'", double24 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 52.0d + "'", double52 == 52.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ZXZ" + "'", str58, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
    }

    @Test
    public void test07722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07722");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.util.Locale locale4 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        double double21 = rotation18.getQ3();
        double[][] doubleArray22 = rotation18.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter3.printf(locale4, "XZY", (java.lang.Object[]) doubleArray22);
        printWriter23.println("KOR");
        printWriter23.println();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.TAIWAN;
        java.lang.String str29 = locale27.getDisplayScript(locale28);
        java.lang.String str30 = locale28.getVariant();
        java.util.Locale locale31 = java.util.Locale.CHINESE;
        java.lang.String str32 = locale28.getDisplayName(locale31);
        java.util.Locale locale33 = java.util.Locale.PRC;
        java.lang.String str34 = locale33.getDisplayVariant();
        java.util.Locale locale35 = java.util.Locale.ROOT;
        java.lang.String str36 = locale35.getDisplayLanguage();
        java.util.Locale locale37 = java.util.Locale.FRENCH;
        java.util.Locale locale38 = java.util.Locale.TAIWAN;
        java.lang.String str39 = locale37.getDisplayScript(locale38);
        java.lang.String str40 = locale35.getDisplayLanguage(locale37);
        java.lang.String str41 = locale33.getDisplayScript(locale37);
        java.lang.String str42 = locale33.getVariant();
        java.lang.String str43 = locale31.getDisplayScript(locale33);
        java.util.Locale locale44 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str45 = locale44.getScript();
        java.util.Locale locale46 = java.util.Locale.KOREA;
        java.lang.String str47 = locale44.getDisplayLanguage(locale46);
        java.lang.String str48 = locale44.getLanguage();
        java.lang.String str49 = locale31.getDisplayName(locale44);
        printWriter23.println((java.lang.Object) locale44);
        java.lang.String str51 = locale44.toLanguageTag();
        java.lang.String str52 = locale44.toLanguageTag();
        java.util.Set<java.lang.String> strSet53 = locale44.getUnicodeLocaleAttributes();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = locale44.getUnicodeLocaleType("\u30c9\u30a4\u30c4\u8a9e)");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Ill-formed Unicode locale key: japanese (?????)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "zh");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)" + "'", str32, "\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "fr");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str47, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "zh" + "'", str48, "zh");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\u4e2d\u6587" + "'", str49, "\u4e2d\u6587");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "zh-TW" + "'", str51, "zh-TW");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "zh-TW" + "'", str52, "zh-TW");
        org.junit.Assert.assertNotNull(strSet53);
    }

    @Test
    public void test07723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07723");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream1.println((long) 10);
        java.io.PrintStream printStream9 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        printStream9.print((float) (byte) 0);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter15 = printWriter13.append('#');
        printWriter13.println((long) (short) 10);
        java.util.Locale locale18 = java.util.Locale.PRC;
        java.lang.String str19 = locale18.getDisplayVariant();
        java.lang.String[] strArray24 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray24, (java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray29 = mathException28.getSuppressed();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray24, (java.lang.Throwable) mathException28);
        java.lang.Throwable[] throwableArray31 = mathException28.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray31);
        java.io.PrintWriter printWriter33 = printWriter13.format(locale18, "", (java.lang.Object[]) throwableArray31);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException35);
        java.lang.Object[] objArray37 = mathException35.getArguments();
        java.io.PrintWriter printWriter38 = printWriter13.printf("zh", objArray37);
        java.lang.Class<?> wildcardClass39 = printWriter38.getClass();
        printStream9.print((java.lang.Object) printWriter38);
        java.util.Locale.Category category41 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category42 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale43 = java.util.Locale.ROOT;
        java.lang.String str44 = locale43.getDisplayLanguage();
        java.util.Locale.setDefault(category42, locale43);
        java.util.Locale.setDefault(category41, locale43);
        java.util.Locale locale47 = java.util.Locale.getDefault(category41);
        java.util.Locale locale48 = java.util.Locale.getDefault(category41);
        java.util.Locale locale49 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str50 = locale49.getScript();
        java.util.Locale locale51 = java.util.Locale.KOREA;
        java.lang.String str52 = locale49.getDisplayLanguage(locale51);
        java.util.Locale.setDefault(category41, locale51);
        java.lang.String str54 = locale51.toLanguageTag();
        java.io.PrintStream printStream57 = new java.io.PrintStream("ko-KR");
        printStream57.print((float) 100L);
        printStream57.println(true);
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale65 = java.util.Locale.KOREAN;
        java.lang.String str66 = locale65.getDisplayLanguage();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double74 = rotation73.getQ0();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double81 = rotation80.getQ0();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation73.applyTo(rotation80);
        double double83 = rotation73.getQ0();
        double double84 = rotation73.getQ0();
        double[][] doubleArray85 = rotation73.getMatrix();
        java.io.PrintWriter printWriter86 = printWriter64.printf(locale65, "zh_CN", (java.lang.Object[]) doubleArray85);
        java.io.PrintStream printStream87 = printStream57.printf("German (Germany)", (java.lang.Object[]) doubleArray85);
        java.io.PrintStream printStream88 = printStream9.printf(locale51, "cn", (java.lang.Object[]) doubleArray85);
        java.io.PrintStream printStream90 = printStream9.append('#');
        printStream90.println((float) (short) 10);
        java.io.PrintStream printStream93 = new java.io.PrintStream((java.io.OutputStream) printStream90);
        printStream90.write((int) (byte) 1);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + category41 + "' != '" + java.util.Locale.Category.FORMAT + "'", category41.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category42 + "' != '" + java.util.Locale.Category.FORMAT + "'", category42.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str52, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ko-KR" + "'", str54, "ko-KR");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "ko");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\ud55c\uad6d\uc5b4" + "'", str66, "\ud55c\uad6d\uc5b4");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 52.0d + "'", double74 == 52.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 52.0d + "'", double81 == 52.0d);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 52.0d + "'", double83 == 52.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 52.0d + "'", double84 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertNotNull(printStream87);
        org.junit.Assert.assertNotNull(printStream88);
        org.junit.Assert.assertNotNull(printStream90);
    }

    @Test
    public void test07724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07724");
        java.util.Locale.LanguageRange languageRange2 = new java.util.Locale.LanguageRange("englisch", 0.18569266648043586d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (-0.02937648959434208d), (-3.141592653589793d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, 100.0d, (double) (-1), (-0.9904757959510307d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder17.getA1();
        double[] doubleArray23 = rotation16.getAngles(rotationOrder17);
        boolean boolean24 = languageRange2.equals((java.lang.Object) rotation16);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0862593780693436, -1.2688814695714639, -1.168333240715802]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test07725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07725");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, (-1280400.0d), (-0.02937648959434208d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D11, (double) 100);
        double double15 = rotation14.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 100.0f, (double) 0.0f, 0.0d);
        double double26 = rotation25.getQ0();
        double double27 = rotation25.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation14.applyTo(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D28.scalarMultiply(0.9866275920404853d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XYZ" + "'", str6, "XYZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.26237485370392877d + "'", double15 == 0.26237485370392877d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.9649660284921133d + "'", double26 == 0.9649660284921133d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.9649660284921133d + "'", double27 == 0.9649660284921133d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
    }

    @Test
    public void test07726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07726");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.2224610182552538d), (-0.8162351850069733d), 1.9613686224152582d, (double) (-1), true);
    }

    @Test
    public void test07727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07727");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.io.PrintWriter printWriter8 = printWriter3.append('a');
        printWriter3.print(100L);
        printWriter3.println(1.7607846147136124d);
        printWriter3.print((int) (byte) 10);
        printWriter3.print((int) '4');
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray23 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D25, (double) (byte) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D30, (double) (byte) 100, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D27, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation22.getAxis();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation22.revert();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.subtract((double) 10L, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D51, (double) (byte) 100, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D56, (double) (byte) 100, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D53, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D47.subtract((double) 0, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D60, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation22.applyTo(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(1.3700144061909936d, 0.01020745842494423d);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double78 = rotation77.getQ1();
        double double79 = rotation77.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D81, (double) (byte) 100, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D81.subtract((double) 10L, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation77.applyInverseTo(vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D90.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D90.normalize();
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D71, vector3D92);
        double double94 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D68, vector3D92);
        printWriter3.print((java.lang.Object) vector3D92);
        double double96 = vector3D92.getAlpha();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(printWriter8);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 100.0d + "'", double78 == 100.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 52.0d + "'", double79 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-1.581752731678261d) + "'", double96 == (-1.581752731678261d));
    }

    @Test
    public void test07728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07728");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray19 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation18.applyInverseTo(vector3D23);
        double double32 = rotation18.getQ0();
        double double33 = rotation18.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation18.applyInverseTo(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D12, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D37.negate();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ1();
        double double48 = rotation46.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D50.subtract((double) 10L, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation46.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D59.negate();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D(1040.0d, (double) (byte) 10, (double) (byte) -1);
        double double65 = org.apache.commons.math.geometry.Vector3D.angle(vector3D59, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D64.subtract(128040.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D40.add(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D64);
        double double71 = rotation70.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXZ" + "'", str6, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 100.0d + "'", double47 == 100.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.5905084122975552d + "'", double65 == 1.5905084122975552d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.006802057090226628d + "'", double71 == 0.006802057090226628d);
    }

    @Test
    public void test07729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07729");
        java.util.Locale locale2 = new java.util.Locale("CN", "\uc911\uad6d\uc5b4");
        java.util.Locale locale3 = locale2.stripExtensions();
        java.util.Locale locale4 = locale2.stripExtensions();
        java.util.Locale.Builder builder5 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder7 = builder5.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder9 = builder5.setLanguage("ZXZ");
        java.util.Locale locale10 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder11 = builder5.setLocale(locale10);
        java.util.Locale.Builder builder12 = builder5.clearExtensions();
        java.util.Locale.Builder builder14 = builder5.setVariant("Korean");
        java.util.Locale locale15 = builder5.build();
        java.lang.String str16 = locale15.getDisplayVariant();
        java.lang.String str17 = locale4.getDisplayVariant(locale15);
        java.io.PrintStream printStream19 = new java.io.PrintStream("ko-KR");
        printStream19.close();
        java.util.Locale locale21 = java.util.Locale.UK;
        java.lang.String[] strArray23 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream24 = printStream19.format(locale21, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray23);
        printStream24.write(10);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.OutputStream) printStream24);
        byte[] byteArray29 = new byte[] { (byte) -1 };
        printStream24.write(byteArray29);
        printStream24.close();
        printStream24.print((double) (-1));
        java.util.Locale.Builder builder34 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder36 = builder34.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder38 = builder36.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale39 = builder38.build();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation46.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation46.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyTo(rotation61);
        double[][] doubleArray63 = rotation61.getMatrix();
        java.io.PrintStream printStream64 = printStream24.format(locale39, "ko-KR", (java.lang.Object[]) doubleArray63);
        java.io.PrintStream printStream65 = new java.io.PrintStream((java.io.OutputStream) printStream24);
        printStream24.println();
        java.util.Locale.Builder builder67 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder69 = builder67.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder71 = builder69.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale72 = builder71.build();
        java.lang.String str73 = locale72.getCountry();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double81 = rotation80.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder82, (double) (-1L), (double) (short) 10, (double) 'a');
        double double87 = rotation86.getAngle();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation80.applyInverseTo(rotation86);
        double[][] doubleArray89 = rotation86.getMatrix();
        java.io.PrintStream printStream90 = printStream24.printf(locale72, "\ud504\ub791\uc2a4\uc5b4", (java.lang.Object[]) doubleArray89);
        java.lang.String str91 = locale4.getDisplayCountry(locale72);
        java.lang.String str92 = locale72.getISO3Country();
// flaky:         org.junit.Assert.assertEquals(locale2.toString(), "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(locale3);
// flaky:         org.junit.Assert.assertEquals(locale3.toString(), "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(locale4);
// flaky:         org.junit.Assert.assertEquals(locale4.toString(), "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "de_DE_Korean");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Korean" + "'", str16, "Korean");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(printStream24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1]");
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(printStream64);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(locale72);
        org.junit.Assert.assertEquals(locale72.toString(), "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 52.0d + "'", double81 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2.3122509176395862d + "'", double87 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str91, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test07730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07730");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        double[][] doubleArray23 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(373547.3388035254d, (double) 1.0f, (-0.5063656411097588d), (-0.30821743242059296d), false);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation22.applyInverseTo(rotation29);
        double double31 = rotation29.getQ1();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((-0.9904757959510307d), 0.0d, (-0.0d), 0.0d, true);
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation29.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray48 = rotation47.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D50, (double) (byte) 100, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D55, (double) (byte) 100, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D52, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation47.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation47.revert();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation62.revert();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation62.getAxis();
        double[][] doubleArray65 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation29.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation72.getAxis();
        double double80 = rotation72.getAngle();
        double double81 = rotation72.getQ0();
        double double82 = rotation72.getQ2();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation72.revert();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation66.applyInverseTo(rotation83);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 52.0d + "'", double81 == 52.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
    }

    @Test
    public void test07731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07731");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter4 = printWriter2.append('#');
        java.util.Locale locale5 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation12.applyTo(rotation19);
        double double22 = rotation19.getQ3();
        double[][] doubleArray23 = rotation19.getMatrix();
        java.io.PrintWriter printWriter24 = printWriter4.printf(locale5, "XZY", (java.lang.Object[]) doubleArray23);
        java.util.Locale locale25 = null;
        java.io.PrintStream printStream29 = new java.io.PrintStream("ko-KR");
        printStream29.close();
        printStream29.println((double) '4');
        java.lang.String[] strArray35 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("ko_KR", (java.lang.Object[]) strArray35);
        java.io.PrintStream printStream37 = printStream29.format("\u4e2d\u6587", (java.lang.Object[]) strArray35);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("fr");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray42 = mathException41.getSuppressed();
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("DE", (java.lang.Throwable) mathException41);
        mathException39.addSuppressed((java.lang.Throwable) mathException43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("\ud55c\uad6d\uc5b4\ub300\ud55c\ubbfc\uad6d)", (java.lang.Object[]) strArray35, (java.lang.Throwable) mathException43);
        java.lang.Throwable[] throwableArray46 = mathException45.getSuppressed();
        java.lang.Throwable[] throwableArray47 = mathException45.getSuppressed();
        java.io.PrintWriter printWriter48 = printWriter24.format(locale25, "\u53f0\u6e7e\u5730\u533a", (java.lang.Object[]) throwableArray47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("ja", (java.lang.Object[]) throwableArray47);
        org.junit.Assert.assertNotNull(printWriter4);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printStream37);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(printWriter48);
    }

    @Test
    public void test07732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07732");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D12.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray25 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D27, (double) (byte) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D32, (double) (byte) 100, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyInverseTo(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D37, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D48, (double) (byte) 100, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation46.applyTo(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D48.subtract(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray63 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D65, (double) (byte) 100, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D70, (double) (byte) 100, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D67, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation62.applyInverseTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D75, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((-3.141592653589793d), vector3D13, (double) '4', vector3D17, (double) 0, vector3D37, 0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D17.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D9.subtract(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D6.add(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D80, 0.5403023058681398d);
        double double85 = rotation84.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.5403023058681398d + "'", double85 == 0.5403023058681398d);
    }

    @Test
    public void test07733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07733");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("ja");
        printWriter1.print(' ');
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter((java.io.Writer) printWriter4, true);
        printWriter4.println(false);
        printWriter4.print((-0.02937648959434208d));
        java.util.Locale.Builder builder11 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder13 = builder11.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder15 = builder11.setLanguage("ZXZ");
        java.util.Locale locale16 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder17 = builder11.setLocale(locale16);
        java.util.Locale locale18 = java.util.Locale.CANADA;
        java.util.Locale.Builder builder19 = builder11.setLocale(locale18);
        java.util.Locale.Builder builder21 = builder11.setScript("");
        java.util.Locale.Builder builder24 = builder11.setExtension('a', "fr-FR");
        java.util.Locale locale25 = builder11.build();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation32.getAxis();
        double[][] doubleArray34 = rotation32.getMatrix();
        double double35 = rotation32.getQ1();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation32.revert();
        double[][] doubleArray37 = rotation36.getMatrix();
        java.io.PrintWriter printWriter38 = printWriter4.printf(locale25, "yzy", (java.lang.Object[]) doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = locale25.getUnicodeLocaleType("\ub3c5\uc77c\uc5b4");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Ill-formed Unicode locale key: org.apache.commons.math.MathException: ????????");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_CA");
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_CA_#a-fr-fr");
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 100.0d + "'", double35 == 100.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(printWriter38);
    }

    @Test
    public void test07734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07734");
        java.io.PrintStream printStream2 = new java.io.PrintStream("ko-KR");
        printStream2.close();
        java.util.Locale locale4 = java.util.Locale.UK;
        java.lang.String[] strArray6 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream7 = printStream2.format(locale4, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray6);
        printStream7.write(10);
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.OutputStream) printStream7);
        byte[] byteArray12 = new byte[] { (byte) -1 };
        printStream7.write(byteArray12);
        printStream7.close();
        printStream7.print((double) (-1));
        java.util.Locale.Builder builder17 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder19 = builder17.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder21 = builder19.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale22 = builder21.build();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double30 = rotation29.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double37 = rotation36.getQ0();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation29.applyTo(rotation36);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation29.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation45 = rotation39.applyTo(rotation44);
        double[][] doubleArray46 = rotation44.getMatrix();
        java.io.PrintStream printStream47 = printStream7.format(locale22, "ko-KR", (java.lang.Object[]) doubleArray46);
        java.io.PrintStream printStream48 = new java.io.PrintStream((java.io.OutputStream) printStream7);
        java.io.PrintStream printStream50 = new java.io.PrintStream("ko-KR");
        printStream50.println("fr");
        java.lang.String[] strArray57 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray57, (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray62 = mathException61.getSuppressed();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray57, (java.lang.Throwable) mathException61);
        java.lang.Throwable[] throwableArray64 = mathException61.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException65 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray64);
        java.lang.Throwable[] throwableArray66 = notARotationMatrixException65.getSuppressed();
        java.io.PrintStream printStream67 = printStream50.format("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) throwableArray66);
        printStream48.println((java.lang.Object) "\uc77c\ubcf8\uc5b4");
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale74 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str75 = locale74.getScript();
        java.util.Locale locale76 = java.util.Locale.KOREA;
        java.lang.String str77 = locale74.getDisplayLanguage(locale76);
        java.lang.String[] strArray80 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray80, (java.lang.Throwable) mathException82);
        java.io.PrintWriter printWriter84 = printWriter73.format(locale76, "YZY", (java.lang.Object[]) strArray80);
        printWriter84.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException90);
        java.lang.Object[] objArray92 = mathException90.getArguments();
        java.io.PrintWriter printWriter93 = printWriter84.format("org.apache.commons.math.MathException: ZXZ", objArray92);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("\u97d3\u6587", objArray92);
        java.lang.Throwable[] throwableArray95 = mathException94.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException96 = new org.apache.commons.math.geometry.NotARotationMatrixException("Englisch", (java.lang.Object[]) throwableArray95);
        java.io.PrintStream printStream97 = printStream48.format("Chinese", (java.lang.Object[]) throwableArray95);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException98 = new org.apache.commons.math.geometry.NotARotationMatrixException("\uc911\uad6d\uc5b4", (java.lang.Object[]) throwableArray95);
        java.lang.Object[] objArray99 = notARotationMatrixException98.getArguments();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(printStream7);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1]");
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(printStream47);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(printStream67);
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str77, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertNotNull(printWriter93);
        org.junit.Assert.assertNotNull(throwableArray95);
        org.junit.Assert.assertNotNull(printStream97);
        org.junit.Assert.assertNotNull(objArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray99), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray99), "[]");
    }

    @Test
    public void test07735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07735");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(5.916711637265499E-7d, (-0.33616890417074025d), 117701.02600641243d, 0.33262755931684435d, true);
    }

    @Test
    public void test07736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07736");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 100, 11983.257028037076d, (double) 'x');
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double15 = rotation14.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation14.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation14.applyInverseTo(rotation30);
        double[][] doubleArray33 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation14.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation8.applyInverseTo(rotation34);
        double double36 = rotation35.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XZY" + "'", str3, "XZY");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "XZY" + "'", str4, "XZY");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.023222690953624d + "'", double36 == 4.023222690953624d);
    }

    @Test
    public void test07737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07737");
        double[][] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(doubleArray0, 3622128.337879367d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07738");
        java.util.Locale locale2 = new java.util.Locale("YZY", "ko-KR");
        java.util.Set<java.lang.String> strSet3 = locale2.getUnicodeLocaleAttributes();
        java.util.Locale locale4 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str5 = locale2.getDisplayScript(locale4);
        java.util.Locale locale7 = java.util.Locale.forLanguageTag("\u30a4\u30ae\u30ea\u30b9");
        java.lang.String str8 = locale7.getLanguage();
        java.io.PrintStream printStream10 = new java.io.PrintStream("ko-KR");
        printStream10.close();
        java.util.Locale locale12 = java.util.Locale.UK;
        java.lang.String[] strArray14 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream15 = printStream10.format(locale12, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray14);
        printStream15.write(10);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.OutputStream) printStream15);
        byte[] byteArray20 = new byte[] { (byte) -1 };
        printStream15.write(byteArray20);
        printStream15.close();
        printStream15.println((double) (short) 100);
        byte[] byteArray26 = new byte[] { (byte) 1 };
        printStream15.write(byteArray26, 0, 1);
        printStream15.println(true);
        java.util.Locale locale32 = java.util.Locale.PRC;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.lang.String str34 = locale32.getDisplayName(locale33);
        java.util.Locale locale37 = new java.util.Locale("ZXZ", "ko_KR");
        java.lang.String str38 = locale32.getDisplayName(locale37);
        java.lang.String str39 = locale32.getLanguage();
        java.util.Locale locale40 = locale32.stripExtensions();
        java.util.Locale locale41 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale41);
        java.lang.String str43 = locale41.toLanguageTag();
        java.lang.String str44 = locale41.getDisplayVariant();
        java.lang.String str45 = locale32.getDisplayCountry(locale41);
        java.util.Locale locale46 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str47 = locale46.getScript();
        java.util.Locale locale48 = java.util.Locale.KOREA;
        java.lang.String str49 = locale46.getDisplayLanguage(locale48);
        java.lang.String str50 = locale46.getDisplayLanguage();
        java.util.Set<java.lang.String> strSet51 = locale46.getUnicodeLocaleAttributes();
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter55 = printWriter53.append('#');
        printWriter53.println((long) (short) 10);
        java.util.Locale locale58 = java.util.Locale.PRC;
        java.lang.String str59 = locale58.getDisplayVariant();
        java.lang.String[] strArray64 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray64, (java.lang.Throwable) mathException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray69 = mathException68.getSuppressed();
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray64, (java.lang.Throwable) mathException68);
        java.lang.Throwable[] throwableArray71 = mathException68.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException72 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray71);
        java.io.PrintWriter printWriter73 = printWriter53.format(locale58, "", (java.lang.Object[]) throwableArray71);
        java.lang.String str74 = locale46.getDisplayCountry(locale58);
        java.lang.String str75 = locale32.getDisplayVariant(locale46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str78 = rotationOrder77.toString();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        double[][] doubleArray84 = rotation83.getMatrix();
        java.io.PrintStream printStream85 = printStream15.printf(locale32, "XYZ", (java.lang.Object[]) doubleArray84);
        java.lang.String str86 = locale7.getDisplayCountry(locale32);
        java.lang.String str87 = locale4.getDisplayScript(locale32);
        org.junit.Assert.assertEquals(locale2.toString(), "yzy_KO-KR");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(printStream15);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1]");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Chinese (China)" + "'", str34, "Chinese (China)");
        org.junit.Assert.assertEquals(locale37.toString(), "zxz_KO_KR");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Chinese (China)" + "'", str38, "Chinese (China)");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "zh" + "'", str39, "zh");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ko-KR" + "'", str43, "ko-KR");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\uc911\uad6d" + "'", str45, "\uc911\uad6d");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str49, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str50, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\u53f0\u6e7e\u5730\u533a" + "'", str74, "\u53f0\u6e7e\u5730\u533a");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ZXZ" + "'", str78, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
    }

    @Test
    public void test07739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07739");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("de");
        printWriter1.print('x');
        java.io.PrintStream printStream5 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream7 = new java.io.PrintStream("ko-KR");
        printStream7.close();
        printStream7.println((double) '4');
        printStream7.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        double[][] doubleArray21 = rotation19.getMatrix();
        java.io.PrintStream printStream22 = printStream7.format("zh", (java.lang.Object[]) doubleArray21);
        printStream5.println((java.lang.Object) doubleArray21);
        char[] charArray27 = new char[] { 'a', 'a', '4' };
        printStream5.println(charArray27);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.OutputStream) printStream5, false);
        printWriter30.write(0);
        printWriter1.println((java.lang.Object) printWriter30);
        java.io.PrintWriter printWriter35 = printWriter30.append((java.lang.CharSequence) "United Kingdom");
        printWriter35.print(false);
        boolean boolean38 = printWriter35.checkError();
        printWriter35.print((float) 1);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, a, 4]");
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test07740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07740");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException1);
        java.lang.Object[] objArray3 = mathException1.getArguments();
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("deu", (java.lang.Throwable) mathException1);
        java.lang.Throwable[] throwableArray5 = mathException4.getSuppressed();
        java.lang.Object[] objArray6 = mathException4.getArguments();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation15.getAxis();
        double[][] doubleArray17 = rotation15.getMatrix();
        double double18 = rotation15.getQ1();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation9.applyInverseTo(rotation15);
        double[][] doubleArray20 = rotation9.getMatrix();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("\uc911\uad6d", (java.lang.Object[]) doubleArray20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("KOR", (java.lang.Throwable) mathException21);
        mathException4.addSuppressed((java.lang.Throwable) mathException22);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(doubleArray20);
    }

    @Test
    public void test07741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07741");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        double double22 = rotation5.getQ3();
        java.io.PrintStream printStream24 = new java.io.PrintStream("ko-KR");
        printStream24.close();
        java.util.Locale locale26 = java.util.Locale.UK;
        java.lang.String[] strArray28 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream29 = printStream24.format(locale26, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray28);
        printStream24.println((long) 10);
        printStream24.println((int) '4');
        java.io.PrintStream printStream35 = new java.io.PrintStream((java.io.OutputStream) printStream24, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str37 = rotationOrder36.toString();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder36.getA2();
        printStream35.print((java.lang.Object) vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation5.applyTo(vector3D38);
        double double41 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(printStream29);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "YZY" + "'", str37, "YZY");
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
    }

    @Test
    public void test07742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07742");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        double double22 = rotation20.getAngle();
        double double23 = rotation20.getQ0();
        double double24 = rotation20.getQ0();
        double double25 = rotation20.getQ1();
        double double26 = rotation20.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder27.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation20.applyInverseTo(vector3D38);
        double double40 = vector3D38.getNorm();
        double double41 = vector3D38.getAlpha();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2.3122509176395862d + "'", double22 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.4028887144651276d + "'", double23 == 0.4028887144651276d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.4028887144651276d + "'", double24 == 0.4028887144651276d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-0.8519466901357562d) + "'", double25 == (-0.8519466901357562d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.3331734424927659d + "'", double26 == 0.3331734424927659d);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXZ" + "'", str28, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    }

    @Test
    public void test07743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07743");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.println("fr");
        printStream1.println(1.0f);
        printStream1.close();
        printStream1.println('4');
        printStream1.close();
        java.util.Locale locale10 = java.util.Locale.UK;
        java.lang.String str11 = locale10.getVariant();
        java.lang.String str12 = locale10.getISO3Language();
        java.util.Locale locale13 = locale10.stripExtensions();
        java.lang.String str14 = locale13.getISO3Language();
        java.lang.String str15 = locale13.getCountry();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray23 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D25, (double) (byte) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D30, (double) (byte) 100, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D27, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation22.getAxis();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation22.revert();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.subtract((double) 10L, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D51, (double) (byte) 100, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D56, (double) (byte) 100, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D53, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D47.subtract((double) 0, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D60, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation22.applyTo(vector3D63);
        double[][] doubleArray69 = rotation22.getMatrix();
        java.io.PrintStream printStream70 = printStream1.printf(locale13, "\uc911\uad6d\uc5b4\uc911\uad6d)", (java.lang.Object[]) doubleArray69);
        printStream70.println((int) (short) 100);
        java.io.PrintStream printStream74 = new java.io.PrintStream((java.io.OutputStream) printStream70, true);
        printStream70.print(true);
        printStream70.print('a');
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "eng" + "'", str12, "eng");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "eng" + "'", str14, "eng");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "GB" + "'", str15, "GB");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(printStream70);
    }

    @Test
    public void test07744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07744");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        printWriter1.flush();
        printWriter1.println((int) 'x');
        printWriter1.print((-0.02937648959434208d));
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.05839499171659341d, (-1.7466804931071132d), 9.649660284921133d, 0.07621202839203368d, false);
        double double13 = rotation12.getQ0();
        printWriter1.println((java.lang.Object) rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.05839499171659341d + "'", double13 == 0.05839499171659341d);
    }

    @Test
    public void test07745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07745");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale3 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str4 = locale3.getScript();
        java.util.Locale locale5 = java.util.Locale.KOREA;
        java.lang.String str6 = locale3.getDisplayLanguage(locale5);
        java.lang.String[] strArray9 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray9, (java.lang.Throwable) mathException11);
        java.io.PrintWriter printWriter13 = printWriter2.format(locale5, "YZY", (java.lang.Object[]) strArray9);
        printWriter13.println(0.0d);
        printWriter13.print((long) (byte) 10);
        printWriter13.println();
        printWriter13.print((int) (short) 0);
        java.io.PrintWriter printWriter22 = printWriter13.append('x');
        java.util.Locale locale24 = java.util.Locale.forLanguageTag("Chinesisch");
        java.util.Set<java.lang.Character> charSet25 = locale24.getExtensionKeys();
        printWriter13.println((java.lang.Object) locale24);
        java.io.PrintWriter printWriter28 = printWriter13.append('4');
        printWriter13.print(false);
        printWriter13.flush();
        java.util.Locale.Category category32 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale33 = java.util.Locale.ENGLISH;
        boolean boolean34 = locale33.hasExtensions();
        java.util.Locale.setDefault(category32, locale33);
        java.util.Locale locale36 = java.util.Locale.GERMANY;
        java.util.Set<java.lang.String> strSet37 = locale36.getUnicodeLocaleKeys();
        java.lang.String str38 = locale33.getDisplayCountry(locale36);
        java.util.Set<java.lang.String> strSet39 = locale33.getUnicodeLocaleAttributes();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray51 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(doubleArray51, 1.5707963267948966d);
        java.io.PrintWriter printWriter54 = printWriter13.printf(locale33, "\u97d3\u6587\u5357\u97d3)", (java.lang.Object[]) doubleArray51);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException55 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.MathException: Englisch (Vereinigtes K\366nigreich)", (java.lang.Object[]) doubleArray51);
        java.lang.Class<?> wildcardClass56 = doubleArray51.getClass();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str6, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertNotNull(charSet25);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertTrue("'" + category32 + "' != '" + java.util.Locale.Category.DISPLAY + "'", category32.equals(java.util.Locale.Category.DISPLAY));
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "de_DE");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test07746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07746");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.println("fr");
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray13 = mathException12.getSuppressed();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException12);
        java.lang.Throwable[] throwableArray15 = mathException12.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray15);
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException16.getSuppressed();
        java.io.PrintStream printStream18 = printStream1.format("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) throwableArray17);
        printStream18.println((int) (short) 10);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("ko-KR");
        printStream18.print((java.lang.Object) printWriter22);
        printStream18.print(true);
        java.util.Locale locale27 = new java.util.Locale("Chinese");
        java.util.Set<java.lang.String> strSet28 = locale27.getUnicodeLocaleKeys();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ3();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) (-1L), (double) (short) 10, (double) 'a');
        double double49 = rotation48.getAngle();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation42.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation35.applyTo(rotation48);
        double[][] doubleArray52 = rotation51.getMatrix();
        java.io.PrintStream printStream53 = printStream18.printf(locale27, "\u4e2d\u6587\u53f0\u6e7e\u5730\u533a),German)", (java.lang.Object[]) doubleArray52);
        printStream18.print((long) ' ');
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertEquals(locale27.toString(), "chinese");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 52.0d + "'", double43 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2.3122509176395862d + "'", double49 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(printStream53);
    }

    @Test
    public void test07747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07747");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '#', 2.0790806738125385d, (-0.2868032122551722d));
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.19453850001908143d, 0.0995037190209989d, 2.0790806738125385d);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation10.revert();
        double double12 = rotation11.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YZY" + "'", str1, "YZY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-0.029239662683278052d) + "'", double12 == (-0.029239662683278052d));
    }

    @Test
    public void test07748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07748");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        printStream6.println((double) 100L);
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter((java.io.OutputStream) printStream6, false);
        printStream6.flush();
        java.io.PrintStream printStream18 = printStream6.append(' ');
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray25 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D27, (double) (byte) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D32, (double) (byte) 100, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyInverseTo(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation24.getAxis();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ1();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation39.applyTo(rotation46);
        printStream18.println((java.lang.Object) rotation48);
        printStream18.println(100L);
        printStream18.println(false);
        java.io.PrintStream printStream55 = new java.io.PrintStream((java.io.OutputStream) printStream18, false);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 100.0d + "'", double47 == 100.0d);
        org.junit.Assert.assertNotNull(rotation48);
    }

    @Test
    public void test07749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07749");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("Koreanisch");
        printWriter2.println("United Kingdom");
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter10 = printWriter8.append('#');
        java.lang.Object[] objArray12 = null;
        java.io.PrintWriter printWriter13 = printWriter10.format("fran\347ais", objArray12);
        printWriter13.println((long) 'a');
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale19 = java.util.Locale.ROOT;
        java.util.Locale.Category category20 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category21 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale22 = java.util.Locale.ROOT;
        java.lang.String str23 = locale22.getDisplayLanguage();
        java.util.Locale.setDefault(category21, locale22);
        java.util.Locale.setDefault(category20, locale22);
        java.lang.String str26 = locale19.getDisplayVariant(locale22);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale29 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str30 = locale29.getScript();
        java.util.Locale locale31 = java.util.Locale.KOREA;
        java.lang.String str32 = locale29.getDisplayLanguage(locale31);
        java.lang.String[] strArray35 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray35, (java.lang.Throwable) mathException37);
        java.io.PrintWriter printWriter39 = printWriter28.format(locale31, "YZY", (java.lang.Object[]) strArray35);
        java.lang.String str40 = locale22.getDisplayVariant(locale31);
        java.lang.String str41 = locale31.getDisplayScript();
        java.util.Locale.Builder builder42 = builder16.setLocale(locale31);
        java.util.Locale.setDefault(locale31);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation50.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation50.revert();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double67 = rotation66.getQ0();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation50.applyInverseTo(rotation66);
        double[][] doubleArray69 = rotation50.getMatrix();
        java.io.PrintWriter printWriter70 = printWriter13.format(locale31, "kor", (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException71 = new org.apache.commons.math.geometry.NotARotationMatrixException("france", (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException72 = new org.apache.commons.math.geometry.NotARotationMatrixException("fra", (java.lang.Object[]) doubleArray69);
        printWriter2.println((java.lang.Object) doubleArray69);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException74 = new org.apache.commons.math.geometry.NotARotationMatrixException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) doubleArray69);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "");
        org.junit.Assert.assertTrue("'" + category20 + "' != '" + java.util.Locale.Category.FORMAT + "'", category20.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category21 + "' != '" + java.util.Locale.Category.FORMAT + "'", category21.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str32, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 52.0d + "'", double58 == 52.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 52.0d + "'", double67 == 52.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(printWriter70);
    }

    @Test
    public void test07750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07750");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.5707963363763575d), 4133.759842626198d, (-0.5063656411097589d), (-1.331616E7d), false);
        double[][] doubleArray6 = rotation5.getMatrix();
        double double7 = rotation5.getQ2();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.5063656411097589d) + "'", double7 == (-0.5063656411097589d));
    }

    @Test
    public void test07751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07751");
        java.util.Locale locale0 = java.util.Locale.ROOT;
        java.util.Locale.Category category1 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category2 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale3 = java.util.Locale.ROOT;
        java.lang.String str4 = locale3.getDisplayLanguage();
        java.util.Locale.setDefault(category2, locale3);
        java.util.Locale.setDefault(category1, locale3);
        java.lang.String str7 = locale0.getDisplayVariant(locale3);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale10 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str11 = locale10.getScript();
        java.util.Locale locale12 = java.util.Locale.KOREA;
        java.lang.String str13 = locale10.getDisplayLanguage(locale12);
        java.lang.String[] strArray16 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray16, (java.lang.Throwable) mathException18);
        java.io.PrintWriter printWriter20 = printWriter9.format(locale12, "YZY", (java.lang.Object[]) strArray16);
        java.lang.String str21 = locale3.getDisplayVariant(locale12);
        boolean boolean22 = locale12.hasExtensions();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        double[][] doubleArray38 = rotation37.getMatrix();
        double double39 = rotation37.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation37.getAxis();
        boolean boolean41 = locale12.equals((java.lang.Object) rotation37);
        org.junit.Assert.assertNotNull(locale0);
        org.junit.Assert.assertEquals(locale0.toString(), "");
        org.junit.Assert.assertTrue("'" + category1 + "' != '" + java.util.Locale.Category.FORMAT + "'", category1.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category2 + "' != '" + java.util.Locale.Category.FORMAT + "'", category2.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str13, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-7396.0d) + "'", double39 == (-7396.0d));
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test07752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07752");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.3964058484385629E-10d, 0.4028887144651276d, (-0.995037190209989d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double10 = rotation9.getQ0();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double17 = rotation16.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation9.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation9.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation34.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.subtract(vector3D43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str46 = rotationOrder45.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D47.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(vector3D48);
        double double50 = vector3D44.getY();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation9.applyInverseTo(vector3D44);
        double double52 = rotation9.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation9.applyInverseTo(vector3D53);
        double double55 = org.apache.commons.math.geometry.Vector3D.angle(vector3D3, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D3.negate();
        org.apache.commons.math.geometry.Vector3D vector3D57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D3.subtract(vector3D57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 52.0d + "'", double10 == 52.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ZXZ" + "'", str46, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 100.0d + "'", double52 == 100.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.7083812450961114d + "'", double55 == 0.7083812450961114d);
        org.junit.Assert.assertNotNull(vector3D56);
    }

    @Test
    public void test07753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07753");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation6.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation6.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation21.getAxis();
        double double24 = vector3D23.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D23.subtract(93.57684707871968d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D(0.995037190209989d, (-2000.0d));
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double52 = rotation51.getQ0();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation44.applyTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation44.applyInverseTo(vector3D54);
        double double56 = vector3D54.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str58 = rotationOrder57.toString();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D59.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D54.add(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D59.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D(0.33033571077024615d, vector3D23, 0.024645430941207122d, vector3D37, 117.0d, vector3D62);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((double) (-1L), (-0.02937648959434208d), 0.0d, 52.0d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((-11094.094757084158d), (-0.9904757959510307d));
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D73.add((-6.797493410635224E-4d), vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D79.scalarMultiply(0.3403995840772179d);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation69.applyInverseTo(vector3D81);
        double double83 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D23, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.add(1.421618860665852E12d, vector3D85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9999999999999999d + "'", double24 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 52.0d + "'", double52 == 52.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ZXZ" + "'", str58, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 7.298975212055493E-5d + "'", double83 == 7.298975212055493E-5d);
    }

    @Test
    public void test07754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07754");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-12804.0d), 52.0d, (-2.43465333888373d));
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter13 = printWriter11.append('#');
        java.lang.Object[] objArray15 = null;
        java.io.PrintWriter printWriter16 = printWriter13.format("fran\347ais", objArray15);
        java.util.Locale locale17 = null;
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray20 = mathException19.getSuppressed();
        java.io.PrintWriter printWriter21 = printWriter13.format(locale17, "zxz", (java.lang.Object[]) throwableArray20);
        char[] charArray25 = new char[] { 'a', ' ', '#' };
        printWriter21.println(charArray25);
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.FRENCH;
        java.util.Locale locale29 = java.util.Locale.TAIWAN;
        java.lang.String str30 = locale28.getDisplayScript(locale29);
        java.lang.String str31 = locale27.getDisplayLanguage(locale28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray43 = rotation42.getMatrix();
        java.io.PrintWriter printWriter44 = printWriter21.printf(locale27, "english", (java.lang.Object[]) doubleArray43);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(doubleArray43, (double) '#');
        double double47 = rotation46.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D(1.5599296019390303d, (double) 10, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation46.applyTo(vector3D51);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str54 = rotationOrder53.toString();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) (byte) 100, (double) (-1L), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder53.getA2();
        double[] doubleArray60 = rotation46.getAngles(rotationOrder53);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder53.getA3();
        double[] doubleArray62 = rotation9.getAngles(rotationOrder53);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZYZ" + "'", str3, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZYZ" + "'", str5, "ZYZ");
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "fr");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "fran\347ais" + "'", str31, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ZXZ" + "'", str54, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[3.141592653589793, 0.530964914873383, 3.141592653589793]");
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[2.7024523587921365, 1.7345175425633081, 2.27773564150096]");
    }

    @Test
    public void test07755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07755");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-9.95037190209989d), (-0.09667091924386814d), 0.8775825618903728d);
        double double13 = rotation12.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XYZ" + "'", str6, "XYZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.25471992183067077d + "'", double13 == 0.25471992183067077d);
    }

    @Test
    public void test07756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07756");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.negate();
        double double8 = vector3D6.getY();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test07757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07757");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double27 = rotation26.getQ0();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.applyTo(rotation26);
        double double29 = rotation19.getQ0();
        double double30 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double37 = rotation36.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation36.applyTo(rotation43);
        double double46 = rotation36.getQ0();
        double double47 = rotation36.getQ0();
        double[][] doubleArray48 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double55 = rotation54.getQ0();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double62 = rotation61.getQ0();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation54.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation36.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.scalarMultiply((double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation19.applyTo(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation13.applyTo(vector3D68);
        double double70 = vector3D69.getZ();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 52.0d + "'", double46 == 52.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 52.0d + "'", double55 == 52.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-8.354478387545015E11d) + "'", double70 == (-8.354478387545015E11d));
    }

    @Test
    public void test07758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07758");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D12, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation7.applyInverseTo(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation7.getAxis();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation7.revert();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation22.revert();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation22.getAxis();
        double double25 = vector3D24.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D24.subtract(93.57684707871968d, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double42 = rotation41.getQ0();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation41.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation41.revert();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation41.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D52.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D34.subtract(3.112216163995451d, vector3D53);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray62 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D64, (double) (byte) 100, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D66, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation61.applyInverseTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation61.getAxis();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation61.revert();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation61.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str80 = rotationOrder79.toString();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.negate();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((-4.79425538604203d), vector3D34, (-1280400.0d), vector3D77, 3929.5113857326546d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((-0.8414709848078965d), vector3D83);
        double double85 = vector3D84.getZ();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9999999999999999d + "'", double25 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 52.0d + "'", double42 == 52.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ZXZ" + "'", str80, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-110513.41051088054d) + "'", double85 == (-110513.41051088054d));
    }

    @Test
    public void test07759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07759");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation12.getQ3();
        double double16 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation12.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder24.getA1();
        java.lang.String str30 = rotationOrder24.toString();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) (byte) 0, (-1280400.0d), (-0.02937648959434208d));
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder24.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder24.getA2();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation42.getAxis();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation42.revert();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D54, (double) (byte) 100, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D59, (double) (byte) 100, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D56, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D66, (double) (byte) 100, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D72, (double) (byte) 100, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D77, (double) (byte) 100, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D74, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D61, (double) (byte) 1, vector3D69, (double) (short) 100, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, vector3D69, (double) 0L, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D86.scalarMultiply((double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation42.applyInverseTo(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D36.subtract(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D36.scalarMultiply(0.5403023058681398d);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D93.scalarMultiply(1.5599296019390303d);
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D21.subtract(0.3331734424927659d, vector3D95);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D96.normalize();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXZ" + "'", str19, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "XYZ" + "'", str30, "XYZ");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test07760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07760");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((double) (byte) 100);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter10 = printWriter8.append('#');
        java.lang.Object[] objArray12 = null;
        java.io.PrintWriter printWriter13 = printWriter10.format("fran\347ais", objArray12);
        java.util.Locale locale14 = null;
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        java.io.PrintWriter printWriter18 = printWriter10.format(locale14, "zxz", (java.lang.Object[]) throwableArray17);
        char[] charArray22 = new char[] { 'a', ' ', '#' };
        printWriter18.println(charArray22);
        java.util.Locale locale24 = java.util.Locale.FRENCH;
        java.util.Locale locale25 = java.util.Locale.FRENCH;
        java.util.Locale locale26 = java.util.Locale.TAIWAN;
        java.lang.String str27 = locale25.getDisplayScript(locale26);
        java.lang.String str28 = locale24.getDisplayLanguage(locale25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray40 = rotation39.getMatrix();
        java.io.PrintWriter printWriter41 = printWriter18.printf(locale24, "english", (java.lang.Object[]) doubleArray40);
        printStream1.println((java.lang.Object) printWriter41);
        printStream1.println((-1.0f));
        printStream1.println(false);
        boolean boolean47 = printStream1.checkError();
        printStream1.write((int) (byte) 0);
        printStream1.print('a');
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "fr");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "fr");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "fran\347ais" + "'", str28, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test07761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07761");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.close();
        java.util.Locale locale14 = java.util.Locale.FRANCE;
        printWriter12.println((java.lang.Object) locale14);
        printWriter12.println((int) (byte) 10);
        printWriter12.println((long) (short) 10);
        printWriter12.print("DEU");
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (-1L), (double) (short) 10, (double) 'a');
        double double35 = rotation34.getAngle();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.applyInverseTo(rotation34);
        double[][] doubleArray37 = rotation34.getMatrix();
        java.io.PrintWriter printWriter38 = printWriter12.printf("\u97d3\u6587\u5357\u97d3)", (java.lang.Object[]) doubleArray37);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter12, true);
        java.io.PrintWriter printWriter42 = printWriter12.append('4');
        java.util.Locale.Builder builder43 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder45 = builder43.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale46 = builder43.build();
        java.util.Locale.Builder builder48 = builder43.setRegion("ja");
        java.util.Locale locale49 = java.util.Locale.FRANCE;
        java.lang.String str50 = locale49.getDisplayCountry();
        java.lang.String str51 = locale49.toLanguageTag();
        java.util.Locale.Builder builder52 = builder43.setLocale(locale49);
        java.util.Locale.Builder builder54 = builder52.removeUnicodeLocaleAttribute("Englisch");
        java.util.Locale.Builder builder56 = builder54.setLanguageTag("CN");
        java.util.Locale.Builder builder57 = builder56.clearExtensions();
        java.util.Locale locale58 = builder57.build();
        java.lang.String str59 = locale58.getCountry();
        java.io.PrintStream printStream64 = new java.io.PrintStream("ko-KR");
        printStream64.close();
        java.util.Locale locale66 = java.util.Locale.UK;
        java.lang.String[] strArray68 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream69 = printStream64.format(locale66, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray68);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("\u97d3\u6587)", (java.lang.Object[]) strArray68);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException71);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("Chinese", (java.lang.Object[]) strArray68, (java.lang.Throwable) mathException72);
        java.io.PrintWriter printWriter75 = printWriter12.printf(locale58, "org.apache.commons.math.MathException: deu__Koreanisch", (java.lang.Object[]) strArray68);
        java.util.Set<java.lang.String> strSet76 = locale58.getUnicodeLocaleKeys();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr_FR");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2.3122509176395862d + "'", double35 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "");
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "fr_FR");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Francia" + "'", str50, "Francia");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "fr-FR" + "'", str51, "fr-FR");
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "cn");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(printStream69);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(strSet76);
    }

    @Test
    public void test07762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07762");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.KOREAN;
        java.lang.String str3 = locale2.getDisplayLanguage();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double11 = rotation10.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation10.applyTo(rotation17);
        double double20 = rotation10.getQ0();
        double double21 = rotation10.getQ0();
        double[][] doubleArray22 = rotation10.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter1.printf(locale2, "zh_CN", (java.lang.Object[]) doubleArray22);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale26 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str27 = locale26.getScript();
        java.util.Locale locale28 = java.util.Locale.KOREA;
        java.lang.String str29 = locale26.getDisplayLanguage(locale28);
        java.lang.String[] strArray32 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray32, (java.lang.Throwable) mathException34);
        java.io.PrintWriter printWriter36 = printWriter25.format(locale28, "YZY", (java.lang.Object[]) strArray32);
        printWriter36.println(0.0d);
        java.io.PrintStream printStream40 = new java.io.PrintStream("ko-KR");
        printStream40.close();
        java.util.Locale locale42 = java.util.Locale.UK;
        java.lang.String[] strArray44 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream45 = printStream40.format(locale42, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray44);
        printStream45.write(10);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter((java.io.OutputStream) printStream45);
        printStream45.print((int) (short) 1);
        java.io.PrintStream printStream52 = new java.io.PrintStream("ko-KR");
        printStream52.println("fr");
        printStream45.print((java.lang.Object) "fr");
        char[] charArray59 = new char[] { '#', '4', 'a' };
        printStream45.print(charArray59);
        printWriter36.write(charArray59);
        printWriter23.write(charArray59);
        printWriter23.write("org.apache.commons.math.geometry.NotARotationMatrixException: yzy (KO-KR)");
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "ko");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\ud55c\uad6d\uc5b4" + "'", str3, "\ud55c\uad6d\uc5b4");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 52.0d + "'", double11 == 52.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str29, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(printStream45);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 4, a]");
    }

    @Test
    public void test07763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07763");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.println(0.0d);
        printWriter12.print((long) (byte) 10);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray23 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D25, (double) (byte) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D30, (double) (byte) 100, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D27, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation22.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation22.getAxis();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation22.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation37.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ1();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation37.applyTo(rotation44);
        printWriter12.println((java.lang.Object) rotation46);
        java.io.PrintWriter printWriter49 = printWriter12.append('x');
        printWriter49.print((float) 100);
        // The following exception was thrown during execution in test generation
        try {
            printWriter49.write("de-DE-Korean", (-1), (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 100.0d + "'", double45 == 100.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(printWriter49);
    }

    @Test
    public void test07764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07764");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 1, 1040000.0d, (-3.141592653589793d));
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.scalarMultiply((-0.9996400101546701d));
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D3, 0.7291229553156825d);
        double double8 = vector3D3.getX();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }

    @Test
    public void test07765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07765");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("en");
        printWriter1.print(false);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException9.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException12 = new org.apache.commons.math.geometry.NotARotationMatrixException("zxz_KO_KR", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.NotARotationMatrixException: XZY", (java.lang.Object[]) throwableArray10);
        java.io.PrintWriter printWriter14 = printWriter1.printf("DEU", (java.lang.Object[]) throwableArray10);
        printWriter1.write("france");
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("yzy");
        printWriter18.write("zh-CN", (int) (short) 10, (int) (short) -1);
        java.io.PrintWriter printWriter24 = printWriter18.append((java.lang.CharSequence) "\u6cd5\u6587");
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter18);
        java.io.PrintStream printStream27 = new java.io.PrintStream("ko-KR");
        printStream27.close();
        java.util.Locale locale29 = java.util.Locale.UK;
        java.lang.String[] strArray31 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream32 = printStream27.format(locale29, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray31);
        printStream32.write(10);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter((java.io.OutputStream) printStream32);
        printStream32.print((int) (short) 1);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.OutputStream) printStream32);
        printWriter38.print((int) '#');
        java.io.PrintStream printStream42 = new java.io.PrintStream("ko-KR");
        printStream42.println("fr");
        printStream42.println("deu");
        java.util.Locale locale47 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str48 = locale47.toLanguageTag();
        java.lang.String[] strArray51 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("ZXZ");
        java.lang.Object[] objArray55 = mathException54.getArguments();
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("Chinesisch", (java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray51, (java.lang.Throwable) mathException54);
        java.io.PrintStream printStream58 = printStream42.format(locale47, "org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray51);
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter62 = printWriter60.append('#');
        java.lang.Object[] objArray64 = null;
        java.io.PrintWriter printWriter65 = printWriter62.format("fran\347ais", objArray64);
        java.util.Locale locale66 = java.util.Locale.GERMAN;
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale70 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str71 = locale70.getScript();
        java.util.Locale locale72 = java.util.Locale.KOREA;
        java.lang.String str73 = locale70.getDisplayLanguage(locale72);
        java.lang.String[] strArray76 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray76, (java.lang.Throwable) mathException78);
        java.io.PrintWriter printWriter80 = printWriter69.format(locale72, "YZY", (java.lang.Object[]) strArray76);
        java.io.PrintWriter printWriter81 = printWriter65.printf(locale66, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray76);
        java.io.PrintWriter printWriter83 = printWriter65.append('4');
        char[] charArray86 = new char[] { '4', 'a' };
        printWriter83.println(charArray86);
        printStream42.print(charArray86);
        printWriter38.println(charArray86);
        printWriter25.write(charArray86, 0, 0);
        printWriter1.write(charArray86);
        printWriter1.print("org.apache.commons.math.MathException: org.apache.commons.math.geometry.NotARotationMatrixException: XZY");
        java.io.PrintWriter printWriter97 = printWriter1.append((java.lang.CharSequence) "german");
        java.lang.CharSequence charSequence98 = null;
        java.io.PrintWriter printWriter99 = printWriter97.append(charSequence98);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printStream32);
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "zh-CN" + "'", str48, "zh-CN");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(printStream58);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "de");
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(locale72);
        org.junit.Assert.assertEquals(locale72.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str73, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[4, a]");
        org.junit.Assert.assertNotNull(printWriter97);
        org.junit.Assert.assertNotNull(printWriter99);
    }

    @Test
    public void test07766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07766");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) (-1L), (double) (short) 10, (double) 'a');
        double double13 = rotation12.getAngle();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation6.applyInverseTo(rotation12);
        double[][] doubleArray15 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray15, 93.57684707871968d);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("de_DE", (java.lang.Object[]) doubleArray15);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray15, 0.9950747799116089d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2.3122509176395862d + "'", double13 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(doubleArray15);
    }

    @Test
    public void test07767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07767");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7723533772244097d, 1.5385319511131623d, (-6.797493410635224E-4d), 1.5341214923059198E10d, false);
    }

    @Test
    public void test07768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07768");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println(true);
        byte[] byteArray18 = new byte[] { (byte) -1, (byte) 0 };
        printStream6.write(byteArray18);
        boolean boolean20 = printStream6.checkError();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream6, false);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException27.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("zxz_KO_KR", (java.lang.Object[]) throwableArray28);
        java.io.PrintWriter printWriter31 = printWriter22.format("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray28);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA3();
        java.lang.String str36 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder33.getA1();
        printWriter32.println((java.lang.Object) rotationOrder33);
        char[] charArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            printWriter32.println(charArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZYZ" + "'", str36, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D37);
    }

    @Test
    public void test07769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07769");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation5.getQ0();
        double double16 = rotation5.getQ0();
        double[][] doubleArray17 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double24 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation23.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation5.applyInverseTo(rotation23);
        double double34 = rotation33.getAngle();
        double double35 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D43, (double) (byte) 100, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation41.applyTo(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation41.revert();
        double double50 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation33.applyTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation33.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder53.getA1();
        java.lang.String str56 = rotationOrder53.toString();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder53.getA3();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, 2.1098021193192458d, (double) 100L, (-381.8802471205947d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str63 = rotationOrder62.toString();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str68 = rotationOrder62.toString();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder62.getA1();
        double[] doubleArray72 = rotation61.getAngles(rotationOrder62);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder62.getA1();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray74 = rotation33.getAngles(rotationOrder62);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 52.0d + "'", double24 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-12804.0d) + "'", double35 == (-12804.0d));
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ZXZ" + "'", str56, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ZXZ" + "'", str63, "ZXZ");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ZXZ" + "'", str68, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0317905342705476, 0.530964914873383, -1.7475360362296926]");
        org.junit.Assert.assertNotNull(vector3D73);
    }

    @Test
    public void test07770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07770");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-3.0171984405909804E-8d), (-0.13768695521062307d), (double) (-1L));
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertNotNull(vector3D8);
    }

    @Test
    public void test07771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07771");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream1.println((long) 10);
        java.io.PrintStream printStream10 = printStream1.append('x');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.OutputStream) printStream10, false);
        printStream10.close();
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale18 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str19 = locale18.getScript();
        java.util.Locale locale20 = java.util.Locale.KOREA;
        java.lang.String str21 = locale18.getDisplayLanguage(locale20);
        java.lang.String[] strArray24 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray24, (java.lang.Throwable) mathException26);
        java.io.PrintWriter printWriter28 = printWriter17.format(locale20, "YZY", (java.lang.Object[]) strArray24);
        printWriter28.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException34);
        java.lang.Object[] objArray36 = mathException34.getArguments();
        java.io.PrintWriter printWriter37 = printWriter28.format("org.apache.commons.math.MathException: ZXZ", objArray36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("\u97d3\u6587", objArray36);
        java.lang.Throwable[] throwableArray39 = mathException38.getSuppressed();
        java.io.PrintStream printStream40 = printStream10.format("Japanese", (java.lang.Object[]) throwableArray39);
        java.io.PrintStream printStream42 = printStream40.append('4');
        java.util.Locale.Category category43 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale44 = java.util.Locale.ENGLISH;
        boolean boolean45 = locale44.hasExtensions();
        java.util.Locale.setDefault(category43, locale44);
        java.util.Locale locale47 = java.util.Locale.ROOT;
        java.lang.String str48 = locale47.getDisplayLanguage();
        java.util.Locale locale49 = java.util.Locale.FRENCH;
        java.util.Locale locale50 = java.util.Locale.TAIWAN;
        java.lang.String str51 = locale49.getDisplayScript(locale50);
        java.lang.String str52 = locale47.getDisplayLanguage(locale49);
        java.util.Locale locale53 = locale47.stripExtensions();
        java.lang.String str54 = locale44.getDisplayName(locale47);
        java.util.Locale.Category category55 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale56 = java.util.Locale.ENGLISH;
        boolean boolean57 = locale56.hasExtensions();
        java.util.Locale.setDefault(category55, locale56);
        java.util.Locale locale59 = java.util.Locale.getDefault(category55);
        java.lang.String str60 = locale44.getDisplayLanguage(locale59);
        java.lang.String str61 = locale44.getDisplayName();
        java.lang.String str62 = locale44.getLanguage();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException66);
        java.lang.Object[] objArray68 = mathException66.getArguments();
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("deu", (java.lang.Throwable) mathException66);
        java.lang.Throwable[] throwableArray70 = mathException69.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation77.getAxis();
        double[][] doubleArray79 = rotation77.getMatrix();
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray70, (java.lang.Throwable) mathException80);
        java.lang.String str82 = mathException80.getPattern();
        java.lang.Object[] objArray83 = mathException80.getArguments();
        java.lang.Throwable[] throwableArray84 = mathException80.getSuppressed();
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Throwable) mathException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException89);
        mathException85.addSuppressed((java.lang.Throwable) mathException89);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException89);
        java.lang.Throwable[] throwableArray93 = mathException89.getSuppressed();
        java.io.PrintStream printStream94 = printStream40.format(locale44, "\u97d3\u6587)", (java.lang.Object[]) throwableArray93);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream10);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str21, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(printStream40);
        org.junit.Assert.assertNotNull(printStream42);
        org.junit.Assert.assertTrue("'" + category43 + "' != '" + java.util.Locale.Category.DISPLAY + "'", category43.equals(java.util.Locale.Category.DISPLAY));
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "fr");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "English" + "'", str54, "English");
        org.junit.Assert.assertTrue("'" + category55 + "' != '" + java.util.Locale.Category.DISPLAY + "'", category55.equals(java.util.Locale.Category.DISPLAY));
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "English" + "'", str60, "English");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "English" + "'", str61, "English");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "en" + "'", str62, "en");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "French" + "'", str82, "French");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[[25407.0, 1040.0, 2000.0], [-1040.0, 5407.0, 10400.0], [2000.0, -10400.0, 5607.0]]");
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertNotNull(throwableArray93);
        org.junit.Assert.assertNotNull(printStream94);
    }

    @Test
    public void test07772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07772");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-6.797493410635224E-4d), 60.912721436461325d, 0.7069393147060633d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str5 = rotationOrder4.toString();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str10 = rotationOrder4.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder4.getA1();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D3.add(vector3D11);
        double double14 = vector3D11.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str17 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA3();
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        double double25 = vector3D21.getY();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.subtract(vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str29 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D30.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D31.negate();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D32.negate();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((-12.469000826984491d), vector3D26, 3.141592653589793d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) 1L, (double) '4', (double) 1.0f);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D39.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.subtract(1.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D11.add(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZXZ" + "'", str5, "ZXZ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXZ" + "'", str10, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXZ" + "'", str17, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXZ" + "'", str29, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
    }

    @Test
    public void test07773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07773");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str17 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D14, vector3D25);
        double double27 = rotation26.getAngle();
        double double28 = rotation26.getQ1();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation26.revert();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXZ" + "'", str17, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotation29);
    }

    @Test
    public void test07774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07774");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder7.getA1();
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D6.add(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.add((double) (-1.0f), vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation36.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D49, vector3D50);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D60, (double) (byte) 100, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation58.applyTo(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D60.subtract(vector3D67);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray75 = rotation74.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D77, (double) (byte) 100, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D82, (double) (byte) 100, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D79, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation74.applyInverseTo(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D87, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D67, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((-3.141592653589793d), vector3D25, (double) '4', vector3D29, (double) 0, vector3D49, 0.0d, vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D19.add((double) '4', vector3D29);
        double double93 = vector3D19.getX();
        double double94 = vector3D19.getX();
        double double95 = vector3D19.getAlpha();
        double double96 = vector3D19.getAlpha();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 52.0d + "'", double93 == 52.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 52.0d + "'", double94 == 52.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
    }

    @Test
    public void test07775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07775");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D16);
        double[][] doubleArray19 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (double) ' ', 2.0918418036628577d);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D25, 12804.0d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ1();
        double double36 = rotation34.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D38, (double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.subtract((double) 10L, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation34.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D47.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double55 = rotation54.getQ0();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double62 = rotation61.getQ0();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation54.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation54.revert();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D47.subtract(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D69, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D66, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D66.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str75 = rotationOrder74.toString();
        java.lang.String str76 = rotationOrder74.toString();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder74.getA3();
        double double78 = vector3D77.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D73.add(vector3D79);
        double double81 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D25.add((double) 'x', vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation5.applyTo(vector3D73);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 100.0d + "'", double35 == 100.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 52.0d + "'", double55 == 52.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "XZY" + "'", str75, "XZY");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "XZY" + "'", str76, "XZY");
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 120.56122080658437d + "'", double81 == 120.56122080658437d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
    }

    @Test
    public void test07776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07776");
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D4, (double) (byte) 100, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D11);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray21 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D23, (double) (byte) 100, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D28, (double) (byte) 100, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D25, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation20.applyInverseTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation42.applyTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.negate();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        double double52 = vector3D51.getY();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (-1L), vector3D6, (double) ' ', vector3D33, (double) (-1.0f), vector3D49, (double) 10.0f, vector3D51);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray61 = rotation60.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D68, (double) (byte) 100, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D65, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation60.applyInverseTo(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D73, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D73.negate();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D53, 100.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D53.scalarMultiply(69.08270017035626d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder81.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder81.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D79, 1.1906907659595922d, vector3D84);
        double double86 = vector3D79.getZ();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }

    @Test
    public void test07777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07777");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.println(0.0d);
        printWriter12.print((long) (byte) 10);
        printWriter12.println();
        printWriter12.print((int) (short) 0);
        java.io.PrintWriter printWriter21 = printWriter12.append('x');
        java.util.Locale locale23 = java.util.Locale.forLanguageTag("Chinesisch");
        java.util.Set<java.lang.Character> charSet24 = locale23.getExtensionKeys();
        printWriter12.println((java.lang.Object) locale23);
        java.io.PrintWriter printWriter27 = printWriter12.append('4');
        printWriter12.print(false);
        printWriter12.flush();
        java.util.Locale.Category category31 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale32 = java.util.Locale.ENGLISH;
        boolean boolean33 = locale32.hasExtensions();
        java.util.Locale.setDefault(category31, locale32);
        java.util.Locale locale35 = java.util.Locale.GERMANY;
        java.util.Set<java.lang.String> strSet36 = locale35.getUnicodeLocaleKeys();
        java.lang.String str37 = locale32.getDisplayCountry(locale35);
        java.util.Set<java.lang.String> strSet38 = locale32.getUnicodeLocaleAttributes();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray50 = rotation49.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(doubleArray50, 1.5707963267948966d);
        java.io.PrintWriter printWriter53 = printWriter12.printf(locale32, "\u97d3\u6587\u5357\u97d3)", (java.lang.Object[]) doubleArray50);
        printWriter12.println(true);
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "");
        org.junit.Assert.assertNotNull(charSet24);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertTrue("'" + category31 + "' != '" + java.util.Locale.Category.DISPLAY + "'", category31.equals(java.util.Locale.Category.DISPLAY));
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "de_DE");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(printWriter53);
    }

    @Test
    public void test07778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07778");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) 'u', 3.141592653589793d, (double) 0L);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray11 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D18, (double) (byte) 100, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation10.applyInverseTo(vector3D15);
        double double24 = rotation10.getQ0();
        double double25 = rotation10.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation10.applyInverseTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray38 = rotation37.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D45, (double) (byte) 100, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D42, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation37.applyInverseTo(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation37.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D29.add(0.9649660284921133d, vector3D51);
        double double53 = org.apache.commons.math.geometry.Vector3D.angle(vector3D4, vector3D52);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D4, (-1.6394241590049627E8d));
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((-0.09667091924386814d), (-0.0d), 2.5657054957045693d);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double66 = rotation65.getQ0();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double73 = rotation72.getQ0();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation65.applyTo(rotation72);
        double double75 = rotation72.getQ3();
        double double76 = rotation72.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation72.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder78.getA1();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray88 = rotation87.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation72.applyTo(rotation87);
        double double90 = rotation87.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder91 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str92 = rotationOrder91.toString();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotationOrder91.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder91.getA1();
        double[] doubleArray95 = rotation87.getAngles(rotationOrder91);
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotationOrder91.getA1();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation97 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D4, vector3D59, vector3D96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 52.0d + "'", double24 == 52.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 52.0d + "'", double66 == 52.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 52.0d + "'", double73 == 52.0d);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 10.0d + "'", double75 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "YZY" + "'", str92, "YZY");
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-1.5707963267948966, 0.530964914873383, 1.5707963267948966]");
        org.junit.Assert.assertNotNull(vector3D96);
    }

    @Test
    public void test07779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07779");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double10 = rotation9.getQ0();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double17 = rotation16.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation9.applyTo(rotation16);
        double double19 = rotation9.getQ0();
        double double20 = rotation9.getQ0();
        double[][] doubleArray21 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation27.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation9.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyTo(rotation50);
        double double53 = rotation43.getQ0();
        double double54 = rotation43.getQ0();
        double[][] doubleArray55 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double62 = rotation61.getQ0();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double69 = rotation68.getQ0();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation61.applyTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation43.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation27.applyInverseTo(rotation61);
        double double73 = rotation72.getQ2();
        double double74 = rotation72.getQ2();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double81 = rotation80.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder82, (double) (-1L), (double) (short) 10, (double) 'a');
        double double87 = rotation86.getAngle();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation80.applyInverseTo(rotation86);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation80.revert();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation80.getAxis();
        org.apache.commons.math.geometry.Rotation rotation91 = rotation72.applyInverseTo(rotation80);
        double double92 = rotation80.getQ3();
        double double93 = rotation80.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D97 = new org.apache.commons.math.geometry.Vector3D((-1.0d), (-1280400.0d), 1.5599296019390303d);
        org.apache.commons.math.geometry.Vector3D vector3D98 = rotation80.applyInverseTo(vector3D97);
        org.apache.commons.math.geometry.Vector3D vector3D99 = vector3D3.add(vector3D98);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YZX" + "'", str2, "YZX");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 52.0d + "'", double10 == 52.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 52.0d + "'", double53 == 52.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 52.0d + "'", double69 == 52.0d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 52.0d + "'", double81 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2.3122509176395862d + "'", double87 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 10.0d + "'", double92 == 10.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 10.0d + "'", double93 == 10.0d);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertNotNull(vector3D99);
    }

    @Test
    public void test07780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07780");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation21.revert();
        double double23 = rotation21.getQ0();
        double double24 = rotation21.getQ3();
        double[][] doubleArray25 = rotation21.getMatrix();
        double double26 = rotation21.getQ1();
        double double27 = rotation21.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 102.8131477408346d + "'", double23 == 102.8131477408346d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 24.291555113709315d + "'", double24 == 24.291555113709315d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-4.306121336489983d) + "'", double26 == (-4.306121336489983d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-4.306121336489983d) + "'", double27 == (-4.306121336489983d));
    }

    @Test
    public void test07781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07781");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        java.io.PrintWriter printWriter11 = printWriter3.format(locale7, "zxz", (java.lang.Object[]) throwableArray10);
        char[] charArray15 = new char[] { 'a', ' ', '#' };
        printWriter11.println(charArray15);
        java.util.Locale locale17 = java.util.Locale.FRENCH;
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.lang.String str21 = locale17.getDisplayLanguage(locale18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray33 = rotation32.getMatrix();
        java.io.PrintWriter printWriter34 = printWriter11.printf(locale17, "english", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray33, (double) '#');
        double double37 = rotation36.getAngle();
        double double38 = rotation36.getQ3();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "fr");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "fran\347ais" + "'", str21, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.5309649148733835d + "'", double37 == 0.5309649148733835d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test07782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07782");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "XZY" + "'", str9, "XZY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
    }

    @Test
    public void test07783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07783");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 100, (double) 100, (double) (byte) 10, (double) 100L, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D8.orthogonal();
        double double10 = vector3D9.getY();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyInverseTo(vector3D9);
        double[][] doubleArray12 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D20, (double) (byte) 100, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation18.applyTo(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation18.getAxis();
        double[][] doubleArray26 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation5.applyTo(rotation18);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
    }

    @Test
    public void test07784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07784");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.negate();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.negate();
        double double8 = vector3D6.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.0d) + "'", double8 == (-0.0d));
    }

    @Test
    public void test07785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07785");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D18, vector3D19);
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.scalarMultiply((double) 10L);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D32, (double) (byte) 100, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation30.applyTo(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation30.getAxis();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation30.revert();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D47, (double) (byte) 100, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D44, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D54, (double) (byte) 100, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D60, (double) (byte) 100, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D65, (double) (byte) 100, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D62, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D49, (double) (byte) 1, vector3D57, (double) (short) 100, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, vector3D57, (double) 0L, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D74.scalarMultiply((double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation30.applyInverseTo(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D74.scalarMultiply(270.0479994061873d);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D20.subtract((-2.564013114057005E-11d), vector3D80);
        double double82 = vector3D80.getX();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 145.90755677424102d + "'", double82 == 145.90755677424102d);
    }

    @Test
    public void test07786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07786");
        java.io.PrintStream printStream1 = new java.io.PrintStream("fr");
        java.io.PrintStream printStream3 = printStream1.append((java.lang.CharSequence) "French");
        printStream1.print((double) 1);
        java.util.Locale.Builder builder6 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder8 = builder6.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder10 = builder6.setLanguage("ZXZ");
        java.util.Locale locale11 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder12 = builder6.setLocale(locale11);
        java.util.Locale locale13 = locale11.stripExtensions();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        double double30 = rotation20.getQ0();
        double double31 = rotation20.getQ0();
        double[][] doubleArray32 = rotation20.getMatrix();
        java.io.PrintStream printStream33 = printStream1.format(locale13, "zh-CN", (java.lang.Object[]) doubleArray32);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter38 = printWriter36.append('#');
        java.lang.Object[] objArray40 = null;
        java.io.PrintWriter printWriter41 = printWriter38.format("fran\347ais", objArray40);
        java.util.Locale locale42 = null;
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray45 = mathException44.getSuppressed();
        java.io.PrintWriter printWriter46 = printWriter38.format(locale42, "zxz", (java.lang.Object[]) throwableArray45);
        char[] charArray50 = new char[] { 'a', ' ', '#' };
        printWriter46.println(charArray50);
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.FRENCH;
        java.util.Locale locale54 = java.util.Locale.TAIWAN;
        java.lang.String str55 = locale53.getDisplayScript(locale54);
        java.lang.String str56 = locale52.getDisplayLanguage(locale53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray68 = rotation67.getMatrix();
        java.io.PrintWriter printWriter69 = printWriter46.printf(locale52, "english", (java.lang.Object[]) doubleArray68);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(doubleArray68, (double) '#');
        java.io.PrintStream printStream72 = printStream33.format("yzy", (java.lang.Object[]) doubleArray68);
        boolean boolean73 = printStream72.checkError();
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter((java.io.OutputStream) printStream72, true);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter((java.io.OutputStream) printStream72);
        printStream72.println();
        org.junit.Assert.assertNotNull(printStream3);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "de_DE");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(printStream33);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "fr");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "fran\347ais" + "'", str56, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(printStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test07787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07787");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation12.getQ3();
        double double16 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation12.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray24 = rotation22.getAngles(rotationOrder23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA3();
        java.lang.String str26 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, 18.91058070538489d, (-9.95037190209989d), 0.21309643366023423d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder23.getA3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXZ" + "'", str19, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.6704649792860589, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "YXZ" + "'", str26, "YXZ");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
    }

    @Test
    public void test07788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07788");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        java.lang.String[] strArray15 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray20 = mathException19.getSuppressed();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException19);
        java.io.PrintStream printStream22 = printStream6.format("deu", (java.lang.Object[]) strArray15);
        java.io.PrintStream printStream24 = new java.io.PrintStream("ko-KR");
        printStream24.close();
        java.util.Locale locale26 = java.util.Locale.UK;
        java.lang.String[] strArray28 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream29 = printStream24.format(locale26, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray28);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter33 = printWriter31.append('#');
        java.lang.Object[] objArray35 = null;
        java.io.PrintWriter printWriter36 = printWriter33.format("fran\347ais", objArray35);
        java.util.Locale locale37 = null;
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray40 = mathException39.getSuppressed();
        java.io.PrintWriter printWriter41 = printWriter33.format(locale37, "zxz", (java.lang.Object[]) throwableArray40);
        char[] charArray45 = new char[] { 'a', ' ', '#' };
        printWriter41.println(charArray45);
        printStream24.println(charArray45);
        java.io.PrintStream printStream49 = new java.io.PrintStream("ko-KR");
        printStream49.close();
        java.util.Locale locale51 = java.util.Locale.UK;
        java.lang.String[] strArray53 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream54 = printStream49.format(locale51, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray53);
        printStream54.write(10);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.OutputStream) printStream54);
        byte[] byteArray59 = new byte[] { (byte) -1 };
        printStream54.write(byteArray59);
        printStream24.write(byteArray59);
        printStream22.write(byteArray59);
        java.io.PrintStream printStream64 = printStream22.append((java.lang.CharSequence) "fr-FR");
        java.util.Locale locale65 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str66 = locale65.getScript();
        java.util.Locale locale67 = java.util.Locale.KOREA;
        java.lang.String str68 = locale65.getDisplayLanguage(locale67);
        java.lang.String str69 = locale65.getLanguage();
        java.util.Locale locale70 = locale65.stripExtensions();
        java.util.Locale locale71 = locale65.stripExtensions();
        java.util.Set<java.lang.String> strSet72 = locale71.getUnicodeLocaleAttributes();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException75 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray76 = cardanEulerSingularityException75.getSuppressed();
        java.io.PrintStream printStream77 = printStream22.printf(locale71, "", (java.lang.Object[]) throwableArray76);
        boolean boolean78 = locale71.hasExtensions();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(printStream29);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printStream54);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[-1]");
        org.junit.Assert.assertNotNull(printStream64);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(locale67);
        org.junit.Assert.assertEquals(locale67.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str68, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "zh" + "'", str69, "zh");
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "zh_TW");
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "zh_TW");
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(printStream77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test07789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07789");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.5849881914531216d), 0.9994338863035022d, 0.7071067811865476d);
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZYX" + "'", str9, "ZYX");
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test07790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07790");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) 1, vector3D7);
        double double9 = vector3D7.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, (double) (byte) 100, (double) 10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA1();
        java.lang.String str21 = rotationOrder18.toString();
        java.lang.String str22 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        double[] doubleArray28 = rotation26.getAngles(rotationOrder27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA2();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double37 = rotation36.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation36.applyTo(rotation43);
        double double46 = rotation36.getQ0();
        double double47 = rotation36.getQ0();
        double[][] doubleArray48 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double55 = rotation54.getQ0();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double62 = rotation61.getQ0();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation54.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation36.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.scalarMultiply((double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D65.negate();
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D(0.995037190209989d, vector3D16, (double) 10, vector3D29, 1.4787032876674264d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D16);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation76.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder78.getA1();
        double double84 = vector3D83.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D77.add(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D16.add(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D(1.5712539656805302d, vector3D86);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D87);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation88.revert();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-0.09966865249116204d) + "'", double9 == (-0.09966865249116204d));
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXZ" + "'", str19, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZXZ" + "'", str21, "ZXZ");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXZ" + "'", str22, "ZXZ");
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.7902180191116501, -0.5204312332296097, 1.8449601148260304]");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 52.0d + "'", double46 == 52.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 52.0d + "'", double55 == 52.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation89);
    }

    @Test
    public void test07791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07791");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D(0.5763904177042349d, (-0.9904757959510307d));
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D16, (double) (byte) 100, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D18, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D28, (double) (byte) 100, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D18, (double) 0.0f, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D32.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray42 = rotation41.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D46, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation41.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D32, (double) 10.0f, vector3D46);
        double double56 = vector3D55.getY();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation12.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, 0.995037190209989d, (double) 0.0f, 0.995037190209989d);
        double[] doubleArray66 = rotation12.getAngles(rotationOrder58);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder58.getA3();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.2306136571222621, 1.0910775649948516, -1.9109789964675312]");
        org.junit.Assert.assertNotNull(vector3D67);
    }

    @Test
    public void test07792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07792");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        boolean boolean47 = printStream6.checkError();
        printStream6.flush();
        java.io.PrintStream printStream52 = printStream6.append((java.lang.CharSequence) "XYZ", (int) (short) 0, 0);
        printStream6.print(10L);
        printStream6.close();
        java.io.PrintStream printStream57 = printStream6.append(' ');
        printStream57.println((int) (byte) 100);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(printStream52);
        org.junit.Assert.assertNotNull(printStream57);
    }

    @Test
    public void test07793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07793");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        printStream1.println('a');
        java.io.PrintStream printStream23 = new java.io.PrintStream((java.io.OutputStream) printStream1, false);
        boolean boolean24 = printStream1.checkError();
        printStream1.print((float) (-1));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test07794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07794");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1040.0d, 0.0657541776220426d, 0.7720095130817449d, 0.0d, false);
    }

    @Test
    public void test07795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07795");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '#', 2.0790806738125385d, (-0.2868032122551722d));
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YZY" + "'", str1, "YZY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5050826295817065d + "'", double7 == 0.5050826295817065d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3.0627830202130406d + "'", double8 == 3.0627830202130406d);
    }

    @Test
    public void test07796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07796");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation12.getQ3();
        double double16 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation12.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        double[] doubleArray24 = rotation22.getAngles(rotationOrder23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation22.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D26 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, 1.884114997657917d, (double) 0, 93.57684707871968d);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, 0.4028887144651276d, 0.9438163164864175d, (-0.009438163164864176d));
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.scalarMultiply(0.5403023058681398d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D39.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D42.negate();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.negate();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D26, vector3D36, vector3D42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXZ" + "'", str19, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.6704649792860589, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
    }

    @Test
    public void test07797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07797");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 100L, 1.7607846147136124d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D6, (double) (byte) 100, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D6.subtract((double) 10L, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D17, (double) (byte) 100, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D22, (double) (byte) 100, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D19, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D13.subtract((double) 0, vector3D26);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double42 = rotation41.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation34.applyTo(rotation41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation34.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D54, (double) (byte) 100, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D61, (double) (byte) 100, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D67, (double) (byte) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D72, (double) (byte) 100, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D69, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D56, (double) (byte) 1, vector3D64, (double) (short) 100, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D26, (double) (short) 100, vector3D45, 100.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D3.add(vector3D78);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder80.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((-0.09966865249116204d), (-0.02937648959434208d), (double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D82.add(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D3.add(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((double) 0L, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D3.normalize();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 52.0d + "'", double42 == 52.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test07798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07798");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, (double) '#', (double) 0L, (double) (short) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double34 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation33.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation27.applyInverseTo(rotation33);
        double double45 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation11.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation5.applyInverseTo(rotation46);
        double double48 = rotation5.getQ1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) 'a', 0.26237485370392877d, (-1.0d), 0.0d, false);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double68 = rotation67.getQ0();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation60.applyTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation60.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation76 = rotation70.applyTo(rotation75);
        double double77 = rotation75.getAngle();
        double double78 = rotation75.getQ0();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation54.applyInverseTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation5.applyInverseTo(rotation79);
        double[][] doubleArray81 = rotation5.getMatrix();
        double double82 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 128040.0d + "'", double45 == 128040.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.33033571077024615d + "'", double48 == 0.33033571077024615d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 52.0d + "'", double61 == 52.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 52.0d + "'", double68 == 52.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2.3122509176395862d + "'", double77 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.4028887144651276d + "'", double78 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9438163164864175d + "'", double82 == 0.9438163164864175d);
    }

    @Test
    public void test07799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07799");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        char[] charArray23 = new char[] { 'a', 'a', '4' };
        printStream1.println(charArray23);
        printStream1.print((long) 'x');
        printStream1.println();
        printStream1.print(1.5905084122975552d);
        printStream1.println();
        printStream1.println((int) (byte) 100);
        java.lang.Class<?> wildcardClass33 = printStream1.getClass();
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, a, 4]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test07800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07800");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.println((float) 100L);
        printStream1.println("hi!");
        printStream1.println((float) 10L);
        printStream1.print(100.0f);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream97 = printStream1.append((java.lang.CharSequence) "XZX", (int) ' ', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07801");
        java.io.PrintStream printStream2 = new java.io.PrintStream("ko-KR");
        printStream2.close();
        java.util.Locale locale4 = java.util.Locale.UK;
        java.lang.String[] strArray6 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream7 = printStream2.format(locale4, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray6);
        printStream7.write(10);
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.OutputStream) printStream7);
        printStream7.print((int) (short) 1);
        printStream7.println((double) 100L);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter((java.io.OutputStream) printStream7, false);
        printStream7.flush();
        java.io.PrintStream printStream19 = printStream7.append(' ');
        java.io.PrintStream printStream21 = printStream7.append('a');
        printStream21.print((float) 0);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter((java.io.OutputStream) printStream21);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double39 = rotation38.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation31.revert();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double48 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation31.applyInverseTo(rotation47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotation47.getAxis();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double57 = rotation56.getQ1();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation47.applyTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D66, (double) (byte) 100, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation64.applyTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation64.getAxis();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation58.applyTo(rotation64);
        double[][] doubleArray73 = rotation72.getMatrix();
        java.io.PrintWriter printWriter74 = printWriter24.printf("fr_FR", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException75 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZH_CN (zho)", (java.lang.Object[]) doubleArray73);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(printStream7);
        org.junit.Assert.assertNotNull(printStream19);
        org.junit.Assert.assertNotNull(printStream21);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 52.0d + "'", double39 == 52.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 100.0d + "'", double57 == 100.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(printWriter74);
    }

    @Test
    public void test07802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07802");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (double) (byte) 1, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        double double14 = vector3D13.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test07803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07803");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        printWriter1.flush();
        printWriter1.print((float) '4');
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation11.applyInverseTo(vector3D21);
        double double23 = vector3D21.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str25 = rotationOrder24.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D26.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D21.add(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ1();
        double double36 = rotation34.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D38, (double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.subtract((double) 10L, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation34.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D47.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D28.add(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D52, (double) (byte) 100, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.subtract((double) 10L, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D68, (double) (byte) 100, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D65, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D59.subtract((double) 0, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D76, (double) (byte) 100, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D81, (double) (byte) 100, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D78, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), vector3D47, (double) (byte) 100, vector3D72, (double) 100L, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D86.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D86.negate();
        printWriter1.println((java.lang.Object) vector3D86);
        printWriter1.println("\u97d3\u6587)");
        printWriter1.write((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ZXZ" + "'", str25, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 100.0d + "'", double35 == 100.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test07804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07804");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.println((float) 100L);
        printStream1.println("hi!");
        printStream1.print("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)");
        java.io.PrintStream printStream92 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        java.io.PrintStream printStream93 = new java.io.PrintStream((java.io.OutputStream) printStream92);
        java.lang.Object[] objArray95 = null;
        java.io.PrintStream printStream96 = printStream93.printf("ORG.APACHE.COMMONS.MATH.GEOMETRY.NOTAROTATIONMATRIXEXCEPTION: ZH-CN", objArray95);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream96);
    }

    @Test
    public void test07805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07805");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        double double12 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.revert();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(rotation13);
    }

    @Test
    public void test07806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07806");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((double) (byte) 100);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter10 = printWriter8.append('#');
        java.lang.Object[] objArray12 = null;
        java.io.PrintWriter printWriter13 = printWriter10.format("fran\347ais", objArray12);
        java.util.Locale locale14 = null;
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        java.io.PrintWriter printWriter18 = printWriter10.format(locale14, "zxz", (java.lang.Object[]) throwableArray17);
        char[] charArray22 = new char[] { 'a', ' ', '#' };
        printWriter18.println(charArray22);
        java.util.Locale locale24 = java.util.Locale.FRENCH;
        java.util.Locale locale25 = java.util.Locale.FRENCH;
        java.util.Locale locale26 = java.util.Locale.TAIWAN;
        java.lang.String str27 = locale25.getDisplayScript(locale26);
        java.lang.String str28 = locale24.getDisplayLanguage(locale25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray40 = rotation39.getMatrix();
        java.io.PrintWriter printWriter41 = printWriter18.printf(locale24, "english", (java.lang.Object[]) doubleArray40);
        printStream1.println((java.lang.Object) printWriter41);
        java.util.Locale.Category category43 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale44 = java.util.Locale.ROOT;
        java.lang.String str45 = locale44.getDisplayLanguage();
        java.util.Locale.setDefault(category43, locale44);
        java.util.Locale locale47 = java.util.Locale.getDefault(category43);
        java.util.Locale locale48 = java.util.Locale.ROOT;
        java.lang.String str49 = locale48.getDisplayLanguage();
        java.lang.String str50 = locale48.getDisplayLanguage();
        java.util.Locale locale51 = locale48.stripExtensions();
        java.util.Locale.setDefault(category43, locale51);
        java.lang.String[] strArray55 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray55, (java.lang.Throwable) mathException57);
        java.lang.String[] strArray62 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray62, (java.lang.Throwable) mathException64);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray67 = mathException66.getSuppressed();
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray62, (java.lang.Throwable) mathException66);
        java.lang.Throwable[] throwableArray69 = mathException66.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException70 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray69);
        mathException58.addSuppressed((java.lang.Throwable) notARotationMatrixException70);
        java.lang.String str72 = mathException58.getPattern();
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException73);
        java.lang.Object[] objArray75 = mathException73.getArguments();
        java.io.PrintWriter printWriter76 = printWriter41.printf(locale51, "korean", objArray75);
        printWriter41.println("fr-CA");
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "fr");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "fr");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "fran\347ais" + "'", str28, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertTrue("'" + category43 + "' != '" + java.util.Locale.Category.FORMAT + "'", category43.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ZXZ" + "'", str72, "ZXZ");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(printWriter76);
    }

    @Test
    public void test07807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07807");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation5.getAxis();
        double double13 = rotation5.getAngle();
        double double14 = rotation5.getQ0();
        double double15 = rotation5.getQ2();
        double[][] doubleArray16 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
    }

    @Test
    public void test07808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07808");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        double[][] doubleArray8 = rotation6.getMatrix();
        double double9 = rotation6.getQ1();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation0.applyInverseTo(rotation6);
        double[][] doubleArray11 = rotation0.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.XZY;
        double[] doubleArray13 = rotation0.getAngles(rotationOrder12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double27 = rotation26.getQ0();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.applyTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation19.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyTo(rotation34);
        double double36 = rotation34.getAngle();
        double double37 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation0.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA3();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder40.getA2();
        double[] doubleArray47 = rotation39.getAngles(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, -0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2.3122509176395862d + "'", double36 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.4028887144651276d + "'", double37 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-2.3327015490605456, 0.22018405042531133, -0.6510139312528469]");
    }

    @Test
    public void test07809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07809");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double[][] doubleArray15 = rotation14.getMatrix();
        double double16 = rotation14.getQ2();
        double double17 = rotation14.getQ2();
        double double18 = rotation14.getAngle();
        double double19 = rotation14.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test07810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07810");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str6 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 1, (double) (byte) 0, 0.0d);
        double[] doubleArray11 = rotation4.getAngles(rotationOrder5);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder5.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XZY" + "'", str6, "XZY");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test07811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07811");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("KOR");
        java.util.Locale locale2 = java.util.Locale.ENGLISH;
        boolean boolean3 = locale2.hasExtensions();
        java.io.PrintStream printStream6 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream6.format("", objArray79);
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale2, "KOR", objArray79);
        printWriter91.print('#');
        java.io.PrintWriter printWriter95 = new java.io.PrintWriter((java.io.Writer) printWriter91, true);
        printWriter95.println();
        java.io.PrintWriter printWriter98 = printWriter95.append((java.lang.CharSequence) "zxz_KOR_ko-KR");
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertNotNull(printWriter98);
    }

    @Test
    public void test07812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07812");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.println((long) (short) 0);
        printWriter1.println();
        printWriter1.print(' ');
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale15 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str16 = locale15.getScript();
        java.util.Locale locale17 = java.util.Locale.KOREA;
        java.lang.String str18 = locale15.getDisplayLanguage(locale17);
        java.lang.String[] strArray21 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray21, (java.lang.Throwable) mathException23);
        java.io.PrintWriter printWriter25 = printWriter14.format(locale17, "YZY", (java.lang.Object[]) strArray21);
        printWriter25.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException31);
        java.lang.Object[] objArray33 = mathException31.getArguments();
        java.io.PrintWriter printWriter34 = printWriter25.format("org.apache.commons.math.MathException: ZXZ", objArray33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("\u97d3\u6587", objArray33);
        java.lang.Throwable[] throwableArray36 = mathException35.getSuppressed();
        java.io.PrintWriter printWriter37 = printWriter1.printf("\uc911\uad6d\uc5b4", (java.lang.Object[]) throwableArray36);
        printWriter1.print((int) (byte) 1);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation46.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation46.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation62 = rotation56.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation56.getAxis();
        double double64 = rotation56.getQ2();
        double double65 = rotation56.getQ1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(1.912983406767073d, 100.02049971110628d, 1.3964058484385629E-10d, (-0.915248973644132d), false);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation56.applyTo(rotation71);
        double[][] doubleArray73 = rotation72.getMatrix();
        java.io.PrintWriter printWriter74 = printWriter1.format("\u6cd5\u570b", (java.lang.Object[]) doubleArray73);
        printWriter74.close();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str18, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 100.0d + "'", double65 == 100.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(printWriter74);
    }

    @Test
    public void test07813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07813");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println(true);
        byte[] byteArray18 = new byte[] { (byte) -1, (byte) 0 };
        printStream6.write(byteArray18);
        boolean boolean20 = printStream6.checkError();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream6, false);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException27.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("zxz_KO_KR", (java.lang.Object[]) throwableArray28);
        java.io.PrintWriter printWriter31 = printWriter22.format("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray28);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter22);
        java.io.PrintStream printStream34 = new java.io.PrintStream("\u97d3\u6587)");
        java.io.PrintStream printStream36 = new java.io.PrintStream("ko-KR");
        printStream36.close();
        java.util.Locale locale38 = java.util.Locale.UK;
        java.lang.String[] strArray40 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream41 = printStream36.format(locale38, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray40);
        printStream36.println((long) 10);
        java.io.PrintStream printStream44 = new java.io.PrintStream((java.io.OutputStream) printStream36);
        char[] charArray51 = new char[] { 'u', 'x', 'x', 'a', ' ', 'x' };
        printStream44.print(charArray51);
        printStream34.println(charArray51);
        printWriter22.println(charArray51);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter22, false);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(printStream41);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "uxxa x");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "uxxa x");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[u, x, x, a,  , x]");
    }

    @Test
    public void test07814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07814");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("de");
        printWriter1.print('x');
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray11 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D18, (double) (byte) 100, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation10.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation10.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation10.revert();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation10.getAxis();
        double[][] doubleArray27 = rotation10.getMatrix();
        java.io.PrintWriter printWriter28 = printWriter1.printf("ZYZ", (java.lang.Object[]) doubleArray27);
        printWriter1.print("");
        printWriter1.flush();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(printWriter28);
    }

    @Test
    public void test07815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07815");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.8272219123075313d), 4254.469029887802d, (-81.00118819117556d));
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (-1.569740199951139d), 1.5707963267948961d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZY" + "'", str1, "XZY");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XZY" + "'", str2, "XZY");
        org.junit.Assert.assertNotNull(vector3D3);
    }

    @Test
    public void test07816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07816");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str6 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 1, (double) (byte) 0, 0.0d);
        double[] doubleArray11 = rotation4.getAngles(rotationOrder5);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder5.getA2();
        java.lang.String str13 = rotationOrder5.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XZY" + "'", str6, "XZY");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "XZY" + "'", str13, "XZY");
    }

    @Test
    public void test07817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07817");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("KOR");
        printWriter1.println(' ');
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray15 = rotation14.getMatrix();
        java.io.PrintWriter printWriter16 = printWriter1.format("YZY", (java.lang.Object[]) doubleArray15);
        java.lang.String[] strArray18 = java.util.Locale.getISOCountries();
        java.io.PrintWriter printWriter19 = printWriter16.printf("\u97d3\u6587)", (java.lang.Object[]) strArray18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double27 = rotation26.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) (-1L), (double) (short) 10, (double) 'a');
        double double33 = rotation32.getAngle();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation26.applyInverseTo(rotation32);
        double[][] doubleArray35 = rotation32.getMatrix();
        java.io.PrintWriter printWriter36 = printWriter19.printf("fra", (java.lang.Object[]) doubleArray35);
        printWriter36.println("");
        printWriter36.write("KO-KR");
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2.3122509176395862d + "'", double33 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test07818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07818");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.util.Locale locale4 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        double double21 = rotation18.getQ3();
        double[][] doubleArray22 = rotation18.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter3.printf(locale4, "XZY", (java.lang.Object[]) doubleArray22);
        printWriter3.print((long) (short) 100);
        boolean boolean26 = printWriter3.checkError();
        printWriter3.println();
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter32 = printWriter30.append('#');
        java.lang.Object[] objArray34 = null;
        java.io.PrintWriter printWriter35 = printWriter32.format("fran\347ais", objArray34);
        java.util.Locale locale36 = java.util.Locale.GERMAN;
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale40 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str41 = locale40.getScript();
        java.util.Locale locale42 = java.util.Locale.KOREA;
        java.lang.String str43 = locale40.getDisplayLanguage(locale42);
        java.lang.String[] strArray46 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray46, (java.lang.Throwable) mathException48);
        java.io.PrintWriter printWriter50 = printWriter39.format(locale42, "YZY", (java.lang.Object[]) strArray46);
        java.io.PrintWriter printWriter51 = printWriter35.printf(locale36, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray46);
        printWriter35.println(1.7607846147136124d);
        java.io.PrintWriter printWriter55 = printWriter35.append((java.lang.CharSequence) "\uc77c\ubcf8\uc5b4");
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter35);
        printWriter56.print("chinese (china)_FRANCIA_org.apache.commons.math.MathException: ko_KR");
        java.util.Locale locale59 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet60 = locale59.getUnicodeLocaleAttributes();
        java.util.Locale locale62 = java.util.Locale.forLanguageTag("ITA");
        java.lang.String str63 = locale59.getDisplayCountry(locale62);
        java.util.Locale locale66 = new java.util.Locale("english", "\uc911\uad6d\uc5b4");
        java.lang.String str67 = locale62.getDisplayLanguage(locale66);
        java.io.PrintStream printStream70 = new java.io.PrintStream("Royaume-Uni");
        java.lang.String[] strArray75 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray75);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException77 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) strArray75);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException77);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ja_JP", (java.lang.Throwable) mathException78);
        java.lang.Object[] objArray80 = mathException78.getArguments();
        java.io.PrintStream printStream81 = printStream70.printf("org.apache.commons.math.mathexception", objArray80);
        java.io.PrintWriter printWriter82 = printWriter56.printf(locale62, "FRA", objArray80);
        java.io.PrintWriter printWriter83 = printWriter3.format("\ud55c\uad6d\uc5b4 (CHINESE (TAIWAN))", objArray80);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "de");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str43, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "ita");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "China" + "'", str63, "China");
// flaky:         org.junit.Assert.assertEquals(locale66.toString(), "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Italian" + "'", str67, "Italian");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(printStream81);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test07819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07819");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.5707963267948967d, (-0.20007132372592404d), 7.316495385752939E-4d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.5239624822779558d), 665808.0d, 1211523.1867412077d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZYZ" + "'", str2, "ZYZ");
    }

    @Test
    public void test07820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07820");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder7.getA1();
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D6.add(vector3D12);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D14, (-0.02937648959434208d));
        double double17 = rotation16.getQ1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D25, (double) (byte) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation23.applyTo(vector3D25);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation50.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation50.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation44.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation61.getAxis();
        double double63 = vector3D62.getAlpha();
        double double64 = vector3D62.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation23.applyInverseTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation16.applyInverseTo(rotation23);
        double double67 = rotation23.getQ3();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 7.316495385752939E-4d + "'", double17 == 7.316495385752939E-4d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 52.0d + "'", double43 == 52.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 52.0d + "'", double58 == 52.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.09966865249116202d + "'", double64 == 0.09966865249116202d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
    }

    @Test
    public void test07821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07821");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3.122716047001691d, 43.364388609539944d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (-0.02937648959434208d), (-3.141592653589793d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder3.getA3();
        java.lang.String str14 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D2.add(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "XZY" + "'", str14, "XZY");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
    }

    @Test
    public void test07822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07822");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation5.applyInverseTo(vector3D15);
        double double17 = vector3D15.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D15.add(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 'u', 3.141592653589793d, (double) 0L);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray35 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D37, (double) (byte) 100, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D39, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation34.applyInverseTo(vector3D39);
        double double48 = rotation34.getQ0();
        double double49 = rotation34.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation34.applyInverseTo(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray62 = rotation61.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D64, (double) (byte) 100, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D66, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation61.applyInverseTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D53.add(0.9649660284921133d, vector3D75);
        double double77 = org.apache.commons.math.geometry.Vector3D.angle(vector3D28, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D20.add((double) '#', vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D20.scalarMultiply((-0.0d));
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D20.negate();
        double double82 = vector3D20.getZ();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXZ" + "'", str19, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
    }

    @Test
    public void test07823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07823");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        double double21 = rotation5.getQ3();
        double double22 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
    }

    @Test
    public void test07824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07824");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (-1L), (-0.02937648959434208d), 0.0d, 52.0d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D7.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((-11094.094757084158d), (-0.9904757959510307d));
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D13.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D9.add((-6.797493410635224E-4d), vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.scalarMultiply(0.3403995840772179d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.normalize();
        double double20 = vector3D19.getX();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.2333899167574111d + "'", double20 == 0.2333899167574111d);
    }

    @Test
    public void test07825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07825");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray20 = mathException18.getArguments();
        java.io.PrintWriter printWriter21 = printWriter12.format("org.apache.commons.math.MathException: ZXZ", objArray20);
        java.lang.String[] strArray25 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray25, (java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray30 = mathException29.getSuppressed();
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray25, (java.lang.Throwable) mathException29);
        java.io.PrintWriter printWriter32 = printWriter21.printf("KOR", (java.lang.Object[]) strArray25);
        java.io.PrintStream printStream34 = new java.io.PrintStream("ko-KR");
        printStream34.close();
        java.util.Locale locale36 = java.util.Locale.UK;
        java.lang.String[] strArray38 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream39 = printStream34.format(locale36, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray38);
        printStream39.write(10);
        printStream39.write((int) (short) 0);
        printStream39.write((int) (short) 10);
        char[] charArray48 = new char[] { 'x', 'a' };
        printStream39.println(charArray48);
        printWriter21.println(charArray48);
        printWriter21.print('4');
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale55 = java.util.Locale.KOREAN;
        java.lang.String str56 = locale55.getDisplayLanguage();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double64 = rotation63.getQ0();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double71 = rotation70.getQ0();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation63.applyTo(rotation70);
        double double73 = rotation63.getQ0();
        double double74 = rotation63.getQ0();
        double[][] doubleArray75 = rotation63.getMatrix();
        java.io.PrintWriter printWriter76 = printWriter54.printf(locale55, "zh_CN", (java.lang.Object[]) doubleArray75);
        printWriter76.print((int) (byte) 1);
        printWriter21.print((java.lang.Object) printWriter76);
        java.io.PrintWriter printWriter81 = new java.io.PrintWriter((java.io.Writer) printWriter76, false);
        printWriter81.write((int) (byte) 1);
        printWriter81.println(' ');
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printStream39);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "xa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "xa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[x, a]");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "ko");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Korean" + "'", str56, "Korean");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 52.0d + "'", double64 == 52.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 52.0d + "'", double71 == 52.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 52.0d + "'", double73 == 52.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 52.0d + "'", double74 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(printWriter76);
    }

    @Test
    public void test07826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07826");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.println("fr");
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray13 = mathException12.getSuppressed();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException12);
        java.lang.Throwable[] throwableArray15 = mathException12.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray15);
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException16.getSuppressed();
        java.io.PrintStream printStream18 = printStream1.format("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) throwableArray17);
        printStream18.println((int) (short) 10);
        boolean boolean21 = printStream18.checkError();
        java.io.PrintStream printStream23 = printStream18.append((java.lang.CharSequence) "deu");
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ3();
        double[][] doubleArray33 = rotation31.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException34);
        java.lang.Throwable[] throwableArray36 = mathException35.getSuppressed();
        java.io.PrintStream printStream37 = printStream18.printf("", (java.lang.Object[]) throwableArray36);
        java.util.Locale.Category category38 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category39 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale40 = java.util.Locale.ROOT;
        java.lang.String str41 = locale40.getDisplayLanguage();
        java.util.Locale.setDefault(category39, locale40);
        java.util.Locale.setDefault(category38, locale40);
        java.lang.String str44 = locale40.getDisplayCountry();
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.lang.String str46 = locale45.getDisplayLanguage();
        java.util.Locale locale47 = java.util.Locale.FRENCH;
        java.util.Locale locale48 = java.util.Locale.TAIWAN;
        java.lang.String str49 = locale47.getDisplayScript(locale48);
        java.lang.String str50 = locale45.getDisplayLanguage(locale47);
        java.util.Locale locale51 = locale47.stripExtensions();
        java.util.Set<java.lang.String> strSet52 = locale51.getUnicodeLocaleAttributes();
        java.lang.String str53 = locale51.getVariant();
        java.util.Locale.Builder builder54 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder56 = builder54.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder58 = builder54.setLanguage("ZXZ");
        java.util.Locale locale59 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder60 = builder54.setLocale(locale59);
        java.util.Locale.setDefault(locale59);
        java.lang.String str62 = locale51.getDisplayName(locale59);
        java.util.Locale locale63 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale63);
        java.util.Locale locale65 = java.util.Locale.FRENCH;
        java.util.Locale locale66 = java.util.Locale.TAIWAN;
        java.lang.String str67 = locale65.getDisplayScript(locale66);
        java.lang.String str68 = locale63.getDisplayLanguage(locale66);
        java.util.Locale locale69 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale69);
        java.lang.String str71 = locale69.toLanguageTag();
        java.lang.String str72 = locale63.getDisplayVariant(locale69);
        java.util.Locale.Builder builder73 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder75 = builder73.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale76 = builder73.build();
        java.lang.String str77 = locale69.getDisplayScript(locale76);
        java.lang.String str78 = locale51.getDisplayVariant(locale76);
        java.lang.String str79 = locale51.getDisplayName();
        java.lang.String str80 = locale40.getDisplayScript(locale51);
        printStream18.println((java.lang.Object) locale40);
        java.io.PrintWriter printWriter82 = new java.io.PrintWriter((java.io.OutputStream) printStream18);
        java.io.PrintWriter printWriter84 = printWriter82.append('4');
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(printStream23);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(printStream37);
        org.junit.Assert.assertTrue("'" + category38 + "' != '" + java.util.Locale.Category.FORMAT + "'", category38.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category39 + "' != '" + java.util.Locale.Category.FORMAT + "'", category39.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "fr");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "fr");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Franz\366sisch" + "'", str62, "Franz\366sisch");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "fr");
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\u97d3\u6587" + "'", str68, "\u97d3\u6587");
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ko-KR" + "'", str71, "ko-KR");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\ud504\ub791\uc2a4\uc5b4" + "'", str79, "\ud504\ub791\uc2a4\uc5b4");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test07827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07827");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = vector3D6.getZ();
        double double8 = vector3D6.getX();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.09950371902099892d) + "'", double7 == (-0.09950371902099892d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.995037190209989d) + "'", double8 == (-0.995037190209989d));
    }

    @Test
    public void test07828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07828");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (double) 'u', 0.0657541776220426d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.6217166533367139d), (-0.420609110205706d), 0.8998637978207797d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA1();
        java.lang.String str14 = rotationOrder11.toString();
        java.lang.String str15 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        double[] doubleArray21 = rotation19.getAngles(rotationOrder20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder20.getA2();
        java.lang.String str24 = rotationOrder20.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (-0.09950371902099892d), 0.5309649148733835d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D30.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D25.add((-0.28722229304566843d), vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, 0.995037190209989d, (double) 0.0f, 0.995037190209989d);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, 3.1415782498482008d, (double) '#', 1.3964058484385629E-10d);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation45.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D31, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation10.applyInverseTo(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXZ" + "'", str12, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXZ" + "'", str14, "ZXZ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXZ" + "'", str15, "ZXZ");
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.7902180191116501, -0.5204312332296097, 1.8449601148260304]");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "XYZ" + "'", str24, "XYZ");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
    }

    @Test
    public void test07829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07829");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D2, (double) (byte) 100, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D20, (double) (byte) 100, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D25, (double) (byte) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D22, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D9, (double) (byte) 1, vector3D17, (double) (short) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D34, (double) (byte) 100, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D39, (double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D36, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D46, (double) (byte) 100, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D36, (double) 0.0f, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D9.subtract((double) 10L, vector3D48);
        double double52 = vector3D9.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str54 = rotationOrder53.toString();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str59 = rotationOrder53.toString();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double71 = rotation70.getQ1();
        double double72 = rotation70.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D74.subtract((double) 10L, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation70.applyInverseTo(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D83.negate();
        double double85 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D64, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D(1.4672601404653396d, 0.33033571077024615d);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D83, vector3D88);
        double double90 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D61, vector3D83);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ZXZ" + "'", str54, "ZXZ");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ZXZ" + "'", str59, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 100.0d + "'", double71 == 100.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 52.0d + "'", double72 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 3929.5113857326546d + "'", double85 == 3929.5113857326546d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
    }

    @Test
    public void test07830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07830");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        java.io.PrintWriter printWriter11 = printWriter3.format(locale7, "zxz", (java.lang.Object[]) throwableArray10);
        char[] charArray15 = new char[] { 'a', ' ', '#' };
        printWriter11.println(charArray15);
        java.util.Locale locale17 = java.util.Locale.FRENCH;
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.lang.String str21 = locale17.getDisplayLanguage(locale18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray33 = rotation32.getMatrix();
        java.io.PrintWriter printWriter34 = printWriter11.printf(locale17, "english", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray33, 0.7071067811865476d);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(doubleArray33, 0.2836241752726608d);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "fr");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "fran\347ais" + "'", str21, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(printWriter34);
    }

    @Test
    public void test07831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07831");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double8 = rotation7.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double15 = rotation14.getQ0();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyTo(rotation14);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation7.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation23 = rotation17.applyTo(rotation22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = null;
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((-381.8802471205947d), 0.964142738069021d, 1.6704649792860586d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str35 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double50 = rotation49.getQ0();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double57 = rotation56.getQ0();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation49.applyTo(rotation56);
        double double59 = rotation56.getQ3();
        double double60 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation56.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray72 = rotation71.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation56.applyTo(rotation71);
        double double74 = rotation71.getQ2();
        double double75 = rotation71.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation71.getAxis();
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D78.scalarMultiply(83.99202936446676d);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D80.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D42.add((-0.6612892638247344d), vector3D81);
        double double83 = vector3D42.getX();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D(3179.0815819633713d, vector3D24, 69.77330444867783d, vector3D27, 11983.257028037076d, vector3D32, (-855898.0138186931d), vector3D42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ZXZ" + "'", str35, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 52.0d + "'", double57 == 52.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-1.0d) + "'", double77 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }

    @Test
    public void test07832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07832");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, 2.3122509176395862d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str10 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA1();
        java.lang.String str12 = rotationOrder9.toString();
        java.lang.String str13 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        double[] doubleArray19 = rotation17.getAngles(rotationOrder18);
        double[] doubleArray20 = rotation8.getAngles(rotationOrder18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder18.getA2();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D21, (-3931.344915677076d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str25 = rotationOrder24.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder24.getA1();
        java.lang.String str27 = rotationOrder24.toString();
        java.lang.String str28 = rotationOrder24.toString();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        double[] doubleArray34 = rotation32.getAngles(rotationOrder33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder33.getA2();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (-0.001256140150922365d), 0.0d, 0.10802374571758515d);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation23.applyInverseTo(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZY" + "'", str1, "XZY");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXZ" + "'", str10, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXZ" + "'", str12, "ZXZ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXZ" + "'", str13, "ZXZ");
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.7902180191116501, -0.5204312332296097, 1.8449601148260304]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[2.3122509176395862, 0.0, -0.0]");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ZXZ" + "'", str25, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ZXZ" + "'", str27, "ZXZ");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXZ" + "'", str28, "ZXZ");
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.7902180191116501, -0.5204312332296097, 1.8449601148260304]");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation41);
    }

    @Test
    public void test07833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07833");
        java.io.PrintStream printStream1 = new java.io.PrintStream("South Korea");
        printStream1.println("org.apache.commons.math.MathException: zho-x-lvariant-ZH-CN");
        java.io.PrintStream printStream5 = new java.io.PrintStream("ko-KR");
        printStream5.close();
        java.util.Locale locale7 = java.util.Locale.UK;
        java.lang.String[] strArray9 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream10 = printStream5.format(locale7, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray9);
        printStream10.write(10);
        printStream10.print((double) (byte) 100);
        printStream10.print((float) 0);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException19);
        java.lang.Object[] objArray21 = mathException19.getArguments();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("DEU", (java.lang.Throwable) mathException19);
        java.lang.Throwable[] throwableArray23 = mathException22.getSuppressed();
        java.io.PrintStream printStream24 = printStream10.format("zxz (KO_KR)", (java.lang.Object[]) throwableArray23);
        java.io.PrintStream printStream26 = printStream24.append((java.lang.CharSequence) "CHN");
        printStream24.println('#');
        java.io.PrintStream printStream30 = new java.io.PrintStream((java.io.OutputStream) printStream24, false);
        java.io.PrintStream printStream32 = new java.io.PrintStream("ko-KR");
        printStream32.close();
        printStream32.println((double) '4');
        printStream32.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        double[][] doubleArray46 = rotation44.getMatrix();
        java.io.PrintStream printStream47 = printStream32.format("zh", (java.lang.Object[]) doubleArray46);
        java.io.PrintStream printStream49 = printStream47.append('u');
        printStream47.print("");
        printStream47.print((long) 1);
        printStream47.print((long) 100);
        java.io.PrintStream printStream57 = new java.io.PrintStream("ko-KR");
        printStream57.close();
        java.util.Locale locale59 = java.util.Locale.UK;
        java.lang.String[] strArray61 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream62 = printStream57.format(locale59, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray61);
        printStream57.println((long) 10);
        java.io.PrintStream printStream66 = printStream57.append('x');
        java.io.PrintStream printStream68 = printStream66.append('a');
        java.io.PrintStream printStream70 = new java.io.PrintStream("ko-KR");
        printStream70.close();
        java.util.Locale locale72 = java.util.Locale.UK;
        java.lang.String[] strArray74 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream75 = printStream70.format(locale72, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray74);
        printStream75.write(10);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter((java.io.OutputStream) printStream75);
        byte[] byteArray80 = new byte[] { (byte) -1 };
        printStream75.write(byteArray80);
        printStream75.close();
        printStream75.println((double) (short) 100);
        byte[] byteArray86 = new byte[] { (byte) 1 };
        printStream75.write(byteArray86, 0, 1);
        printStream68.write(byteArray86, 0, (int) (short) 1);
        printStream47.write(byteArray86, (int) (short) 100, (int) (byte) 10);
        printStream24.write(byteArray86);
        // The following exception was thrown during execution in test generation
        try {
            printStream1.write(byteArray86, (int) (byte) 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(printStream10);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(printStream24);
        org.junit.Assert.assertNotNull(printStream26);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(printStream47);
        org.junit.Assert.assertNotNull(printStream49);
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(printStream62);
        org.junit.Assert.assertNotNull(printStream66);
        org.junit.Assert.assertNotNull(printStream68);
        org.junit.Assert.assertNotNull(locale72);
        org.junit.Assert.assertEquals(locale72.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(printStream75);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-1]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[1]");
    }

    @Test
    public void test07834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07834");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale1 = java.util.Locale.getDefault(category0);
        java.util.Locale locale2 = java.util.Locale.getDefault(category0);
        java.util.Locale locale3 = java.util.Locale.ROOT;
        java.util.Locale.Category category4 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category5 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale6 = java.util.Locale.ROOT;
        java.lang.String str7 = locale6.getDisplayLanguage();
        java.util.Locale.setDefault(category5, locale6);
        java.util.Locale.setDefault(category4, locale6);
        java.lang.String str10 = locale3.getDisplayVariant(locale6);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale13 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str14 = locale13.getScript();
        java.util.Locale locale15 = java.util.Locale.KOREA;
        java.lang.String str16 = locale13.getDisplayLanguage(locale15);
        java.lang.String[] strArray19 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray19, (java.lang.Throwable) mathException21);
        java.io.PrintWriter printWriter23 = printWriter12.format(locale15, "YZY", (java.lang.Object[]) strArray19);
        java.lang.String str24 = locale6.getDisplayVariant(locale15);
        java.util.Locale.Category category25 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale26 = java.util.Locale.ROOT;
        java.lang.String str27 = locale26.getDisplayLanguage();
        java.util.Locale.setDefault(category25, locale26);
        java.lang.String str29 = locale26.getISO3Language();
        java.lang.String str30 = locale6.getDisplayVariant(locale26);
        java.util.Locale locale31 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str32 = locale31.getScript();
        java.util.Locale locale33 = java.util.Locale.KOREA;
        java.lang.String str34 = locale31.getDisplayLanguage(locale33);
        java.lang.String str35 = locale31.getLanguage();
        java.lang.String str36 = locale26.getDisplayScript(locale31);
        java.lang.String str37 = locale26.getVariant();
        java.util.Locale.setDefault(category0, locale26);
        java.util.Locale locale39 = java.util.Locale.getDefault(category0);
        java.lang.String str40 = locale39.getDisplayLanguage();
        java.util.Locale locale42 = new java.util.Locale("XZY");
        java.util.Locale locale43 = locale42.stripExtensions();
        java.util.Locale locale46 = new java.util.Locale("YZY", "ko-KR");
        java.lang.String str47 = locale46.toLanguageTag();
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter51 = printWriter49.append('#');
        java.util.Locale locale52 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double60 = rotation59.getQ0();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double67 = rotation66.getQ0();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation59.applyTo(rotation66);
        double double69 = rotation66.getQ3();
        double[][] doubleArray70 = rotation66.getMatrix();
        java.io.PrintWriter printWriter71 = printWriter51.printf(locale52, "XZY", (java.lang.Object[]) doubleArray70);
        java.lang.String str72 = locale46.getDisplayCountry(locale52);
        java.lang.String str73 = locale43.getDisplayName(locale52);
        java.lang.String str74 = locale52.getDisplayVariant();
        java.lang.String str75 = locale52.getISO3Language();
        java.lang.String str77 = locale52.getExtension('x');
        java.lang.String str78 = locale39.getDisplayLanguage(locale52);
        org.junit.Assert.assertTrue("'" + category0 + "' != '" + java.util.Locale.Category.DISPLAY + "'", category0.equals(java.util.Locale.Category.DISPLAY));
        org.junit.Assert.assertNotNull(locale1);
// flaky:         org.junit.Assert.assertEquals(locale1.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale2);
// flaky:         org.junit.Assert.assertEquals(locale2.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "");
        org.junit.Assert.assertTrue("'" + category4 + "' != '" + java.util.Locale.Category.FORMAT + "'", category4.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category5 + "' != '" + java.util.Locale.Category.FORMAT + "'", category5.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str16, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + category25 + "' != '" + java.util.Locale.Category.FORMAT + "'", category25.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str34, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "zh" + "'", str35, "zh");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals(locale42.toString(), "xzy");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "xzy");
        org.junit.Assert.assertEquals(locale46.toString(), "yzy_KO-KR");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "yzy" + "'", str47, "yzy");
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 52.0d + "'", double67 == 52.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "KO-KR" + "'", str72, "KO-KR");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "xzy" + "'", str73, "xzy");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "eng" + "'", str75, "eng");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
    }

    @Test
    public void test07835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07835");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D18, (double) (byte) 100, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation16.applyTo(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.subtract(vector3D25);
        double double27 = vector3D26.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation34.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder36.getA1();
        double double42 = vector3D41.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.add((double) (-1.0f), vector3D48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((-0.13715201283077028d), vector3D26, (double) (short) 0, vector3D49, 0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((-52.0d), vector3D26);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D59);
        double double61 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D8.scalarMultiply((-11094.094757084158d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 3.141592653589793d + "'", double27 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
    }

    @Test
    public void test07836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07836");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        double[][] doubleArray8 = rotation6.getMatrix();
        double double9 = rotation6.getQ1();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation0.applyInverseTo(rotation6);
        double[][] doubleArray11 = rotation0.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (double) (short) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder14.getA3();
        java.lang.String str17 = rotationOrder14.toString();
        java.lang.String str18 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder14.getA1();
        double[] doubleArray20 = rotation13.getAngles(rotationOrder14);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder14.getA1();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "XZY" + "'", str17, "XZY");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "XZY" + "'", str18, "XZY");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, -0.0, 0.0]");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
    }

    @Test
    public void test07837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07837");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        printStream85.println(false);
        printStream85.flush();
        printStream85.println((double) 100.0f);
        java.io.PrintStream printStream94 = printStream85.append((java.lang.CharSequence) "ORG.APACHE.COMMONS.MATH.GEOMETRY.NOTAROTATIONMATRIXEXCEPTION: ZH-CN");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream94);
    }

    @Test
    public void test07838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07838");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("ja");
        java.util.Locale.Category category2 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale3 = java.util.Locale.ROOT;
        java.lang.String str4 = locale3.getDisplayLanguage();
        java.util.Locale.setDefault(category2, locale3);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.util.Locale.LanguageRange[] languageRangeArray21 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList22 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList22, languageRangeArray21);
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.util.Locale locale25 = java.util.Locale.GERMAN;
        java.util.Locale locale26 = java.util.Locale.CANADA;
        java.util.Locale locale27 = java.util.Locale.GERMAN;
        java.util.Locale locale28 = java.util.Locale.GERMANY;
        java.util.Locale locale29 = java.util.Locale.ROOT;
        java.lang.String str30 = locale29.getDisplayLanguage();
        java.util.Locale locale31 = java.util.Locale.FRENCH;
        java.util.Locale locale32 = java.util.Locale.ROOT;
        java.util.Locale locale33 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray34 = new java.util.Locale[] { locale24, locale25, locale26, locale27, locale28, locale29, locale31, locale32, locale33 };
        java.util.ArrayList<java.util.Locale> localeList35 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList35, localeArray34);
        java.util.Locale.FilteringMode filteringMode37 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList38 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList35, filteringMode37);
        java.lang.String[] strArray42 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.lang.String str45 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.lang.String>) strList43);
        java.util.Locale.LanguageRange[] languageRangeArray46 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList47 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList47, languageRangeArray46);
        java.util.Locale locale49 = java.util.Locale.ROOT;
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = java.util.Locale.CANADA;
        java.util.Locale locale52 = java.util.Locale.GERMAN;
        java.util.Locale locale53 = java.util.Locale.GERMANY;
        java.util.Locale locale54 = java.util.Locale.ROOT;
        java.lang.String str55 = locale54.getDisplayLanguage();
        java.util.Locale locale56 = java.util.Locale.FRENCH;
        java.util.Locale locale57 = java.util.Locale.ROOT;
        java.util.Locale locale58 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale49, locale50, locale51, locale52, locale53, locale54, locale56, locale57, locale58 };
        java.util.ArrayList<java.util.Locale> localeList60 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList60, localeArray59);
        java.util.Locale.FilteringMode filteringMode62 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList63 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList47, (java.util.Collection<java.util.Locale>) localeList60, filteringMode62);
        java.util.Locale.FilteringMode filteringMode64 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList65 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList22, (java.util.Collection<java.util.Locale>) localeList60, filteringMode64);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D73, (double) (byte) 100, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation71.applyTo(vector3D73);
        java.lang.Object[] objArray78 = new java.lang.Object[] { vector3D17, str20, languageRangeList22, rotation71 };
        java.lang.String[] strArray81 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray86 = mathException85.getSuppressed();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray81, (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray78, (java.lang.Throwable) mathException87);
        java.lang.Object[] objArray89 = mathException87.getArguments();
        java.io.PrintWriter printWriter90 = printWriter1.format(locale3, "ZXZ", objArray89);
        printWriter1.print((double) (short) 10);
        printWriter1.write((int) (byte) 100);
        printWriter1.print(true);
        printWriter1.println(100);
        org.junit.Assert.assertTrue("'" + category2 + "' != '" + java.util.Locale.Category.FORMAT + "'", category2.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(languageRangeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "de");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "de");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "fr");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + filteringMode37 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode37.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(languageRangeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "de");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "de");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "fr");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + filteringMode62 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode62.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList63);
        org.junit.Assert.assertTrue("'" + filteringMode64 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode64.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList65);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[AD, AE, AF, AG, AI, AL, AM, AN, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ, CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR, GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY, HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO, JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR, MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, NO, NP, NR, NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE, RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR, SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT, TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, YE, YT, ZA, ZM, ZW]");
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test07839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07839");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.OutputStream) printStream16, false);
        boolean boolean19 = printStream16.checkError();
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter23 = printWriter21.append('#');
        java.util.Locale locale24 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double39 = rotation38.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyTo(rotation38);
        double double41 = rotation38.getQ3();
        double[][] doubleArray42 = rotation38.getMatrix();
        java.io.PrintWriter printWriter43 = printWriter23.printf(locale24, "XZY", (java.lang.Object[]) doubleArray42);
        java.io.PrintStream printStream45 = new java.io.PrintStream("ko-KR");
        printStream45.close();
        java.util.Locale locale47 = java.util.Locale.UK;
        java.lang.String[] strArray49 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream50 = printStream45.format(locale47, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray49);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter54 = printWriter52.append('#');
        java.lang.Object[] objArray56 = null;
        java.io.PrintWriter printWriter57 = printWriter54.format("fran\347ais", objArray56);
        java.util.Locale locale58 = null;
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray61 = mathException60.getSuppressed();
        java.io.PrintWriter printWriter62 = printWriter54.format(locale58, "zxz", (java.lang.Object[]) throwableArray61);
        char[] charArray66 = new char[] { 'a', ' ', '#' };
        printWriter62.println(charArray66);
        printStream45.println(charArray66);
        printWriter43.write(charArray66);
        printStream16.print(charArray66);
        java.io.PrintStream printStream71 = new java.io.PrintStream((java.io.OutputStream) printStream16);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream75 = printStream71.append((java.lang.CharSequence) "org.apache.commons.math.geometry.NotARotationMatrixException: yzy (KO-KR)", (int) (short) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 52.0d + "'", double39 == 52.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(printStream50);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a,  , #]");
    }

    @Test
    public void test07840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07840");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation20.revert();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation20.getAxis();
        double[][] doubleArray23 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(10.0d, 2.3122509176395862d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation37.applyTo(rotation44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation37.applyInverseTo(vector3D47);
        double double49 = vector3D47.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str51 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D52.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D47.add(vector3D52);
        double double55 = vector3D54.getY();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D31, vector3D54);
        double double57 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D26, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation20.applyInverseTo(vector3D31);
        java.lang.Class<?> wildcardClass59 = vector3D58.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXZ" + "'", str28, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZXZ" + "'", str51, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.7374869648140232d + "'", double57 == 0.7374869648140232d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test07841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07841");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D14);
        double double16 = vector3D15.getY();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-6163.014294720684d) + "'", double16 == (-6163.014294720684d));
    }

    @Test
    public void test07842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07842");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation21.getAxis();
        double double24 = vector3D23.getAlpha();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 102.8131477408346d + "'", double22 == 102.8131477408346d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.464372769465888d) + "'", double24 == (-1.464372769465888d));
    }

    @Test
    public void test07843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07843");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D3, (double) (byte) 100, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D10, (double) (byte) 1, vector3D18, (double) (short) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, vector3D18, (double) 0L, vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D38.orthogonal();
        double double40 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D35, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D35.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D35.normalize();
        double double43 = vector3D35.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double50 = rotation49.getQ0();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double57 = rotation56.getQ0();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation49.applyTo(rotation56);
        double double59 = rotation56.getQ3();
        double double60 = rotation56.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation56.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray72 = rotation71.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation56.applyTo(rotation71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation73.getAxis();
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D35, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.scalarMultiply((-0.7071067811865475d));
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D78.scalarMultiply(18488.397824670512d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5403023058681398d + "'", double40 == 0.5403023058681398d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 52.0d + "'", double57 == 52.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-0.9959035832181172d) + "'", double75 == (-0.9959035832181172d));
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
    }

    @Test
    public void test07844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07844");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D2, (-0.03051975118364517d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str6 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder5.getA1();
        java.lang.String str8 = rotationOrder5.toString();
        java.lang.String str9 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 100, 1.7607846147136124d, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, (double) (short) 0);
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((-1.581752731678261d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation13.applyTo(vector3D17);
        double double20 = vector3D19.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation4.applyInverseTo(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXZ" + "'", str6, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXZ" + "'", str9, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test07845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07845");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.OutputStream) printStream85, true);
        printWriter91.write(0);
        printWriter91.println('#');
        boolean boolean96 = printWriter91.checkError();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test07846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07846");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        printWriter1.println((long) (short) 10);
        java.util.Locale locale6 = java.util.Locale.PRC;
        java.lang.String str7 = locale6.getDisplayVariant();
        java.lang.String[] strArray12 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray19 = mathException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray19);
        java.io.PrintWriter printWriter21 = printWriter1.format(locale6, "", (java.lang.Object[]) throwableArray19);
        printWriter21.print((float) (short) 1);
        printWriter21.println((long) (byte) -1);
        printWriter21.write((int) 'u');
        printWriter21.println(0.08806429469916818d);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        java.util.Locale locale34 = new java.util.Locale("Taiwan", "de", "de_DE");
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) (-1L), (double) (short) 10, (double) 'a');
        double double41 = rotation40.getAngle();
        double double42 = rotation40.getQ2();
        double[][] doubleArray43 = rotation40.getMatrix();
        java.io.PrintWriter printWriter44 = printWriter21.printf(locale34, "\uc601\uc5b4", (java.lang.Object[]) doubleArray43);
        printWriter21.println(true);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertEquals(locale34.toString(), "taiwan_DE_de_DE");
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2.3122509176395862d + "'", double41 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.02937648959434208d) + "'", double42 == (-0.02937648959434208d));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(printWriter44);
    }

    @Test
    public void test07847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07847");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D12, (double) (byte) 100, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D19, (double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D25, (double) (byte) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D30, (double) (byte) 100, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D27, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D14, (double) (byte) 1, vector3D22, (double) (short) 100, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.negate();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D32.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation47.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder49.getA1();
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D48.add(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.add((double) (-1.0f), vector3D61);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((-0.0d), 1.4711276743037345d, 128040.0d, 0.4028887144651276d, false);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation70.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D54.subtract((-8.950356005490573E7d), vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(1.4922398570367257d, vector3D39, (-0.9093956197081616d), vector3D74);
        double double76 = vector3D75.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((-0.03286963174708454d), (-0.33317344249276587d));
        double double80 = vector3D79.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D75.add(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 8.139414546220721E7d + "'", double76 == 8.139414546220721E7d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-0.33317344249276587d) + "'", double80 == (-0.33317344249276587d));
        org.junit.Assert.assertNotNull(vector3D81);
    }

    @Test
    public void test07848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07848");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.print((float) 100L);
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation11.applyInverseTo(rotation27);
        double[][] doubleArray30 = rotation11.getMatrix();
        java.io.PrintWriter printWriter31 = printWriter4.printf("zh", (java.lang.Object[]) doubleArray30);
        printWriter4.println(true);
        printWriter4.print(0.10062844706379001d);
        java.io.PrintWriter printWriter39 = printWriter4.append((java.lang.CharSequence) "deu_GERMAN", (int) (byte) 1, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter39);
    }

    @Test
    public void test07849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07849");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.close();
        java.io.PrintWriter printWriter87 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        java.io.PrintWriter printWriter89 = printWriter87.append('u');
        printWriter87.println((int) (byte) 100);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test07850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07850");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        printStream90.println("\uc911\uad6d\uc5b4");
        printStream90.close();
        printStream90.write((int) 'x');
        printStream90.println();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
    }

    @Test
    public void test07851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07851");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation11.applyInverseTo(vector3D21);
        double double23 = vector3D21.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str25 = rotationOrder24.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D26.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D21.add(vector3D26);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ1();
        double double36 = rotation34.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D38, (double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.subtract((double) 10L, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation34.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D47.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D28.add(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D5.add(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D2.add((double) 100L, vector3D28);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D61, (double) (byte) 100, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation59.applyTo(vector3D61);
        double double66 = vector3D61.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D61, (double) 10, vector3D68);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA3();
        double double73 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D61, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D28.subtract(0.33033571077024615d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D28.scalarMultiply((-0.9996400101546701d));
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D28.scalarMultiply(1.5599296019390303d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D28.orthogonal();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null norm");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ZXZ" + "'", str25, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 100.0d + "'", double35 == 100.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
    }

    @Test
    public void test07852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07852");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-34365.38633275781d), (double) 1.0f, (-3.253905889552808E7d));
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double11 = rotation10.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation10.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation10.applyInverseTo(vector3D20);
        double double22 = vector3D20.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str24 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D25.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D20.add(vector3D25);
        double double28 = vector3D20.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D3.add(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, (double) (short) 0);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((-1.581752731678261d), vector3D33);
        double double35 = org.apache.commons.math.geometry.Vector3D.angle(vector3D20, vector3D34);
        double double36 = vector3D20.getZ();
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 52.0d + "'", double11 == 52.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXZ" + "'", str24, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.5707963267948966d) + "'", double28 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.0d) + "'", double36 == (-1.0d));
    }

    @Test
    public void test07853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07853");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.884114997657917d, (double) 0, 93.57684707871968d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D17, (double) (byte) 100, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D17.subtract((double) 10L, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D28, (double) (byte) 100, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D33, (double) (byte) 100, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D24.subtract((double) 0, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.subtract((double) 10L, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D50, (double) 10L, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D59, (double) (byte) 100, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D64, (double) (byte) 100, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D61, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D71, (double) (byte) 100, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D61, (double) 0.0f, vector3D73);
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D24, (double) (short) 1, vector3D55, (double) (-1L), vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D80, (double) (byte) 100, vector3D82);
        double double84 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D24, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D24.orthogonal();
        double double86 = vector3D24.getY();
        double double87 = vector3D24.getAlpha();
        double double88 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D13.subtract((-4.79425538604203d), vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D5.add((-0.2868032122551722d), vector3D89);
        double double91 = vector3D90.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.13715201283077028d) + "'", double86 == (-0.13715201283077028d));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-2.141592653589793d) + "'", double87 == (-2.141592653589793d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.9866275920404853d + "'", double88 == 0.9866275920404853d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.6813378096548037d + "'", double91 == 0.6813378096548037d);
    }

    @Test
    public void test07854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07854");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        java.util.Locale locale5 = java.util.Locale.UK;
        java.lang.String[] strArray7 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream8 = printStream3.format(locale5, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray7);
        printStream8.write(10);
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.OutputStream) printStream8);
        printStream8.print((int) (short) 1);
        java.lang.String[] strArray17 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray17, (java.lang.Throwable) mathException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray22 = mathException21.getSuppressed();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray17, (java.lang.Throwable) mathException21);
        java.io.PrintStream printStream24 = printStream8.format("deu", (java.lang.Object[]) strArray17);
        java.io.PrintStream printStream26 = new java.io.PrintStream("ko-KR");
        printStream26.close();
        java.util.Locale locale28 = java.util.Locale.UK;
        java.lang.String[] strArray30 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream31 = printStream26.format(locale28, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray30);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter35 = printWriter33.append('#');
        java.lang.Object[] objArray37 = null;
        java.io.PrintWriter printWriter38 = printWriter35.format("fran\347ais", objArray37);
        java.util.Locale locale39 = null;
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray42 = mathException41.getSuppressed();
        java.io.PrintWriter printWriter43 = printWriter35.format(locale39, "zxz", (java.lang.Object[]) throwableArray42);
        char[] charArray47 = new char[] { 'a', ' ', '#' };
        printWriter43.println(charArray47);
        printStream26.println(charArray47);
        java.io.PrintStream printStream51 = new java.io.PrintStream("ko-KR");
        printStream51.close();
        java.util.Locale locale53 = java.util.Locale.UK;
        java.lang.String[] strArray55 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream56 = printStream51.format(locale53, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray55);
        printStream56.write(10);
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.OutputStream) printStream56);
        byte[] byteArray61 = new byte[] { (byte) -1 };
        printStream56.write(byteArray61);
        printStream26.write(byteArray61);
        printStream24.write(byteArray61);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D67, (double) (byte) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D72, (double) (byte) 100, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D69, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D79, (double) (byte) 100, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D69, (double) 0.0f, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D83.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 'a', (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D83.add(vector3D89);
        printStream24.println((java.lang.Object) vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D83.negate();
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D((-0.13715201283077028d), vector3D83);
        double double94 = vector3D93.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D(0.6728281420951934d, vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation97 = new org.apache.commons.math.geometry.Rotation(vector3D95, vector3D96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(printStream8);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(printStream24);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(printStream31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(printStream56);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1]");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.0d) + "'", double94 == (-0.0d));
    }

    @Test
    public void test07855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07855");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("Franz\366sisch (Frankreich)");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (-0.02937648959434208d), (-3.141592653589793d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder2.getA3();
        java.lang.String str13 = rotationOrder2.toString();
        printWriter1.print((java.lang.Object) rotationOrder2);
        java.lang.String str15 = rotationOrder2.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder2.getA1();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "XZY" + "'", str13, "XZY");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "XZY" + "'", str15, "XZY");
        org.junit.Assert.assertNotNull(vector3D16);
    }

    @Test
    public void test07856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07856");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        double double22 = rotation20.getAngle();
        double double23 = rotation20.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyInverseTo(rotation28);
        double[][] doubleArray30 = rotation29.getMatrix();
        double double31 = rotation29.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2.3122509176395862d + "'", double22 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.4028887144651276d + "'", double23 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test07857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07857");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        byte[] byteArray91 = new byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 10 };
        printStream1.write(byteArray91);
        printStream1.println(0);
        java.io.PrintStream printStream95 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        printStream1.close();
        printStream1.flush();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 100, -1, 10, 10]");
    }

    @Test
    public void test07858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07858");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        double double8 = vector3D7.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D17, (double) (byte) 100, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D17.subtract((double) 10L, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D25, (double) 10L, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D13.add((double) (short) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D35.negate();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.scalarMultiply((double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D(2.3122509176395862d, vector3D48, (double) 10.0f, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D(84.29633443762866d, vector3D31, (double) 'x', vector3D36, (double) 100L, vector3D43, (-1.581752731678261d), vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D58, (double) (byte) 100, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D60, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D70, (double) (byte) 100, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D60, (double) 0.0f, vector3D72);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D82, (double) (byte) 100, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation80.applyTo(vector3D82);
        double double87 = vector3D82.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D72.add(vector3D82);
        double double89 = vector3D82.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D31.add(3.112216163995451d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D31);
        double double92 = vector3D91.getX();
        double double93 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D7, vector3D91);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXZ" + "'", str3, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.0d) + "'", double92 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
    }

    @Test
    public void test07859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07859");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation12.getQ3();
        double double16 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation12.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray28 = rotation27.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation12.applyTo(rotation27);
        double double30 = rotation27.getQ2();
        double double31 = rotation27.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D35, (double) (byte) 100, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D40, (double) (byte) 100, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D37, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D47, (double) (byte) 100, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D53, (double) (byte) 100, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D58, (double) (byte) 100, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D42, (double) (byte) 1, vector3D50, (double) (short) 100, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D67, (double) (byte) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D72, (double) (byte) 100, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D69, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D79, (double) (byte) 100, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D69, (double) 0.0f, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D42.subtract((double) 10L, vector3D81);
        double double85 = vector3D81.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation27.applyInverseTo(vector3D81);
        double double87 = rotation27.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder88 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(rotationOrder88, (double) (-1L), (double) (short) 10, (double) 'a');
        double double93 = rotation92.getAngle();
        org.apache.commons.math.geometry.Rotation rotation94 = rotation27.applyTo(rotation92);
        double double95 = rotation92.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.26237485370392877d + "'", double87 == 0.26237485370392877d);
        org.junit.Assert.assertNotNull(rotationOrder88);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2.3122509176395862d + "'", double93 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2.3122509176395862d + "'", double95 == 2.3122509176395862d);
    }

    @Test
    public void test07860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07860");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.util.Locale locale4 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        double double21 = rotation18.getQ3();
        double[][] doubleArray22 = rotation18.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter3.printf(locale4, "XZY", (java.lang.Object[]) doubleArray22);
        printWriter23.println("KOR");
        printWriter23.print('4');
        java.io.PrintWriter printWriter29 = printWriter23.append('u');
        printWriter23.write("DE-DE");
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test07861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07861");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str3 = rotationOrder2.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder2.getA3();
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        double double11 = vector3D7.getY();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D4.subtract(vector3D7);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation19.applyTo(vector3D21);
        double double26 = vector3D21.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D12.add((double) 0L, vector3D21);
        double double28 = vector3D21.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray36 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D38, (double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D43, (double) (byte) 100, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation35.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation35.getAxis();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation35.revert();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation50.revert();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double58 = rotation57.getQ1();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation50.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D68, (double) (byte) 100, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation66.applyTo(vector3D68);
        double double73 = vector3D68.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D68, (double) 10, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation50.applyTo(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D75.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D21, 0.0d, vector3D78);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D78, (double) 'x');
        org.apache.commons.math.geometry.Rotation rotation82 = rotation81.revert();
        double[][] doubleArray83 = rotation81.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException84 = new org.apache.commons.math.geometry.NotARotationMatrixException("Chinese (Taiwan)", (java.lang.Object[]) doubleArray83);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(doubleArray83, 0.07621202839203368d);
        double double87 = rotation86.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXZ" + "'", str3, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 100.0d + "'", double58 == 100.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.3048106211022167d + "'", double87 == 0.3048106211022167d);
    }

    @Test
    public void test07862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07862");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.884114997657917d, (double) 0, 93.57684707871968d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.995037190209989d), 0.09605185157004012d, 0.47768123411405644d);
        double double11 = rotation10.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXZ" + "'", str6, "ZXZ");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9656143387728301d + "'", double11 == 0.9656143387728301d);
    }

    @Test
    public void test07863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07863");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, (-1280400.0d), (-0.02937648959434208d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D16, (double) (byte) 100, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D18, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D28, (double) (byte) 100, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D18, (double) 0.0f, vector3D30);
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray41 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D43, (double) (byte) 100, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D48, (double) (byte) 100, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D45, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation40.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D53, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D53.negate();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D67, (double) (byte) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation65.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) 'x', vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) 1, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D32, 100.0d, vector3D56, 52.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(0.0d, (-0.5063656411097588d));
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D74.subtract(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D74);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D79, 10400.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: zero norm for rotation axis");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XYZ" + "'", str6, "XYZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test07864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07864");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println((double) (short) 100);
        byte[] byteArray17 = new byte[] { (byte) 1 };
        printStream6.write(byteArray17, 0, 1);
        printStream6.println(true);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation37.applyInverseTo(rotation43);
        printStream6.print((java.lang.Object) rotation43);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation43.getAxis();
        double double57 = vector3D56.getZ();
        double double58 = vector3D56.getNorm();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D56, (-25479.91732970719d));
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.09950371902099892d) + "'", double57 == (-0.09950371902099892d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.9999999999999999d + "'", double58 == 0.9999999999999999d);
    }

    @Test
    public void test07865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07865");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) ' ', 2.510959086225248d, 3.112216163995451d, 3.140233154802971d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 0.0d, 3.2539077042633276E7d, (-34365.38633275781d));
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.applyTo(rotation19);
        double[][] doubleArray21 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D22, 1.8417401268386502d);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation24.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXZ" + "'", str7, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D25);
    }

    @Test
    public void test07866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07866");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.util.Locale locale4 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        double double21 = rotation18.getQ3();
        double[][] doubleArray22 = rotation18.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter3.printf(locale4, "XZY", (java.lang.Object[]) doubleArray22);
        printWriter23.println("KOR");
        printWriter23.print('4');
        java.io.PrintWriter printWriter29 = printWriter23.append('u');
        java.util.Locale locale30 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str33 = rotationOrder32.toString();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D38, 2.3122509176395862d);
        double[][] doubleArray41 = rotation40.getMatrix();
        java.io.PrintWriter printWriter42 = printWriter29.format(locale30, "Deutschland", (java.lang.Object[]) doubleArray41);
        java.io.PrintWriter printWriter44 = printWriter29.append('#');
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter((java.io.Writer) printWriter29, false);
        java.lang.Object obj47 = null;
        printWriter29.print(obj47);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "XZY" + "'", str33, "XZY");
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(printWriter44);
    }

    @Test
    public void test07867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07867");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.OutputStream) printStream16, false);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double25 = rotation24.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) (-1L), (double) (short) 10, (double) 'a');
        double double31 = rotation30.getAngle();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation24.applyInverseTo(rotation30);
        double double33 = rotation32.getQ0();
        printStream16.println((java.lang.Object) double33);
        java.io.PrintStream printStream35 = new java.io.PrintStream((java.io.OutputStream) printStream16);
        java.io.PrintStream printStream37 = new java.io.PrintStream((java.io.OutputStream) printStream16, false);
        printStream37.println(5.566226206460602E7d);
        printStream37.close();
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2.3122509176395862d + "'", double31 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 60.912721436461325d + "'", double33 == 60.912721436461325d);
    }

    @Test
    public void test07868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07868");
        java.io.PrintStream printStream4 = new java.io.PrintStream("ko-KR");
        printStream4.print((float) 100L);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.OutputStream) printStream4);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double15 = rotation14.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation14.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation14.revert();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation14.applyInverseTo(rotation30);
        double[][] doubleArray33 = rotation14.getMatrix();
        java.io.PrintWriter printWriter34 = printWriter7.printf("zh", (java.lang.Object[]) doubleArray33);
        java.lang.String[] strArray36 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray36);
        java.lang.String str38 = mathException37.getPattern();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException37);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray33, (java.lang.Throwable) mathException39);
        java.lang.String[] strArray43 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray43, (java.lang.Throwable) mathException45);
        java.lang.String str47 = mathException46.getPattern();
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("YZY", (java.lang.Throwable) mathException46);
        mathException39.addSuppressed((java.lang.Throwable) mathException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException48);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("zh_CN", (java.lang.Throwable) mathException50);
        java.lang.String str52 = mathException51.getPattern();
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ZXZ" + "'", str38, "ZXZ");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ZXZ" + "'", str47, "ZXZ");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "zh_CN" + "'", str52, "zh_CN");
    }

    @Test
    public void test07869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07869");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1, (-0.13715201283077028d), (-0.5226359490589123d));
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.09966865249116204d, 62.82812818161871d, 3622128.337879367d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YZY" + "'", str1, "YZY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test07870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07870");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        java.io.PrintStream printStream49 = printStream6.append('x');
        printStream49.print((long) (byte) 0);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(printStream49);
    }

    @Test
    public void test07871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07871");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.05839499171659341d, (-1.7466804931071132d), 9.649660284921133d, 0.07621202839203368d, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.getAxis();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.05839499171659341d + "'", double6 == 0.05839499171659341d);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test07872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07872");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-10400.0d), 0.0d, (-1.63942416E8d), 0.3331734424927659d, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation11.applyTo(vector3D13);
        double double18 = vector3D17.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.subtract((double) 10L, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D32, (double) (byte) 100, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D37, (double) (byte) 100, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D34, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D28.subtract((double) 0, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D46, (double) (byte) 100, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.subtract((double) 10L, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D54, (double) 10L, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D68, (double) (byte) 100, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D65, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D75, (double) (byte) 100, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D65, (double) 0.0f, vector3D77);
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D28, (double) (short) 1, vector3D59, (double) (-1L), vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D28.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D84, (double) (byte) 100, vector3D86);
        double double88 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D28, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D28.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D17.subtract(vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D17.scalarMultiply((double) (byte) 1);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation5.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D93.scalarMultiply(1040000.0d);
        double double96 = vector3D95.getDelta();
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test07873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07873");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        java.lang.String str91 = locale2.getDisplayCountry();
        java.lang.String str92 = locale2.getDisplayCountry();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test07874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07874");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.12481652586946246d, (-14.506395213313695d), 1.5707963267948966d, (-0.9976749556055456d), true);
    }

    @Test
    public void test07875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07875");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D12.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray25 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D27, (double) (byte) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D32, (double) (byte) 100, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation24.applyInverseTo(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D37, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D48, (double) (byte) 100, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation46.applyTo(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D48.subtract(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray63 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D65, (double) (byte) 100, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D70, (double) (byte) 100, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D67, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation62.applyInverseTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D75, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((-3.141592653589793d), vector3D13, (double) '4', vector3D17, (double) 0, vector3D37, 0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D17.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D9.subtract(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D6.add(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D6.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
    }

    @Test
    public void test07876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07876");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        java.lang.String str4 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.10062844706379001d, 12344.924101615155d, (-34365.38633275781d));
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(doubleArray9, 0.0995037190209989d);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation19.getAxis();
        double[][] doubleArray21 = rotation19.getMatrix();
        double double22 = rotation19.getQ1();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation13.applyInverseTo(rotation19);
        double[][] doubleArray24 = rotation13.getMatrix();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("\uc911\uad6d", (java.lang.Object[]) doubleArray24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("ZYZ", (java.lang.Object[]) doubleArray9, (java.lang.Throwable) mathException25);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "XZY" + "'", str4, "XZY");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 100.0d + "'", double22 == 100.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(doubleArray24);
    }

    @Test
    public void test07877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07877");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D30, (double) (byte) 100, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation28.applyTo(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.subtract(vector3D37);
        double double39 = vector3D38.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation46.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder48.getA1();
        double double54 = vector3D53.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((double) (-1.0f), vector3D60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((-0.13715201283077028d), vector3D38, (double) (short) 0, vector3D61, 0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation18.applyInverseTo(vector3D70);
        double double72 = rotation18.getAngle();
        double double73 = rotation18.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 3.141592653589793d + "'", double39 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2.3122509176395862d + "'", double72 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2.3122509176395862d + "'", double73 == 2.3122509176395862d);
    }

    @Test
    public void test07878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07878");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println(true);
        byte[] byteArray18 = new byte[] { (byte) -1, (byte) 0 };
        printStream6.write(byteArray18);
        boolean boolean20 = printStream6.checkError();
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream6, false);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException27.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("zxz_KO_KR", (java.lang.Object[]) throwableArray28);
        java.io.PrintWriter printWriter31 = printWriter22.format("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray28);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter22);
        printWriter32.println(10.0f);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test07879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07879");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter("fran\347ais");
        printWriter2.flush();
        printWriter2.println(10.0f);
        printWriter2.print(true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray19 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(doubleArray19, 1.5707963267948966d);
        java.io.PrintWriter printWriter22 = printWriter2.format("fr_CA", (java.lang.Object[]) doubleArray19);
        printWriter22.print(false);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double39 = rotation38.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation31.applyTo(rotation38);
        double double41 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation38.revert();
        double[][] doubleArray43 = rotation42.getMatrix();
        java.io.PrintWriter printWriter44 = printWriter22.format("org.apache.commons.math.MathException: zxz", (java.lang.Object[]) doubleArray43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("chinesisch (vereinigtes k\366\uc601\uad6d,zh-TW)", (java.lang.Object[]) doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(doubleArray43, 0.3118650248487572d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 52.0d + "'", double39 == 52.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(printWriter44);
    }

    @Test
    public void test07880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07880");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println((double) (short) 100);
        byte[] byteArray17 = new byte[] { (byte) 1 };
        printStream6.write(byteArray17, 0, 1);
        printStream6.println(true);
        java.util.Locale locale23 = java.util.Locale.PRC;
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.lang.String str25 = locale23.getDisplayName(locale24);
        java.util.Locale locale28 = new java.util.Locale("ZXZ", "ko_KR");
        java.lang.String str29 = locale23.getDisplayName(locale28);
        java.lang.String str30 = locale23.getLanguage();
        java.util.Locale locale31 = locale23.stripExtensions();
        java.util.Locale locale32 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale32);
        java.lang.String str34 = locale32.toLanguageTag();
        java.lang.String str35 = locale32.getDisplayVariant();
        java.lang.String str36 = locale23.getDisplayCountry(locale32);
        java.util.Locale locale37 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str38 = locale37.getScript();
        java.util.Locale locale39 = java.util.Locale.KOREA;
        java.lang.String str40 = locale37.getDisplayLanguage(locale39);
        java.lang.String str41 = locale37.getDisplayLanguage();
        java.util.Set<java.lang.String> strSet42 = locale37.getUnicodeLocaleAttributes();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter46 = printWriter44.append('#');
        printWriter44.println((long) (short) 10);
        java.util.Locale locale49 = java.util.Locale.PRC;
        java.lang.String str50 = locale49.getDisplayVariant();
        java.lang.String[] strArray55 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray55, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray60 = mathException59.getSuppressed();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray55, (java.lang.Throwable) mathException59);
        java.lang.Throwable[] throwableArray62 = mathException59.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException63 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray62);
        java.io.PrintWriter printWriter64 = printWriter44.format(locale49, "", (java.lang.Object[]) throwableArray62);
        java.lang.String str65 = locale37.getDisplayCountry(locale49);
        java.lang.String str66 = locale23.getDisplayVariant(locale37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        double[][] doubleArray75 = rotation74.getMatrix();
        java.io.PrintStream printStream76 = printStream6.printf(locale23, "XYZ", (java.lang.Object[]) doubleArray75);
        java.io.PrintStream printStream78 = printStream76.append('4');
        java.io.PrintStream printStream80 = printStream78.append((java.lang.CharSequence) "\u65e5\u672c");
        java.io.PrintWriter printWriter82 = new java.io.PrintWriter((java.io.OutputStream) printStream80, false);
        boolean boolean83 = printWriter82.checkError();
        printWriter82.println();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1]");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Chinese (China)" + "'", str25, "Chinese (China)");
        org.junit.Assert.assertEquals(locale28.toString(), "zxz_KO_KR");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Chinese (China)" + "'", str29, "Chinese (China)");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "zh" + "'", str30, "zh");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ko-KR" + "'", str34, "ko-KR");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\uc911\uad6d" + "'", str36, "\uc911\uad6d");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str40, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str41, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\u53f0\u6e7e\u5730\u533a" + "'", str65, "\u53f0\u6e7e\u5730\u533a");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXZ" + "'", str69, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(printStream76);
        org.junit.Assert.assertNotNull(printStream78);
        org.junit.Assert.assertNotNull(printStream80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test07881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07881");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray20 = mathException18.getArguments();
        java.io.PrintWriter printWriter21 = printWriter12.format("org.apache.commons.math.MathException: ZXZ", objArray20);
        java.lang.String[] strArray25 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray25, (java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray30 = mathException29.getSuppressed();
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray25, (java.lang.Throwable) mathException29);
        java.io.PrintWriter printWriter32 = printWriter21.printf("KOR", (java.lang.Object[]) strArray25);
        java.io.PrintWriter printWriter34 = printWriter21.append((java.lang.CharSequence) "deu");
        boolean boolean35 = printWriter34.checkError();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException40.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException42 = new org.apache.commons.math.geometry.NotARotationMatrixException("Vereinigtes K\366nigreich", (java.lang.Object[]) throwableArray41);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("zxz_KO_KR", (java.lang.Object[]) throwableArray41);
        java.io.PrintWriter printWriter44 = printWriter34.printf("\ud55c\uad6d\uc5b4 (CHINESE (TAIWAN))", (java.lang.Object[]) throwableArray41);
        printWriter34.print(true);
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(printWriter44);
    }

    @Test
    public void test07882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07882");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation5.getQ0();
        double double16 = rotation5.getQ0();
        double[][] doubleArray17 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double24 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation23.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation5.applyInverseTo(rotation23);
        double double34 = rotation33.getAngle();
        double double35 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D43, (double) (byte) 100, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation41.applyTo(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation41.revert();
        double double50 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation33.applyTo(rotation41);
        double double52 = rotation33.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation33.applyInverseTo(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D59, (double) (byte) 100, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D64, (double) (byte) 100, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D61, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D71, (double) (byte) 100, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D77, (double) (byte) 100, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D82, (double) (byte) 100, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D79, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D66, (double) (byte) 1, vector3D74, (double) (short) 100, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D66.negate();
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((double) (-1), vector3D66);
        double double90 = vector3D66.getAlpha();
        double double91 = vector3D66.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D66.scalarMultiply((-14654.970860773661d));
        // The following exception was thrown during execution in test generation
        try {
            double double94 = org.apache.commons.math.geometry.Vector3D.angle(vector3D54, vector3D66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null norm");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 52.0d + "'", double24 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-12804.0d) + "'", double35 == (-12804.0d));
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test07883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07883");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation13.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder15.getA1();
        double double21 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D14.add(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D20.add((double) (-1.0f), vector3D27);
        double double29 = vector3D20.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D(2.3122509176395862d, vector3D6, (double) 0.0f, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D6.normalize();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D31, 0.4028887144651276d);
        double[][] doubleArray34 = rotation33.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray34);
    }

    @Test
    public void test07884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07884");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.flush();
        java.io.PrintWriter printWriter87 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        printWriter87.println(false);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07885");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation20.revert();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation14.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation37.applyTo(rotation44);
        double double47 = rotation44.getQ3();
        double[][] doubleArray48 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation31.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((-0.0d), (-1280400.0d), (double) (byte) 100, (-34365.38633275781d), true);
        double double56 = rotation55.getQ1();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation49.applyInverseTo(rotation55);
        double double58 = rotation57.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.9996400101546701d) + "'", double56 == (-0.9996400101546701d));
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-4398560.058864544d) + "'", double58 == (-4398560.058864544d));
    }

    @Test
    public void test07886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07886");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        char[] charArray23 = new char[] { 'a', 'a', '4' };
        printStream1.println(charArray23);
        printStream1.print((long) 'x');
        printStream1.println();
        java.io.PrintStream printStream28 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        printStream28.print((long) 'x');
        java.io.PrintStream printStream32 = printStream28.append((java.lang.CharSequence) "English");
        java.io.PrintStream printStream33 = new java.io.PrintStream((java.io.OutputStream) printStream32);
        printStream33.println(1.032089819981057d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, a, 4]");
        org.junit.Assert.assertNotNull(printStream32);
    }

    @Test
    public void test07887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07887");
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, 0.4028887144651276d, 0.09966865249116202d, (-1.63942416E8d));
        java.lang.String str12 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray20 = rotation19.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D22, (double) (byte) 100, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D27, (double) (byte) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation19.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation19.getAxis();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation34.revert();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation34.getAxis();
        double double37 = vector3D36.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.normalize();
        double double39 = vector3D36.getAlpha();
        double double40 = vector3D36.getNorm();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D13, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D(0.8054849532414718d, 11095.094757084158d, (-3.141585119772645d));
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D51, (double) (byte) 100, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D56, (double) (byte) 100, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D53, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D71, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D58, (double) (byte) 1, vector3D66, (double) (short) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D76);
        double double81 = vector3D76.getAlpha();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(1.2303861299696937d, vector3D1, (-0.52304584187721d), vector3D13, (-0.9565410002113931d), vector3D46, (-1.538368E7d), vector3D76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZYZ" + "'", str12, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.9999999999999999d + "'", double37 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.9999999999999999d + "'", double40 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
    }

    @Test
    public void test07888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07888");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\uc601\uc5b4");
        java.io.PrintStream printStream3 = printStream1.append('4');
        java.io.PrintStream printStream6 = new java.io.PrintStream("ko-KR");
        printStream6.print((float) 100L);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap10 = null;
        java.util.List<java.util.Locale.LanguageRange> languageRangeList11 = java.util.Locale.LanguageRange.parse("English", strMap10);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap12 = null;
        java.util.List<java.util.Locale.LanguageRange> languageRangeList13 = java.util.Locale.LanguageRange.mapEquivalents(languageRangeList11, strMap12);
        java.util.Locale.LanguageRange[] languageRangeArray14 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList15 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList15, languageRangeArray14);
        java.util.Locale locale17 = java.util.Locale.ROOT;
        java.util.Locale locale18 = java.util.Locale.GERMAN;
        java.util.Locale locale19 = java.util.Locale.CANADA;
        java.util.Locale locale20 = java.util.Locale.GERMAN;
        java.util.Locale locale21 = java.util.Locale.GERMANY;
        java.util.Locale locale22 = java.util.Locale.ROOT;
        java.lang.String str23 = locale22.getDisplayLanguage();
        java.util.Locale locale24 = java.util.Locale.FRENCH;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray27 = new java.util.Locale[] { locale17, locale18, locale19, locale20, locale21, locale22, locale24, locale25, locale26 };
        java.util.ArrayList<java.util.Locale> localeList28 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList28, localeArray27);
        java.util.Locale.FilteringMode filteringMode30 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList31 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList15, (java.util.Collection<java.util.Locale>) localeList28, filteringMode30);
        java.util.Locale.FilteringMode filteringMode32 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList33 = java.util.Locale.filter(languageRangeList11, (java.util.Collection<java.util.Locale>) localeList31, filteringMode32);
        printStream6.println((java.lang.Object) localeList31);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        printWriter37.print((float) 100);
        printWriter37.println(false);
        java.util.Locale locale42 = java.util.Locale.PRC;
        java.lang.String str43 = locale42.getDisplayVariant();
        java.util.Set<java.lang.String> strSet44 = locale42.getUnicodeLocaleKeys();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D53, (double) (byte) 100, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation51.applyTo(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation51.getAxis();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation51.revert();
        double[][] doubleArray60 = rotation51.getMatrix();
        java.io.PrintWriter printWriter61 = printWriter37.printf(locale42, "\ub3c5\uc77c\uc5b4", (java.lang.Object[]) doubleArray60);
        java.io.PrintStream printStream62 = printStream3.format("\u4e2d\u6587", (java.lang.Object[]) doubleArray60);
        byte[] byteArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            printStream62.write(byteArray63, (int) ' ', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printStream3);
        org.junit.Assert.assertNotNull(languageRangeList11);
        org.junit.Assert.assertNotNull(languageRangeList13);
        org.junit.Assert.assertNotNull(languageRangeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "de");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "de");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "fr");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + filteringMode30 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode30.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList31);
        org.junit.Assert.assertTrue("'" + filteringMode32 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode32.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList33);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(printStream62);
    }

    @Test
    public void test07889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07889");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double33 = rotation32.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation25.revert();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D18.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D40, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D37, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D37.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str46 = rotationOrder45.toString();
        java.lang.String str47 = rotationOrder45.toString();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder45.getA3();
        double double49 = vector3D48.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D44.add(vector3D50);
        double double52 = vector3D51.getNorm();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "XZY" + "'", str46, "XZY");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "XZY" + "'", str47, "XZY");
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 11771.045171060041d + "'", double52 == 11771.045171060041d);
    }

    @Test
    public void test07890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07890");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double34 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation33.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation27.applyInverseTo(rotation33);
        double[][] doubleArray45 = rotation27.getMatrix();
        java.io.PrintStream printStream46 = printStream6.printf("zh", (java.lang.Object[]) doubleArray45);
        printStream46.write((-1));
        printStream46.close();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
    }

    @Test
    public void test07891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07891");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.01563013590529356d, (-4.306121336489983d), 1.911187634024677d, 8.396146867417E12d, false);
    }

    @Test
    public void test07892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07892");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder7.getA1();
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D6.add(vector3D12);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D14, (-0.02937648959434208d));
        double double17 = rotation16.getQ1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D25, (double) (byte) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation23.applyTo(vector3D25);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation50.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation50.revert();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation44.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation61.getAxis();
        double double63 = vector3D62.getAlpha();
        double double64 = vector3D62.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation23.applyInverseTo(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation16.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(0.10320898199810571d, 1040.0d, (double) (short) -1, (-1.0877329743786937d), true);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation16.applyInverseTo(rotation72);
        double double74 = rotation16.getQ3();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 7.316495385752939E-4d + "'", double17 == 7.316495385752939E-4d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 52.0d + "'", double43 == 52.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 52.0d + "'", double58 == 52.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.09966865249116202d + "'", double64 == 0.09966865249116202d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.014669482246684856d) + "'", double74 == (-0.014669482246684856d));
    }

    @Test
    public void test07893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07893");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray20 = mathException18.getArguments();
        java.io.PrintWriter printWriter21 = printWriter12.format("org.apache.commons.math.MathException: ZXZ", objArray20);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation28.getAxis();
        double[][] doubleArray30 = rotation28.getMatrix();
        double double31 = rotation28.getQ1();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation22.applyInverseTo(rotation28);
        double double33 = rotation22.getQ3();
        printWriter21.print((java.lang.Object) double33);
        printWriter21.close();
        printWriter21.write((int) (short) 10);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double52 = rotation51.getQ0();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation44.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation44.revert();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation44.applyInverseTo(rotation60);
        double[][] doubleArray63 = rotation44.getMatrix();
        java.io.PrintWriter printWriter64 = printWriter21.printf("", (java.lang.Object[]) doubleArray63);
        printWriter64.println("franz\366sisch_ORG.APACHE.COMMONS.MATH.GEOMETRY.NOTAROTATIONMATRIXEXCEPTION: COR\351EN");
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 100.0d + "'", double31 == 100.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 52.0d + "'", double52 == 52.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 52.0d + "'", double61 == 52.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(printWriter64);
    }

    @Test
    public void test07894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07894");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ3();
        double[][] doubleArray8 = rotation5.getMatrix();
        double double9 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
    }

    @Test
    public void test07895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07895");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale2 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str3 = locale2.getScript();
        java.util.Locale locale4 = java.util.Locale.KOREA;
        java.lang.String str5 = locale2.getDisplayLanguage(locale4);
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        java.io.PrintWriter printWriter12 = printWriter1.format(locale4, "YZY", (java.lang.Object[]) strArray8);
        printWriter12.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException18);
        java.lang.Object[] objArray20 = mathException18.getArguments();
        java.io.PrintWriter printWriter21 = printWriter12.format("org.apache.commons.math.MathException: ZXZ", objArray20);
        printWriter21.println();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter26 = printWriter24.append('#');
        java.lang.Object[] objArray28 = null;
        java.io.PrintWriter printWriter29 = printWriter26.format("fran\347ais", objArray28);
        java.util.Locale locale30 = null;
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray33 = mathException32.getSuppressed();
        java.io.PrintWriter printWriter34 = printWriter26.format(locale30, "zxz", (java.lang.Object[]) throwableArray33);
        char[] charArray38 = new char[] { 'a', ' ', '#' };
        printWriter34.println(charArray38);
        printWriter21.write(charArray38);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        printWriter41.print((int) (short) -1);
        boolean boolean44 = printWriter41.checkError();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((-0.9904757959510307d), 0.0d, (-0.0d), 0.0d, true);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double65 = rotation64.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) (-1L), (double) (short) 10, (double) 'a');
        double double71 = rotation70.getAngle();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation64.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation57.applyTo(rotation70);
        double[][] doubleArray74 = rotation73.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation51.applyTo(rotation73);
        double[][] doubleArray76 = rotation51.getMatrix();
        java.io.PrintWriter printWriter77 = printWriter41.printf("\u4e2d\u56fd\u8a9e\u4e2d\u83ef\u4eba\u6c11\u5171\u548c\u56fd)", (java.lang.Object[]) doubleArray76);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(doubleArray76, (-0.0307196161636463d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str5, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 52.0d + "'", double65 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2.3122509176395862d + "'", double71 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test07896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07896");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.close();
        printStream1.println('a');
        printStream1.print(1L);
        printStream1.print((long) (short) 1);
        printStream1.print((float) 1);
        java.io.PrintWriter printWriter96 = new java.io.PrintWriter((java.io.OutputStream) printStream1, true);
        printWriter96.print(2.699111843077519d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07897");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        boolean boolean10 = printStream6.checkError();
        printStream6.println((long) (short) 10);
        printStream6.print(1.0f);
        printStream6.println(' ');
        java.util.Locale.Category category17 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale18 = java.util.Locale.ROOT;
        java.lang.String str19 = locale18.getDisplayLanguage();
        java.util.Locale.setDefault(category17, locale18);
        java.util.Locale.Category category21 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category22 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale23 = java.util.Locale.ROOT;
        java.lang.String str24 = locale23.getDisplayLanguage();
        java.util.Locale.setDefault(category22, locale23);
        java.util.Locale.setDefault(category21, locale23);
        java.util.Locale locale27 = java.util.Locale.getDefault(category21);
        java.lang.String str28 = locale27.getISO3Language();
        java.util.Set<java.lang.Character> charSet29 = locale27.getExtensionKeys();
        java.util.Set<java.lang.String> strSet30 = locale27.getUnicodeLocaleKeys();
        java.lang.String str31 = locale27.getCountry();
        java.util.Locale.setDefault(category17, locale27);
        java.util.Locale locale33 = java.util.Locale.getDefault(category17);
        java.io.PrintStream printStream36 = new java.io.PrintStream("ko-KR");
        printStream36.print((float) 100L);
        printStream36.println(true);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale44 = java.util.Locale.KOREAN;
        java.lang.String str45 = locale44.getDisplayLanguage();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double53 = rotation52.getQ0();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double60 = rotation59.getQ0();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation52.applyTo(rotation59);
        double double62 = rotation52.getQ0();
        double double63 = rotation52.getQ0();
        double[][] doubleArray64 = rotation52.getMatrix();
        java.io.PrintWriter printWriter65 = printWriter43.printf(locale44, "zh_CN", (java.lang.Object[]) doubleArray64);
        java.io.PrintStream printStream66 = printStream36.printf("German (Germany)", (java.lang.Object[]) doubleArray64);
        java.io.PrintStream printStream67 = printStream6.format(locale33, "coreano", (java.lang.Object[]) doubleArray64);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(doubleArray64, (-0.40965275301159887d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + category17 + "' != '" + java.util.Locale.Category.FORMAT + "'", category17.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + category21 + "' != '" + java.util.Locale.Category.FORMAT + "'", category21.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category22 + "' != '" + java.util.Locale.Category.FORMAT + "'", category22.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(charSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "ko");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Korean" + "'", str45, "Korean");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 52.0d + "'", double53 == 52.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(printStream66);
        org.junit.Assert.assertNotNull(printStream67);
    }

    @Test
    public void test07898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07898");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        printStream85.println((long) 100);
        printStream85.println((int) (byte) 10);
        java.io.PrintWriter printWriter94 = new java.io.PrintWriter((java.io.OutputStream) printStream85);
        printStream85.print((double) 1);
        java.io.PrintStream printStream98 = printStream85.append('u');
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream98);
    }

    @Test
    public void test07899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07899");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.print("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream8 = printStream1.append((java.lang.CharSequence) "yzy");
        printStream1.println((long) 100);
        printStream1.close();
        java.io.PrintStream printStream12 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale16 = java.util.Locale.KOREAN;
        java.lang.String str17 = locale16.getDisplayLanguage();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double25 = rotation24.getQ0();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation24.applyTo(rotation31);
        double double34 = rotation24.getQ0();
        double double35 = rotation24.getQ0();
        double[][] doubleArray36 = rotation24.getMatrix();
        java.io.PrintWriter printWriter37 = printWriter15.printf(locale16, "zh_CN", (java.lang.Object[]) doubleArray36);
        java.io.PrintStream printStream38 = printStream12.printf("\u82f1\u6587\u52a0\u62ff\u5927)", (java.lang.Object[]) doubleArray36);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.OutputStream) printStream38, false);
        java.io.PrintStream printStream42 = new java.io.PrintStream("ko-KR");
        printStream42.close();
        java.util.Locale locale44 = java.util.Locale.UK;
        java.lang.String[] strArray46 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream47 = printStream42.format(locale44, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray46);
        printStream47.write(10);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter((java.io.OutputStream) printStream47);
        printStream47.print((int) (short) 1);
        printStream47.println((double) 100L);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.OutputStream) printStream47, false);
        printStream47.flush();
        java.io.PrintStream printStream59 = printStream47.append(' ');
        java.util.Locale locale60 = java.util.Locale.UK;
        java.lang.String str61 = locale60.getVariant();
        java.util.Locale locale63 = new java.util.Locale("org.apache.commons.math.MathException");
        java.lang.String str64 = locale63.getScript();
        java.lang.String str65 = locale60.getDisplayVariant(locale63);
        java.lang.String[] strArray70 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray70, (java.lang.Throwable) mathException72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray75 = mathException74.getSuppressed();
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray70, (java.lang.Throwable) mathException74);
        java.lang.Throwable[] throwableArray77 = mathException74.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException78 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray77);
        java.io.PrintStream printStream79 = printStream47.format(locale60, "XYZ", (java.lang.Object[]) throwableArray77);
        java.io.PrintStream printStream80 = new java.io.PrintStream((java.io.OutputStream) printStream47);
        java.io.PrintStream printStream82 = printStream47.append((java.lang.CharSequence) "French");
        printStream38.println((java.lang.Object) printStream82);
        printStream38.flush();
        printStream38.println((long) 100);
        org.junit.Assert.assertNotNull(printStream8);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "ko");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Korean" + "'", str17, "Korean");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printStream38);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(printStream47);
        org.junit.Assert.assertNotNull(printStream59);
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_GB");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals(locale63.toString(), "org.apache.commons.math.mathexception");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(printStream79);
        org.junit.Assert.assertNotNull(printStream82);
    }

    @Test
    public void test07900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07900");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("cinese");
        java.io.PrintStream printStream4 = new java.io.PrintStream("ko-KR");
        printStream4.close();
        java.util.Locale locale6 = java.util.Locale.UK;
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream9 = printStream4.format(locale6, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray8);
        printStream9.write(10);
        printStream9.print((double) (byte) 100);
        printStream9.println(false);
        printStream9.write((int) (byte) 100);
        printStream9.flush();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException22);
        java.lang.Object[] objArray24 = mathException22.getArguments();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("deu", (java.lang.Throwable) mathException22);
        java.lang.Throwable[] throwableArray26 = mathException25.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation33.getAxis();
        double[][] doubleArray35 = rotation33.getMatrix();
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("French", (java.lang.Object[]) doubleArray35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray26, (java.lang.Throwable) mathException36);
        java.lang.String str38 = mathException36.getPattern();
        java.lang.Object[] objArray39 = mathException36.getArguments();
        java.io.PrintStream printStream40 = printStream9.printf("", objArray39);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray44 = mathException43.getSuppressed();
        java.lang.String[] strArray50 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray50, (java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray55 = mathException54.getSuppressed();
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray50, (java.lang.Throwable) mathException54);
        java.lang.Throwable[] throwableArray57 = mathException54.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException58 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray57);
        java.lang.String str59 = notARotationMatrixException58.getPattern();
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) notARotationMatrixException58);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", (java.lang.Throwable) notARotationMatrixException58);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("XZY", (java.lang.Object[]) throwableArray44, (java.lang.Throwable) notARotationMatrixException58);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("\u97d3\u6587)", (java.lang.Throwable) notARotationMatrixException58);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException58);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("Francia", objArray39, (java.lang.Throwable) mathException64);
        mathException1.addSuppressed((java.lang.Throwable) mathException65);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printStream9);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "French" + "'", str38, "French");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[[25407.0, 1040.0, 2000.0], [-1040.0, 5407.0, 10400.0], [2000.0, -10400.0, 5607.0]]");
        org.junit.Assert.assertNotNull(printStream40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test07901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07901");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.print("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream8 = printStream1.append((java.lang.CharSequence) "yzy");
        printStream1.println((long) 100);
        printStream1.println("UNITED KINGDOM");
        printStream1.close();
        java.io.PrintStream printStream16 = new java.io.PrintStream("ko-KR");
        printStream16.close();
        java.util.Locale locale18 = java.util.Locale.UK;
        java.lang.String[] strArray20 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream21 = printStream16.format(locale18, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray20);
        printStream16.println((long) 10);
        java.io.PrintStream printStream25 = printStream16.append('x');
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.OutputStream) printStream25, false);
        printStream25.close();
        printStream25.println((int) 'x');
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double38 = rotation37.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double45 = rotation44.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (-1L), (double) (short) 10, (double) 'a');
        double double51 = rotation50.getAngle();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation44.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation37.applyTo(rotation50);
        double[][] doubleArray54 = rotation53.getMatrix();
        java.io.PrintStream printStream55 = printStream25.format("\ud55c\uad6d\uc5b4\ub300\ud55c\ubbfc\uad6d)", (java.lang.Object[]) doubleArray54);
        java.io.PrintStream printStream56 = printStream1.printf("Germany", (java.lang.Object[]) doubleArray54);
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.OutputStream) printStream56, true);
        java.lang.String[] strArray66 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray66, (java.lang.Throwable) mathException68);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray71 = mathException70.getSuppressed();
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray66, (java.lang.Throwable) mathException70);
        java.lang.Throwable[] throwableArray73 = mathException70.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException74 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("\u97d3\u6587)", (java.lang.Object[]) throwableArray73);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("ko", (java.lang.Throwable) mathException75);
        java.lang.Throwable[] throwableArray77 = mathException75.getSuppressed();
        java.lang.Object[] objArray78 = mathException75.getArguments();
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("United Kingdom");
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: chinesisch_VEREINIGTES K\366NIGREICH", objArray78, (java.lang.Throwable) mathException82);
        java.io.PrintWriter printWriter84 = printWriter58.printf("en-GB", objArray78);
        java.lang.Object obj85 = null;
        printWriter84.print(obj85);
        org.junit.Assert.assertNotNull(printStream8);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(printStream21);
        org.junit.Assert.assertNotNull(printStream25);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2.3122509176395862d + "'", double51 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(printStream55);
        org.junit.Assert.assertNotNull(printStream56);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test07902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07902");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.write((int) ' ');
        printStream6.println((long) (short) 100);
        java.lang.String[] strArray56 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray56, (java.lang.Throwable) mathException58);
        java.lang.String str60 = mathException59.getPattern();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("YZY", (java.lang.Throwable) mathException59);
        java.lang.Throwable[] throwableArray62 = mathException61.getSuppressed();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Throwable) mathException61);
        java.lang.Throwable[] throwableArray64 = mathException61.getSuppressed();
        java.lang.Throwable[] throwableArray65 = mathException61.getSuppressed();
        java.lang.Throwable[] throwableArray66 = mathException61.getSuppressed();
        java.io.PrintStream printStream67 = printStream6.printf("\ud504\ub791\uc2a4\uc5b4\ud504\ub791\uc2a4) (DEUTSCH)", (java.lang.Object[]) throwableArray66);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ZXZ" + "'", str60, "ZXZ");
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(printStream67);
    }

    @Test
    public void test07903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07903");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        java.io.PrintWriter printWriter11 = printWriter3.format(locale7, "zxz", (java.lang.Object[]) throwableArray10);
        char[] charArray15 = new char[] { 'a', ' ', '#' };
        printWriter11.println(charArray15);
        java.util.Locale locale17 = java.util.Locale.FRENCH;
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.lang.String str21 = locale17.getDisplayLanguage(locale18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray33 = rotation32.getMatrix();
        java.io.PrintWriter printWriter34 = printWriter11.printf(locale17, "english", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray33, (double) '#');
        double double37 = rotation36.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D(0.0d, 93.57684707871968d, 0.024645430941207122d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D(1040.0d, (double) (byte) 10, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D54, (double) (byte) 100, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D61, (double) (byte) 100, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D67, (double) (byte) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D72, (double) (byte) 100, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D69, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D56, (double) (byte) 1, vector3D64, (double) (short) 100, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D56.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) (-1), vector3D56);
        double double80 = vector3D56.getAlpha();
        double double81 = vector3D56.getNorm();
        double double82 = vector3D56.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D45, vector3D56);
        double double84 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D41, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation36.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D41.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder87.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder87.getA3();
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(rotationOrder87, (double) ' ', 1.5599296019390303d, (-2000.0d));
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder87.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotationOrder87.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotationOrder87.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D41.add(vector3D96);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "fr");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "fran\347ais" + "'", str21, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.5309649148733835d + "'", double37 == 0.5309649148733835d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 935.7438253562556d + "'", double84 == 935.7438253562556d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test07904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07904");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintStream printStream47 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        printStream6.println();
        java.util.Locale.Builder builder49 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder51 = builder49.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder53 = builder51.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale54 = builder53.build();
        java.lang.String str55 = locale54.getCountry();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double63 = rotation62.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) (-1L), (double) (short) 10, (double) 'a');
        double double69 = rotation68.getAngle();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation62.applyInverseTo(rotation68);
        double[][] doubleArray71 = rotation68.getMatrix();
        java.io.PrintStream printStream72 = printStream6.printf(locale54, "\ud504\ub791\uc2a4\uc5b4", (java.lang.Object[]) doubleArray71);
        java.util.Locale locale73 = java.util.Locale.ENGLISH;
        java.lang.String str74 = locale73.getDisplayName();
        java.lang.String str75 = locale73.toLanguageTag();
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA3();
        java.lang.String str80 = rotationOrder77.toString();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, 0.10062844706379001d, 12344.924101615155d, (-34365.38633275781d));
        double[][] doubleArray85 = rotation84.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(doubleArray85, 0.0995037190209989d);
        java.io.PrintStream printStream88 = printStream6.format(locale73, "org.apache.commons.math.MathException: Chinesisch", (java.lang.Object[]) doubleArray85);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2.3122509176395862d + "'", double69 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(printStream72);
        org.junit.Assert.assertNotNull(locale73);
        org.junit.Assert.assertEquals(locale73.toString(), "en");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\uc601\uc5b4" + "'", str74, "\uc601\uc5b4");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "en" + "'", str75, "en");
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "XZY" + "'", str80, "XZY");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(printStream88);
    }

    @Test
    public void test07905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07905");
        java.io.PrintStream printStream1 = new java.io.PrintStream("fr");
        java.io.PrintStream printStream3 = printStream1.append((java.lang.CharSequence) "French");
        printStream1.print((double) 1);
        java.util.Locale.Builder builder6 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder8 = builder6.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder10 = builder6.setLanguage("ZXZ");
        java.util.Locale locale11 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder12 = builder6.setLocale(locale11);
        java.util.Locale locale13 = locale11.stripExtensions();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double21 = rotation20.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        double double30 = rotation20.getQ0();
        double double31 = rotation20.getQ0();
        double[][] doubleArray32 = rotation20.getMatrix();
        java.io.PrintStream printStream33 = printStream1.format(locale13, "zh-CN", (java.lang.Object[]) doubleArray32);
        java.lang.String str34 = locale13.getLanguage();
        java.util.Locale.Builder builder35 = new java.util.Locale.Builder();
        java.util.Locale locale36 = java.util.Locale.FRENCH;
        java.util.Locale locale37 = locale36.stripExtensions();
        java.util.Locale.Builder builder38 = builder35.setLocale(locale36);
        java.util.Locale.Builder builder39 = builder38.clear();
        java.util.Locale.Builder builder41 = builder39.setLanguage("");
        java.util.Locale.Builder builder42 = builder41.clear();
        java.util.Locale locale43 = java.util.Locale.ROOT;
        java.lang.String str44 = locale43.getDisplayLanguage();
        java.lang.String str45 = locale43.getDisplayLanguage();
        java.util.Locale locale46 = locale43.stripExtensions();
        java.util.Locale.Builder builder47 = builder41.setLocale(locale43);
        java.lang.String str48 = locale13.getDisplayName(locale43);
        java.lang.String str49 = locale13.getDisplayLanguage();
        org.junit.Assert.assertNotNull(printStream3);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "de_DE");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(printStream33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "de" + "'", str34, "de");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "fr");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "fr");
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "");
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "German (Germany)" + "'", str48, "German (Germany)");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\ub3c5\uc77c\uc5b4" + "'", str49, "\ub3c5\uc77c\uc5b4");
    }

    @Test
    public void test07906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07906");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        java.util.Locale locale5 = java.util.Locale.UK;
        java.lang.String[] strArray7 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream8 = printStream3.format(locale5, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray7);
        printStream8.write(10);
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.OutputStream) printStream8);
        printWriter11.println(1);
        java.util.Locale locale14 = java.util.Locale.JAPANESE;
        java.util.Locale locale15 = java.util.Locale.FRENCH;
        java.util.Locale locale16 = java.util.Locale.TAIWAN;
        java.lang.String str17 = locale15.getDisplayScript(locale16);
        java.lang.String str18 = locale16.getVariant();
        java.lang.String str19 = locale14.getDisplayVariant(locale16);
        java.lang.String str20 = locale14.getDisplayCountry();
        java.lang.String[] strArray23 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray23, (java.lang.Throwable) mathException25);
        java.io.PrintWriter printWriter27 = printWriter11.format(locale14, "Englisch", (java.lang.Object[]) strArray23);
        java.io.PrintWriter printWriter29 = printWriter11.append('x');
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter29, true);
        printWriter31.println((long) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str36 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder35.getA2();
        java.lang.String str43 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, 2.5657054957045693d, (-4.79425538604203d), 110.14009524181563d);
        double[][] doubleArray48 = rotation47.getMatrix();
        java.io.PrintWriter printWriter49 = printWriter31.format("org.apache.commons.math.geometry.NotARotationMatrixException: XZY", (java.lang.Object[]) doubleArray48);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException50 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZH_CN", (java.lang.Object[]) doubleArray48);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException51 = new org.apache.commons.math.geometry.NotARotationMatrixException("ja", (java.lang.Object[]) doubleArray48);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(printStream8);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "ja");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "fr");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZXZ" + "'", str36, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ZXZ" + "'", str43, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(printWriter49);
    }

    @Test
    public void test07907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07907");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation12.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation27.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation27.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation21.applyInverseTo(rotation27);
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation5.applyInverseTo(rotation38);
        double[][] doubleArray41 = rotation40.getMatrix();
        double[][] doubleArray42 = rotation40.getMatrix();
        double double43 = rotation40.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 128040.0d + "'", double39 == 128040.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1.331616E7d) + "'", double43 == (-1.331616E7d));
    }

    @Test
    public void test07908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07908");
        java.util.Locale locale1 = java.util.Locale.forLanguageTag("\u30a4\u30ae\u30ea\u30b9");
        java.lang.String str2 = locale1.getLanguage();
        java.io.PrintStream printStream4 = new java.io.PrintStream("ko-KR");
        printStream4.close();
        java.util.Locale locale6 = java.util.Locale.UK;
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream9 = printStream4.format(locale6, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray8);
        printStream9.write(10);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.OutputStream) printStream9);
        byte[] byteArray14 = new byte[] { (byte) -1 };
        printStream9.write(byteArray14);
        printStream9.close();
        printStream9.println((double) (short) 100);
        byte[] byteArray20 = new byte[] { (byte) 1 };
        printStream9.write(byteArray20, 0, 1);
        printStream9.println(true);
        java.util.Locale locale26 = java.util.Locale.PRC;
        java.util.Locale locale27 = java.util.Locale.ROOT;
        java.lang.String str28 = locale26.getDisplayName(locale27);
        java.util.Locale locale31 = new java.util.Locale("ZXZ", "ko_KR");
        java.lang.String str32 = locale26.getDisplayName(locale31);
        java.lang.String str33 = locale26.getLanguage();
        java.util.Locale locale34 = locale26.stripExtensions();
        java.util.Locale locale35 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale35);
        java.lang.String str37 = locale35.toLanguageTag();
        java.lang.String str38 = locale35.getDisplayVariant();
        java.lang.String str39 = locale26.getDisplayCountry(locale35);
        java.util.Locale locale40 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str41 = locale40.getScript();
        java.util.Locale locale42 = java.util.Locale.KOREA;
        java.lang.String str43 = locale40.getDisplayLanguage(locale42);
        java.lang.String str44 = locale40.getDisplayLanguage();
        java.util.Set<java.lang.String> strSet45 = locale40.getUnicodeLocaleAttributes();
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter49 = printWriter47.append('#');
        printWriter47.println((long) (short) 10);
        java.util.Locale locale52 = java.util.Locale.PRC;
        java.lang.String str53 = locale52.getDisplayVariant();
        java.lang.String[] strArray58 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray58, (java.lang.Throwable) mathException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray63 = mathException62.getSuppressed();
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray58, (java.lang.Throwable) mathException62);
        java.lang.Throwable[] throwableArray65 = mathException62.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException66 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray65);
        java.io.PrintWriter printWriter67 = printWriter47.format(locale52, "", (java.lang.Object[]) throwableArray65);
        java.lang.String str68 = locale40.getDisplayCountry(locale52);
        java.lang.String str69 = locale26.getDisplayVariant(locale40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str72 = rotationOrder71.toString();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        double[][] doubleArray78 = rotation77.getMatrix();
        java.io.PrintStream printStream79 = printStream9.printf(locale26, "XYZ", (java.lang.Object[]) doubleArray78);
        java.lang.String str80 = locale1.getDisplayCountry(locale26);
        java.lang.String str81 = locale26.toString();
        org.junit.Assert.assertNotNull(locale1);
        org.junit.Assert.assertEquals(locale1.toString(), "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(printStream9);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1]");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Chinese (China)" + "'", str28, "Chinese (China)");
        org.junit.Assert.assertEquals(locale31.toString(), "zxz_KO_KR");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Chinese (China)" + "'", str32, "Chinese (China)");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "zh" + "'", str33, "zh");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ko-KR" + "'", str37, "ko-KR");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\uc911\uad6d" + "'", str39, "\uc911\uad6d");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str43, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str44, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\u53f0\u6e7e\u5730\u533a" + "'", str68, "\u53f0\u6e7e\u5730\u533a");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ZXZ" + "'", str72, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(printStream79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "zh_CN" + "'", str81, "zh_CN");
    }

    @Test
    public void test07909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07909");
        java.io.PrintStream printStream1 = new java.io.PrintStream("Francia");
        printStream1.flush();
        boolean boolean3 = printStream1.checkError();
        java.io.PrintStream printStream5 = printStream1.append('#');
        java.io.PrintStream printStream7 = printStream5.append('#');
        printStream5.println(' ');
        printStream5.println('a');
        java.io.PrintStream printStream13 = printStream5.append((java.lang.CharSequence) "\u97d3\u6587)");
        printStream13.print(0.0f);
        java.lang.String[] strArray18 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("ko_KR", (java.lang.Object[]) strArray18);
        java.io.PrintStream printStream20 = printStream13.printf("ZYZ", (java.lang.Object[]) strArray18);
        java.io.PrintStream printStream23 = new java.io.PrintStream("und");
        java.io.PrintStream printStream24 = new java.io.PrintStream((java.io.OutputStream) printStream23);
        printStream23.println((long) (-1));
        printStream23.print('4');
        printStream23.write((int) (byte) 10);
        printStream23.close();
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str34 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA2();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) '#', 2.0790806738125385d, (-0.2868032122551722d));
        double double40 = rotation39.getQ1();
        double[][] doubleArray41 = rotation39.getMatrix();
        java.io.PrintStream printStream42 = printStream23.format("\u82f1\u6587\u52a0\u62ff\u5927)", (java.lang.Object[]) doubleArray41);
        java.io.PrintStream printStream43 = printStream13.format("FRANCIA", (java.lang.Object[]) doubleArray41);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(printStream5);
        org.junit.Assert.assertNotNull(printStream7);
        org.junit.Assert.assertNotNull(printStream13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(printStream20);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "YZY" + "'", str34, "YZY");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.8054849532414718d + "'", double40 == 0.8054849532414718d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(printStream42);
        org.junit.Assert.assertNotNull(printStream43);
    }

    @Test
    public void test07910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07910");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double27 = rotation26.getQ0();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation19.applyTo(rotation26);
        double double29 = rotation19.getQ0();
        double double30 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double37 = rotation36.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation36.applyTo(rotation43);
        double double46 = rotation36.getQ0();
        double double47 = rotation36.getQ0();
        double[][] doubleArray48 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double55 = rotation54.getQ0();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double62 = rotation61.getQ0();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation54.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation36.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.scalarMultiply((double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation19.applyTo(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation13.applyTo(vector3D68);
        double double70 = vector3D69.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((-0.03286963174708454d), (-0.9996400101546701d));
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D74.negate();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 52.0d + "'", double46 == 52.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 52.0d + "'", double55 == 52.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 8.396146867417E12d + "'", double70 == 8.396146867417E12d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
    }

    @Test
    public void test07911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07911");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        printStream6.println('x');
        printStream6.print(0);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
    }

    @Test
    public void test07912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07912");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        printStream6.println((double) 100L);
        printStream6.println((double) 10L);
        printStream6.print(0.5763904177042349d);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double25 = rotation24.getQ0();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ0();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation24.applyTo(rotation31);
        double double34 = rotation24.getQ0();
        double double35 = rotation24.getQ0();
        double[][] doubleArray36 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double50 = rotation49.getQ0();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation42.applyTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation24.applyInverseTo(rotation42);
        double[][] doubleArray53 = rotation42.getMatrix();
        java.io.PrintStream printStream54 = printStream6.format("japonais", (java.lang.Object[]) doubleArray53);
        printStream6.println();
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream59 = printStream6.append((java.lang.CharSequence) "org.apache.commons.math.MathException: France", (int) (byte) 1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 52.0d + "'", double43 == 52.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(printStream54);
    }

    @Test
    public void test07913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07913");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D14, (double) (byte) 100, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation6.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation6.getAxis();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation6.revert();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((-12804.0d), vector3D22);
        double double24 = vector3D23.getX();
        double double25 = vector3D23.getY();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 12740.4561834487d + "'", double24 == 12740.4561834487d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    }

    @Test
    public void test07914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07914");
        double[][] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(doubleArray0, (-1.194520336698293d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07915");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        printStream85.println(false);
        printStream85.flush();
        printStream85.println((double) 100.0f);
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream85);
        boolean boolean94 = printWriter93.checkError();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test07916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07916");
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter6 = printWriter4.append('#');
        java.lang.Object[] objArray8 = null;
        java.io.PrintWriter printWriter9 = printWriter6.format("fran\347ais", objArray8);
        java.util.Locale locale10 = java.util.Locale.GERMAN;
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale14 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str15 = locale14.getScript();
        java.util.Locale locale16 = java.util.Locale.KOREA;
        java.lang.String str17 = locale14.getDisplayLanguage(locale16);
        java.lang.String[] strArray20 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray20, (java.lang.Throwable) mathException22);
        java.io.PrintWriter printWriter24 = printWriter13.format(locale16, "YZY", (java.lang.Object[]) strArray20);
        java.io.PrintWriter printWriter25 = printWriter9.printf(locale10, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray20);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)", (java.lang.Object[]) strArray20);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException26);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("", (java.lang.Throwable) cardanEulerSingularityException30);
        mathException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.geometry.notarotationmatrixexception: germany", (java.lang.Throwable) mathException27);
        java.lang.String str34 = mathException27.getPattern();
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "de");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str17, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test07917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07917");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = java.util.Locale.GERMAN;
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale11 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str12 = locale11.getScript();
        java.util.Locale locale13 = java.util.Locale.KOREA;
        java.lang.String str14 = locale11.getDisplayLanguage(locale13);
        java.lang.String[] strArray17 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray17, (java.lang.Throwable) mathException19);
        java.io.PrintWriter printWriter21 = printWriter10.format(locale13, "YZY", (java.lang.Object[]) strArray17);
        java.io.PrintWriter printWriter22 = printWriter6.printf(locale7, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray17);
        java.util.Locale locale23 = java.util.Locale.JAPANESE;
        java.lang.String str24 = locale23.getLanguage();
        java.lang.String[] strArray28 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray28, (java.lang.Throwable) mathException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray33 = mathException32.getSuppressed();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray28, (java.lang.Throwable) mathException32);
        java.io.PrintWriter printWriter35 = printWriter6.printf(locale23, "KOR", (java.lang.Object[]) strArray28);
        char[] charArray42 = new char[] { ' ', 'a', '#', 'x', ' ', '4' };
        printWriter6.println(charArray42);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter6, true);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double53 = rotation52.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double60 = rotation59.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) (-1L), (double) (short) 10, (double) 'a');
        double double66 = rotation65.getAngle();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation59.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation52.applyTo(rotation65);
        double[][] doubleArray69 = rotation68.getMatrix();
        java.io.PrintWriter printWriter70 = printWriter6.printf("CN", (java.lang.Object[]) doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(doubleArray69, 1.5707963267948966d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "de");
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str14, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "ja");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ja" + "'", str24, "ja");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " a#x 4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " a#x 4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , a, #, x,  , 4]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2.3122509176395862d + "'", double66 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(printWriter70);
    }

    @Test
    public void test07918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07918");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        boolean boolean47 = printStream6.checkError();
        java.util.Locale locale51 = new java.util.Locale("\u97d3\u6587)", "yzy", "und");
        java.io.PrintStream printStream54 = new java.io.PrintStream("ko-KR");
        printStream54.println("fr");
        java.lang.String[] strArray61 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray61, (java.lang.Throwable) mathException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray66 = mathException65.getSuppressed();
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray61, (java.lang.Throwable) mathException65);
        java.lang.Throwable[] throwableArray68 = mathException65.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException69 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray68);
        java.lang.Throwable[] throwableArray70 = notARotationMatrixException69.getSuppressed();
        java.io.PrintStream printStream71 = printStream54.format("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) throwableArray70);
        java.io.PrintStream printStream72 = printStream6.printf(locale51, "cor\351en", (java.lang.Object[]) throwableArray70);
        printStream6.println("it");
        printStream6.print(true);
        printStream6.println();
        printStream6.print(8095.122278323722d);
        java.io.PrintStream printStream80 = new java.io.PrintStream((java.io.OutputStream) printStream6);
        java.io.PrintWriter printWriter82 = new java.io.PrintWriter((java.io.OutputStream) printStream6, false);
        printWriter82.println((long) (byte) -1);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals(locale51.toString(), "\u97d3\u6587)_YZY_und");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(printStream71);
        org.junit.Assert.assertNotNull(printStream72);
    }

    @Test
    public void test07919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07919");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        printStream90.println("\uc911\uad6d\uc5b4");
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream90);
        printWriter93.println(true);
        printWriter93.println((-1.331616E7d));
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
    }

    @Test
    public void test07920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07920");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        byte[] byteArray91 = new byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 10 };
        printStream1.write(byteArray91);
        java.io.PrintStream printStream94 = printStream1.append(' ');
        printStream1.println(true);
        printStream1.print((float) 100L);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 100, -1, 10, 10]");
        org.junit.Assert.assertNotNull(printStream94);
    }

    @Test
    public void test07921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07921");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D2, (double) (byte) 100, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract((double) 10L, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D18, (double) (byte) 100, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D9.subtract((double) 0, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D27, (double) (byte) 100, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract((double) 10L, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D35, (double) 10L, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D46, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D56, (double) (byte) 100, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D46, (double) 0.0f, vector3D58);
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D9, (double) (short) 1, vector3D40, (double) (-1L), vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D65, (double) (byte) 100, vector3D67);
        double double69 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D9, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D9.orthogonal();
        double double71 = vector3D9.getY();
        double double72 = vector3D9.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) 1.0f);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D82, (double) (byte) 100, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation80.applyTo(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation80.getAxis();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation80.revert();
        double double89 = rotation80.getQ3();
        double double90 = rotation80.getQ0();
        org.apache.commons.math.geometry.Rotation rotation91 = rotation80.revert();
        org.apache.commons.math.geometry.Rotation rotation92 = rotation74.applyTo(rotation80);
        double double93 = rotation92.getQ0();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.13715201283077028d) + "'", double71 == (-0.13715201283077028d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-2.141592653589793d) + "'", double72 == (-2.141592653589793d));
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 10.0d + "'", double89 == 10.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 52.0d + "'", double90 == 52.0d);
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertNotNull(rotation92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 46.14241067366236d + "'", double93 == 46.14241067366236d);
    }

    @Test
    public void test07922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07922");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D3, (double) (byte) 100, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D15, (double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D5, (double) 0.0f, vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double33 = rotation32.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation25.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation41 = rotation35.applyTo(rotation40);
        double double42 = rotation41.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double56 = rotation55.getQ0();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation48.applyTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double64 = rotation63.getQ0();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double71 = rotation70.getQ0();
        org.apache.commons.math.geometry.Rotation rotation72 = rotation63.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation63.revert();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation57.applyInverseTo(rotation63);
        double[][] doubleArray75 = rotation57.getMatrix();
        double double76 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation41.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D17, vector3D78);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D78, 0.10802374571758515d);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(7037.089656850716d, vector3D78);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-10.358482905538347d) + "'", double42 == (-10.358482905538347d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 52.0d + "'", double56 == 52.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 52.0d + "'", double64 == 52.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 52.0d + "'", double71 == 52.0d);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1040.0d + "'", double76 == 1040.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test07923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07923");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation7.applyTo(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation7.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 1.5905084122975552d, (-12804.0d));
        double double19 = org.apache.commons.math.geometry.Vector3D.angle(vector3D14, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 10, vector3D14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str23 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D25.negate();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D26.negate();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D20.add((double) 'a', vector3D26);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double43 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation35.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyTo(rotation50);
        double double52 = rotation50.getAngle();
        double double53 = rotation50.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation59 = rotation50.applyInverseTo(rotation58);
        double double60 = rotation58.getQ2();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double67 = rotation66.getQ0();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double74 = rotation73.getQ0();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation66.applyTo(rotation73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation66.applyInverseTo(vector3D76);
        double double78 = vector3D76.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str80 = rotationOrder79.toString();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D76.add(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D76.negate();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D76, (double) (short) -1);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation58.applyInverseTo(rotation86);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(2.510959086225248d, (-9.4698384E7d), (-1.4097801489264368d));
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation87.applyInverseTo(vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D((-0.420609110205706d), vector3D26, (-0.13715201283077028d), vector3D92);
        double double94 = vector3D92.getDelta();
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.4787032876674264d + "'", double19 == 1.4787032876674264d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXZ" + "'", str23, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 52.0d + "'", double43 == 52.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2.3122509176395862d + "'", double52 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.4028887144651276d + "'", double53 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.02937648959434208d) + "'", double60 == (-0.02937648959434208d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 52.0d + "'", double67 == 52.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 52.0d + "'", double74 == 52.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ZXZ" + "'", str80, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.7300467754757496d) + "'", double94 == (-0.7300467754757496d));
    }

    @Test
    public void test07924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07924");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        printStream90.print(' ');
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream90);
        java.io.PrintWriter printWriter94 = new java.io.PrintWriter((java.io.OutputStream) printStream90);
        printWriter94.println(0.34104670938162607d);
        printWriter94.flush();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
    }

    @Test
    public void test07925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07925");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        java.lang.String[] strArray15 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray20 = mathException19.getSuppressed();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException19);
        java.io.PrintStream printStream22 = printStream6.format("deu", (java.lang.Object[]) strArray15);
        java.io.PrintStream printStream24 = new java.io.PrintStream("ko-KR");
        printStream24.close();
        java.util.Locale locale26 = java.util.Locale.UK;
        java.lang.String[] strArray28 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream29 = printStream24.format(locale26, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray28);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter33 = printWriter31.append('#');
        java.lang.Object[] objArray35 = null;
        java.io.PrintWriter printWriter36 = printWriter33.format("fran\347ais", objArray35);
        java.util.Locale locale37 = null;
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray40 = mathException39.getSuppressed();
        java.io.PrintWriter printWriter41 = printWriter33.format(locale37, "zxz", (java.lang.Object[]) throwableArray40);
        char[] charArray45 = new char[] { 'a', ' ', '#' };
        printWriter41.println(charArray45);
        printStream24.println(charArray45);
        java.io.PrintStream printStream49 = new java.io.PrintStream("ko-KR");
        printStream49.close();
        java.util.Locale locale51 = java.util.Locale.UK;
        java.lang.String[] strArray53 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream54 = printStream49.format(locale51, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray53);
        printStream54.write(10);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.OutputStream) printStream54);
        byte[] byteArray59 = new byte[] { (byte) -1 };
        printStream54.write(byteArray59);
        printStream24.write(byteArray59);
        printStream22.write(byteArray59);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D65, (double) (byte) 100, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D70, (double) (byte) 100, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D67, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D77, (double) (byte) 100, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D67, (double) 0.0f, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D81.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 'a', (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D81.add(vector3D87);
        printStream22.println((java.lang.Object) vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D81.negate();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D81.scalarMultiply((-0.09966865249116202d));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D81, 52.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: zero norm for rotation axis");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(printStream22);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(printStream29);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printStream54);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[-1]");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
    }

    @Test
    public void test07926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07926");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        printStream6.print((int) (short) 1);
        printStream6.println((double) 100L);
        printStream6.print((int) (short) 10);
        java.util.Locale locale17 = java.util.Locale.forLanguageTag("Chinesisch");
        java.util.Set<java.lang.String> strSet18 = locale17.getUnicodeLocaleKeys();
        java.util.Locale locale21 = new java.util.Locale("CN", "\uc911\uad6d\uc5b4");
        java.util.Set<java.lang.String> strSet22 = locale21.getUnicodeLocaleAttributes();
        java.lang.String str23 = locale17.getDisplayVariant(locale21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter28 = printWriter26.append('#');
        java.lang.Object[] objArray30 = null;
        java.io.PrintWriter printWriter31 = printWriter28.format("fran\347ais", objArray30);
        java.util.Locale locale32 = null;
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray35 = mathException34.getSuppressed();
        java.io.PrintWriter printWriter36 = printWriter28.format(locale32, "zxz", (java.lang.Object[]) throwableArray35);
        char[] charArray40 = new char[] { 'a', ' ', '#' };
        printWriter36.println(charArray40);
        java.util.Locale locale42 = java.util.Locale.FRENCH;
        java.util.Locale locale43 = java.util.Locale.FRENCH;
        java.util.Locale locale44 = java.util.Locale.TAIWAN;
        java.lang.String str45 = locale43.getDisplayScript(locale44);
        java.lang.String str46 = locale42.getDisplayLanguage(locale43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray58 = rotation57.getMatrix();
        java.io.PrintWriter printWriter59 = printWriter36.printf(locale42, "english", (java.lang.Object[]) doubleArray58);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(doubleArray58, (double) '#');
        java.io.PrintStream printStream62 = printStream6.printf(locale21, "france", (java.lang.Object[]) doubleArray58);
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter66 = printWriter64.append('#');
        java.lang.Object[] objArray68 = null;
        java.io.PrintWriter printWriter69 = printWriter66.format("fran\347ais", objArray68);
        java.util.Locale locale70 = null;
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray73 = mathException72.getSuppressed();
        java.io.PrintWriter printWriter74 = printWriter66.format(locale70, "zxz", (java.lang.Object[]) throwableArray73);
        char[] charArray78 = new char[] { 'a', ' ', '#' };
        printWriter74.println(charArray78);
        printStream62.print(charArray78);
        java.io.PrintStream printStream82 = printStream62.append('a');
        java.io.PrintWriter printWriter84 = new java.io.PrintWriter((java.io.OutputStream) printStream82, true);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "");
        org.junit.Assert.assertNotNull(strSet18);
// flaky:         org.junit.Assert.assertEquals(locale21.toString(), "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "fr");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "fr");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "fran\347ais" + "'", str46, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(printStream62);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a,  , #]");
        org.junit.Assert.assertNotNull(printStream82);
    }

    @Test
    public void test07927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07927");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ1();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D9, (double) (byte) 100, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract((double) 10L, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double33 = rotation32.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation25.revert();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation25.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D18.subtract(vector3D36);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation43.revert();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation43.getAxis();
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D58, (double) (byte) 100, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D60, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D70, (double) (byte) 100, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D60, (double) 0.0f, vector3D72);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D82, (double) (byte) 100, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation80.applyTo(vector3D82);
        double double87 = vector3D82.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D72.add(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D54, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D37.subtract(vector3D89);
        double double91 = vector3D90.getY();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.995037190209989d) + "'", double55 == (-0.995037190209989d));
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-11094.094757084158d) + "'", double91 == (-11094.094757084158d));
    }

    @Test
    public void test07928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07928");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream1.println((long) 10);
        java.io.PrintStream printStream10 = printStream1.append('x');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.OutputStream) printStream10, false);
        printWriter12.println();
        printWriter12.print((float) (short) 1);
        printWriter12.print((long) 'a');
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA3();
        java.lang.String str21 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (-3.0171984405909804E-8d), (-0.13768695521062307d), (double) (-1L));
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (-1.194520336698293d), (-0.02937648959434208d), (double) 'x');
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation29.getAxis();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation29.revert();
        printWriter12.print((java.lang.Object) rotation29);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream10);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXY" + "'", str19, "ZXY");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZXY" + "'", str21, "ZXY");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation31);
    }

    @Test
    public void test07929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07929");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation5.getQ0();
        double double16 = rotation5.getQ0();
        double[][] doubleArray17 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double24 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation23.applyTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation5.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double40 = rotation39.getQ0();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation39.applyTo(rotation46);
        double double49 = rotation39.getQ0();
        double double50 = rotation39.getQ0();
        double[][] doubleArray51 = rotation39.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double65 = rotation64.getQ0();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation57.applyTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation39.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation23.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation23.revert();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation23.getAxis();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 52.0d + "'", double24 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 52.0d + "'", double40 == 52.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 52.0d + "'", double58 == 52.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 52.0d + "'", double65 == 52.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(vector3D70);
    }

    @Test
    public void test07930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07930");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        byte[] byteArray91 = new byte[] { (byte) 1, (byte) 100, (byte) -1, (byte) 10, (byte) 10 };
        printStream1.write(byteArray91);
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        printWriter93.println(false);
        java.io.PrintWriter printWriter97 = new java.io.PrintWriter((java.io.Writer) printWriter93, true);
        boolean boolean98 = printWriter97.checkError();
        boolean boolean99 = printWriter97.checkError();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[1, 100, -1, 10, 10]");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test07931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07931");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.scalarMultiply(0.5403023058681398d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D3.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.negate();
        double double8 = vector3D6.getZ();
        java.io.PrintStream printStream11 = new java.io.PrintStream("ko-KR");
        printStream11.close();
        java.util.Locale locale13 = java.util.Locale.UK;
        java.lang.String[] strArray15 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream16 = printStream11.format(locale13, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray15);
        printStream11.println((long) 10);
        java.io.PrintStream printStream20 = printStream11.append('x');
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.OutputStream) printStream20, false);
        printWriter22.println();
        java.io.PrintWriter printWriter25 = printWriter22.append('4');
        printWriter22.print(100);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray34 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D41, (double) (byte) 100, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D38, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation33.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation33.getAxis();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation33.revert();
        double double49 = rotation48.getQ1();
        printWriter22.println((java.lang.Object) rotation48);
        double double51 = rotation48.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D(0.0d, 93.57684707871968d);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((-10.358482905538347d), vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D56.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation48.applyTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation48.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((-2.3460959669804855d), vector3D6, 1.5524712767107332d, vector3D59);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.5063656411097589d) + "'", double8 == (-0.5063656411097589d));
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(printStream20);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
    }

    @Test
    public void test07932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07932");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) (-1L), (double) (short) 10, (double) 'a');
        double double22 = rotation21.getAngle();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation8.applyTo(rotation21);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation24.revert();
        double[][] doubleArray26 = rotation25.getMatrix();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("DE", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException28 = new org.apache.commons.math.geometry.NotARotationMatrixException("chinesisch (VEREINIGTES K\366NIGREICH)", (java.lang.Object[]) doubleArray26);
        java.lang.Object[] objArray29 = notARotationMatrixException28.getArguments();
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("Canad\340", objArray29);
        java.lang.String str31 = mathException30.getPattern();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2.3122509176395862d + "'", double22 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[[21177.172058686512, -5342.135392035869, 8079.43363019166], [4647.829587005819, 24389.7553383861, 2843.7997219450253], [-8497.843165278324, 1072.8961653110068, 22320.245996442118]]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Canad\340" + "'", str31, "Canad\340");
    }

    @Test
    public void test07933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07933");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        char[] charArray23 = new char[] { 'a', 'a', '4' };
        printStream1.println(charArray23);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.OutputStream) printStream1, false);
        printStream1.println(' ');
        java.io.PrintStream printStream30 = new java.io.PrintStream((java.io.OutputStream) printStream1, false);
        java.io.PrintStream printStream32 = printStream1.append(' ');
        printStream1.close();
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, a, 4]");
        org.junit.Assert.assertNotNull(printStream32);
    }

    @Test
    public void test07934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07934");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, (-1280400.0d), (-0.02937648959434208d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D16, (double) (byte) 100, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D18, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D28, (double) (byte) 100, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D18, (double) 0.0f, vector3D30);
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray41 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D43, (double) (byte) 100, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D48, (double) (byte) 100, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D45, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation40.applyInverseTo(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D53, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D53.negate();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D67, (double) (byte) 100, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation65.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) 'x', vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) 1, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D32, 100.0d, vector3D56, 52.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(0.0d, (-0.5063656411097588d));
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D74.subtract(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(0.0d, 93.57684707871968d);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((-10.358482905538347d), vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D84.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D85);
        double double87 = rotation86.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XYZ" + "'", str6, "XYZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
    }

    @Test
    public void test07935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07935");
        java.util.Locale.Builder builder0 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder2 = builder0.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder4 = builder0.setLanguage("ZXZ");
        java.util.Locale locale5 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder6 = builder0.setLocale(locale5);
        java.util.Locale.Builder builder8 = builder6.addUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder11 = builder8.setUnicodeLocaleKeyword("zh", "Englisch");
        java.io.PrintStream printStream13 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream15 = new java.io.PrintStream("ko-KR");
        printStream15.close();
        printStream15.println((double) '4');
        printStream15.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        double[][] doubleArray29 = rotation27.getMatrix();
        java.io.PrintStream printStream30 = printStream15.format("zh", (java.lang.Object[]) doubleArray29);
        printStream13.println((java.lang.Object) doubleArray29);
        char[] charArray35 = new char[] { 'a', 'a', '4' };
        printStream13.println(charArray35);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.OutputStream) printStream13, false);
        boolean boolean39 = printStream13.checkError();
        java.util.Locale locale40 = java.util.Locale.FRENCH;
        java.util.Locale locale41 = java.util.Locale.FRENCH;
        java.util.Locale locale42 = java.util.Locale.TAIWAN;
        java.lang.String str43 = locale41.getDisplayScript(locale42);
        java.lang.String str44 = locale40.getDisplayLanguage(locale41);
        boolean boolean45 = locale41.hasExtensions();
        java.util.Locale.Builder builder46 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder48 = builder46.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale49 = builder46.build();
        java.lang.String str50 = locale41.getDisplayLanguage(locale49);
        java.lang.String str51 = locale41.getDisplayVariant();
        java.util.Locale locale53 = java.util.Locale.forLanguageTag("coreano");
        java.lang.String str54 = locale41.getDisplayLanguage(locale53);
        java.lang.String str55 = locale41.toLanguageTag();
        java.lang.Object[] objArray57 = null;
        java.io.PrintStream printStream58 = printStream13.printf(locale41, "China", objArray57);
        java.util.Locale.Builder builder59 = builder11.setLocale(locale41);
        java.util.Locale.Builder builder60 = builder11.clear();
        java.util.Locale locale61 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale61);
        java.util.Locale locale63 = java.util.Locale.FRENCH;
        java.util.Locale locale64 = java.util.Locale.TAIWAN;
        java.lang.String str65 = locale63.getDisplayScript(locale64);
        java.lang.String str66 = locale61.getDisplayLanguage(locale64);
        java.util.Locale locale67 = java.util.Locale.PRC;
        java.util.Set<java.lang.String> strSet68 = locale67.getUnicodeLocaleAttributes();
        java.lang.String str69 = locale61.getDisplayVariant(locale67);
        java.lang.String str70 = locale67.getCountry();
        java.lang.String str71 = locale67.getLanguage();
        java.util.Set<java.lang.String> strSet72 = locale67.getUnicodeLocaleAttributes();
        java.lang.String str73 = locale67.getCountry();
        java.util.Locale.Builder builder74 = builder11.setLocale(locale67);
        java.util.Locale.Builder builder75 = builder11.clearExtensions();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(printStream30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "fr");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "fr");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "fran\347ais" + "'", str44, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "French" + "'", str50, "French");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "coreano");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "French" + "'", str54, "French");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "fr" + "'", str55, "fr");
        org.junit.Assert.assertNotNull(printStream58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "fr");
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\u97d3\u6587" + "'", str66, "\u97d3\u6587");
        org.junit.Assert.assertNotNull(locale67);
        org.junit.Assert.assertEquals(locale67.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "CN" + "'", str70, "CN");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "zh" + "'", str71, "zh");
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "CN" + "'", str73, "CN");
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test07936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07936");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("chinesisch (vereinigtes k\366nigreich)");
        printWriter1.println((int) (short) 1);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter9 = printWriter7.append('#');
        java.lang.Object[] objArray11 = null;
        java.io.PrintWriter printWriter12 = printWriter9.format("fran\347ais", objArray11);
        java.util.Locale locale13 = java.util.Locale.GERMAN;
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale17 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str18 = locale17.getScript();
        java.util.Locale locale19 = java.util.Locale.KOREA;
        java.lang.String str20 = locale17.getDisplayLanguage(locale19);
        java.lang.String[] strArray23 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray23, (java.lang.Throwable) mathException25);
        java.io.PrintWriter printWriter27 = printWriter16.format(locale19, "YZY", (java.lang.Object[]) strArray23);
        java.io.PrintWriter printWriter28 = printWriter12.printf(locale13, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray23);
        java.io.PrintWriter printWriter30 = printWriter12.append('4');
        printWriter12.println();
        printWriter12.println((long) (short) 0);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ0();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double48 = rotation47.getQ0();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation40.applyTo(rotation47);
        double double50 = rotation40.getQ0();
        double double51 = rotation40.getQ0();
        double[][] doubleArray52 = rotation40.getMatrix();
        java.io.PrintWriter printWriter53 = printWriter12.printf("fra", (java.lang.Object[]) doubleArray52);
        java.lang.String[] strArray58 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray58);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException60 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) strArray58);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException61 = new org.apache.commons.math.geometry.NotARotationMatrixException("Chinese (China)", (java.lang.Object[]) strArray58);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        notARotationMatrixException61.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException((java.lang.Throwable) cardanEulerSingularityException63);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException((java.lang.Throwable) cardanEulerSingularityException63);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("de-DE", (java.lang.Throwable) mathException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("zxz_ko_kr", (java.lang.Object[]) doubleArray52, (java.lang.Throwable) mathException67);
        java.io.PrintWriter printWriter69 = printWriter1.printf("org.apache.commons.math.MathException: royaume-uni", (java.lang.Object[]) doubleArray52);
        org.junit.Assert.assertNotNull(printWriter9);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "de");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str20, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(printWriter69);
    }

    @Test
    public void test07937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07937");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D2.scalarMultiply((double) 10);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D12, (double) (byte) 100, vector3D14);
        double double16 = vector3D12.getY();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D12);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray35 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D37, (double) (byte) 100, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D42, (double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D39, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation34.applyInverseTo(vector3D39);
        double double48 = rotation34.getQ0();
        double double49 = rotation34.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 10.0d, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation34.applyInverseTo(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D28, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D25, vector3D53);
        double double57 = org.apache.commons.math.geometry.Vector3D.angle(vector3D5, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((-1.0877329743786937d), (-1.581752731678261d));
        double double61 = vector3D60.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D25, vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXZ" + "'", str1, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.6704649792860586d + "'", double57 == 1.6704649792860586d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.9999999999999999d + "'", double61 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D62);
    }

    @Test
    public void test07938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07938");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        printStream85.println((long) 100);
        java.io.PrintStream printStream93 = printStream85.append((java.lang.CharSequence) "DE");
        java.io.PrintStream printStream95 = printStream85.append('4');
        printStream95.flush();
        printStream95.print((float) ' ');
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream93);
        org.junit.Assert.assertNotNull(printStream95);
    }

    @Test
    public void test07939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07939");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double20 = rotation19.getQ0();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation12.applyTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double28 = rotation27.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation27.applyTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation27.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation21.applyInverseTo(rotation27);
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation5.applyInverseTo(rotation38);
        double double41 = rotation40.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation40.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation40.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder44.getA3();
        java.lang.String str47 = rotationOrder44.toString();
        java.lang.String str48 = rotationOrder44.toString();
        java.lang.String str49 = rotationOrder44.toString();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray50 = rotation40.getAngles(rotationOrder44);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Cardan angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 128040.0d + "'", double39 == 128040.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "XZY" + "'", str47, "XZY");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "XZY" + "'", str48, "XZY");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "XZY" + "'", str49, "XZY");
    }

    @Test
    public void test07940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07940");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.close();
        java.io.PrintWriter printWriter87 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        printStream1.print((int) (short) -1);
        java.io.PrintStream printStream91 = new java.io.PrintStream((java.io.OutputStream) printStream1, false);
        printStream1.println(0);
        java.io.PrintWriter printWriter95 = new java.io.PrintWriter((java.io.OutputStream) printStream1, true);
        printWriter95.print(false);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07941");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (-1L), (double) (short) 10, (double) 'a');
        double double12 = rotation11.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation14.applyTo(rotation20);
        double double22 = rotation14.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.normalize();
        double double25 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D23.scalarMultiply(128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation14.applyInverseTo(vector3D23);
        double double29 = vector3D28.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str33 = rotationOrder32.toString();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder32.getA3();
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D37, (double) (byte) 100, vector3D39);
        double double41 = vector3D37.getY();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D34.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D34.negate();
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D(0.6797538636918641d, vector3D43);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, (-0.8272219123075313d));
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D28.subtract(1.5341214923059198E10d, vector3D44);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.3122509176395862d + "'", double12 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 100.0d + "'", double22 == 100.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10400.0d + "'", double29 == 10400.0d);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ZXZ" + "'", str33, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D47);
    }

    @Test
    public void test07942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07942");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.lang.Object[] objArray5 = null;
        java.io.PrintWriter printWriter6 = printWriter3.format("fran\347ais", objArray5);
        java.util.Locale locale7 = null;
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray10 = mathException9.getSuppressed();
        java.io.PrintWriter printWriter11 = printWriter3.format(locale7, "zxz", (java.lang.Object[]) throwableArray10);
        char[] charArray15 = new char[] { 'a', ' ', '#' };
        printWriter11.println(charArray15);
        java.util.Locale locale17 = java.util.Locale.FRENCH;
        java.util.Locale locale18 = java.util.Locale.FRENCH;
        java.util.Locale locale19 = java.util.Locale.TAIWAN;
        java.lang.String str20 = locale18.getDisplayScript(locale19);
        java.lang.String str21 = locale17.getDisplayLanguage(locale18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray33 = rotation32.getMatrix();
        java.io.PrintWriter printWriter34 = printWriter11.printf(locale17, "english", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray33, (double) '#');
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation36.applyInverseTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D(0.5763904177042349d, (-0.9904757959510307d));
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D47, (double) (byte) 100, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract((double) 10L, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D58, (double) (byte) 100, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D60, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D54.subtract((double) 0, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D70, (double) (byte) 100, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D67, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D44.subtract(0.8054849532414718d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((-2.43465333888373d), (-66.22931445640928d));
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.add(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation36.applyInverseTo(vector3D81);
        double double83 = vector3D81.getZ();
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(printWriter11);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "fr");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "fr");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "fran\347ais" + "'", str21, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.25308595247003884d + "'", double83 == 0.25308595247003884d);
    }

    @Test
    public void test07943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07943");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.close();
        printStream1.print((double) 0L);
        java.io.PrintStream printStream90 = new java.io.PrintStream((java.io.OutputStream) printStream1, false);
        java.io.PrintStream printStream91 = new java.io.PrintStream((java.io.OutputStream) printStream90);
        printStream91.close();
        printStream91.println();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07944");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation6.applyTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D8.subtract(vector3D15);
        double double17 = vector3D16.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation24.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder26.getA1();
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.add((double) (-1.0f), vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((-0.13715201283077028d), vector3D16, (double) (short) 0, vector3D39, 0.0d, vector3D47);
        double double49 = vector3D47.getY();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D47.scalarMultiply((double) ' ');
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 3.141592653589793d + "'", double17 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
    }

    @Test
    public void test07945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07945");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (-1.569740199951139d), 25606.999999999996d, (-10.358482905538347d), false);
        double double6 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1.569740199951139d) + "'", double6 == (-1.569740199951139d));
    }

    @Test
    public void test07946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07946");
        java.lang.String[] strArray4 = java.util.Locale.getISOLanguages();
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray4);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) strArray4);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("Chinese (China)", (java.lang.Object[]) strArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        notARotationMatrixException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException9.getSuppressed();
        java.lang.String str13 = cardanEulerSingularityException9.getPattern();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("chinese (taiwan)_ORG.APACHE.COMMONS.MATH.MATHEXCEPTION: ZXZ", (java.lang.Throwable) cardanEulerSingularityException9);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
    }

    @Test
    public void test07947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07947");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, (-1280400.0d), (-0.02937648959434208d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.applyTo(rotation25);
        double double28 = rotation25.getQ3();
        double double29 = rotation25.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation25.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray41 = rotation40.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation25.applyTo(rotation40);
        double double43 = rotation40.getQ2();
        double double44 = rotation40.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation40.getAxis();
        double double46 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D12, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D12.scalarMultiply(93.57685032416593d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XYZ" + "'", str6, "XYZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.0d) + "'", double46 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D48);
    }

    @Test
    public void test07948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07948");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.8387792157661896d), (-66.22931445640928d), 1.5599296019390303d, 2.874987211050439d, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test07949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07949");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        boolean boolean86 = printStream1.checkError();
        printStream1.print((long) (-1));
        printStream1.print("Korean");
        printStream1.println((-0.13715201283077028d));
        printStream1.flush();
        printStream1.print('a');
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream98 = new java.io.PrintStream((java.io.OutputStream) printStream1, false, "YZX");
            org.junit.Assert.fail("Expected exception of type java.io.UnsupportedEncodingException; message: YZX");
        } catch (java.io.UnsupportedEncodingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test07950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07950");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("KOR");
        printWriter1.println(' ');
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray15 = rotation14.getMatrix();
        java.io.PrintWriter printWriter16 = printWriter1.format("YZY", (java.lang.Object[]) doubleArray15);
        java.lang.String[] strArray18 = java.util.Locale.getISOCountries();
        java.io.PrintWriter printWriter19 = printWriter16.printf("\u97d3\u6587)", (java.lang.Object[]) strArray18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double27 = rotation26.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) (-1L), (double) (short) 10, (double) 'a');
        double double33 = rotation32.getAngle();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation26.applyInverseTo(rotation32);
        double[][] doubleArray35 = rotation32.getMatrix();
        java.io.PrintWriter printWriter36 = printWriter19.printf("fra", (java.lang.Object[]) doubleArray35);
        printWriter36.println();
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printWriter16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 52.0d + "'", double27 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2.3122509176395862d + "'", double33 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test07951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07951");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.println((float) 100L);
        printStream1.println("hi!");
        printStream1.println((double) 1.0f);
        printStream1.println();
        printStream1.print(0.010385784044382526d);
        java.io.PrintStream printStream96 = new java.io.PrintStream((java.io.OutputStream) printStream1, true);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07952");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("Koreanisch");
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale4 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str5 = locale4.getScript();
        java.util.Locale locale6 = java.util.Locale.KOREA;
        java.lang.String str7 = locale4.getDisplayLanguage(locale6);
        java.lang.String[] strArray10 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray10, (java.lang.Throwable) mathException12);
        java.io.PrintWriter printWriter14 = printWriter3.format(locale6, "YZY", (java.lang.Object[]) strArray10);
        printWriter14.close();
        printWriter14.println('a');
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter21 = printWriter19.append('#');
        java.util.Locale locale22 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double30 = rotation29.getQ0();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double37 = rotation36.getQ0();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation29.applyTo(rotation36);
        double double39 = rotation36.getQ3();
        double[][] doubleArray40 = rotation36.getMatrix();
        java.io.PrintWriter printWriter41 = printWriter21.printf(locale22, "XZY", (java.lang.Object[]) doubleArray40);
        java.io.PrintStream printStream43 = new java.io.PrintStream("ko-KR");
        printStream43.close();
        java.util.Locale locale45 = java.util.Locale.UK;
        java.lang.String[] strArray47 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream48 = printStream43.format(locale45, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray47);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter52 = printWriter50.append('#');
        java.lang.Object[] objArray54 = null;
        java.io.PrintWriter printWriter55 = printWriter52.format("fran\347ais", objArray54);
        java.util.Locale locale56 = null;
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray59 = mathException58.getSuppressed();
        java.io.PrintWriter printWriter60 = printWriter52.format(locale56, "zxz", (java.lang.Object[]) throwableArray59);
        char[] charArray64 = new char[] { 'a', ' ', '#' };
        printWriter60.println(charArray64);
        printStream43.println(charArray64);
        printWriter41.write(charArray64);
        printWriter14.write(charArray64);
        printWriter1.println(charArray64);
        printWriter1.println(' ');
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale74 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str75 = locale74.getScript();
        java.util.Locale locale76 = java.util.Locale.KOREA;
        java.lang.String str77 = locale74.getDisplayLanguage(locale76);
        java.lang.String[] strArray80 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray80, (java.lang.Throwable) mathException82);
        java.io.PrintWriter printWriter84 = printWriter73.format(locale76, "YZY", (java.lang.Object[]) strArray80);
        printWriter84.println(0.0d);
        printWriter84.print((long) (byte) 10);
        printWriter84.flush();
        printWriter84.print('x');
        printWriter1.println((java.lang.Object) 'x');
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str7, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 52.0d + "'", double30 == 52.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(printStream48);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str77, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test07953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07953");
        java.io.PrintStream printStream2 = new java.io.PrintStream("ko-KR");
        printStream2.close();
        java.util.Locale locale4 = java.util.Locale.UK;
        java.lang.String[] strArray6 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream7 = printStream2.format(locale4, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray6);
        printStream7.write(10);
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.OutputStream) printStream7);
        printStream7.print((int) (short) 1);
        java.lang.String[] strArray16 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray16, (java.lang.Throwable) mathException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray21 = mathException20.getSuppressed();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray16, (java.lang.Throwable) mathException20);
        java.io.PrintStream printStream23 = printStream7.format("deu", (java.lang.Object[]) strArray16);
        java.io.PrintStream printStream25 = new java.io.PrintStream("ko-KR");
        printStream25.close();
        java.util.Locale locale27 = java.util.Locale.UK;
        java.lang.String[] strArray29 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream30 = printStream25.format(locale27, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray29);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter34 = printWriter32.append('#');
        java.lang.Object[] objArray36 = null;
        java.io.PrintWriter printWriter37 = printWriter34.format("fran\347ais", objArray36);
        java.util.Locale locale38 = null;
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray41 = mathException40.getSuppressed();
        java.io.PrintWriter printWriter42 = printWriter34.format(locale38, "zxz", (java.lang.Object[]) throwableArray41);
        char[] charArray46 = new char[] { 'a', ' ', '#' };
        printWriter42.println(charArray46);
        printStream25.println(charArray46);
        java.io.PrintStream printStream50 = new java.io.PrintStream("ko-KR");
        printStream50.close();
        java.util.Locale locale52 = java.util.Locale.UK;
        java.lang.String[] strArray54 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream55 = printStream50.format(locale52, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray54);
        printStream55.write(10);
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.OutputStream) printStream55);
        byte[] byteArray60 = new byte[] { (byte) -1 };
        printStream55.write(byteArray60);
        printStream25.write(byteArray60);
        printStream23.write(byteArray60);
        java.io.PrintStream printStream65 = printStream23.append((java.lang.CharSequence) "fr-FR");
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter((java.io.OutputStream) printStream23);
        java.util.Locale locale68 = java.util.Locale.forLanguageTag("Chinese (Taiwan)");
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D77, (double) (byte) 100, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation75.applyTo(vector3D77);
        double double82 = rotation75.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str84 = rotationOrder83.toString();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(rotationOrder83, 0.0d, 52.0d, 0.9649660284921133d);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation75.applyTo(rotation88);
        double[][] doubleArray90 = rotation89.getMatrix();
        java.io.PrintWriter printWriter91 = printWriter66.format(locale68, "\u65e5\u6587\u65e5\u672c)", (java.lang.Object[]) doubleArray90);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("", (java.lang.Object[]) doubleArray90);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(printStream7);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(printStream23);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printStream30);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printStream55);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1]");
        org.junit.Assert.assertNotNull(printStream65);
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "");
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ZXZ" + "'", str84, "ZXZ");
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test07954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07954");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("KOR");
        java.io.PrintWriter printWriter3 = printWriter1.append((java.lang.CharSequence) "englisch");
        java.io.PrintWriter printWriter5 = printWriter1.append((java.lang.CharSequence) "org.apache.commons.math.MathException: ZXZ");
        printWriter1.print((float) 1L);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double37 = rotation36.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation36.applyTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation36.revert();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation30.applyInverseTo(rotation36);
        double double48 = rotation47.getQ3();
        org.apache.commons.math.geometry.Rotation rotation49 = rotation14.applyInverseTo(rotation47);
        double double50 = rotation49.getQ2();
        double[][] doubleArray51 = rotation49.getMatrix();
        java.io.PrintWriter printWriter52 = printWriter1.printf("ZXY", (java.lang.Object[]) doubleArray51);
        printWriter52.println('#');
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 128040.0d + "'", double48 == 128040.0d);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(printWriter52);
    }

    @Test
    public void test07955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07955");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter10 = printWriter8.append('#');
        java.lang.Object[] objArray12 = null;
        java.io.PrintWriter printWriter13 = printWriter10.format("fran\347ais", objArray12);
        java.util.Locale locale14 = null;
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        java.io.PrintWriter printWriter18 = printWriter10.format(locale14, "zxz", (java.lang.Object[]) throwableArray17);
        char[] charArray22 = new char[] { 'a', ' ', '#' };
        printWriter18.println(charArray22);
        printStream1.println(charArray22);
        printStream1.println((double) (byte) 0);
        printStream1.println((int) (short) 10);
        java.util.Locale locale31 = new java.util.Locale("\ud55c\uad6d\uc5b4\ub300\ud55c\ubbfc\uad6d)", "org.apache.commons.math.MathException: eng");
        java.lang.String str33 = locale31.getUnicodeLocaleType("cn");
        boolean boolean34 = locale31.hasExtensions();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray42 = rotation41.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D44, (double) (byte) 100, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D49, (double) (byte) 100, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D46, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation41.applyInverseTo(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation41.getAxis();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation56.revert();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation56.getAxis();
        double[][] doubleArray59 = rotation56.getMatrix();
        java.io.PrintStream printStream60 = printStream1.printf(locale31, "de-DE-Korean", (java.lang.Object[]) doubleArray59);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str62 = locale31.getExtension('4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Ill-formed extension key: 4");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , #]");
        org.junit.Assert.assertEquals(locale31.toString(), "\ud55c\uad6d\uc5b4\ub300\ud55c\ubbfc\uad6d)_ORG.APACHE.COMMONS.MATH.MATHEXCEPTION: ENG");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(printStream60);
    }

    @Test
    public void test07956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07956");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (short) -1, (double) '#', (double) 0L, (double) (short) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation18.applyTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double34 = rotation33.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double41 = rotation40.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation33.applyTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation27.applyInverseTo(rotation33);
        double double45 = rotation44.getQ3();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation11.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation5.applyInverseTo(rotation46);
        double double48 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) '4', (double) 0.0f, (double) 'u');
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.scalarMultiply((double) 'a');
        double double55 = vector3D52.getY();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation5.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.normalize();
        double double58 = vector3D52.getDelta();
        double double59 = vector3D52.getX();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 128040.0d + "'", double45 == 128040.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-0.009438163164864176d) + "'", double48 == (-0.009438163164864176d));
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.1525719972156676d + "'", double58 == 1.1525719972156676d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 52.0d + "'", double59 == 52.0d);
    }

    @Test
    public void test07957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07957");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.scalarMultiply(0.5309649148733835d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray11 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D18, (double) (byte) 100, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation10.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation10.getAxis();
        double double25 = vector3D24.getAlpha();
        double double26 = vector3D24.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D4.add(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D(1040000.0d, 0.8775825618903728d);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.add((-0.33317344249276587d), vector3D31);
        double double33 = vector3D31.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str35 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder34.getA3();
        double double42 = vector3D41.getY();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D41, 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D31.subtract(vector3D41);
        double double46 = vector3D41.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-3.141592653589793d) + "'", double25 == (-3.141592653589793d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-3.141592653589793d) + "'", double26 == (-3.141592653589793d));
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.4047934756653486d + "'", double33 == 0.4047934756653486d);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ZXZ" + "'", str35, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    }

    @Test
    public void test07958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07958");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((double) (byte) 100);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter10 = printWriter8.append('#');
        java.lang.Object[] objArray12 = null;
        java.io.PrintWriter printWriter13 = printWriter10.format("fran\347ais", objArray12);
        java.util.Locale locale14 = null;
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        java.io.PrintWriter printWriter18 = printWriter10.format(locale14, "zxz", (java.lang.Object[]) throwableArray17);
        char[] charArray22 = new char[] { 'a', ' ', '#' };
        printWriter18.println(charArray22);
        java.util.Locale locale24 = java.util.Locale.FRENCH;
        java.util.Locale locale25 = java.util.Locale.FRENCH;
        java.util.Locale locale26 = java.util.Locale.TAIWAN;
        java.lang.String str27 = locale25.getDisplayScript(locale26);
        java.lang.String str28 = locale24.getDisplayLanguage(locale25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 100.0f, (double) 0.0f, 0.0d);
        double[][] doubleArray40 = rotation39.getMatrix();
        java.io.PrintWriter printWriter41 = printWriter18.printf(locale24, "english", (java.lang.Object[]) doubleArray40);
        printStream1.println((java.lang.Object) printWriter41);
        printStream1.print(1.0f);
        printStream1.print((float) 'u');
        printStream1.println('#');
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a,  , #]");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "fr");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "fr");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "fran\347ais" + "'", str28, "fran\347ais");
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(printWriter41);
    }

    @Test
    public void test07959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07959");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA1();
        double double5 = vector3D4.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D(12344.924101615155d, 0.0d, 52.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder25.getA1();
        java.lang.String str31 = rotationOrder25.toString();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder25.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder25.getA2();
        double double34 = vector3D33.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((-0.014627082323922274d), vector3D4, 0.28640327826121414d, vector3D22, (-0.9998151400298466d), vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.scalarMultiply((-107.46157332873226d));
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXZ" + "'", str12, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "XYZ" + "'", str31, "XYZ");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
    }

    @Test
    public void test07960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07960");
        java.io.PrintStream printStream1 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream3 = new java.io.PrintStream("ko-KR");
        printStream3.close();
        printStream3.println((double) '4');
        printStream3.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double16 = rotation15.getQ0();
        double[][] doubleArray17 = rotation15.getMatrix();
        java.io.PrintStream printStream18 = printStream3.format("zh", (java.lang.Object[]) doubleArray17);
        printStream1.println((java.lang.Object) doubleArray17);
        char[] charArray23 = new char[] { 'a', 'a', '4' };
        printStream1.println(charArray23);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.OutputStream) printStream1, false);
        boolean boolean27 = printStream1.checkError();
        printStream1.print(0L);
        printStream1.print(0.0f);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test07961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07961");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.close();
        printStream1.println('a');
        printStream1.print(1L);
        printStream1.print((long) (short) 1);
        java.lang.Object[] objArray94 = null;
        java.io.PrintStream printStream95 = printStream1.format("chinese (china)", objArray94);
        printStream95.print((long) (short) 0);
        printStream95.println(3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream95);
    }

    @Test
    public void test07962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07962");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.print((double) (-1));
        java.util.Locale.Builder builder16 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder18 = builder16.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder20 = builder18.removeUnicodeLocaleAttribute("Francia");
        java.util.Locale locale21 = builder20.build();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.applyTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation44 = rotation38.applyTo(rotation43);
        double[][] doubleArray45 = rotation43.getMatrix();
        java.io.PrintStream printStream46 = printStream6.format(locale21, "ko-KR", (java.lang.Object[]) doubleArray45);
        java.io.PrintStream printStream47 = new java.io.PrintStream((java.io.OutputStream) printStream46);
        java.io.PrintStream printStream49 = new java.io.PrintStream((java.io.OutputStream) printStream47, false);
        printStream49.println((float) 1);
        printStream49.write((int) (byte) 0);
        boolean boolean54 = printStream49.checkError();
        byte[] byteArray55 = null;
        printStream49.write(byteArray55, (-1), (int) 'a');
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(printStream46);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test07963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07963");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale2 = java.util.Locale.FRENCH;
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.TAIWAN;
        java.lang.String str5 = locale3.getDisplayScript(locale4);
        java.lang.String str6 = locale2.getDisplayLanguage(locale3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        java.util.Locale locale19 = java.util.Locale.FRENCH;
        java.util.Locale locale20 = java.util.Locale.TAIWAN;
        java.lang.String str21 = locale19.getDisplayScript(locale20);
        java.util.Locale.LanguageRange[] languageRangeArray22 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList23 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList23, languageRangeArray22);
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = java.util.Locale.CANADA;
        java.util.Locale locale28 = java.util.Locale.GERMAN;
        java.util.Locale locale29 = java.util.Locale.GERMANY;
        java.util.Locale locale30 = java.util.Locale.ROOT;
        java.lang.String str31 = locale30.getDisplayLanguage();
        java.util.Locale locale32 = java.util.Locale.FRENCH;
        java.util.Locale locale33 = java.util.Locale.ROOT;
        java.util.Locale locale34 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale25, locale26, locale27, locale28, locale29, locale30, locale32, locale33, locale34 };
        java.util.ArrayList<java.util.Locale> localeList36 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList36, localeArray35);
        java.util.Locale.FilteringMode filteringMode38 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList39 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList36, filteringMode38);
        java.lang.String[] strArray43 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.lang.String str46 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.lang.String>) strList44);
        java.util.Locale.LanguageRange[] languageRangeArray47 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList48 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList48, languageRangeArray47);
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.util.Locale locale51 = java.util.Locale.GERMAN;
        java.util.Locale locale52 = java.util.Locale.CANADA;
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Locale locale54 = java.util.Locale.GERMANY;
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getDisplayLanguage();
        java.util.Locale locale57 = java.util.Locale.FRENCH;
        java.util.Locale locale58 = java.util.Locale.ROOT;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray60 = new java.util.Locale[] { locale50, locale51, locale52, locale53, locale54, locale55, locale57, locale58, locale59 };
        java.util.ArrayList<java.util.Locale> localeList61 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList61, localeArray60);
        java.util.Locale.FilteringMode filteringMode63 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList64 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList48, (java.util.Collection<java.util.Locale>) localeList61, filteringMode63);
        java.util.Locale.FilteringMode filteringMode65 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList66 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList23, (java.util.Collection<java.util.Locale>) localeList61, filteringMode65);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D74, (double) (byte) 100, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation72.applyTo(vector3D74);
        java.lang.Object[] objArray79 = new java.lang.Object[] { vector3D18, str21, languageRangeList23, rotation72 };
        java.lang.String[] strArray82 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray87 = mathException86.getSuppressed();
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray82, (java.lang.Throwable) mathException86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray79, (java.lang.Throwable) mathException88);
        java.io.PrintStream printStream90 = printStream1.printf(locale2, "YZY", objArray79);
        printStream90.print(' ');
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.OutputStream) printStream90);
        java.io.PrintWriter printWriter94 = new java.io.PrintWriter((java.io.OutputStream) printStream90);
        printWriter94.println("\u30d5\u30e9\u30f3\u30b9");
        java.io.PrintWriter printWriter98 = printWriter94.append('x');
        printWriter98.println();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "fr");
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "fran\347ais" + "'", str6, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "fr");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(languageRangeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "de");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "fr");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + filteringMode38 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode38.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(languageRangeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "de");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "de");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "fr");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + filteringMode63 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode63.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList64);
        org.junit.Assert.assertTrue("'" + filteringMode65 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode65.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList66);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(printStream90);
        org.junit.Assert.assertNotNull(printWriter98);
    }

    @Test
    public void test07964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07964");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.9996400101546701d), 128.03515142334936d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D(0.7069393147060633d, 1040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D10, (double) (byte) 100, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract((double) 10L, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D21, (double) (byte) 100, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D26, (double) (byte) 100, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D17.subtract((double) 0, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D35, (double) (byte) 100, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract((double) 10L, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D43, (double) 10L, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D52, (double) (byte) 100, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D57, (double) (byte) 100, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D54, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D64, (double) (byte) 100, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D54, (double) 0.0f, vector3D66);
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D17, (double) (short) 1, vector3D48, (double) (-1L), vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.scalarMultiply((double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D(0.7291229553156825d, vector3D6, (double) 1L, vector3D70);
        double double74 = vector3D6.getNorm();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D6);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
    }

    @Test
    public void test07965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07965");
        java.util.Locale.Builder builder0 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder2 = builder0.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder3 = builder2.clearExtensions();
        java.util.Locale.Builder builder5 = builder2.removeUnicodeLocaleAttribute("yzy");
        java.io.PrintStream printStream7 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale8 = java.util.Locale.FRENCH;
        java.util.Locale locale9 = java.util.Locale.FRENCH;
        java.util.Locale locale10 = java.util.Locale.TAIWAN;
        java.lang.String str11 = locale9.getDisplayScript(locale10);
        java.lang.String str12 = locale8.getDisplayLanguage(locale9);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D16, (double) (byte) 100, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract((double) 10L, vector3D23);
        java.util.Locale locale25 = java.util.Locale.FRENCH;
        java.util.Locale locale26 = java.util.Locale.TAIWAN;
        java.lang.String str27 = locale25.getDisplayScript(locale26);
        java.util.Locale.LanguageRange[] languageRangeArray28 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList29 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList29, languageRangeArray28);
        java.util.Locale locale31 = java.util.Locale.ROOT;
        java.util.Locale locale32 = java.util.Locale.GERMAN;
        java.util.Locale locale33 = java.util.Locale.CANADA;
        java.util.Locale locale34 = java.util.Locale.GERMAN;
        java.util.Locale locale35 = java.util.Locale.GERMANY;
        java.util.Locale locale36 = java.util.Locale.ROOT;
        java.lang.String str37 = locale36.getDisplayLanguage();
        java.util.Locale locale38 = java.util.Locale.FRENCH;
        java.util.Locale locale39 = java.util.Locale.ROOT;
        java.util.Locale locale40 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray41 = new java.util.Locale[] { locale31, locale32, locale33, locale34, locale35, locale36, locale38, locale39, locale40 };
        java.util.ArrayList<java.util.Locale> localeList42 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList42, localeArray41);
        java.util.Locale.FilteringMode filteringMode44 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList45 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList29, (java.util.Collection<java.util.Locale>) localeList42, filteringMode44);
        java.lang.String[] strArray49 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.lang.String str52 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList29, (java.util.Collection<java.lang.String>) strList50);
        java.util.Locale.LanguageRange[] languageRangeArray53 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList54 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList54, languageRangeArray53);
        java.util.Locale locale56 = java.util.Locale.ROOT;
        java.util.Locale locale57 = java.util.Locale.GERMAN;
        java.util.Locale locale58 = java.util.Locale.CANADA;
        java.util.Locale locale59 = java.util.Locale.GERMAN;
        java.util.Locale locale60 = java.util.Locale.GERMANY;
        java.util.Locale locale61 = java.util.Locale.ROOT;
        java.lang.String str62 = locale61.getDisplayLanguage();
        java.util.Locale locale63 = java.util.Locale.FRENCH;
        java.util.Locale locale64 = java.util.Locale.ROOT;
        java.util.Locale locale65 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray66 = new java.util.Locale[] { locale56, locale57, locale58, locale59, locale60, locale61, locale63, locale64, locale65 };
        java.util.ArrayList<java.util.Locale> localeList67 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList67, localeArray66);
        java.util.Locale.FilteringMode filteringMode69 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList70 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList54, (java.util.Collection<java.util.Locale>) localeList67, filteringMode69);
        java.util.Locale.FilteringMode filteringMode71 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList72 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList29, (java.util.Collection<java.util.Locale>) localeList67, filteringMode71);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D80, (double) (byte) 100, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation78.applyTo(vector3D80);
        java.lang.Object[] objArray85 = new java.lang.Object[] { vector3D24, str27, languageRangeList29, rotation78 };
        java.lang.String[] strArray88 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray88, (java.lang.Throwable) mathException90);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray93 = mathException92.getSuppressed();
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray88, (java.lang.Throwable) mathException92);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray85, (java.lang.Throwable) mathException94);
        java.io.PrintStream printStream96 = printStream7.printf(locale8, "YZY", objArray85);
        boolean boolean97 = locale8.hasExtensions();
        java.util.Locale.Builder builder98 = builder5.setLocale(locale8);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "fr");
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "fr");
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "fran\347ais" + "'", str12, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "fr");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(languageRangeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "de");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "de");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "fr");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + filteringMode44 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode44.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(languageRangeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "de");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "de");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "fr");
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + filteringMode69 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode69.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList70);
        org.junit.Assert.assertTrue("'" + filteringMode71 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode71.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList72);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(throwableArray93);
        org.junit.Assert.assertNotNull(printStream96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(builder98);
    }

    @Test
    public void test07966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07966");
        java.io.PrintStream printStream1 = new java.io.PrintStream("Chinese");
        printStream1.println(3.2539077042633276E7d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XZY;
        java.lang.String str6 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 1, (double) (byte) 0, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, 2.3122509176395862d);
        double[][] doubleArray14 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(doubleArray14, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(doubleArray14, 0.964142738069021d);
        java.io.PrintStream printStream19 = printStream1.printf("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a\ub3c5\uc77c\uc5b4", (java.lang.Object[]) doubleArray14);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter((java.io.OutputStream) printStream1);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream23 = new java.io.PrintStream((java.io.OutputStream) printStream1, true, "\uc774\ud0c8\ub9ac\uc544\uc5b4");
            org.junit.Assert.fail("Expected exception of type java.io.UnsupportedEncodingException; message: ???????????");
        } catch (java.io.UnsupportedEncodingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XZY" + "'", str6, "XZY");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(printStream19);
    }

    @Test
    public void test07967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07967");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D(0.7069393147060633d, 1040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation20.applyTo(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(vector3D25);
    }

    @Test
    public void test07968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07968");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        double double22 = rotation20.getAngle();
        double double23 = rotation20.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D25, (double) (byte) 100, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.subtract((double) 10L, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D41, (double) (byte) 100, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D38, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D32.subtract((double) 0, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation20.applyTo(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D32.normalize();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2.3122509176395862d + "'", double22 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.4028887144651276d + "'", double23 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
    }

    @Test
    public void test07969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07969");
        java.io.PrintStream printStream2 = new java.io.PrintStream("ko-KR");
        java.util.Locale locale3 = java.util.Locale.FRENCH;
        java.util.Locale locale4 = java.util.Locale.FRENCH;
        java.util.Locale locale5 = java.util.Locale.TAIWAN;
        java.lang.String str6 = locale4.getDisplayScript(locale5);
        java.lang.String str7 = locale3.getDisplayLanguage(locale4);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D11, (double) (byte) 100, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D11.subtract((double) 10L, vector3D18);
        java.util.Locale locale20 = java.util.Locale.FRENCH;
        java.util.Locale locale21 = java.util.Locale.TAIWAN;
        java.lang.String str22 = locale20.getDisplayScript(locale21);
        java.util.Locale.LanguageRange[] languageRangeArray23 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList24 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList24, languageRangeArray23);
        java.util.Locale locale26 = java.util.Locale.ROOT;
        java.util.Locale locale27 = java.util.Locale.GERMAN;
        java.util.Locale locale28 = java.util.Locale.CANADA;
        java.util.Locale locale29 = java.util.Locale.GERMAN;
        java.util.Locale locale30 = java.util.Locale.GERMANY;
        java.util.Locale locale31 = java.util.Locale.ROOT;
        java.lang.String str32 = locale31.getDisplayLanguage();
        java.util.Locale locale33 = java.util.Locale.FRENCH;
        java.util.Locale locale34 = java.util.Locale.ROOT;
        java.util.Locale locale35 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray36 = new java.util.Locale[] { locale26, locale27, locale28, locale29, locale30, locale31, locale33, locale34, locale35 };
        java.util.ArrayList<java.util.Locale> localeList37 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList37, localeArray36);
        java.util.Locale.FilteringMode filteringMode39 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList40 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList24, (java.util.Collection<java.util.Locale>) localeList37, filteringMode39);
        java.lang.String[] strArray44 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.lang.String str47 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList24, (java.util.Collection<java.lang.String>) strList45);
        java.util.Locale.LanguageRange[] languageRangeArray48 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList49 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList49, languageRangeArray48);
        java.util.Locale locale51 = java.util.Locale.ROOT;
        java.util.Locale locale52 = java.util.Locale.GERMAN;
        java.util.Locale locale53 = java.util.Locale.CANADA;
        java.util.Locale locale54 = java.util.Locale.GERMAN;
        java.util.Locale locale55 = java.util.Locale.GERMANY;
        java.util.Locale locale56 = java.util.Locale.ROOT;
        java.lang.String str57 = locale56.getDisplayLanguage();
        java.util.Locale locale58 = java.util.Locale.FRENCH;
        java.util.Locale locale59 = java.util.Locale.ROOT;
        java.util.Locale locale60 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray61 = new java.util.Locale[] { locale51, locale52, locale53, locale54, locale55, locale56, locale58, locale59, locale60 };
        java.util.ArrayList<java.util.Locale> localeList62 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList62, localeArray61);
        java.util.Locale.FilteringMode filteringMode64 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList65 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList49, (java.util.Collection<java.util.Locale>) localeList62, filteringMode64);
        java.util.Locale.FilteringMode filteringMode66 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList67 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList24, (java.util.Collection<java.util.Locale>) localeList62, filteringMode66);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D75, (double) (byte) 100, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation73.applyTo(vector3D75);
        java.lang.Object[] objArray80 = new java.lang.Object[] { vector3D19, str22, languageRangeList24, rotation73 };
        java.lang.String[] strArray83 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray83, (java.lang.Throwable) mathException85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray88 = mathException87.getSuppressed();
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray83, (java.lang.Throwable) mathException87);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray80, (java.lang.Throwable) mathException89);
        java.io.PrintStream printStream91 = printStream2.printf(locale3, "YZY", objArray80);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException92 = new org.apache.commons.math.geometry.NotARotationMatrixException("fran\347ais", objArray80);
        java.lang.String str93 = notARotationMatrixException92.getPattern();
        java.lang.Throwable[] throwableArray94 = notARotationMatrixException92.getSuppressed();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "fr");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "fr");
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "fran\347ais" + "'", str7, "fran\347ais");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "fr");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(languageRangeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "de");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "de");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "fr");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + filteringMode39 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode39.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(languageRangeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "de");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "fr");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + filteringMode64 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode64.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList65);
        org.junit.Assert.assertTrue("'" + filteringMode66 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode66.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList67);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertNotNull(printStream91);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "fran\347ais" + "'", str93, "fran\347ais");
        org.junit.Assert.assertNotNull(throwableArray94);
    }

    @Test
    public void test07970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07970");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        java.io.PrintStream printStream91 = printStream85.append((java.lang.CharSequence) "KOR");
        printStream85.println((-1.0d));
        printStream85.println((long) (byte) 10);
        printStream85.println(false);
        printStream85.print('4');
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(printStream91);
    }

    @Test
    public void test07971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07971");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (-1L), (double) (short) 10, (double) 'a');
        double double12 = rotation11.getAngle();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyInverseTo(rotation11);
        double[][] doubleArray14 = rotation11.getMatrix();
        double[][] doubleArray15 = rotation11.getMatrix();
        double double16 = rotation11.getQ2();
        double double17 = rotation11.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.3122509176395862d + "'", double12 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.02937648959434208d) + "'", double16 == (-0.02937648959434208d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 2.3122509176395862d + "'", double17 == 2.3122509176395862d);
    }

    @Test
    public void test07972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07972");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.println("fr");
        java.lang.String[] strArray8 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException10);
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray13 = mathException12.getSuppressed();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray8, (java.lang.Throwable) mathException12);
        java.lang.Throwable[] throwableArray15 = mathException12.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray15);
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException16.getSuppressed();
        java.io.PrintStream printStream18 = printStream1.format("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) throwableArray17);
        printStream18.println((int) (short) 10);
        boolean boolean21 = printStream18.checkError();
        java.io.PrintStream printStream23 = printStream18.append((java.lang.CharSequence) "deu");
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double32 = rotation31.getQ3();
        double[][] doubleArray33 = rotation31.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("\uc77c\ubcf8\uc5b4", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException((java.lang.Throwable) notARotationMatrixException34);
        java.lang.Throwable[] throwableArray36 = mathException35.getSuppressed();
        java.io.PrintStream printStream37 = printStream18.printf("", (java.lang.Object[]) throwableArray36);
        java.util.Locale.Category category38 = java.util.Locale.Category.FORMAT;
        java.util.Locale.Category category39 = java.util.Locale.Category.FORMAT;
        java.util.Locale locale40 = java.util.Locale.ROOT;
        java.lang.String str41 = locale40.getDisplayLanguage();
        java.util.Locale.setDefault(category39, locale40);
        java.util.Locale.setDefault(category38, locale40);
        java.lang.String str44 = locale40.getDisplayCountry();
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.lang.String str46 = locale45.getDisplayLanguage();
        java.util.Locale locale47 = java.util.Locale.FRENCH;
        java.util.Locale locale48 = java.util.Locale.TAIWAN;
        java.lang.String str49 = locale47.getDisplayScript(locale48);
        java.lang.String str50 = locale45.getDisplayLanguage(locale47);
        java.util.Locale locale51 = locale47.stripExtensions();
        java.util.Set<java.lang.String> strSet52 = locale51.getUnicodeLocaleAttributes();
        java.lang.String str53 = locale51.getVariant();
        java.util.Locale.Builder builder54 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder56 = builder54.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder58 = builder54.setLanguage("ZXZ");
        java.util.Locale locale59 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder60 = builder54.setLocale(locale59);
        java.util.Locale.setDefault(locale59);
        java.lang.String str62 = locale51.getDisplayName(locale59);
        java.util.Locale locale63 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale63);
        java.util.Locale locale65 = java.util.Locale.FRENCH;
        java.util.Locale locale66 = java.util.Locale.TAIWAN;
        java.lang.String str67 = locale65.getDisplayScript(locale66);
        java.lang.String str68 = locale63.getDisplayLanguage(locale66);
        java.util.Locale locale69 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale69);
        java.lang.String str71 = locale69.toLanguageTag();
        java.lang.String str72 = locale63.getDisplayVariant(locale69);
        java.util.Locale.Builder builder73 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder75 = builder73.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale76 = builder73.build();
        java.lang.String str77 = locale69.getDisplayScript(locale76);
        java.lang.String str78 = locale51.getDisplayVariant(locale76);
        java.lang.String str79 = locale51.getDisplayName();
        java.lang.String str80 = locale40.getDisplayScript(locale51);
        printStream18.println((java.lang.Object) locale40);
        java.util.Locale locale84 = new java.util.Locale("deu", "org.apache.commons.math.geometry.NotARotationMatrixException: XZY");
        java.lang.String str85 = locale40.getDisplayCountry(locale84);
        java.lang.String str86 = locale84.getDisplayVariant();
        java.lang.String str87 = locale84.getLanguage();
        java.lang.String str88 = locale84.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(printStream23);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(printStream37);
        org.junit.Assert.assertTrue("'" + category38 + "' != '" + java.util.Locale.Category.FORMAT + "'", category38.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertTrue("'" + category39 + "' != '" + java.util.Locale.Category.FORMAT + "'", category39.equals(java.util.Locale.Category.FORMAT));
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "fr");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "fr");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Franz\366sisch" + "'", str62, "Franz\366sisch");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "ko_KR");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "fr");
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\u97d3\u6587" + "'", str68, "\u97d3\u6587");
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ko-KR" + "'", str71, "ko-KR");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\ud504\ub791\uc2a4\uc5b4" + "'", str79, "\ud504\ub791\uc2a4\uc5b4");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertEquals(locale84.toString(), "deu_ORG.APACHE.COMMONS.MATH.GEOMETRY.NOTAROTATIONMATRIXEXCEPTION: XZY");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "deu" + "'", str87, "deu");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "deu_ORG.APACHE.COMMONS.MATH.GEOMETRY.NOTAROTATIONMATRIXEXCEPTION: XZY" + "'", str88, "deu_ORG.APACHE.COMMONS.MATH.GEOMETRY.NOTAROTATIONMATRIXEXCEPTION: XZY");
    }

    @Test
    public void test07973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07973");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation5.getAxis();
        double double13 = rotation5.getAngle();
        double double14 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double37 = rotation36.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation36.applyTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation36.revert();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation30.applyInverseTo(rotation36);
        double[][] doubleArray48 = rotation30.getMatrix();
        double double49 = rotation30.getQ2();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation30.revert();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation5.applyInverseTo(rotation50);
        double double52 = rotation51.getAngle();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
    }

    @Test
    public void test07974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07974");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.println((float) 100L);
        printStream1.println("hi!");
        printStream1.print("\u4e2d\u6587\u53f0\u6e7e\u5730\u533a)");
        java.io.PrintStream printStream92 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        java.util.Locale locale93 = java.util.Locale.GERMAN;
        java.util.Locale.setDefault(locale93);
        java.lang.String str95 = locale93.getDisplayScript();
        printStream1.println((java.lang.Object) str95);
        printStream1.println((int) (short) 100);
        printStream1.close();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(locale93);
        org.junit.Assert.assertEquals(locale93.toString(), "de");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
    }

    @Test
    public void test07975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07975");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        double double15 = rotation12.getQ3();
        double double16 = rotation12.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation12.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str24 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (byte) 100, (double) (-1L), (double) '4');
        java.lang.String str29 = rotationOrder23.toString();
        java.lang.String str30 = rotationOrder23.toString();
        double[] doubleArray31 = rotation22.getAngles(rotationOrder23);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder23.getA3();
        java.lang.String str34 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, 1.7607846147136124d, (-0.0d), 2.874987211050439d);
        double double41 = rotation40.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXZ" + "'", str19, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXZ" + "'", str24, "ZXZ");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXZ" + "'", str29, "ZXZ");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ZXZ" + "'", str30, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.5707963267948966, 1.6704649792860589, -1.5707963267948966]");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ZXZ" + "'", str34, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.7336696181174016d) + "'", double41 == (-0.7336696181174016d));
    }

    @Test
    public void test07976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07976");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("French (France)");
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("Deutschland");
        java.io.PrintWriter printWriter5 = printWriter3.append('a');
        printWriter3.println("france");
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale10 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str11 = locale10.getScript();
        java.util.Locale locale12 = java.util.Locale.KOREA;
        java.lang.String str13 = locale10.getDisplayLanguage(locale12);
        java.lang.String[] strArray16 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray16, (java.lang.Throwable) mathException18);
        java.io.PrintWriter printWriter20 = printWriter9.format(locale12, "YZY", (java.lang.Object[]) strArray16);
        printWriter20.write("YZY", (int) '#', 0);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException26);
        java.lang.Object[] objArray28 = mathException26.getArguments();
        java.io.PrintWriter printWriter29 = printWriter20.format("org.apache.commons.math.MathException: ZXZ", objArray28);
        java.lang.String[] strArray33 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray33, (java.lang.Throwable) mathException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray38 = mathException37.getSuppressed();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray33, (java.lang.Throwable) mathException37);
        java.io.PrintWriter printWriter40 = printWriter29.printf("KOR", (java.lang.Object[]) strArray33);
        java.io.PrintWriter printWriter42 = printWriter29.append((java.lang.CharSequence) "deu");
        java.io.PrintStream printStream44 = new java.io.PrintStream("\ub3c5\uc77c\uc5b4");
        java.io.PrintStream printStream46 = new java.io.PrintStream("ko-KR");
        printStream46.close();
        printStream46.println((double) '4');
        printStream46.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double59 = rotation58.getQ0();
        double[][] doubleArray60 = rotation58.getMatrix();
        java.io.PrintStream printStream61 = printStream46.format("zh", (java.lang.Object[]) doubleArray60);
        printStream44.println((java.lang.Object) doubleArray60);
        char[] charArray66 = new char[] { 'a', 'a', '4' };
        printStream44.println(charArray66);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.OutputStream) printStream44, false);
        printStream44.print((int) (short) 100);
        java.io.PrintStream printStream73 = new java.io.PrintStream("ko-KR");
        printStream73.close();
        java.util.Locale locale75 = java.util.Locale.UK;
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream78 = printStream73.format(locale75, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray77);
        printStream73.println((long) 10);
        java.io.PrintStream printStream81 = new java.io.PrintStream((java.io.OutputStream) printStream73);
        char[] charArray88 = new char[] { 'u', 'x', 'x', 'a', ' ', 'x' };
        printStream81.print(charArray88);
        printStream44.print(charArray88);
        printWriter29.write(charArray88);
        printWriter3.write(charArray88);
        printWriter1.println(charArray88);
        printWriter1.print(false);
        org.junit.Assert.assertNotNull(printWriter5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str13, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 52.0d + "'", double59 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(printStream61);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, a, 4]");
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(printStream78);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "uxxa x");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "uxxa x");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[u, x, x, a,  , x]");
    }

    @Test
    public void test07977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07977");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        printStream1.println((double) '4');
        printStream1.println((int) ' ');
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        double[][] doubleArray15 = rotation13.getMatrix();
        java.io.PrintStream printStream16 = printStream1.format("zh", (java.lang.Object[]) doubleArray15);
        java.io.PrintStream printStream18 = printStream16.append('u');
        java.io.PrintStream printStream20 = new java.io.PrintStream("ko-KR");
        printStream20.close();
        java.util.Locale locale22 = java.util.Locale.UK;
        java.lang.String[] strArray24 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream25 = printStream20.format(locale22, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray24);
        printStream25.write(10);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.OutputStream) printStream25);
        printStream25.print((int) (short) 1);
        java.io.PrintStream printStream32 = new java.io.PrintStream("ko-KR");
        printStream32.close();
        java.util.Locale locale34 = java.util.Locale.UK;
        java.lang.String[] strArray36 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream37 = printStream32.format(locale34, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray36);
        printStream37.write(10);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.OutputStream) printStream37);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("fran\347ais");
        java.util.Locale locale43 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str44 = locale43.getScript();
        java.util.Locale locale45 = java.util.Locale.KOREA;
        java.lang.String str46 = locale43.getDisplayLanguage(locale45);
        java.lang.String[] strArray49 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray49, (java.lang.Throwable) mathException51);
        java.io.PrintWriter printWriter53 = printWriter42.format(locale45, "YZY", (java.lang.Object[]) strArray49);
        printWriter53.println(0.0d);
        printWriter53.print((long) (byte) 10);
        printWriter53.println();
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter62 = printWriter60.append('#');
        java.lang.Object[] objArray64 = null;
        java.io.PrintWriter printWriter65 = printWriter62.format("fran\347ais", objArray64);
        java.util.Locale locale66 = null;
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray69 = mathException68.getSuppressed();
        java.io.PrintWriter printWriter70 = printWriter62.format(locale66, "zxz", (java.lang.Object[]) throwableArray69);
        char[] charArray74 = new char[] { 'a', ' ', '#' };
        printWriter70.println(charArray74);
        printWriter53.write(charArray74);
        printWriter40.write(charArray74);
        printStream25.println(charArray74);
        printStream16.print(charArray74);
        printStream16.write((int) (byte) 100);
        printStream16.print(true);
        boolean boolean84 = printStream16.checkError();
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream87 = new java.io.PrintStream((java.io.OutputStream) printStream16, true, "italian");
            org.junit.Assert.fail("Expected exception of type java.io.UnsupportedEncodingException; message: italian");
        } catch (java.io.UnsupportedEncodingException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(printStream16);
        org.junit.Assert.assertNotNull(printStream18);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(printStream25);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(printStream37);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str46, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test07978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07978");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 93.58221957837624d, 1.3165168133380822d, 11771.045171060041d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XZY" + "'", str3, "XZY");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "XZY" + "'", str4, "XZY");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test07979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07979");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 1L, (-1.5707963267948966d), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (-0.02937648959434208d), (-3.141592653589793d), 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder2.getA3();
        java.lang.String str13 = rotationOrder2.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D(1.5064266830314104d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D19, (double) (byte) 100, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D24, (double) (byte) 100, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D21, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D21, (double) 0.0f, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.scalarMultiply((double) 0.0f);
        double double38 = vector3D37.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.negate();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double47 = rotation46.getQ0();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation46.applyTo(rotation53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation46.applyInverseTo(vector3D56);
        double double58 = vector3D57.getAlpha();
        double double59 = vector3D57.getY();
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D15, 0.09950371902099892d, vector3D37, 1.884114997657917d, vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "XZY" + "'", str13, "XZY");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.7607846147136124d + "'", double58 == 1.7607846147136124d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10400.0d + "'", double59 == 10400.0d);
    }

    @Test
    public void test07980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07980");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream1.println((long) 10);
        java.io.PrintStream printStream10 = printStream1.append('x');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.OutputStream) printStream10, false);
        printStream10.print(0L);
        printStream10.print((float) (byte) 0);
        printStream10.println((float) (short) 10);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double33 = rotation32.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation25.applyTo(rotation32);
        double double35 = rotation25.getQ0();
        double double36 = rotation25.getQ0();
        double[][] doubleArray37 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation25.applyInverseTo(rotation43);
        double double54 = rotation53.getAngle();
        double double55 = rotation53.getQ0();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D63, (double) (byte) 100, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation61.applyTo(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation61.getAxis();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation61.revert();
        double double70 = rotation61.getQ3();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation53.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation53.revert();
        double[][] doubleArray73 = rotation53.getMatrix();
        java.io.PrintStream printStream74 = printStream10.printf("org.apache.commons.math.geometry.NotARotationMatrixException: zh-CN", (java.lang.Object[]) doubleArray73);
        printStream74.println(0.16893044845523608d);
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream10);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-12804.0d) + "'", double55 == (-12804.0d));
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 10.0d + "'", double70 == 10.0d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(printStream74);
    }

    @Test
    public void test07981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07981");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream85.println((int) (byte) -1);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.OutputStream) printStream85, false);
        printWriter89.write((int) (byte) 100);
        printWriter89.println('4');
        printWriter89.print(true);
        printWriter89.println(0L);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07982");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        printWriter1.println((long) (short) 10);
        java.util.Locale locale6 = java.util.Locale.PRC;
        java.lang.String str7 = locale6.getDisplayVariant();
        java.lang.String[] strArray12 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray17 = mathException16.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray12, (java.lang.Throwable) mathException16);
        java.lang.Throwable[] throwableArray19 = mathException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray19);
        java.io.PrintWriter printWriter21 = printWriter1.format(locale6, "", (java.lang.Object[]) throwableArray19);
        printWriter1.println();
        printWriter1.println(true);
        printWriter1.println('#');
        printWriter1.close();
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.println((float) 100L);
        java.util.Locale.Builder builder32 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder34 = builder32.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder36 = builder32.setLanguage("ZXZ");
        java.util.Locale locale37 = java.util.Locale.GERMANY;
        java.util.Locale.Builder builder38 = builder32.setLocale(locale37);
        java.util.Locale.Builder builder40 = builder32.setLanguage("");
        java.util.Locale.Builder builder41 = builder32.clear();
        java.util.Locale.Builder builder42 = builder41.clear();
        java.util.Locale locale43 = builder42.build();
        java.lang.String str44 = locale43.getDisplayVariant();
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("yzy");
        printWriter47.write("zh-CN", (int) (short) 10, (int) (short) -1);
        java.io.PrintWriter printWriter53 = printWriter47.append((java.lang.CharSequence) "\u6cd5\u6587");
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter47);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation62.getAxis();
        double[][] doubleArray64 = rotation62.getMatrix();
        double double65 = rotation62.getQ1();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation56.applyInverseTo(rotation62);
        double[][] doubleArray67 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(doubleArray67, (double) (short) 100);
        java.io.PrintWriter printWriter70 = printWriter54.format("\uc911\uad6d\uc5b4", (java.lang.Object[]) doubleArray67);
        java.io.PrintWriter printWriter71 = printWriter1.format(locale43, "KR", (java.lang.Object[]) doubleArray67);
        printWriter71.write("zho-x-lvariant-ZH-CN");
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "de_DE");
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 100.0d + "'", double65 == 100.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(printWriter71);
    }

    @Test
    public void test07983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07983");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream1.println((long) 10);
        java.io.PrintStream printStream10 = printStream1.append('x');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.OutputStream) printStream10, false);
        printStream10.close();
        printStream10.println((int) 'x');
        java.util.Locale locale16 = null;
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double24 = rotation23.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation23.applyTo(rotation30);
        double double33 = rotation23.getQ0();
        double double34 = rotation23.getQ0();
        double[][] doubleArray35 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double42 = rotation41.getQ0();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double49 = rotation48.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation41.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation23.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double58 = rotation57.getQ0();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double65 = rotation64.getQ0();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation57.applyTo(rotation64);
        double double67 = rotation57.getQ0();
        double double68 = rotation57.getQ0();
        double[][] doubleArray69 = rotation57.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double76 = rotation75.getQ0();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double83 = rotation82.getQ0();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation75.applyTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation57.applyInverseTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation41.applyInverseTo(rotation75);
        double[][] doubleArray87 = rotation75.getMatrix();
        java.io.PrintStream printStream88 = printStream10.format(locale16, "zxz_KO_KR", (java.lang.Object[]) doubleArray87);
        java.io.PrintWriter printWriter90 = new java.io.PrintWriter((java.io.OutputStream) printStream10, true);
        printWriter90.print((long) 'x');
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream10);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 52.0d + "'", double24 == 52.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 52.0d + "'", double33 == 52.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 52.0d + "'", double42 == 52.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 52.0d + "'", double58 == 52.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 52.0d + "'", double65 == 52.0d);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 52.0d + "'", double67 == 52.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 52.0d + "'", double68 == 52.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 52.0d + "'", double76 == 52.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 52.0d + "'", double83 == 52.0d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(printStream88);
    }

    @Test
    public void test07984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07984");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double7 = rotation6.getQ0();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double14 = rotation13.getQ0();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.applyTo(rotation13);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double22 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation21.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation15.applyInverseTo(rotation21);
        double[][] doubleArray33 = rotation15.getMatrix();
        double double34 = rotation15.getQ3();
        double double35 = rotation15.getAngle();
        double[][] doubleArray36 = rotation15.getMatrix();
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4\u97d3\u6587_ko_KR", (java.lang.Object[]) doubleArray36);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 52.0d + "'", double29 == 52.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1040.0d + "'", double34 == 1040.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test07985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07985");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(935.7438253562556d, 40.309233691728366d, 0.5666764953185269d, (-25479.91732970719d), true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA3();
        double[] doubleArray9 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA1();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.5729839149271494, 3.0681762077178503, 1.5717727363744536]");
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test07986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07986");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        printStream1.close();
        java.util.Locale locale3 = java.util.Locale.UK;
        java.lang.String[] strArray5 = java.util.Locale.getISOCountries();
        java.io.PrintStream printStream6 = printStream1.format(locale3, "\uc911\uad6d\uc5b4", (java.lang.Object[]) strArray5);
        printStream6.write(10);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.OutputStream) printStream6);
        byte[] byteArray11 = new byte[] { (byte) -1 };
        printStream6.write(byteArray11);
        printStream6.close();
        printStream6.println((double) (short) 100);
        byte[] byteArray17 = new byte[] { (byte) 1 };
        printStream6.write(byteArray17, 0, 1);
        printStream6.println(true);
        java.util.Locale locale23 = java.util.Locale.PRC;
        java.util.Locale locale24 = java.util.Locale.ROOT;
        java.lang.String str25 = locale23.getDisplayName(locale24);
        java.util.Locale locale28 = new java.util.Locale("ZXZ", "ko_KR");
        java.lang.String str29 = locale23.getDisplayName(locale28);
        java.lang.String str30 = locale23.getLanguage();
        java.util.Locale locale31 = locale23.stripExtensions();
        java.util.Locale locale32 = java.util.Locale.KOREA;
        java.util.Locale.setDefault(locale32);
        java.lang.String str34 = locale32.toLanguageTag();
        java.lang.String str35 = locale32.getDisplayVariant();
        java.lang.String str36 = locale23.getDisplayCountry(locale32);
        java.util.Locale locale37 = java.util.Locale.TRADITIONAL_CHINESE;
        java.lang.String str38 = locale37.getScript();
        java.util.Locale locale39 = java.util.Locale.KOREA;
        java.lang.String str40 = locale37.getDisplayLanguage(locale39);
        java.lang.String str41 = locale37.getDisplayLanguage();
        java.util.Set<java.lang.String> strSet42 = locale37.getUnicodeLocaleAttributes();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter46 = printWriter44.append('#');
        printWriter44.println((long) (short) 10);
        java.util.Locale locale49 = java.util.Locale.PRC;
        java.lang.String str50 = locale49.getDisplayVariant();
        java.lang.String[] strArray55 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray55, (java.lang.Throwable) mathException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray60 = mathException59.getSuppressed();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray55, (java.lang.Throwable) mathException59);
        java.lang.Throwable[] throwableArray62 = mathException59.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException63 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray62);
        java.io.PrintWriter printWriter64 = printWriter44.format(locale49, "", (java.lang.Object[]) throwableArray62);
        java.lang.String str65 = locale37.getDisplayCountry(locale49);
        java.lang.String str66 = locale23.getDisplayVariant(locale37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        double[][] doubleArray75 = rotation74.getMatrix();
        java.io.PrintStream printStream76 = printStream6.printf(locale23, "XYZ", (java.lang.Object[]) doubleArray75);
        java.io.PrintStream printStream78 = printStream76.append('4');
        java.io.PrintStream printStream79 = new java.io.PrintStream((java.io.OutputStream) printStream78);
        printStream79.print((-1.0f));
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_GB");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1]");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Chinese (China)" + "'", str25, "Chinese (China)");
        org.junit.Assert.assertEquals(locale28.toString(), "zxz_KO_KR");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Chinese (China)" + "'", str29, "Chinese (China)");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "zh" + "'", str30, "zh");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "zh_CN");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ko-KR" + "'", str34, "ko-KR");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\uc911\uad6d" + "'", str36, "\uc911\uad6d");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "ko_KR");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str40, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\uc911\uad6d\uc5b4" + "'", str41, "\uc911\uad6d\uc5b4");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "zh_CN");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\u53f0\u6e7e\u5730\u533a" + "'", str65, "\u53f0\u6e7e\u5730\u533a");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXZ" + "'", str69, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(printStream76);
        org.junit.Assert.assertNotNull(printStream78);
    }

    @Test
    public void test07987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07987");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        double double16 = rotation5.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str18 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D19.orthogonal();
        double double21 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation5.applyInverseTo(vector3D19);
        double double23 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ZXZ" + "'", str18, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    }

    @Test
    public void test07988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07988");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D8, (double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D13, (double) (byte) 100, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation5.applyInverseTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation20.getAxis();
        double double22 = rotation20.getQ2();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double[][] doubleArray29 = rotation28.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D31, (double) (byte) 100, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation28.applyInverseTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation28.getAxis();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation28.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation43.revert();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double51 = rotation50.getQ1();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation43.applyTo(rotation50);
        double double53 = rotation43.getQ2();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double60 = rotation59.getQ0();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double67 = rotation66.getQ0();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation59.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation59.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation75 = rotation69.applyTo(rotation74);
        double double76 = rotation74.getAngle();
        double double77 = rotation74.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, (double) (-1L), (double) (short) 10, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation83 = rotation74.applyInverseTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation43.applyTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation20.applyInverseTo(rotation84);
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder86.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder86.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder86.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder86.getA2();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(rotationOrder86, 0.4028887144651276d, 0.09966865249116202d, (-1.63942416E8d));
        double double95 = rotation94.getQ0();
        org.apache.commons.math.geometry.Rotation rotation96 = rotation84.applyInverseTo(rotation94);
        double double97 = rotation94.getQ1();
        double double98 = rotation94.getQ0();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 100.0d + "'", double51 == 100.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 52.0d + "'", double67 == 52.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2.3122509176395862d + "'", double76 == 2.3122509176395862d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.4028887144651276d + "'", double77 == 0.4028887144651276d);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.851099441814107d + "'", double95 == 0.851099441814107d);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-0.007336344930475943d) + "'", double97 == (-0.007336344930475943d));
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.851099441814107d + "'", double98 == 0.851099441814107d);
    }

    @Test
    public void test07989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07989");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.flush();
        java.io.PrintStream printStream87 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        java.io.PrintStream printStream88 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        boolean boolean89 = printStream1.checkError();
        java.io.PrintStream printStream91 = printStream1.append((java.lang.CharSequence) "German (Germany)");
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream95 = printStream1.append((java.lang.CharSequence) "\uc774\ud0c8\ub9ac\uc544", (int) (byte) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(printStream91);
    }

    @Test
    public void test07990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07990");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D7, (double) (byte) 100, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation5.applyTo(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.revert();
        double double16 = rotation15.getQ3();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
    }

    @Test
    public void test07991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07991");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.close();
        printStream1.println('a');
        printStream1.print(1L);
        printStream1.println((-1.0f));
        printStream1.println((long) (byte) -1);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
    }

    @Test
    public void test07992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07992");
        java.io.PrintStream printStream1 = new java.io.PrintStream("ko-KR");
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D5, (double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract((double) 10L, vector3D12);
        java.util.Locale locale14 = java.util.Locale.FRENCH;
        java.util.Locale locale15 = java.util.Locale.TAIWAN;
        java.lang.String str16 = locale14.getDisplayScript(locale15);
        java.util.Locale.LanguageRange[] languageRangeArray17 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList18 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList18, languageRangeArray17);
        java.util.Locale locale20 = java.util.Locale.ROOT;
        java.util.Locale locale21 = java.util.Locale.GERMAN;
        java.util.Locale locale22 = java.util.Locale.CANADA;
        java.util.Locale locale23 = java.util.Locale.GERMAN;
        java.util.Locale locale24 = java.util.Locale.GERMANY;
        java.util.Locale locale25 = java.util.Locale.ROOT;
        java.lang.String str26 = locale25.getDisplayLanguage();
        java.util.Locale locale27 = java.util.Locale.FRENCH;
        java.util.Locale locale28 = java.util.Locale.ROOT;
        java.util.Locale locale29 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale20, locale21, locale22, locale23, locale24, locale25, locale27, locale28, locale29 };
        java.util.ArrayList<java.util.Locale> localeList31 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList31, localeArray30);
        java.util.Locale.FilteringMode filteringMode33 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList34 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList31, filteringMode33);
        java.lang.String[] strArray38 = new java.lang.String[] { "ZXZ", "YZY", "YZY" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.lang.String str41 = java.util.Locale.lookupTag((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.lang.String>) strList39);
        java.util.Locale.LanguageRange[] languageRangeArray42 = new java.util.Locale.LanguageRange[] {};
        java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList43 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>) languageRangeList43, languageRangeArray42);
        java.util.Locale locale45 = java.util.Locale.ROOT;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.util.Locale locale48 = java.util.Locale.GERMAN;
        java.util.Locale locale49 = java.util.Locale.GERMANY;
        java.util.Locale locale50 = java.util.Locale.ROOT;
        java.lang.String str51 = locale50.getDisplayLanguage();
        java.util.Locale locale52 = java.util.Locale.FRENCH;
        java.util.Locale locale53 = java.util.Locale.ROOT;
        java.util.Locale locale54 = java.util.Locale.CANADA;
        java.util.Locale[] localeArray55 = new java.util.Locale[] { locale45, locale46, locale47, locale48, locale49, locale50, locale52, locale53, locale54 };
        java.util.ArrayList<java.util.Locale> localeList56 = new java.util.ArrayList<java.util.Locale>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.util.Locale>) localeList56, localeArray55);
        java.util.Locale.FilteringMode filteringMode58 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList59 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList43, (java.util.Collection<java.util.Locale>) localeList56, filteringMode58);
        java.util.Locale.FilteringMode filteringMode60 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
        java.util.List<java.util.Locale> localeList61 = java.util.Locale.filter((java.util.List<java.util.Locale.LanguageRange>) languageRangeList18, (java.util.Collection<java.util.Locale>) localeList56, filteringMode60);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D69, (double) (byte) 100, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation67.applyTo(vector3D69);
        java.lang.Object[] objArray74 = new java.lang.Object[] { vector3D13, str16, languageRangeList18, rotation67 };
        java.lang.String[] strArray77 = java.util.Locale.getISOCountries();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("ko_KR");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("ZXZ", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException();
        java.lang.Throwable[] throwableArray82 = mathException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", (java.lang.Object[]) strArray77, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("\ub3c5\uc77c\uc5b4", objArray74, (java.lang.Throwable) mathException83);
        java.io.PrintStream printStream85 = printStream1.format("", objArray74);
        printStream1.close();
        printStream1.print((double) 0L);
        printStream1.close();
        printStream1.flush();
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("CN");
        java.lang.Object[] objArray94 = mathException93.getArguments();
        java.io.PrintStream printStream95 = printStream1.printf("ZXY", objArray94);
        printStream95.println(1.873542278417901d);
        printStream95.print("deu (GERMAN)");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "fr");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(languageRangeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "fr");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + filteringMode33 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode33.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(languageRangeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "de");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "de");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "fr");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_CA");
        org.junit.Assert.assertNotNull(localeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + filteringMode58 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode58.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList59);
        org.junit.Assert.assertTrue("'" + filteringMode60 + "' != '" + java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES + "'", filteringMode60.equals(java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES));
        org.junit.Assert.assertNotNull(localeList61);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(printStream85);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
        org.junit.Assert.assertNotNull(printStream95);
    }

    @Test
    public void test07993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07993");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        double[][] doubleArray8 = rotation6.getMatrix();
        double double9 = rotation6.getQ1();
        org.apache.commons.math.geometry.Rotation rotation10 = rotation0.applyInverseTo(rotation6);
        double double11 = rotation0.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder12.getA1();
        double[] doubleArray20 = rotation0.getAngles(rotationOrder12);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder12.getA3();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, -0.0, 0.0]");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test07994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07994");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (-1L), (double) (short) 10, (double) 'a');
        double double19 = rotation18.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyTo(rotation18);
        double[][] doubleArray22 = rotation18.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(doubleArray22, 0.9999989858488442d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.3122509176395862d + "'", double19 == 2.3122509176395862d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(doubleArray22);
    }

    @Test
    public void test07995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07995");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("fran\347ais");
        java.io.PrintWriter printWriter3 = printWriter1.append('#');
        java.util.Locale locale4 = java.util.Locale.ENGLISH;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double12 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double19 = rotation18.getQ0();
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyTo(rotation18);
        double double21 = rotation18.getQ3();
        double[][] doubleArray22 = rotation18.getMatrix();
        java.io.PrintWriter printWriter23 = printWriter3.printf(locale4, "XZY", (java.lang.Object[]) doubleArray22);
        printWriter23.println("KOR");
        printWriter23.println();
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter23, true);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter((java.io.Writer) printWriter28);
        java.util.Locale.Builder builder30 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder32 = builder30.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale.Builder builder33 = builder32.clearExtensions();
        java.util.Locale locale34 = builder33.build();
        java.util.Locale locale35 = java.util.Locale.FRENCH;
        java.util.Locale locale36 = java.util.Locale.FRENCH;
        java.util.Locale locale37 = java.util.Locale.TAIWAN;
        java.lang.String str38 = locale36.getDisplayScript(locale37);
        java.lang.String str39 = locale35.getDisplayLanguage(locale36);
        boolean boolean40 = locale36.hasExtensions();
        java.util.Locale.Builder builder41 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder43 = builder41.removeUnicodeLocaleAttribute("ZXZ");
        java.util.Locale locale44 = builder41.build();
        java.lang.String str45 = locale36.getDisplayLanguage(locale44);
        java.lang.String str46 = locale44.getCountry();
        java.lang.String str47 = locale34.getDisplayName(locale44);
        java.util.Set<java.lang.Character> charSet48 = locale44.getExtensionKeys();
        java.lang.String str49 = locale44.getDisplayName();
        printWriter29.println((java.lang.Object) locale44);
        org.junit.Assert.assertNotNull(printWriter3);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "fr");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "fr");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "zh_TW");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "fran\347ais" + "'", str39, "fran\347ais");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "French" + "'", str45, "French");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(charSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test07996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07996");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 'x', (double) (byte) 1, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-7396.0d), 0.0d, (-6.797493410635224E-4d));
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test07997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07997");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.379723745431982d, 0.49504334270191586d, 3.0073631567741184d, (-1.0d), false);
    }

    @Test
    public void test07998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07998");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((-0.13715201283077028d), (double) 0, 0.9649660284921133d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.minusI;
        double double9 = vector3D8.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.add(52.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D4.add(vector3D5);
        double double12 = vector3D11.getY();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D11.scalarMultiply(1.4922398570367257d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((-34365.38633275781d), (-0.33317344249276587d));
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((-1.569740199951139d), vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D11.add((double) (-1.0f), vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 'x', (double) ' ', 128040.0d);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder24.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D31.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D31, (double) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder36.getA1();
        double[] doubleArray40 = rotation35.getAngles(rotationOrder36);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D52, (double) (byte) 100, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation50.applyTo(vector3D52);
        double double57 = vector3D52.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D52, (double) 10, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D52.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.YZY;
        java.lang.String str63 = rotationOrder62.toString();
        java.lang.String str64 = rotationOrder62.toString();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder62.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D52.add(vector3D65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder67.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder67.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D52.add(vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str73 = rotationOrder72.toString();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, 2.3122509176395862d, (double) (-1.0f), (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA3();
        double double82 = org.apache.commons.math.geometry.Vector3D.angle(vector3D79, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D52.add(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D(84.29633443762866d, vector3D42, 1255.0d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D((double) 1L, (double) '4', (double) 1.0f);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D89.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D90.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D90.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D(0.9153530338028601d, vector3D11, (-0.5063656411097588d), vector3D84, 0.1035361863295576d, vector3D90);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 3.141592653589793d + "'", double9 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.5707963267948966, 0.530964914873383, -1.5707963267948966]");
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "YZY" + "'", str63, "YZY");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "YZY" + "'", str64, "YZY");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ZXZ" + "'", str73, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
    }

    @Test
    public void test07999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07999");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation5.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation5.applyInverseTo(vector3D18);
        double double21 = rotation5.getQ1();
        double double22 = rotation5.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA3();
        java.lang.String str26 = rotationOrder23.toString();
        java.lang.String str27 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder23.getA1();
        java.lang.String str29 = rotationOrder23.toString();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray30 = rotation5.getAngles(rotationOrder23);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Cardan angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "XZY" + "'", str26, "XZY");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "XZY" + "'", str27, "XZY");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "XZY" + "'", str29, "XZY");
    }

    @Test
    public void test08000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test08000");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.3964058484385629E-10d, 0.4028887144651276d, (-0.995037190209989d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double10 = rotation9.getQ0();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double17 = rotation16.getQ0();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation9.applyTo(rotation16);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        double double26 = rotation25.getQ0();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation9.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation9.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((double) '4', (double) 100.0f, (double) (short) 0, (double) (short) 10, false);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.zero;
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D36, (double) (byte) 100, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation34.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.subtract(vector3D43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        java.lang.String str46 = rotationOrder45.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D47.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(vector3D48);
        double double50 = vector3D44.getY();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation9.applyInverseTo(vector3D44);
        double double52 = rotation9.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation9.applyInverseTo(vector3D53);
        double double55 = org.apache.commons.math.geometry.Vector3D.angle(vector3D3, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.orthogonal();
        double double57 = vector3D56.getY();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 52.0d + "'", double10 == 52.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ZXZ" + "'", str46, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 100.0d + "'", double52 == 100.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.7083812450961114d + "'", double55 == 0.7083812450961114d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.4745590495514351d) + "'", double57 == (-0.4745590495514351d));
    }
}
