import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest18 {

    public static boolean debug = false;

    @Test
    public void test09001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09001");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        secondMoment19.increment((double) (-1.0f));
        secondMoment19.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        long long36 = variance35.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double double48 = variance35.evaluate(doubleArray43, (double) (short) -1);
        double double49 = secondMoment19.evaluate(doubleArray43);
        double double50 = secondMoment2.evaluate(doubleArray43);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        variance52.clear();
        double[] doubleArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double58 = variance52.evaluate(doubleArray54, 7200964.188888889d, 0, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 37.0d + "'", double48 == 37.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 74.0d + "'", double50 == 74.0d);
    }

    @Test
    public void test09002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09002");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double double45 = secondMoment18.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        secondMoment46.increment((double) (short) -1);
        double[] doubleArray64 = new double[] { (short) 1 };
        secondMoment46.incrementAll(doubleArray64);
        double double66 = secondMoment18.evaluate(doubleArray64);
        double double67 = secondMoment1.evaluate(doubleArray64);
        secondMoment1.clear();
        double double69 = secondMoment1.getResult();
        double double70 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment71);
        double double75 = variance74.getResult();
        variance74.setBiasCorrected(true);
        boolean boolean78 = secondMoment1.equals((java.lang.Object) variance74);
        long long79 = variance74.getN();
        long long80 = variance74.getN();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1L + "'", long80 == 1L);
    }

    @Test
    public void test09003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09003");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance4.setBiasCorrected(false);
        long long7 = variance4.getN();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
    }

    @Test
    public void test09004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09004");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        double double23 = secondMoment7.evaluate(doubleArray19);
        double[] doubleArray24 = new double[] {};
        secondMoment7.incrementAll(doubleArray24);
        secondMoment1.incrementAll(doubleArray24);
        secondMoment1.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double[] doubleArray42 = new double[] { 10, (byte) 100 };
        double double43 = secondMoment30.evaluate(doubleArray42);
        double double44 = variance29.evaluate(doubleArray42);
        double double45 = variance0.evaluate(doubleArray42);
        long long46 = variance0.getN();
        variance0.clear();
        variance0.setBiasCorrected(false);
        double[] doubleArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double51 = variance0.evaluate(doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 74.0d + "'", double23 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4050.0d + "'", double43 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4050.0d + "'", double44 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4050.0d + "'", double45 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
    }

    @Test
    public void test09005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09005");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        secondMoment1.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) (short) -1);
        long long16 = secondMoment10.getN();
        double double17 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        double double24 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        secondMoment25.increment((double) (short) 0);
        double double30 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        double double41 = secondMoment25.evaluate(doubleArray37);
        double[] doubleArray42 = new double[] {};
        secondMoment25.incrementAll(doubleArray42);
        secondMoment19.incrementAll(doubleArray42);
        secondMoment19.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double[] doubleArray60 = new double[] { 10, (byte) 100 };
        double double61 = secondMoment48.evaluate(doubleArray60);
        double double62 = variance47.evaluate(doubleArray60);
        long long63 = variance47.getN();
        double double64 = variance47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        double[] doubleArray77 = new double[] { 10, (byte) 100 };
        double double78 = secondMoment65.evaluate(doubleArray77);
        double double79 = secondMoment65.getResult();
        secondMoment65.increment((double) (short) -1);
        double[] doubleArray83 = new double[] { (short) 1 };
        secondMoment65.incrementAll(doubleArray83);
        double double85 = variance47.evaluate(doubleArray83);
        double double86 = variance18.evaluate(doubleArray83);
        variance8.incrementAll(doubleArray83);
        long long88 = variance8.getN();
        variance8.increment(2312.0d);
        double double91 = variance8.getResult();
        double double92 = variance8.getResult();
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 544.5d + "'", double17 == 544.5d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5d + "'", double24 == 0.5d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5d + "'", double30 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 74.0d + "'", double41 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 3L + "'", long63 == 3L);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4050.0d + "'", double78 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4050.0d + "'", double79 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 3L + "'", long88 == 3L);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1801.0d + "'", double91 == 1801.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1801.0d + "'", double92 == 1801.0d);
    }

    @Test
    public void test09006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09006");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        secondMoment20.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        secondMoment26.increment((double) (short) 0);
        long long31 = secondMoment26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        secondMoment32.incrementAll(doubleArray38, 0, 0);
        long long42 = secondMoment32.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        secondMoment43.incrementAll(doubleArray49, 0, 0);
        secondMoment32.incrementAll(doubleArray49, 0, (int) (short) 1);
        secondMoment26.incrementAll(doubleArray49, (int) (byte) 0, (int) (byte) 1);
        secondMoment20.incrementAll(doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            secondMoment1.incrementAll(doubleArray49, (int) (short) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2L + "'", long31 == 2L);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
    }

    @Test
    public void test09007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09007");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        secondMoment18.increment((double) (short) 0);
        double double23 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        double double34 = secondMoment18.evaluate(doubleArray30);
        double[] doubleArray35 = new double[] {};
        secondMoment18.incrementAll(doubleArray35);
        double double39 = variance17.evaluate(doubleArray35, (int) (byte) 0, 0);
        double double40 = variance16.evaluate(doubleArray35);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        double[] doubleArray54 = new double[] { 10, (byte) 100 };
        double double55 = secondMoment42.evaluate(doubleArray54);
        double double56 = secondMoment42.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment42);
        long long58 = secondMoment42.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment((double) ' ');
        secondMoment59.increment((double) (-1.0f));
        secondMoment59.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment65);
        long long76 = variance75.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment77.increment(1.0d);
        double[] doubleArray83 = new double[] { (-1L), 0, 10L };
        secondMoment77.incrementAll(doubleArray83, 0, 0);
        double double88 = variance75.evaluate(doubleArray83, (double) (short) -1);
        double double89 = secondMoment59.evaluate(doubleArray83);
        double double90 = secondMoment42.evaluate(doubleArray83);
        double double92 = variance16.evaluate(doubleArray83, (double) 100.0f);
        double double93 = variance16.getResult();
        variance16.increment((double) 4L);
        variance16.clear();
        long long97 = variance16.getN();
        long long98 = variance16.getN();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5d + "'", double23 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 74.0d + "'", double34 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4050.0d + "'", double55 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4050.0d + "'", double56 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 2L + "'", long58 == 2L);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 37.0d + "'", double88 == 37.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 24.666666666666668d + "'", double92 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2025.0d + "'", double93 == 2025.0d);
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + 2L + "'", long97 == 2L);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 2L + "'", long98 == 2L);
    }

    @Test
    public void test09008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09008");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        long long11 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double14 = secondMoment1.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test09009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09009");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance9.evaluate(doubleArray31);
        variance9.increment((double) (byte) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        secondMoment37.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        secondMoment42.increment((double) (short) 0);
        double double47 = secondMoment42.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        secondMoment48.increment((double) (short) 0);
        double double53 = secondMoment48.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        double[] doubleArray60 = new double[] { (-1L), 0, 10L };
        secondMoment54.incrementAll(doubleArray60, 0, 0);
        double double64 = secondMoment48.evaluate(doubleArray60);
        double[] doubleArray65 = new double[] {};
        secondMoment48.incrementAll(doubleArray65);
        secondMoment42.incrementAll(doubleArray65);
        secondMoment42.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        double[] doubleArray77 = new double[] { (-1L), 0, 10L };
        secondMoment71.incrementAll(doubleArray77, 0, 0);
        double[] doubleArray83 = new double[] { 10, (byte) 100 };
        double double84 = secondMoment71.evaluate(doubleArray83);
        double double85 = variance70.evaluate(doubleArray83);
        double double86 = secondMoment37.evaluate(doubleArray83);
        double double88 = variance9.evaluate(doubleArray83, 25.666666666666668d);
        variance9.clear();
        variance9.clear();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.5d + "'", double47 == 0.5d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.5d + "'", double53 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 74.0d + "'", double64 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4050.0d + "'", double86 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 4049.9999999999995d + "'", double88 == 4049.9999999999995d);
    }

    @Test
    public void test09010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09010");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) '4');
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double7 = variance6.getResult();
        variance6.clear();
        variance6.clear();
        variance6.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        double double15 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        secondMoment19.increment((double) '4');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        double[] doubleArray38 = new double[] { 10, (byte) 100 };
        double double39 = secondMoment26.evaluate(doubleArray38);
        double double40 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        secondMoment42.increment((double) (short) 0);
        double double47 = secondMoment42.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double double58 = secondMoment42.evaluate(doubleArray54);
        double[] doubleArray59 = new double[] {};
        secondMoment42.incrementAll(doubleArray59);
        variance41.incrementAll(doubleArray59);
        double double62 = secondMoment19.evaluate(doubleArray59);
        double double63 = variance16.evaluate(doubleArray59);
        double double64 = variance6.evaluate(doubleArray59);
        double double65 = variance6.getResult();
        boolean boolean66 = variance6.isBiasCorrected();
        variance6.increment(1.2239884749999996E7d);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4050.0d + "'", double40 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.5d + "'", double47 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 74.0d + "'", double58 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 200.0d + "'", double62 == 200.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 200.0d + "'", double65 == 200.0d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test09011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09011");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.clear();
        variance2.setBiasCorrected(true);
        variance2.setBiasCorrected(false);
        variance2.clear();
        // The following exception was thrown during execution in test generation
        try {
            double double9 = variance2.getResult();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09012");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment((double) 0.0f);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        secondMoment11.increment((double) 3L);
        secondMoment11.increment(24.666666666666668d);
        long long38 = secondMoment11.getN();
        secondMoment11.clear();
        secondMoment11.clear();
        double double41 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        secondMoment42.increment((double) (short) -1);
        secondMoment42.clear();
        secondMoment42.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        secondMoment52.increment((double) (short) 0);
        double double57 = secondMoment52.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double double68 = secondMoment52.evaluate(doubleArray64);
        double double69 = secondMoment42.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double[] doubleArray82 = new double[] { 10, (byte) 100 };
        double double83 = secondMoment70.evaluate(doubleArray82);
        double double84 = secondMoment70.getResult();
        secondMoment70.increment((double) (short) -1);
        double[] doubleArray88 = new double[] { (short) 1 };
        secondMoment70.incrementAll(doubleArray88);
        double double90 = secondMoment42.evaluate(doubleArray88);
        double double91 = secondMoment11.evaluate(doubleArray88);
        variance10.incrementAll(doubleArray88);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 3L + "'", long38 == 3L);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5d + "'", double57 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
    }

    @Test
    public void test09013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09013");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance9.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        secondMoment38.increment((double) (short) 0);
        double double43 = secondMoment38.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double double54 = secondMoment38.evaluate(doubleArray50);
        double[] doubleArray55 = new double[] {};
        secondMoment38.incrementAll(doubleArray55);
        double double57 = secondMoment35.evaluate(doubleArray55);
        variance9.incrementAll(doubleArray55);
        variance9.clear();
        double double60 = variance9.getResult();
        variance9.setBiasCorrected(true);
        double double63 = variance9.getResult();
        double double64 = variance9.getResult();
        variance9.increment(1.6877744158316053E14d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.5d + "'", double43 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 74.0d + "'", double54 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test09014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09014");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        long long16 = secondMoment2.getN();
        secondMoment2.clear();
        double double18 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        secondMoment22.increment((double) (short) 0);
        double double27 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double38 = secondMoment22.evaluate(doubleArray34);
        double[] doubleArray39 = new double[] {};
        secondMoment22.incrementAll(doubleArray39);
        double double43 = variance21.evaluate(doubleArray39, (int) (byte) 0, 0);
        long long44 = variance21.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = secondMoment45.evaluate(doubleArray57);
        variance21.incrementAll(doubleArray57);
        long long63 = variance21.getN();
        variance21.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        double[] doubleArray81 = new double[] { 10, (byte) 100 };
        double double82 = secondMoment69.evaluate(doubleArray81);
        double double83 = secondMoment66.evaluate(doubleArray81);
        variance21.incrementAll(doubleArray81);
        secondMoment2.incrementAll(doubleArray81);
        long long86 = secondMoment2.getN();
        double double87 = secondMoment2.getResult();
        double double88 = secondMoment2.getResult();
        secondMoment2.increment((double) 5L);
        secondMoment2.increment((double) 1);
        secondMoment2.increment(125982.5185185185d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance96 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment(2.1801930771645032E20d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5d + "'", double27 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 74.0d + "'", double38 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 3L + "'", long63 == 3L);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 2L + "'", long86 == 2L);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4050.0d + "'", double87 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 4050.0d + "'", double88 == 4050.0d);
    }

    @Test
    public void test09015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09015");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        double double4 = secondMoment0.getResult();
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        secondMoment7.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        secondMoment15.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        long long25 = secondMoment15.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment((double) ' ');
        double double29 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        long long31 = variance30.getN();
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        secondMoment34.increment((double) (short) -1);
        secondMoment34.clear();
        secondMoment34.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        variance43.incrementAll(doubleArray50);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment55);
        secondMoment55.increment((double) (short) -1);
        secondMoment55.clear();
        secondMoment55.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        secondMoment65.increment((double) (short) 0);
        double double70 = secondMoment65.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        double[] doubleArray77 = new double[] { (-1L), 0, 10L };
        secondMoment71.incrementAll(doubleArray77, 0, 0);
        double double81 = secondMoment65.evaluate(doubleArray77);
        double double82 = secondMoment55.evaluate(doubleArray77);
        double double83 = variance43.evaluate(doubleArray77);
        variance30.incrementAll(doubleArray77);
        double double87 = secondMoment15.evaluate(doubleArray77, (int) (short) 0, (int) (byte) 0);
        variance14.incrementAll(doubleArray77);
        secondMoment0.incrementAll(doubleArray77);
        double double90 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.5d + "'", double70 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 74.0d + "'", double81 == 74.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 74.0d + "'", double82 == 74.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 37.0d + "'", double83 == 37.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 704.7500000000001d + "'", double90 == 704.7500000000001d);
    }

    @Test
    public void test09016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09016");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) '4');
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double7 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double[] doubleArray21 = new double[] { 10, (byte) 100 };
        double double22 = secondMoment9.evaluate(doubleArray21);
        double double23 = secondMoment9.getResult();
        secondMoment9.increment((double) (short) -1);
        secondMoment9.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment29);
        secondMoment29.increment((double) (short) -1);
        long long35 = secondMoment29.getN();
        double double36 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment29);
        secondMoment29.increment(2.880385675555556E7d);
        secondMoment29.increment(482.66666666666663d);
        double double42 = secondMoment29.getResult();
        secondMoment29.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        long long49 = secondMoment44.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        secondMoment51.increment((double) (short) 0);
        double double56 = secondMoment51.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        secondMoment57.increment((double) (short) 0);
        double double62 = secondMoment57.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        double double73 = secondMoment57.evaluate(doubleArray69);
        double[] doubleArray74 = new double[] {};
        secondMoment57.incrementAll(doubleArray74);
        secondMoment51.incrementAll(doubleArray74);
        long long77 = secondMoment51.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment79.increment(1.0d);
        double[] doubleArray85 = new double[] { (-1L), 0, 10L };
        secondMoment79.incrementAll(doubleArray85, 0, 0);
        double double89 = variance78.evaluate(doubleArray85);
        secondMoment44.incrementAll(doubleArray85);
        secondMoment29.incrementAll(doubleArray85);
        double double92 = variance27.evaluate(doubleArray85);
        variance6.incrementAll(doubleArray85);
        boolean boolean94 = variance6.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 2L + "'", long35 == 2L);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 544.5d + "'", double36 == 544.5d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 6.22239225373408E14d + "'", double42 == 6.22239225373408E14d);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 2L + "'", long49 == 2L);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.5d + "'", double56 == 0.5d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.5d + "'", double62 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 74.0d + "'", double73 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 2L + "'", long77 == 2L);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 37.0d + "'", double89 == 37.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 37.0d + "'", double92 == 37.0d);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test09017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09017");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double[] doubleArray31 = new double[] { 10, (byte) 100 };
        double double32 = secondMoment19.evaluate(doubleArray31);
        double double33 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        long long35 = secondMoment19.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        secondMoment37.increment((double) (short) -1);
        secondMoment37.clear();
        secondMoment37.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        variance46.incrementAll(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment58);
        secondMoment58.increment((double) (short) -1);
        secondMoment58.clear();
        secondMoment58.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        secondMoment68.increment((double) (short) 0);
        double double73 = secondMoment68.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double double84 = secondMoment68.evaluate(doubleArray80);
        double double85 = secondMoment58.evaluate(doubleArray80);
        double double86 = variance46.evaluate(doubleArray80);
        variance36.incrementAll(doubleArray80);
        secondMoment0.incrementAll(doubleArray80);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        double double91 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(30671.375d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 2L + "'", long35 == 2L);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5d + "'", double73 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 37.0d + "'", double86 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
    }

    @Test
    public void test09018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09018");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance16.increment(0.0d);
        boolean boolean19 = variance16.isBiasCorrected();
        boolean boolean20 = variance16.isBiasCorrected();
        variance16.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09019");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        long long17 = secondMoment3.getN();
        double double18 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        long long20 = secondMoment3.getN();
        double double21 = secondMoment3.getResult();
        secondMoment3.increment(7.703419152040815E7d);
        boolean boolean25 = secondMoment3.equals((java.lang.Object) 8100.0d);
        secondMoment3.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        variance28.increment(29040.5d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4050.0d + "'", double18 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2L + "'", long20 == 2L);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test09020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09020");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        secondMoment20.increment((double) (short) -1);
        secondMoment20.clear();
        secondMoment20.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        secondMoment29.increment((double) (short) 0);
        boolean boolean34 = secondMoment20.equals((java.lang.Object) secondMoment29);
        boolean boolean35 = variance19.equals((java.lang.Object) secondMoment29);
        secondMoment29.increment(5304.666666666667d);
        double double38 = secondMoment29.getResult();
        secondMoment29.increment(0.0d);
        secondMoment29.increment(12207.5d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment44);
        long long49 = variance48.getN();
        boolean boolean50 = variance48.isBiasCorrected();
        variance48.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment((double) ' ');
        secondMoment52.increment((double) (-1.0f));
        double double57 = secondMoment52.getResult();
        secondMoment52.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment52);
        double double60 = variance59.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long63 = variance62.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        secondMoment64.increment((double) (short) 0);
        double double69 = secondMoment64.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double double80 = secondMoment64.evaluate(doubleArray76);
        variance62.incrementAll(doubleArray76);
        double double82 = variance59.evaluate(doubleArray76);
        double double83 = variance48.evaluate(doubleArray76);
        secondMoment29.incrementAll(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.8756123185185187E7d + "'", double38 == 1.8756123185185187E7d);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1L + "'", long49 == 1L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 544.5d + "'", double57 == 544.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5d + "'", double69 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 74.0d + "'", double80 == 74.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 37.0d + "'", double82 == 37.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 24.666666666666668d + "'", double83 == 24.666666666666668d);
    }

    @Test
    public void test09021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09021");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        double double16 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        long long18 = secondMoment1.getN();
        secondMoment1.increment((double) (short) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance21.clear();
        java.lang.Class<?> wildcardClass23 = variance21.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test09022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09022");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double double45 = secondMoment18.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        secondMoment46.increment((double) (short) -1);
        double[] doubleArray64 = new double[] { (short) 1 };
        secondMoment46.incrementAll(doubleArray64);
        double double66 = secondMoment18.evaluate(doubleArray64);
        double double67 = secondMoment1.evaluate(doubleArray64);
        secondMoment1.increment(6.637281066652788E14d);
        secondMoment1.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
    }

    @Test
    public void test09023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09023");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) '4');
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double7 = variance6.getResult();
        variance6.clear();
        variance6.increment(0.0d);
        long long11 = variance6.getN();
        variance6.increment(4.141027674074074E7d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        long long21 = secondMoment15.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        double double24 = secondMoment15.getResult();
        secondMoment15.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        double double48 = variance26.evaluate(doubleArray44, (int) (byte) 0, 0);
        long long49 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double double66 = secondMoment50.evaluate(doubleArray62);
        variance26.incrementAll(doubleArray62);
        double double68 = secondMoment15.evaluate(doubleArray62);
        // The following exception was thrown during execution in test generation
        try {
            double double71 = variance6.evaluate(doubleArray62, (int) (short) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2L + "'", long21 == 2L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 544.5d + "'", double24 == 544.5d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
    }

    @Test
    public void test09024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09024");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        secondMoment2.increment((double) (short) 0);
        double double7 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        double[] doubleArray25 = new double[] {};
        secondMoment8.incrementAll(doubleArray25);
        secondMoment2.incrementAll(doubleArray25);
        long long28 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.increment((double) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        double double33 = variance32.getResult();
        variance32.increment(4.42417896506702E16d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 2L + "'", long28 == 2L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2222222222222222d + "'", double33 == 0.2222222222222222d);
    }

    @Test
    public void test09025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09025");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance28.clear();
        variance28.clear();
        variance28.clear();
        long long32 = variance28.getN();
        variance28.increment(1801.0d);
        variance28.setBiasCorrected(false);
        variance28.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment38);
        variance48.increment((double) (short) 100);
        variance48.clear();
        variance48.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment54);
        secondMoment54.increment((double) (short) -1);
        secondMoment54.clear();
        secondMoment54.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment54);
        long long64 = secondMoment54.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long67 = variance66.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        secondMoment68.increment((double) (short) 0);
        double double73 = secondMoment68.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double double84 = secondMoment68.evaluate(doubleArray80);
        variance66.incrementAll(doubleArray80);
        double double86 = secondMoment54.evaluate(doubleArray80);
        double double87 = variance48.evaluate(doubleArray80);
        double double88 = variance28.evaluate(doubleArray80);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2L + "'", long32 == 2L);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5d + "'", double73 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 74.0d + "'", double86 == 74.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 37.0d + "'", double87 == 37.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 24.666666666666668d + "'", double88 == 24.666666666666668d);
    }

    @Test
    public void test09026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09026");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        double double8 = secondMoment0.getResult();
        double double9 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test09027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09027");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        secondMoment0.increment(74.0d);
        double double7 = secondMoment0.getResult();
        double double8 = secondMoment0.getResult();
        java.lang.Class<?> wildcardClass9 = secondMoment0.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3602.0d + "'", double7 == 3602.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3602.0d + "'", double8 == 3602.0d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test09028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09028");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double11 = secondMoment0.getResult();
        secondMoment0.increment((double) 7L);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test09029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09029");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance10.increment(272.25d);
        double double13 = variance10.getResult();
        long long14 = variance10.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test09030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09030");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        secondMoment2.increment((double) (short) -1);
        double[] doubleArray20 = new double[] { (short) 1 };
        secondMoment2.incrementAll(doubleArray20);
        long long22 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        long long29 = secondMoment24.getN();
        double double30 = secondMoment24.getResult();
        secondMoment24.increment((double) (byte) 10);
        secondMoment24.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        long long45 = variance44.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double double57 = variance44.evaluate(doubleArray52, (double) (short) -1);
        double double58 = secondMoment24.evaluate(doubleArray52);
        double double59 = secondMoment2.evaluate(doubleArray52);
        double double60 = secondMoment2.getResult();
        secondMoment2.increment((double) 100);
        secondMoment2.increment((double) 100L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        variance65.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0]");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 4L + "'", long22 == 4L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 2L + "'", long29 == 2L);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5d + "'", double30 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 37.0d + "'", double57 == 37.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 74.0d + "'", double58 == 74.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 74.0d + "'", double59 == 74.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
    }

    @Test
    public void test09031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09031");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double[] doubleArray21 = new double[] { 10, (byte) 100 };
        double double22 = secondMoment9.evaluate(doubleArray21);
        long long23 = secondMoment9.getN();
        secondMoment9.clear();
        double double25 = secondMoment9.getResult();
        secondMoment9.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        secondMoment32.increment((double) (short) 0);
        double double37 = secondMoment32.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        double double48 = secondMoment32.evaluate(doubleArray44);
        double[] doubleArray49 = new double[] {};
        secondMoment32.incrementAll(doubleArray49);
        double double51 = secondMoment29.evaluate(doubleArray49);
        variance28.incrementAll(doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            double double55 = secondMoment0.evaluate(doubleArray49, (int) (byte) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.5d + "'", double37 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test09032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09032");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        long long17 = variance16.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double29 = variance16.evaluate(doubleArray24, (double) (short) -1);
        double double30 = secondMoment0.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        double double50 = secondMoment36.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment36);
        long long52 = secondMoment36.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        double double54 = secondMoment36.getResult();
        secondMoment36.clear();
        secondMoment36.increment(Double.NaN);
        secondMoment36.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long62 = variance61.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        secondMoment63.increment((double) (short) 0);
        double double68 = secondMoment63.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        double double79 = secondMoment63.evaluate(doubleArray75);
        variance61.incrementAll(doubleArray75);
        secondMoment36.incrementAll(doubleArray75);
        double double82 = secondMoment0.evaluate(doubleArray75);
        secondMoment0.increment(272.25d);
        secondMoment0.clear();
        java.lang.Class<?> wildcardClass86 = secondMoment0.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 2L + "'", long52 == 2L);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4050.0d + "'", double54 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.5d + "'", double68 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 74.0d + "'", double79 == 74.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 74.0d + "'", double82 == 74.0d);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test09033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09033");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        double double15 = secondMoment0.getResult();
        secondMoment0.increment((double) ' ');
        double double18 = secondMoment0.getResult();
        double double19 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment23);
        secondMoment23.increment((double) (short) -1);
        secondMoment23.clear();
        secondMoment23.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment23);
        long long33 = variance32.getN();
        variance32.increment(200.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        secondMoment37.increment((double) (short) -1);
        long long43 = secondMoment37.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double double56 = variance44.evaluate(doubleArray51, (double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        secondMoment57.incrementAll(doubleArray63, 0, 0);
        double[] doubleArray69 = new double[] { 10, (byte) 100 };
        double double70 = secondMoment57.evaluate(doubleArray69);
        double double72 = variance44.evaluate(doubleArray69, 0.0d);
        double double73 = variance32.evaluate(doubleArray69);
        double double74 = secondMoment0.evaluate(doubleArray69);
        secondMoment0.increment(1655360.891851852d);
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4402.666666666667d + "'", double18 == 4402.666666666667d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4402.666666666667d + "'", double19 == 4402.666666666667d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 2L + "'", long43 == 2L);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 24.666666666666668d + "'", double56 == 24.666666666666668d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4050.0d + "'", double70 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2025.0d + "'", double72 == 2025.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4050.0d + "'", double73 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4050.0d + "'", double74 == 4050.0d);
    }

    @Test
    public void test09034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09034");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(272.25d);
        long long6 = secondMoment0.getN();
        secondMoment0.increment((double) (byte) 100);
        long long9 = secondMoment0.getN();
        secondMoment0.clear();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 3L + "'", long9 == 3L);
    }

    @Test
    public void test09035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09035");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        long long7 = variance6.getN();
        double double8 = variance6.getResult();
        boolean boolean9 = variance6.isBiasCorrected();
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double[] doubleArray24 = new double[] { 10, (byte) 100 };
        double double25 = secondMoment12.evaluate(doubleArray24);
        long long26 = secondMoment12.getN();
        secondMoment12.clear();
        double double28 = secondMoment12.getResult();
        secondMoment12.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        double double41 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(false);
        variance30.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = secondMoment45.evaluate(doubleArray57);
        double double62 = variance30.evaluate(doubleArray57);
        variance6.incrementAll(doubleArray57);
        long long64 = variance6.getN();
        variance6.setBiasCorrected(false);
        java.lang.Class<?> wildcardClass67 = variance6.getClass();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 37.0d + "'", double41 == 37.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 24.666666666666668d + "'", double62 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test09036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09036");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double[] doubleArray41 = new double[] { 10, (byte) 100 };
        double double42 = secondMoment29.evaluate(doubleArray41);
        double double43 = variance28.evaluate(doubleArray41);
        long long44 = variance28.getN();
        double double45 = variance28.getResult();
        boolean boolean46 = variance28.isBiasCorrected();
        variance28.increment(7836.75d);
        double double49 = variance28.getResult();
        long long50 = variance28.getN();
        double double51 = variance28.getResult();
        double double52 = variance28.getResult();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4050.0d + "'", double42 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4050.0d + "'", double43 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 3L + "'", long44 == 3L);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 3L + "'", long50 == 3L);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
    }

    @Test
    public void test09037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09037");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        long long11 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        boolean boolean14 = variance13.isBiasCorrected();
        double double15 = variance13.getResult();
        variance13.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test09038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09038");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance10.evaluate(doubleArray31);
        long long35 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment36);
        secondMoment36.increment((double) (short) -1);
        secondMoment36.clear();
        secondMoment36.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        variance45.incrementAll(doubleArray52);
        long long57 = variance45.getN();
        variance45.clear();
        boolean boolean59 = variance45.isBiasCorrected();
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        double double73 = variance45.evaluate(doubleArray68, (double) '4');
        double double76 = variance10.evaluate(doubleArray68, 1, (int) (byte) 1);
        variance10.clear();
        variance10.increment(8.0d);
        variance10.increment(3.889038153298707E13d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 24.666666666666668d + "'", double73 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
    }

    @Test
    public void test09039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09039");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        double double16 = secondMoment0.evaluate(doubleArray12);
        long long17 = secondMoment0.getN();
        double double18 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        long long24 = secondMoment19.getN();
        double double25 = secondMoment19.getResult();
        secondMoment19.increment((double) (byte) 10);
        secondMoment19.clear();
        long long29 = secondMoment19.getN();
        secondMoment19.increment(1.8756123185185187E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment((double) ' ');
        double double36 = secondMoment33.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        long long38 = variance37.getN();
        boolean boolean39 = variance37.isBiasCorrected();
        boolean boolean40 = variance37.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long43 = variance42.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        double double49 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double double60 = secondMoment44.evaluate(doubleArray56);
        variance42.incrementAll(doubleArray56);
        variance37.incrementAll(doubleArray56);
        double double63 = variance32.evaluate(doubleArray56);
        secondMoment0.incrementAll(doubleArray56);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 74.0d + "'", double16 == 74.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 3L + "'", long17 == 3L);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 74.0d + "'", double18 == 74.0d);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.5d + "'", double25 == 0.5d);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5d + "'", double49 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 37.0d + "'", double63 == 37.0d);
    }

    @Test
    public void test09040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09040");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        double double24 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        secondMoment25.increment((double) (short) 0);
        double double30 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        double double41 = secondMoment25.evaluate(doubleArray37);
        double[] doubleArray42 = new double[] {};
        secondMoment25.incrementAll(doubleArray42);
        secondMoment19.incrementAll(doubleArray42);
        secondMoment19.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double[] doubleArray60 = new double[] { 10, (byte) 100 };
        double double61 = secondMoment48.evaluate(doubleArray60);
        double double62 = variance47.evaluate(doubleArray60);
        double double63 = secondMoment1.evaluate(doubleArray60);
        secondMoment1.increment((double) 0.0f);
        secondMoment1.clear();
        double double67 = secondMoment1.getResult();
        double double68 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(2.3522465301587306E7d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5d + "'", double24 == 0.5d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5d + "'", double30 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 74.0d + "'", double41 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4050.0d + "'", double63 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
    }

    @Test
    public void test09041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09041");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        double double25 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        double double49 = variance27.evaluate(doubleArray45, (int) (byte) 0, 0);
        double double50 = variance26.evaluate(doubleArray45);
        double double51 = variance9.evaluate(doubleArray45);
        long long52 = variance9.getN();
        variance9.increment((double) 5L);
        variance9.increment((double) (byte) 1);
        double double57 = variance9.getResult();
        variance9.clear();
        variance9.clear();
        variance9.increment(2099.2d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment63);
        secondMoment63.increment((double) (short) -1);
        secondMoment63.clear();
        secondMoment63.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment63);
        double double74 = secondMoment63.getResult();
        secondMoment63.increment(11282.0d);
        boolean boolean77 = variance9.equals((java.lang.Object) secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment63);
        secondMoment63.increment(6.637293823097785E14d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test09042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09042");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        double double23 = secondMoment7.evaluate(doubleArray19);
        double[] doubleArray24 = new double[] {};
        secondMoment7.incrementAll(doubleArray24);
        secondMoment1.incrementAll(doubleArray24);
        long long27 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.increment(1576.2666666666667d);
        secondMoment1.increment(0.0d);
        secondMoment1.increment(4402.666666666667d);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment51);
        secondMoment51.increment((double) (short) -1);
        secondMoment51.clear();
        secondMoment51.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment51);
        boolean boolean61 = secondMoment36.equals((java.lang.Object) secondMoment51);
        double double62 = secondMoment51.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment51);
        boolean boolean64 = variance63.isBiasCorrected();
        variance63.setBiasCorrected(true);
        long long67 = variance63.getN();
        variance63.increment(7070.8d);
        boolean boolean70 = secondMoment1.equals((java.lang.Object) variance63);
        variance63.setBiasCorrected(false);
        double double73 = variance63.getResult();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 74.0d + "'", double23 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 2L + "'", long27 == 2L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
    }

    @Test
    public void test09043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09043");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double8 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        double[] doubleArray22 = new double[] { 10, (byte) 100 };
        double double23 = secondMoment10.evaluate(doubleArray22);
        double double24 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        double double48 = variance26.evaluate(doubleArray44, (int) (byte) 0, 0);
        double double49 = variance25.evaluate(doubleArray44);
        secondMoment0.incrementAll(doubleArray44);
        secondMoment0.clear();
        secondMoment0.increment((-1.0d));
        secondMoment0.clear();
        double double55 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long57 = secondMoment0.getN();
        secondMoment0.increment(1657.5555555555557d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
    }

    @Test
    public void test09044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09044");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        double double17 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        long long19 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        double double21 = secondMoment3.getResult();
        secondMoment3.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        secondMoment3.clear();
        double double26 = secondMoment3.getResult();
        secondMoment3.clear();
        secondMoment3.clear();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test09045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09045");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) '4');
        double double7 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(5.49755813888E11d);
        secondMoment1.clear();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance15.clear();
        variance15.increment(1.2071146294775038E14d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
    }

    @Test
    public void test09046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09046");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        secondMoment1.clear();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double[] doubleArray31 = new double[] { 10, (byte) 100 };
        double double32 = secondMoment19.evaluate(doubleArray31);
        double double33 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        long long35 = secondMoment19.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        secondMoment19.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        double[] doubleArray51 = new double[] { 10, (byte) 100 };
        double double52 = secondMoment39.evaluate(doubleArray51);
        double double53 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment39);
        long long55 = secondMoment39.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment((double) ' ');
        secondMoment56.increment((double) (-1.0f));
        secondMoment56.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment62);
        long long73 = variance72.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double double85 = variance72.evaluate(doubleArray80, (double) (short) -1);
        double double86 = secondMoment56.evaluate(doubleArray80);
        double double87 = secondMoment39.evaluate(doubleArray80);
        double double88 = secondMoment19.evaluate(doubleArray80);
        double double89 = secondMoment1.evaluate(doubleArray80);
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance92.setBiasCorrected(false);
        variance92.clear();
        variance92.clear();
        double double97 = variance92.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 2L + "'", long35 == 2L);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4050.0d + "'", double53 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 2L + "'", long55 == 2L);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 37.0d + "'", double85 == 37.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 74.0d + "'", double86 == 74.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double97));
    }

    @Test
    public void test09047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09047");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double[] doubleArray33 = new double[] { 10, (byte) 100 };
        double double34 = secondMoment21.evaluate(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment36);
        secondMoment36.increment((double) (short) -1);
        secondMoment36.clear();
        secondMoment36.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment36);
        boolean boolean46 = secondMoment21.equals((java.lang.Object) secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double[] doubleArray66 = new double[] {};
        secondMoment49.incrementAll(doubleArray66);
        double double70 = variance48.evaluate(doubleArray66, (int) (byte) 0, 0);
        long long71 = variance48.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        secondMoment72.increment((double) (short) 0);
        double double77 = secondMoment72.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment78.increment(1.0d);
        double[] doubleArray84 = new double[] { (-1L), 0, 10L };
        secondMoment78.incrementAll(doubleArray84, 0, 0);
        double double88 = secondMoment72.evaluate(doubleArray84);
        variance48.incrementAll(doubleArray84);
        double double91 = variance47.evaluate(doubleArray84, (double) '#');
        double double94 = variance19.evaluate(doubleArray84, 0, (int) (byte) 1);
        variance19.clear();
        boolean boolean96 = variance19.isBiasCorrected();
        boolean boolean97 = variance19.isBiasCorrected();
        variance19.increment(1467.5555555555557d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4050.0d + "'", double34 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.5d + "'", double77 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 24.666666666666668d + "'", double91 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test09048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09048");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double26 = secondMoment10.evaluate(doubleArray22);
        double double27 = secondMoment0.evaluate(doubleArray22);
        double double28 = secondMoment0.getResult();
        secondMoment0.increment(4034.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        secondMoment32.incrementAll(doubleArray38, 0, 0);
        long long42 = secondMoment32.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        secondMoment43.incrementAll(doubleArray49, 0, 0);
        secondMoment32.incrementAll(doubleArray49, 0, (int) (short) 1);
        secondMoment32.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment((double) ' ');
        secondMoment57.increment((double) (-1.0f));
        secondMoment57.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment63);
        long long74 = variance73.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double double86 = variance73.evaluate(doubleArray81, (double) (short) -1);
        double double87 = secondMoment57.evaluate(doubleArray81);
        double double88 = secondMoment32.evaluate(doubleArray81);
        double double89 = secondMoment0.evaluate(doubleArray81);
        secondMoment0.clear();
        secondMoment0.clear();
        double double92 = secondMoment0.getResult();
        secondMoment0.increment(0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 74.0d + "'", double26 == 74.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 74.0d + "'", double28 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 37.0d + "'", double86 == 37.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
    }

    @Test
    public void test09049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09049");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        long long16 = secondMoment2.getN();
        secondMoment2.clear();
        double double18 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        variance21.increment((double) 0);
        long long24 = variance21.getN();
        variance21.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test09050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09050");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        secondMoment1.increment(74.0d);
        long long8 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        secondMoment1.clear();
        long long12 = secondMoment1.getN();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 3L + "'", long8 == 3L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test09051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09051");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        double double15 = secondMoment0.getResult();
        double double16 = secondMoment0.getResult();
        double double17 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
    }

    @Test
    public void test09052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09052");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        long long27 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double39 = variance26.evaluate(doubleArray34, (double) (short) -1);
        double double40 = secondMoment10.evaluate(doubleArray34);
        secondMoment0.incrementAll(doubleArray34);
        secondMoment0.increment((double) 6L);
        double double44 = secondMoment0.getResult();
        secondMoment0.clear();
        double double46 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 80.75d + "'", double44 == 80.75d);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
    }

    @Test
    public void test09053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09053");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (byte) 0);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        secondMoment26.increment((double) (short) -1);
        secondMoment26.clear();
        secondMoment26.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        boolean boolean36 = secondMoment11.equals((java.lang.Object) secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        double double38 = secondMoment26.getResult();
        secondMoment26.clear();
        boolean boolean40 = secondMoment1.equals((java.lang.Object) secondMoment26);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test09054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09054");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance8.increment(4050.0d);
        long long11 = variance8.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        secondMoment12.increment((double) '4');
        double double18 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        double double24 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        secondMoment25.increment((double) (short) 0);
        double double30 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        double double41 = secondMoment25.evaluate(doubleArray37);
        double[] doubleArray42 = new double[] {};
        secondMoment25.incrementAll(doubleArray42);
        secondMoment19.incrementAll(doubleArray42);
        secondMoment19.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double[] doubleArray60 = new double[] { 10, (byte) 100 };
        double double61 = secondMoment48.evaluate(doubleArray60);
        double double62 = variance47.evaluate(doubleArray60);
        double double63 = secondMoment12.evaluate(doubleArray60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        long long65 = secondMoment12.getN();
        secondMoment12.increment(3.0341188245370373E7d);
        boolean boolean68 = variance8.equals((java.lang.Object) 3.0341188245370373E7d);
        variance8.increment(0.2222222222222222d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 200.0d + "'", double18 == 200.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5d + "'", double24 == 0.5d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5d + "'", double30 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 74.0d + "'", double41 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4050.0d + "'", double63 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2L + "'", long65 == 2L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test09055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09055");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        variance1.clear();
        boolean boolean4 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        variance5.clear();
        boolean boolean7 = variance1.equals((java.lang.Object) variance5);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        secondMoment8.clear();
        boolean boolean23 = variance5.equals((java.lang.Object) secondMoment8);
        variance5.increment(7836.75d);
        variance5.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test09056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09056");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        secondMoment10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment10);
        long long18 = secondMoment10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment((double) ' ');
        secondMoment30.increment((double) (-1.0f));
        secondMoment30.clear();
        boolean boolean36 = variance29.equals((java.lang.Object) secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        secondMoment37.increment((double) (short) 0);
        double double42 = secondMoment37.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        secondMoment43.increment((double) (short) 0);
        double double48 = secondMoment43.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        double double59 = secondMoment43.evaluate(doubleArray55);
        double[] doubleArray60 = new double[] {};
        secondMoment43.incrementAll(doubleArray60);
        secondMoment37.incrementAll(doubleArray60);
        secondMoment37.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        double[] doubleArray72 = new double[] { (-1L), 0, 10L };
        secondMoment66.incrementAll(doubleArray72, 0, 0);
        double[] doubleArray78 = new double[] { 10, (byte) 100 };
        double double79 = secondMoment66.evaluate(doubleArray78);
        double double80 = variance65.evaluate(doubleArray78);
        secondMoment30.incrementAll(doubleArray78);
        secondMoment10.incrementAll(doubleArray78);
        double double83 = variance8.evaluate(doubleArray78);
        java.lang.Class<?> wildcardClass84 = variance8.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5d + "'", double42 == 0.5d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.5d + "'", double48 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 74.0d + "'", double59 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4050.0d + "'", double79 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 4050.0d + "'", double80 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test09057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09057");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        secondMoment3.increment((double) (short) -1);
        long long9 = secondMoment3.getN();
        double double10 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        secondMoment3.increment(9714674.75d);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 2L + "'", long9 == 2L);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 544.5d + "'", double10 == 544.5d);
    }

    @Test
    public void test09058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09058");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        secondMoment0.clear();
        secondMoment0.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(482.66666666666663d);
        double double20 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        double[] doubleArray36 = new double[] { 10, (byte) 100 };
        double double37 = secondMoment24.evaluate(doubleArray36);
        double double38 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment24);
        long long40 = secondMoment24.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long46 = variance45.getN();
        double double47 = variance45.getResult();
        variance45.increment((double) (short) 100);
        variance45.increment((double) 3L);
        variance45.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        secondMoment53.increment((double) (short) 0);
        double double58 = secondMoment53.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        double double69 = secondMoment53.evaluate(doubleArray65);
        double[] doubleArray70 = new double[] {};
        secondMoment53.incrementAll(doubleArray70);
        variance45.incrementAll(doubleArray70);
        boolean boolean73 = secondMoment24.equals((java.lang.Object) doubleArray70);
        double double76 = secondMoment0.evaluate(doubleArray70, (int) (short) 0, (int) (byte) 0);
        double double77 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment79.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment79);
        secondMoment79.increment((double) (short) -1);
        secondMoment79.clear();
        secondMoment79.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment79);
        double double89 = secondMoment79.getResult();
        long long90 = secondMoment79.getN();
        secondMoment79.increment(7881.333333333333d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance93 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment79);
        boolean boolean94 = secondMoment0.equals((java.lang.Object) secondMoment79);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 116966.7222222222d + "'", double20 == 116966.7222222222d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4050.0d + "'", double37 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 2L + "'", long40 == 2L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.5d + "'", double58 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 116966.7222222222d + "'", double76 == 116966.7222222222d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 116966.7222222222d + "'", double77 == 116966.7222222222d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 1L + "'", long90 == 1L);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test09059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09059");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        secondMoment18.increment((double) (short) 0);
        double double23 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        double double34 = secondMoment18.evaluate(doubleArray30);
        double[] doubleArray35 = new double[] {};
        secondMoment18.incrementAll(doubleArray35);
        double double39 = variance17.evaluate(doubleArray35, (int) (byte) 0, 0);
        double double40 = variance16.evaluate(doubleArray35);
        variance16.clear();
        variance16.increment((double) 100.0f);
        variance16.increment(100.0d);
        boolean boolean46 = variance16.isBiasCorrected();
        variance16.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment50);
        secondMoment50.increment((double) (short) -1);
        long long56 = secondMoment50.getN();
        double double57 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment50);
        long long60 = secondMoment50.getN();
        secondMoment50.increment(482.66666666666663d);
        double double63 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        secondMoment64.clear();
        double double68 = secondMoment64.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        secondMoment69.increment((double) (short) 0);
        double double74 = secondMoment69.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double double85 = secondMoment69.evaluate(doubleArray81);
        double double86 = secondMoment64.evaluate(doubleArray81);
        secondMoment50.incrementAll(doubleArray81);
        double double88 = variance16.evaluate(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5d + "'", double23 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 74.0d + "'", double34 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 2L + "'", long56 == 2L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 544.5d + "'", double57 == 544.5d);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 2L + "'", long60 == 2L);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 146040.96296296292d + "'", double63 == 146040.96296296292d);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.5d + "'", double74 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 74.0d + "'", double86 == 74.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 24.666666666666668d + "'", double88 == 24.666666666666668d);
    }

    @Test
    public void test09060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09060");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        secondMoment19.increment((double) (-1.0f));
        secondMoment19.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        long long36 = variance35.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double double48 = variance35.evaluate(doubleArray43, (double) (short) -1);
        double double49 = secondMoment19.evaluate(doubleArray43);
        double double50 = secondMoment2.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        long long52 = secondMoment2.getN();
        secondMoment2.clear();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 37.0d + "'", double48 == 37.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 74.0d + "'", double50 == 74.0d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 3L + "'", long52 == 3L);
    }

    @Test
    public void test09061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09061");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        double double17 = secondMoment0.getResult();
        double double18 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(1.0873684323731136E7d);
        long long22 = secondMoment0.getN();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 6140.666666666667d + "'", double17 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 6140.666666666667d + "'", double18 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
    }

    @Test
    public void test09062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09062");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        secondMoment0.increment(7186.0d);
        secondMoment0.increment((double) 10.0f);
        secondMoment0.clear();
        secondMoment0.increment(684.6666666666666d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test09063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09063");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        secondMoment1.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        variance10.incrementAll(doubleArray17);
        variance0.incrementAll(doubleArray17);
        variance0.increment(2046.888888888889d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
    }

    @Test
    public void test09064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09064");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        secondMoment1.clear();
        secondMoment1.increment((double) 1L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        secondMoment11.increment((double) (short) -1);
        secondMoment11.clear();
        secondMoment11.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        long long21 = variance20.getN();
        variance20.increment(200.0d);
        long long24 = variance20.getN();
        variance20.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        variance36.increment((double) (short) 100);
        variance36.clear();
        variance36.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        secondMoment42.increment((double) (short) -1);
        secondMoment42.clear();
        secondMoment42.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        long long52 = secondMoment42.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long55 = variance54.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        secondMoment56.increment((double) (short) 0);
        double double61 = secondMoment56.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        double double72 = secondMoment56.evaluate(doubleArray68);
        variance54.incrementAll(doubleArray68);
        double double74 = secondMoment42.evaluate(doubleArray68);
        double double75 = variance36.evaluate(doubleArray68);
        double double76 = variance20.evaluate(doubleArray68);
        double double78 = variance10.evaluate(doubleArray68, (double) 1);
        variance10.increment(100.0d);
        long long81 = variance10.getN();
        variance10.clear();
        boolean boolean83 = variance10.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5d + "'", double61 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 74.0d + "'", double74 == 74.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 37.0d + "'", double75 == 37.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 37.0d + "'", double76 == 37.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 37.0d + "'", double78 == 37.0d);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 1L + "'", long81 == 1L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test09065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09065");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.clear();
        secondMoment10.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        secondMoment17.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        secondMoment22.increment((double) (short) 0);
        double double27 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        secondMoment22.incrementAll(doubleArray45);
        secondMoment22.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double[] doubleArray63 = new double[] { 10, (byte) 100 };
        double double64 = secondMoment51.evaluate(doubleArray63);
        double double65 = variance50.evaluate(doubleArray63);
        double double66 = secondMoment17.evaluate(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        secondMoment67.increment((double) (short) 0);
        double double72 = secondMoment67.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        secondMoment73.increment((double) (short) 0);
        double double78 = secondMoment73.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment79.increment(1.0d);
        double[] doubleArray85 = new double[] { (-1L), 0, 10L };
        secondMoment79.incrementAll(doubleArray85, 0, 0);
        double double89 = secondMoment73.evaluate(doubleArray85);
        double[] doubleArray90 = new double[] {};
        secondMoment73.incrementAll(doubleArray90);
        secondMoment67.incrementAll(doubleArray90);
        double double93 = secondMoment17.evaluate(doubleArray90);
        double double94 = secondMoment10.evaluate(doubleArray90);
        double double95 = variance9.evaluate(doubleArray90);
        variance9.clear();
        variance9.clear();
        variance9.clear();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5d + "'", double27 == 0.5d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4050.0d + "'", double65 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5d + "'", double72 == 0.5d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.5d + "'", double78 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 4050.0d + "'", double93 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
    }

    @Test
    public void test09066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09066");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        long long11 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        secondMoment1.incrementAll(doubleArray18, 0, (int) (short) 1);
        secondMoment1.clear();
        double double26 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test09067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09067");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        double double17 = secondMoment0.getResult();
        secondMoment0.increment((double) 1L);
        secondMoment0.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(6.222464933786481E14d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        secondMoment25.increment((double) (short) 0);
        long long30 = secondMoment25.getN();
        double double31 = secondMoment25.getResult();
        long long32 = secondMoment25.getN();
        double double33 = secondMoment25.getResult();
        secondMoment25.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        secondMoment25.incrementAll(doubleArray48);
        double double51 = secondMoment0.evaluate(doubleArray48);
        java.lang.Class<?> wildcardClass52 = secondMoment0.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 6140.666666666667d + "'", double17 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 2L + "'", long30 == 2L);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5d + "'", double31 == 0.5d);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2L + "'", long32 == 2L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test09068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09068");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double17 = variance16.getResult();
        boolean boolean18 = variance16.isBiasCorrected();
        double double19 = variance16.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 2025.0d + "'", double17 == 2025.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2025.0d + "'", double19 == 2025.0d);
    }

    @Test
    public void test09069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09069");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double[] doubleArray19 = new double[] { 10, (byte) 100 };
        double double20 = secondMoment7.evaluate(doubleArray19);
        double double21 = secondMoment7.getResult();
        long long22 = secondMoment7.getN();
        long long23 = secondMoment7.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        double double49 = variance27.evaluate(doubleArray45, (int) (byte) 0, 0);
        long long50 = variance27.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        secondMoment51.increment((double) (short) 0);
        double double56 = secondMoment51.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        secondMoment57.incrementAll(doubleArray63, 0, 0);
        double double67 = secondMoment51.evaluate(doubleArray63);
        variance27.incrementAll(doubleArray63);
        long long69 = variance27.getN();
        variance27.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double[] doubleArray87 = new double[] { 10, (byte) 100 };
        double double88 = secondMoment75.evaluate(doubleArray87);
        double double89 = secondMoment72.evaluate(doubleArray87);
        variance27.incrementAll(doubleArray87);
        double double91 = variance26.evaluate(doubleArray87);
        variance26.increment(5922.666666666667d);
        long long94 = variance26.getN();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.5d + "'", double56 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 74.0d + "'", double67 == 74.0d);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 3L + "'", long69 == 3L);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 4050.0d + "'", double88 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4050.0d + "'", double89 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4050.0d + "'", double91 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 2L + "'", long94 == 2L);
    }

    @Test
    public void test09070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09070");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) '4');
        double double7 = secondMoment1.getResult();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance9.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        long long28 = variance27.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double40 = variance27.evaluate(doubleArray35, (double) (short) -1);
        double double41 = secondMoment11.evaluate(doubleArray35);
        secondMoment11.clear();
        double double43 = secondMoment11.getResult();
        secondMoment11.clear();
        double double45 = secondMoment11.getResult();
        boolean boolean46 = variance9.equals((java.lang.Object) secondMoment11);
        variance9.setBiasCorrected(true);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 200.0d + "'", double8 == 200.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 74.0d + "'", double41 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test09071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09071");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment4 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment4.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment4);
        secondMoment4.increment((double) (short) -1);
        long long10 = secondMoment4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment4);
        long long13 = secondMoment4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment4);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        secondMoment16.increment((double) (-1.0f));
        secondMoment16.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        long long33 = variance32.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double45 = variance32.evaluate(doubleArray40, (double) (short) -1);
        double double46 = secondMoment16.evaluate(doubleArray40);
        boolean boolean47 = secondMoment4.equals((java.lang.Object) secondMoment16);
        secondMoment4.increment((double) 'a');
        long long50 = secondMoment4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment4);
        long long52 = variance51.getN();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 37.0d + "'", double45 == 37.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 74.0d + "'", double46 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 3L + "'", long50 == 3L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 3L + "'", long52 == 3L);
    }

    @Test
    public void test09072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09072");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double[] doubleArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double8 = variance6.evaluate(doubleArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
    }

    @Test
    public void test09073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09073");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment(10.0d);
        secondMoment0.increment(4071.4074074074074d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
    }

    @Test
    public void test09074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09074");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        secondMoment5.increment((double) (short) 0);
        double double10 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] {};
        secondMoment11.incrementAll(doubleArray28);
        secondMoment5.incrementAll(doubleArray28);
        secondMoment5.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double48 = variance33.evaluate(doubleArray46);
        double double49 = secondMoment0.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        secondMoment56.increment((double) (short) 0);
        double double61 = secondMoment56.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        double double72 = secondMoment56.evaluate(doubleArray68);
        double[] doubleArray73 = new double[] {};
        secondMoment56.incrementAll(doubleArray73);
        secondMoment50.incrementAll(doubleArray73);
        double double76 = secondMoment0.evaluate(doubleArray73);
        long long77 = secondMoment0.getN();
        secondMoment0.increment(200.0d);
        secondMoment0.increment((double) 0L);
        secondMoment0.increment(32.2d);
        secondMoment0.increment(4.321154463792899E13d);
        double double86 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance87.setBiasCorrected(true);
        long long90 = variance87.getN();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5d + "'", double10 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5d + "'", double61 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4050.0d + "'", double76 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 2L + "'", long77 == 2L);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.5560313249915127E27d + "'", double86 == 1.5560313249915127E27d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 6L + "'", long90 == 6L);
    }

    @Test
    public void test09075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09075");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        secondMoment0.increment(0.0d);
        secondMoment0.increment((double) 0);
        secondMoment0.increment((double) (byte) 10);
        secondMoment0.increment(7200964.18888889d);
        double double14 = secondMoment0.getResult();
        double double15 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        long long28 = secondMoment18.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment18);
        double[] doubleArray31 = new double[] {};
        double double32 = secondMoment18.evaluate(doubleArray31);
        secondMoment18.clear();
        secondMoment18.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment36);
        secondMoment36.increment((double) (short) -1);
        secondMoment36.clear();
        secondMoment36.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        double double51 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double double62 = secondMoment46.evaluate(doubleArray58);
        double double63 = secondMoment36.evaluate(doubleArray58);
        secondMoment36.increment((double) 'a');
        secondMoment36.increment(3.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        secondMoment69.increment((double) (short) 0);
        double double74 = secondMoment69.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double double85 = secondMoment69.evaluate(doubleArray81);
        double[] doubleArray86 = new double[] {};
        secondMoment69.incrementAll(doubleArray86);
        double double90 = variance68.evaluate(doubleArray86, (int) (byte) 0, 0);
        double double91 = secondMoment36.evaluate(doubleArray86);
        secondMoment18.incrementAll(doubleArray86);
        double double93 = secondMoment0.evaluate(doubleArray86);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4.321154463792899E13d + "'", double14 == 4.321154463792899E13d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.321154463792899E13d + "'", double15 == 4.321154463792899E13d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5d + "'", double51 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 74.0d + "'", double62 == 74.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.5d + "'", double74 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 7142.8d + "'", double91 == 7142.8d);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test09076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09076");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        secondMoment2.increment((double) (short) 0);
        secondMoment2.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        long long10 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        double double12 = secondMoment2.getResult();
        secondMoment2.increment(0.0d);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        secondMoment16.increment((double) (-1.0f));
        double double21 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double[] doubleArray37 = new double[] { 10, (byte) 100 };
        double double38 = secondMoment25.evaluate(doubleArray37);
        double double39 = secondMoment25.getResult();
        long long40 = secondMoment25.getN();
        long long41 = secondMoment25.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        long long43 = secondMoment25.getN();
        double double44 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double[] doubleArray57 = new double[] { 10, (byte) 100 };
        double double58 = secondMoment45.evaluate(doubleArray57);
        double double59 = secondMoment45.getResult();
        secondMoment45.increment((double) (short) -1);
        double double62 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        double[] doubleArray75 = new double[] { 10, (byte) 100 };
        double double76 = secondMoment63.evaluate(doubleArray75);
        double double77 = secondMoment45.evaluate(doubleArray75);
        secondMoment25.incrementAll(doubleArray75);
        double double79 = secondMoment16.evaluate(doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            secondMoment2.incrementAll(doubleArray75, (int) '4', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 3L + "'", long10 == 3L);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3602.0d + "'", double12 == 3602.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 544.5d + "'", double21 == 544.5d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 2L + "'", long40 == 2L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 2L + "'", long41 == 2L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 2L + "'", long43 == 2L);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4050.0d + "'", double44 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 6140.666666666667d + "'", double62 == 6140.666666666667d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4050.0d + "'", double76 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4050.0d + "'", double77 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4050.0d + "'", double79 == 4050.0d);
    }

    @Test
    public void test09077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09077");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance5.setBiasCorrected(false);
        boolean boolean8 = variance5.isBiasCorrected();
        variance5.increment((double) 2L);
        variance5.increment((double) (byte) 1);
        java.lang.Object obj13 = null;
        boolean boolean14 = variance5.equals(obj13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        secondMoment15.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        boolean boolean29 = secondMoment15.equals((java.lang.Object) secondMoment24);
        long long30 = secondMoment24.getN();
        secondMoment24.clear();
        long long32 = secondMoment24.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        secondMoment33.increment((double) (short) 0);
        double double38 = secondMoment33.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        secondMoment39.increment((double) (short) 0);
        double double44 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double double55 = secondMoment39.evaluate(doubleArray51);
        double[] doubleArray56 = new double[] {};
        secondMoment39.incrementAll(doubleArray56);
        secondMoment33.incrementAll(doubleArray56);
        secondMoment33.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        double[] doubleArray74 = new double[] { 10, (byte) 100 };
        double double75 = secondMoment62.evaluate(doubleArray74);
        double double76 = variance61.evaluate(doubleArray74);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment77.increment((double) ' ');
        double double80 = secondMoment77.getResult();
        boolean boolean81 = variance61.equals((java.lang.Object) double80);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment82 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment82.increment(1.0d);
        double[] doubleArray88 = new double[] { (-1L), 0, 10L };
        secondMoment82.incrementAll(doubleArray88, 0, 0);
        double double92 = variance61.evaluate(doubleArray88);
        double double93 = secondMoment24.evaluate(doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            double double96 = variance5.evaluate(doubleArray88, (int) (short) -1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 2L + "'", long30 == 2L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5d + "'", double38 == 0.5d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5d + "'", double44 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 74.0d + "'", double55 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 4050.0d + "'", double75 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4050.0d + "'", double76 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 37.0d + "'", double92 == 37.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 74.0d + "'", double93 == 74.0d);
    }

    @Test
    public void test09078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09078");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance16.increment(0.0d);
        variance16.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        secondMoment34.increment((double) (short) 0);
        double double39 = secondMoment34.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        secondMoment40.incrementAll(doubleArray46, 0, 0);
        double double50 = secondMoment34.evaluate(doubleArray46);
        double[] doubleArray51 = new double[] {};
        secondMoment34.incrementAll(doubleArray51);
        double double53 = secondMoment31.evaluate(doubleArray51);
        double double54 = variance30.evaluate(doubleArray51);
        long long55 = variance30.getN();
        double double56 = variance30.getResult();
        variance30.setBiasCorrected(false);
        boolean boolean59 = variance16.equals((java.lang.Object) false);
        variance16.clear();
        boolean boolean61 = variance16.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.5d + "'", double39 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 74.0d + "'", double50 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test09079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09079");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        long long11 = variance9.getN();
        variance9.increment(272.25d);
        boolean boolean14 = variance9.isBiasCorrected();
        variance9.increment(0.6666666666666666d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        long long28 = secondMoment18.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment18);
        double double30 = secondMoment18.getResult();
        secondMoment18.clear();
        secondMoment18.increment(2065344.9481481484d);
        boolean boolean34 = variance9.equals((java.lang.Object) secondMoment18);
        double double35 = secondMoment18.getResult();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test09080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09080");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        long long7 = variance6.getN();
        long long8 = variance6.getN();
        org.apache.commons.math.stat.descriptive.moment.FirstMoment firstMoment9 = new org.apache.commons.math.stat.descriptive.moment.FirstMoment();
        firstMoment9.increment((double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        double double20 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double double31 = secondMoment15.evaluate(doubleArray27);
        double[] doubleArray32 = new double[] {};
        secondMoment15.incrementAll(doubleArray32);
        double double34 = secondMoment12.evaluate(doubleArray32);
        secondMoment12.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment((double) ' ');
        secondMoment36.increment((double) (short) 10);
        secondMoment36.increment((double) 2L);
        double double43 = secondMoment36.getResult();
        double double44 = secondMoment36.getResult();
        secondMoment36.increment(37.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        secondMoment53.increment((double) (short) 0);
        double double58 = secondMoment53.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        double double69 = secondMoment53.evaluate(doubleArray65);
        double[] doubleArray70 = new double[] {};
        secondMoment53.incrementAll(doubleArray70);
        secondMoment47.incrementAll(doubleArray70);
        secondMoment47.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        double[] doubleArray82 = new double[] { (-1L), 0, 10L };
        secondMoment76.incrementAll(doubleArray82, 0, 0);
        double[] doubleArray88 = new double[] { 10, (byte) 100 };
        double double89 = secondMoment76.evaluate(doubleArray88);
        double double90 = variance75.evaluate(doubleArray88);
        double double91 = secondMoment36.evaluate(doubleArray88);
        secondMoment12.incrementAll(doubleArray88);
        double double93 = firstMoment9.evaluate(doubleArray88);
        double double94 = variance6.evaluate(doubleArray88);
        variance6.setBiasCorrected(false);
        variance6.clear();
        long long98 = variance6.getN();
        double double99 = variance6.getResult();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 482.66666666666663d + "'", double43 == 482.66666666666663d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 482.66666666666663d + "'", double44 == 482.66666666666663d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.5d + "'", double58 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4050.0d + "'", double89 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4050.0d + "'", double90 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4050.0d + "'", double91 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 55.0d + "'", double93 == 55.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 4050.0d + "'", double94 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 0L + "'", long98 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double99));
    }

    @Test
    public void test09081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09081");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double double17 = secondMoment1.evaluate(doubleArray13);
        double[] doubleArray18 = new double[] {};
        secondMoment1.incrementAll(doubleArray18);
        double double22 = variance0.evaluate(doubleArray18, (int) (byte) 0, 0);
        long long23 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        variance0.incrementAll(doubleArray36);
        long long42 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        double double51 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double double62 = secondMoment46.evaluate(doubleArray58);
        double[] doubleArray63 = new double[] {};
        secondMoment46.incrementAll(doubleArray63);
        double double65 = secondMoment43.evaluate(doubleArray63);
        variance0.incrementAll(doubleArray63);
        variance0.clear();
        variance0.clear();
        variance0.clear();
        double double70 = variance0.getResult();
        double double71 = variance0.getResult();
        double double72 = variance0.getResult();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 74.0d + "'", double17 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 3L + "'", long42 == 3L);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5d + "'", double51 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 74.0d + "'", double62 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
    }

    @Test
    public void test09082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09082");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        secondMoment8.increment((double) (short) -1);
        secondMoment8.clear();
        secondMoment8.increment((double) 0L);
        boolean boolean17 = secondMoment1.equals((java.lang.Object) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        secondMoment19.increment((double) (short) -1);
        secondMoment19.clear();
        secondMoment19.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        secondMoment29.increment((double) (short) 0);
        double double34 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double double45 = secondMoment29.evaluate(doubleArray41);
        double double46 = secondMoment19.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double[] doubleArray59 = new double[] { 10, (byte) 100 };
        double double60 = secondMoment47.evaluate(doubleArray59);
        double double61 = secondMoment47.getResult();
        secondMoment47.increment((double) (short) -1);
        double[] doubleArray65 = new double[] { (short) 1 };
        secondMoment47.incrementAll(doubleArray65);
        double double67 = secondMoment19.evaluate(doubleArray65);
        double double68 = variance18.evaluate(doubleArray65);
        variance18.increment((double) (short) 1);
        boolean boolean71 = variance18.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5d + "'", double34 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 74.0d + "'", double46 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test09083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09083");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(272.25d);
        long long7 = secondMoment1.getN();
        secondMoment1.increment((double) (byte) 100);
        double double10 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        boolean boolean12 = variance11.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        long long24 = variance23.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double double36 = variance23.evaluate(doubleArray31, (double) (short) -1);
        double double38 = variance11.evaluate(doubleArray31, 4402.666666666667d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 30671.375d + "'", double10 == 30671.375d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 37.0d + "'", double36 == 37.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 37.00000000372529d + "'", double38 == 37.00000000372529d);
    }

    @Test
    public void test09084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09084");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        boolean boolean6 = variance1.isBiasCorrected();
        long long7 = variance1.getN();
        boolean boolean8 = variance1.isBiasCorrected();
        variance1.clear();
        long long10 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test09085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09085");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance16.increment(0.0d);
        boolean boolean19 = variance16.isBiasCorrected();
        boolean boolean20 = variance16.isBiasCorrected();
        variance16.setBiasCorrected(true);
        variance16.increment((double) (short) 1);
        boolean boolean25 = variance16.isBiasCorrected();
        double[] doubleArray26 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance16.incrementAll(doubleArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test09086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09086");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long11 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double23 = variance10.evaluate(doubleArray18, (double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double[] doubleArray37 = new double[] { 10, (byte) 100 };
        double double38 = secondMoment25.evaluate(doubleArray37);
        double double39 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment25);
        long long41 = secondMoment25.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        secondMoment42.increment((double) (short) -1);
        secondMoment42.clear();
        secondMoment42.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        secondMoment52.increment((double) (short) 0);
        double double57 = secondMoment52.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double double68 = secondMoment52.evaluate(doubleArray64);
        double double69 = secondMoment42.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double[] doubleArray82 = new double[] { 10, (byte) 100 };
        double double83 = secondMoment70.evaluate(doubleArray82);
        double double84 = secondMoment70.getResult();
        secondMoment70.increment((double) (short) -1);
        double[] doubleArray88 = new double[] { (short) 1 };
        secondMoment70.incrementAll(doubleArray88);
        double double90 = secondMoment42.evaluate(doubleArray88);
        double double91 = secondMoment25.evaluate(doubleArray88);
        double double92 = variance10.evaluate(doubleArray88);
        variance10.clear();
        variance10.increment(5226.0d);
        double double96 = variance10.getResult();
        double double97 = variance10.getResult();
        long long98 = variance10.getN();
        double double99 = variance10.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 37.0d + "'", double23 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 2L + "'", long41 == 2L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5d + "'", double57 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 1L + "'", long98 == 1L);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.0d + "'", double99 == 0.0d);
    }

    @Test
    public void test09087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09087");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        long long26 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        secondMoment27.increment((double) (short) -1);
        secondMoment27.clear();
        secondMoment27.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        long long37 = variance36.getN();
        long long38 = variance36.getN();
        variance36.increment(272.25d);
        boolean boolean41 = variance36.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        double[] doubleArray54 = new double[] { 10, (byte) 100 };
        double double55 = secondMoment42.evaluate(doubleArray54);
        double double56 = variance36.evaluate(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment58);
        secondMoment58.increment((double) (short) -1);
        secondMoment58.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment58);
        double double66 = secondMoment58.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment68);
        long long79 = variance78.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        double double91 = variance78.evaluate(doubleArray86, (double) (short) -1);
        double double92 = secondMoment58.evaluate(doubleArray86);
        double double95 = variance36.evaluate(doubleArray86, (int) (byte) 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double98 = secondMoment0.evaluate(doubleArray86, (-1), (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4050.0d + "'", double55 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4050.0d + "'", double56 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 37.0d + "'", double91 == 37.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 74.0d + "'", double92 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
    }

    @Test
    public void test09088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09088");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        double double17 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        long long19 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        secondMoment3.clear();
        secondMoment3.clear();
        secondMoment3.increment((double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment((double) ' ');
        secondMoment26.increment((double) '4');
        long long31 = secondMoment26.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        double double33 = variance32.getResult();
        variance32.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        secondMoment36.increment((double) (short) 0);
        double double41 = secondMoment36.getResult();
        secondMoment36.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment36);
        double double44 = secondMoment36.getResult();
        secondMoment36.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment48);
        secondMoment48.increment((double) (short) -1);
        secondMoment48.clear();
        secondMoment48.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        variance57.incrementAll(doubleArray64);
        variance47.incrementAll(doubleArray64);
        double double70 = secondMoment36.evaluate(doubleArray64);
        double double71 = variance32.evaluate(doubleArray64);
        double double72 = variance25.evaluate(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2L + "'", long31 == 2L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 200.0d + "'", double33 == 200.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.5d + "'", double41 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 74.0d + "'", double70 == 74.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 37.0d + "'", double71 == 37.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 24.666666666666668d + "'", double72 == 24.666666666666668d);
    }

    @Test
    public void test09089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09089");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(544.5d);
        secondMoment0.clear();
        double double15 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(80.75d);
        double double19 = secondMoment0.getResult();
        double[] doubleArray20 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double21 = secondMoment0.evaluate(doubleArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test09090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09090");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        variance9.incrementAll(doubleArray16);
        variance9.clear();
        variance9.increment((double) 0);
        double double24 = variance9.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    }

    @Test
    public void test09091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09091");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance8.increment((double) (short) 0);
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double[] doubleArray26 = new double[] { 10, (byte) 100 };
        double double27 = secondMoment14.evaluate(doubleArray26);
        double double28 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment14);
        long long30 = secondMoment14.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        secondMoment14.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double48 = secondMoment34.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment34);
        long long50 = secondMoment34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment((double) ' ');
        secondMoment51.increment((double) (-1.0f));
        secondMoment51.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        secondMoment57.incrementAll(doubleArray63, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment57);
        long long68 = variance67.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        double double80 = variance67.evaluate(doubleArray75, (double) (short) -1);
        double double81 = secondMoment51.evaluate(doubleArray75);
        double double82 = secondMoment34.evaluate(doubleArray75);
        double double83 = secondMoment14.evaluate(doubleArray75);
        double double84 = variance8.evaluate(doubleArray75);
        variance8.setBiasCorrected(true);
        long long87 = variance8.getN();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4050.0d + "'", double27 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4050.0d + "'", double28 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 2L + "'", long30 == 2L);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 2L + "'", long50 == 2L);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 37.0d + "'", double80 == 37.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 74.0d + "'", double81 == 74.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 74.0d + "'", double82 == 74.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 74.0d + "'", double83 == 74.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 24.666666666666668d + "'", double84 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
    }

    @Test
    public void test09092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09092");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        secondMoment2.clear();
        secondMoment2.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        long long12 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long15 = variance14.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        secondMoment16.increment((double) (short) 0);
        double double21 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double double32 = secondMoment16.evaluate(doubleArray28);
        variance14.incrementAll(doubleArray28);
        double double34 = secondMoment2.evaluate(doubleArray28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment((double) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.clear();
        secondMoment2.increment(1862675.07d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.5d + "'", double21 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 74.0d + "'", double32 == 74.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 74.0d + "'", double34 == 74.0d);
    }

    @Test
    public void test09093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09093");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        secondMoment0.increment(7186.0d);
        secondMoment0.increment((double) 10.0f);
        secondMoment0.increment((double) 1L);
        long long14 = secondMoment0.getN();
        secondMoment0.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double[] doubleArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double21 = secondMoment0.evaluate(doubleArray18, (int) (byte) 100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 3L + "'", long14 == 3L);
    }

    @Test
    public void test09094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09094");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        secondMoment1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double double11 = variance10.getResult();
        double[] doubleArray12 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double14 = variance10.evaluate(doubleArray12, 7200964.18888889d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test09095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09095");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        secondMoment7.increment((double) '4');
        double double13 = secondMoment7.getResult();
        secondMoment7.increment((double) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        secondMoment7.clear();
        boolean boolean20 = secondMoment1.equals((java.lang.Object) secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        double double22 = variance21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment24);
        secondMoment24.increment((double) 0.0f);
        secondMoment24.clear();
        secondMoment24.increment((double) (byte) 1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double[] doubleArray47 = new double[] { 10, (byte) 100 };
        double double48 = secondMoment35.evaluate(doubleArray47);
        double double49 = secondMoment35.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment35);
        secondMoment35.increment(24.666666666666668d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        secondMoment56.increment((double) (short) 0);
        double double61 = secondMoment56.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        double double72 = secondMoment56.evaluate(doubleArray68);
        double[] doubleArray73 = new double[] {};
        secondMoment56.incrementAll(doubleArray73);
        double double75 = secondMoment53.evaluate(doubleArray73);
        secondMoment35.incrementAll(doubleArray73);
        double double77 = secondMoment24.evaluate(doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            double double81 = variance21.evaluate(doubleArray73, Double.NaN, (int) (byte) 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 200.0d + "'", double13 == 200.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5d + "'", double61 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
    }

    @Test
    public void test09096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09096");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.increment((double) 100);
        secondMoment0.clear();
        secondMoment0.increment(6.3641762E7d);
        double double11 = secondMoment0.getResult();
        secondMoment0.increment(0.0d);
        secondMoment0.clear();
        secondMoment0.increment(2201.3333333333335d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test09097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09097");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        secondMoment3.increment((double) (short) 0);
        double double8 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double19 = secondMoment3.evaluate(doubleArray15);
        double[] doubleArray20 = new double[] {};
        secondMoment3.incrementAll(doubleArray20);
        double double22 = secondMoment0.evaluate(doubleArray20);
        secondMoment0.increment((double) 3L);
        long long25 = secondMoment0.getN();
        double double26 = secondMoment0.getResult();
        double double27 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 74.0d + "'", double19 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2.0d + "'", double26 == 2.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2.0d + "'", double27 == 2.0d);
    }

    @Test
    public void test09098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09098");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (-1.0f));
        secondMoment1.clear();
        secondMoment1.clear();
        double double8 = secondMoment1.getResult();
        double double9 = secondMoment1.getResult();
        double double10 = secondMoment1.getResult();
        secondMoment1.increment((double) '#');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double double14 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        secondMoment20.increment((double) (short) 0);
        double double25 = secondMoment20.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double[] doubleArray39 = new double[] { 10, (byte) 100 };
        double double40 = secondMoment27.evaluate(doubleArray39);
        double double41 = secondMoment27.getResult();
        long long42 = secondMoment27.getN();
        long long43 = secondMoment27.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        boolean boolean45 = secondMoment20.equals((java.lang.Object) secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        variance47.clear();
        variance47.clear();
        double double50 = variance47.getResult();
        variance47.clear();
        long long52 = variance47.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        long long63 = secondMoment53.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        secondMoment53.incrementAll(doubleArray70, 0, (int) (short) 1);
        double double77 = variance47.evaluate(doubleArray70);
        secondMoment15.incrementAll(doubleArray70);
        // The following exception was thrown during execution in test generation
        try {
            secondMoment1.incrementAll(doubleArray70, 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.5d + "'", double25 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4050.0d + "'", double40 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4050.0d + "'", double41 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 2L + "'", long42 == 2L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 2L + "'", long43 == 2L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 2L + "'", long52 == 2L);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 37.0d + "'", double77 == 37.0d);
    }

    @Test
    public void test09099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09099");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.increment(30.333333333333332d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        long long13 = secondMoment8.getN();
        double double14 = secondMoment8.getResult();
        long long15 = secondMoment8.getN();
        double double16 = secondMoment8.getResult();
        secondMoment8.increment(10.0d);
        double double19 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        secondMoment20.increment((double) (short) 0);
        long long25 = secondMoment20.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        long long36 = secondMoment26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        secondMoment26.incrementAll(doubleArray43, 0, (int) (short) 1);
        secondMoment20.incrementAll(doubleArray43, (int) (byte) 0, (int) (byte) 1);
        secondMoment20.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment((double) ' ');
        secondMoment54.increment((double) '4');
        secondMoment54.increment((double) 0.0f);
        long long61 = secondMoment54.getN();
        long long62 = secondMoment54.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long65 = variance64.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        secondMoment66.increment((double) (short) 0);
        double double71 = secondMoment66.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        double[] doubleArray78 = new double[] { (-1L), 0, 10L };
        secondMoment72.incrementAll(doubleArray78, 0, 0);
        double double82 = secondMoment66.evaluate(doubleArray78);
        variance64.incrementAll(doubleArray78);
        double double84 = secondMoment54.evaluate(doubleArray78);
        double double85 = secondMoment20.evaluate(doubleArray78);
        secondMoment8.incrementAll(doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            secondMoment0.incrementAll(doubleArray78, 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5d + "'", double14 == 0.5d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 60.666666666666664d + "'", double19 == 60.666666666666664d);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 3L + "'", long61 == 3L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 3L + "'", long62 == 3L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.5d + "'", double71 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 74.0d + "'", double82 == 74.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
    }

    @Test
    public void test09100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09100");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        long long35 = variance34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double47 = variance34.evaluate(doubleArray42, (double) (short) -1);
        double double48 = secondMoment18.evaluate(doubleArray42);
        double double49 = secondMoment1.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long53 = variance52.getN();
        double double54 = variance52.getResult();
        variance52.increment((double) (short) 100);
        variance52.increment((double) 3L);
        variance52.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        secondMoment60.increment((double) (short) 0);
        double double65 = secondMoment60.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        double[] doubleArray72 = new double[] { (-1L), 0, 10L };
        secondMoment66.incrementAll(doubleArray72, 0, 0);
        double double76 = secondMoment60.evaluate(doubleArray72);
        double[] doubleArray77 = new double[] {};
        secondMoment60.incrementAll(doubleArray77);
        variance52.incrementAll(doubleArray77);
        secondMoment1.incrementAll(doubleArray77);
        secondMoment1.increment(0.0d);
        long long83 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double85 = secondMoment1.getResult();
        secondMoment1.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.5d + "'", double65 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 74.0d + "'", double76 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 4L + "'", long83 == 4L);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 80.75d + "'", double85 == 80.75d);
    }

    @Test
    public void test09101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09101");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        double double6 = secondMoment0.getResult();
        secondMoment0.increment(544.5d);
        secondMoment0.increment(5226.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        secondMoment12.increment((double) (short) -1);
        secondMoment12.clear();
        secondMoment12.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        double double22 = variance21.getResult();
        double double23 = variance21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        secondMoment24.increment((double) '4');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        double[] doubleArray43 = new double[] { 10, (byte) 100 };
        double double44 = secondMoment31.evaluate(doubleArray43);
        double double45 = secondMoment31.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double double63 = secondMoment47.evaluate(doubleArray59);
        double[] doubleArray64 = new double[] {};
        secondMoment47.incrementAll(doubleArray64);
        variance46.incrementAll(doubleArray64);
        double double67 = secondMoment24.evaluate(doubleArray64);
        double double68 = variance21.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long71 = variance70.getN();
        double double72 = variance70.getResult();
        variance70.increment((double) (short) 100);
        variance70.increment((double) 3L);
        variance70.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment78.increment(1.0d);
        secondMoment78.increment((double) (short) 0);
        double double83 = secondMoment78.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment84 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment84.increment(1.0d);
        double[] doubleArray90 = new double[] { (-1L), 0, 10L };
        secondMoment84.incrementAll(doubleArray90, 0, 0);
        double double94 = secondMoment78.evaluate(doubleArray90);
        double[] doubleArray95 = new double[] {};
        secondMoment78.incrementAll(doubleArray95);
        variance70.incrementAll(doubleArray95);
        double double98 = variance21.evaluate(doubleArray95);
        boolean boolean99 = secondMoment0.equals((java.lang.Object) doubleArray95);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4050.0d + "'", double44 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4050.0d + "'", double45 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 200.0d + "'", double67 == 200.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.5d + "'", double83 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 74.0d + "'", double94 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double98));
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test09102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09102");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance28.clear();
        variance28.clear();
        double double31 = variance28.getResult();
        boolean boolean32 = variance28.isBiasCorrected();
        double double33 = variance28.getResult();
        java.lang.Object obj34 = null;
        boolean boolean35 = variance28.equals(obj34);
        variance28.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5d + "'", double31 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09103");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.increment((double) 1.0f);
        secondMoment1.increment((-1.0d));
        secondMoment1.clear();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance24.clear();
        boolean boolean26 = variance24.isBiasCorrected();
        variance24.increment(1.4517874083333334E7d);
        variance24.clear();
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double[] doubleArray45 = new double[] { 10, (byte) 100 };
        double double46 = secondMoment33.evaluate(doubleArray45);
        long long47 = secondMoment33.getN();
        secondMoment33.clear();
        double double49 = secondMoment33.getResult();
        secondMoment33.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double double62 = variance51.evaluate(doubleArray58);
        variance51.setBiasCorrected(false);
        variance51.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        secondMoment66.increment((double) (short) 0);
        double double71 = secondMoment66.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        double[] doubleArray78 = new double[] { (-1L), 0, 10L };
        secondMoment72.incrementAll(doubleArray78, 0, 0);
        double double82 = secondMoment66.evaluate(doubleArray78);
        double double83 = variance51.evaluate(doubleArray78);
        double double84 = variance24.evaluate(doubleArray78);
        long long85 = variance24.getN();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4050.0d + "'", double46 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 2L + "'", long47 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 37.0d + "'", double62 == 37.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.5d + "'", double71 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 74.0d + "'", double82 == 74.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 24.666666666666668d + "'", double83 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 24.666666666666668d + "'", double84 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 0L + "'", long85 == 0L);
    }

    @Test
    public void test09104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09104");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        double double16 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment((double) ' ');
        double double23 = secondMoment20.getResult();
        double double24 = secondMoment20.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        double double49 = variance27.evaluate(doubleArray45, (int) (byte) 0, 0);
        variance26.incrementAll(doubleArray45);
        double double51 = secondMoment20.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double[] doubleArray65 = new double[] { 10, (byte) 100 };
        double double66 = secondMoment53.evaluate(doubleArray65);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment68);
        secondMoment68.increment((double) (short) -1);
        secondMoment68.clear();
        secondMoment68.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment68);
        boolean boolean78 = secondMoment53.equals((java.lang.Object) secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment68);
        secondMoment68.clear();
        boolean boolean81 = secondMoment20.equals((java.lang.Object) secondMoment68);
        double double82 = secondMoment20.getResult();
        secondMoment20.clear();
        boolean boolean84 = secondMoment1.equals((java.lang.Object) secondMoment20);
        secondMoment20.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test09105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09105");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        double double15 = secondMoment0.getResult();
        secondMoment0.increment((double) ' ');
        secondMoment0.clear();
        double double19 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test09106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09106");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance16.increment(0.0d);
        long long19 = variance16.getN();
        variance16.increment((double) (byte) -1);
        variance16.clear();
        boolean boolean23 = variance16.isBiasCorrected();
        long long24 = variance16.getN();
        double double25 = variance16.getResult();
        variance16.increment(3.4406572666666664E7d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2025.0d + "'", double25 == 2025.0d);
    }

    @Test
    public void test09107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09107");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        long long6 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        secondMoment8.clear();
        secondMoment8.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        double[] doubleArray38 = new double[] { 10, (byte) 100 };
        double double39 = secondMoment26.evaluate(doubleArray38);
        double double40 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        long long42 = secondMoment26.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        secondMoment26.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment46);
        long long62 = secondMoment46.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment((double) ' ');
        secondMoment63.increment((double) (-1.0f));
        secondMoment63.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment69);
        long long80 = variance79.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment81.increment(1.0d);
        double[] doubleArray87 = new double[] { (-1L), 0, 10L };
        secondMoment81.incrementAll(doubleArray87, 0, 0);
        double double92 = variance79.evaluate(doubleArray87, (double) (short) -1);
        double double93 = secondMoment63.evaluate(doubleArray87);
        double double94 = secondMoment46.evaluate(doubleArray87);
        double double95 = secondMoment26.evaluate(doubleArray87);
        double double96 = secondMoment8.evaluate(doubleArray87);
        double double97 = variance7.evaluate(doubleArray87);
        double double98 = variance7.getResult();
        boolean boolean99 = variance7.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4050.0d + "'", double40 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 2L + "'", long42 == 2L);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 2L + "'", long62 == 2L);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1L + "'", long80 == 1L);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 37.0d + "'", double92 == 37.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 74.0d + "'", double93 == 74.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 74.0d + "'", double94 == 74.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 74.0d + "'", double95 == 74.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 74.0d + "'", double96 == 74.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 37.0d + "'", double97 == 37.0d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.5d + "'", double98 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test09108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09108");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        boolean boolean6 = variance1.isBiasCorrected();
        double double7 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double[] doubleArray21 = new double[] { 10, (byte) 100 };
        double double22 = secondMoment9.evaluate(doubleArray21);
        double double23 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment9);
        secondMoment9.increment(24.666666666666668d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        secondMoment30.increment((double) (short) 0);
        double double35 = secondMoment30.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double46 = secondMoment30.evaluate(doubleArray42);
        double[] doubleArray47 = new double[] {};
        secondMoment30.incrementAll(doubleArray47);
        double double49 = secondMoment27.evaluate(doubleArray47);
        secondMoment9.incrementAll(doubleArray47);
        double double52 = variance1.evaluate(doubleArray47, 40.5d);
        double double53 = variance1.getResult();
        long long54 = variance1.getN();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.5d + "'", double35 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 74.0d + "'", double46 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
    }

    @Test
    public void test09109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09109");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double20 = variance8.evaluate(doubleArray15, (double) 1L);
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double[] doubleArray34 = new double[] { 10, (byte) 100 };
        double double35 = secondMoment22.evaluate(doubleArray34);
        secondMoment22.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        secondMoment37.increment((double) (short) 0);
        double double42 = secondMoment37.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        secondMoment43.increment((double) (short) 0);
        double double48 = secondMoment43.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        double double59 = secondMoment43.evaluate(doubleArray55);
        double[] doubleArray60 = new double[] {};
        secondMoment43.incrementAll(doubleArray60);
        secondMoment37.incrementAll(doubleArray60);
        secondMoment37.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        double[] doubleArray72 = new double[] { (-1L), 0, 10L };
        secondMoment66.incrementAll(doubleArray72, 0, 0);
        double[] doubleArray78 = new double[] { 10, (byte) 100 };
        double double79 = secondMoment66.evaluate(doubleArray78);
        double double80 = variance65.evaluate(doubleArray78);
        double double81 = secondMoment22.evaluate(doubleArray78);
        double double84 = variance8.evaluate(doubleArray78, (int) (byte) 0, (int) (byte) 1);
        double double85 = variance8.getResult();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 24.666666666666668d + "'", double20 == 24.666666666666668d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4050.0d + "'", double35 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5d + "'", double42 == 0.5d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.5d + "'", double48 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 74.0d + "'", double59 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4050.0d + "'", double79 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 4050.0d + "'", double80 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 272.25d + "'", double85 == 272.25d);
    }

    @Test
    public void test09110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09110");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        secondMoment15.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment15);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment15);
        secondMoment15.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment(4402.666666666667d);
        secondMoment15.clear();
        secondMoment15.increment((double) 1.0f);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test09111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09111");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long11 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double23 = variance10.evaluate(doubleArray18, (double) (short) -1);
        double double24 = variance10.getResult();
        double double25 = variance10.getResult();
        variance10.clear();
        double double27 = variance10.getResult();
        variance10.increment(7.703419152040815E7d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 37.0d + "'", double23 == 37.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test09112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09112");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        secondMoment12.increment((double) (short) 0);
        double double17 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double28 = secondMoment12.evaluate(doubleArray24);
        double[] doubleArray29 = new double[] {};
        secondMoment12.incrementAll(doubleArray29);
        secondMoment6.incrementAll(doubleArray29);
        secondMoment6.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double[] doubleArray47 = new double[] { 10, (byte) 100 };
        double double48 = secondMoment35.evaluate(doubleArray47);
        double double49 = variance34.evaluate(doubleArray47);
        double double50 = secondMoment1.evaluate(doubleArray47);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        secondMoment51.increment((double) (short) 0);
        double double56 = secondMoment51.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        secondMoment57.increment((double) (short) 0);
        double double62 = secondMoment57.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        double double73 = secondMoment57.evaluate(doubleArray69);
        double[] doubleArray74 = new double[] {};
        secondMoment57.incrementAll(doubleArray74);
        secondMoment51.incrementAll(doubleArray74);
        double double77 = secondMoment1.evaluate(doubleArray74);
        long long78 = secondMoment1.getN();
        secondMoment1.clear();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        boolean boolean82 = variance81.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.5d + "'", double17 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 74.0d + "'", double28 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.5d + "'", double56 == 0.5d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.5d + "'", double62 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 74.0d + "'", double73 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4050.0d + "'", double77 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 2L + "'", long78 == 2L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test09113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09113");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        double double4 = secondMoment1.getResult();
        double double5 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        double double14 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        double double25 = secondMoment9.evaluate(doubleArray21);
        double[] doubleArray26 = new double[] {};
        secondMoment9.incrementAll(doubleArray26);
        double double30 = variance8.evaluate(doubleArray26, (int) (byte) 0, 0);
        variance7.incrementAll(doubleArray26);
        double double32 = secondMoment1.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long34 = variance33.getN();
        variance33.clear();
        long long36 = variance33.getN();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5d + "'", double14 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 74.0d + "'", double25 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
    }

    @Test
    public void test09114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09114");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        long long16 = secondMoment1.getN();
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance18.clear();
        variance18.clear();
        variance18.clear();
        variance18.increment(7089.2d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
    }

    @Test
    public void test09115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09115");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        secondMoment1.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long11 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        double[] doubleArray25 = new double[] { 10, (byte) 100 };
        double double26 = secondMoment13.evaluate(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        secondMoment28.increment((double) (short) -1);
        secondMoment28.clear();
        secondMoment28.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment28);
        boolean boolean38 = secondMoment13.equals((java.lang.Object) secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        double double46 = secondMoment41.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double double57 = secondMoment41.evaluate(doubleArray53);
        double[] doubleArray58 = new double[] {};
        secondMoment41.incrementAll(doubleArray58);
        double double62 = variance40.evaluate(doubleArray58, (int) (byte) 0, 0);
        long long63 = variance40.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        secondMoment64.increment((double) (short) 0);
        double double69 = secondMoment64.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double double80 = secondMoment64.evaluate(doubleArray76);
        variance40.incrementAll(doubleArray76);
        double double83 = variance39.evaluate(doubleArray76, (double) '#');
        double double84 = variance10.evaluate(doubleArray76);
        double double85 = variance8.evaluate(doubleArray76);
        variance8.clear();
        double double87 = variance8.getResult();
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4050.0d + "'", double26 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.5d + "'", double46 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 74.0d + "'", double57 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5d + "'", double69 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 74.0d + "'", double80 == 74.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 24.666666666666668d + "'", double83 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 37.0d + "'", double84 == 37.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 37.0d + "'", double85 == 37.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1801.0d + "'", double87 == 1801.0d);
    }

    @Test
    public void test09116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09116");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance11.increment(2.880385675555556E7d);
        variance11.increment((double) 0);
        long long16 = variance11.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        variance11.incrementAll(doubleArray23);
        double double28 = variance11.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test09117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09117");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) 0);
        secondMoment0.clear();
        double double10 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        secondMoment12.increment((double) (byte) 0);
        secondMoment12.clear();
        secondMoment12.increment(272.25d);
        boolean boolean20 = secondMoment0.equals((java.lang.Object) 272.25d);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        secondMoment0.increment(1.2071146294775038E14d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09118");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) '4');
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double7 = variance6.getResult();
        variance6.clear();
        variance6.setBiasCorrected(true);
        variance6.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        secondMoment14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        secondMoment14.clear();
        secondMoment14.clear();
        double double22 = secondMoment14.getResult();
        long long23 = secondMoment14.getN();
        secondMoment14.increment(5.380202045661305E14d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        secondMoment26.clear();
        secondMoment26.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment((double) ' ');
        double double35 = secondMoment32.getResult();
        double double36 = secondMoment32.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double[] doubleArray49 = new double[] { 10, (byte) 100 };
        double double50 = secondMoment37.evaluate(doubleArray49);
        double double51 = secondMoment32.evaluate(doubleArray49);
        double double52 = secondMoment26.evaluate(doubleArray49);
        double double53 = secondMoment14.evaluate(doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            variance6.incrementAll(doubleArray49, (int) '4', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4050.0d + "'", double53 == 4050.0d);
    }

    @Test
    public void test09119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09119");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) '4');
        secondMoment1.increment((double) 100);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        secondMoment11.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        secondMoment26.increment((double) (short) 0);
        double double31 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        secondMoment32.increment((double) (short) 0);
        double double37 = secondMoment32.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        double double48 = secondMoment32.evaluate(doubleArray44);
        double[] doubleArray49 = new double[] {};
        secondMoment32.incrementAll(doubleArray49);
        secondMoment26.incrementAll(doubleArray49);
        secondMoment26.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double[] doubleArray67 = new double[] { 10, (byte) 100 };
        double double68 = secondMoment55.evaluate(doubleArray67);
        double double69 = variance54.evaluate(doubleArray67);
        double double70 = secondMoment11.evaluate(doubleArray67);
        double double71 = secondMoment1.evaluate(doubleArray67);
        double double72 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance73.clear();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5d + "'", double31 == 0.5d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.5d + "'", double37 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4050.0d + "'", double68 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4050.0d + "'", double69 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4050.0d + "'", double70 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4050.0d + "'", double71 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4050.0d + "'", double72 == 4050.0d);
    }

    @Test
    public void test09120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09120");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.increment((double) 100);
        long long8 = secondMoment0.getN();
        java.lang.Class<?> wildcardClass9 = secondMoment0.getClass();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 3L + "'", long8 == 3L);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test09121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09121");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance10.evaluate(doubleArray31);
        long long35 = variance10.getN();
        boolean boolean36 = variance10.isBiasCorrected();
        variance10.clear();
        variance10.increment(0.0d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test09122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09122");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        long long35 = variance34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double47 = variance34.evaluate(doubleArray42, (double) (short) -1);
        double double48 = secondMoment18.evaluate(doubleArray42);
        double double49 = secondMoment1.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance51.increment((double) (byte) -1);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double[] doubleArray68 = new double[] { 10, (byte) 100 };
        double double69 = secondMoment56.evaluate(doubleArray68);
        double double70 = secondMoment56.getResult();
        secondMoment56.increment((double) (short) -1);
        double double73 = secondMoment56.getResult();
        secondMoment56.increment((double) 1L);
        secondMoment56.increment((double) (byte) 100);
        double double78 = secondMoment56.getResult();
        long long79 = secondMoment56.getN();
        boolean boolean80 = variance51.equals((java.lang.Object) secondMoment56);
        double double81 = secondMoment56.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4050.0d + "'", double69 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4050.0d + "'", double70 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 6140.666666666667d + "'", double73 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 11282.0d + "'", double78 == 11282.0d);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 5L + "'", long79 == 5L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 11282.0d + "'", double81 == 11282.0d);
    }

    @Test
    public void test09123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09123");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        variance1.clear();
        boolean boolean4 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        variance5.clear();
        boolean boolean7 = variance1.equals((java.lang.Object) variance5);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        secondMoment8.clear();
        boolean boolean23 = variance5.equals((java.lang.Object) secondMoment8);
        variance5.increment(7836.75d);
        variance5.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test09124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09124");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        secondMoment0.increment(0.0d);
        secondMoment0.increment(688.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        long long25 = secondMoment11.getN();
        secondMoment11.clear();
        double double27 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        secondMoment29.increment((double) (short) 0);
        double double34 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        secondMoment35.increment((double) (short) 0);
        double double40 = secondMoment35.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        double double51 = secondMoment35.evaluate(doubleArray47);
        double[] doubleArray52 = new double[] {};
        secondMoment35.incrementAll(doubleArray52);
        secondMoment29.incrementAll(doubleArray52);
        secondMoment29.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double[] doubleArray70 = new double[] { 10, (byte) 100 };
        double double71 = secondMoment58.evaluate(doubleArray70);
        double double72 = variance57.evaluate(doubleArray70);
        double double73 = secondMoment11.evaluate(doubleArray70);
        double double74 = secondMoment0.evaluate(doubleArray70);
        secondMoment0.clear();
        double double76 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5d + "'", double34 == 0.5d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5d + "'", double40 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 74.0d + "'", double51 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4050.0d + "'", double71 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4050.0d + "'", double72 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4050.0d + "'", double73 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4050.0d + "'", double74 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
    }

    @Test
    public void test09125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09125");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double double10 = secondMoment0.getResult();
        double double11 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double35 = variance13.evaluate(doubleArray31, (int) (byte) 0, 0);
        long long36 = variance13.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        secondMoment37.increment((double) (short) 0);
        double double42 = secondMoment37.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        secondMoment43.incrementAll(doubleArray49, 0, 0);
        double double53 = secondMoment37.evaluate(doubleArray49);
        variance13.incrementAll(doubleArray49);
        long long55 = variance13.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        secondMoment59.increment((double) (short) 0);
        double double64 = secondMoment59.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        double double75 = secondMoment59.evaluate(doubleArray71);
        double[] doubleArray76 = new double[] {};
        secondMoment59.incrementAll(doubleArray76);
        double double78 = secondMoment56.evaluate(doubleArray76);
        variance13.incrementAll(doubleArray76);
        variance13.clear();
        variance13.clear();
        variance13.clear();
        double double83 = variance13.getResult();
        variance13.clear();
        boolean boolean85 = secondMoment0.equals((java.lang.Object) variance13);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5d + "'", double42 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 74.0d + "'", double53 == 74.0d);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 3L + "'", long55 == 3L);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.5d + "'", double64 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 74.0d + "'", double75 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test09126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09126");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        double double6 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance7.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) (short) -1);
        secondMoment10.clear();
        secondMoment10.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        variance19.incrementAll(doubleArray26);
        variance19.clear();
        variance19.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        secondMoment34.increment((double) (short) 0);
        double double39 = secondMoment34.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        double double45 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double double56 = secondMoment40.evaluate(doubleArray52);
        double[] doubleArray57 = new double[] {};
        secondMoment40.incrementAll(doubleArray57);
        secondMoment34.incrementAll(doubleArray57);
        secondMoment34.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        double[] doubleArray75 = new double[] { 10, (byte) 100 };
        double double76 = secondMoment63.evaluate(doubleArray75);
        double double77 = variance62.evaluate(doubleArray75);
        double double79 = variance19.evaluate(doubleArray75, 100.0d);
        boolean boolean80 = variance7.equals((java.lang.Object) doubleArray75);
        boolean boolean81 = variance7.isBiasCorrected();
        double double82 = variance7.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.5d + "'", double39 == 0.5d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 74.0d + "'", double56 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4050.0d + "'", double76 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4050.0d + "'", double77 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4050.0d + "'", double79 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
    }

    @Test
    public void test09127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09127");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) '4');
        double double7 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        secondMoment8.incrementAll(doubleArray31);
        secondMoment8.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double[] doubleArray49 = new double[] { 10, (byte) 100 };
        double double50 = secondMoment37.evaluate(doubleArray49);
        double double51 = variance36.evaluate(doubleArray49);
        double double52 = secondMoment1.evaluate(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double54 = secondMoment1.getResult();
        secondMoment1.increment(331.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance57.setBiasCorrected(false);
        java.lang.Class<?> wildcardClass60 = variance57.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4050.0d + "'", double54 == 4050.0d);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test09128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09128");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance8.increment(4050.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        secondMoment12.increment((double) (short) -1);
        long long18 = secondMoment12.getN();
        double double19 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        secondMoment21.incrementAll(doubleArray44);
        secondMoment21.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double[] doubleArray62 = new double[] { 10, (byte) 100 };
        double double63 = secondMoment50.evaluate(doubleArray62);
        double double64 = variance49.evaluate(doubleArray62);
        long long65 = variance49.getN();
        double double66 = variance49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        double[] doubleArray73 = new double[] { (-1L), 0, 10L };
        secondMoment67.incrementAll(doubleArray73, 0, 0);
        double[] doubleArray79 = new double[] { 10, (byte) 100 };
        double double80 = secondMoment67.evaluate(doubleArray79);
        double double81 = secondMoment67.getResult();
        secondMoment67.increment((double) (short) -1);
        double[] doubleArray85 = new double[] { (short) 1 };
        secondMoment67.incrementAll(doubleArray85);
        double double87 = variance49.evaluate(doubleArray85);
        double double88 = variance20.evaluate(doubleArray85);
        double double89 = variance8.evaluate(doubleArray85);
        variance8.clear();
        boolean boolean91 = variance8.isBiasCorrected();
        variance8.increment(89.2d);
        variance8.increment(3341.53125d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 544.5d + "'", double19 == 544.5d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4050.0d + "'", double63 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 3L + "'", long65 == 3L);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 4050.0d + "'", double80 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test09129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09129");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        boolean boolean11 = variance9.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment((double) ' ');
        secondMoment23.increment((double) (-1.0f));
        secondMoment23.clear();
        boolean boolean29 = variance22.equals((java.lang.Object) secondMoment23);
        double double30 = variance22.getResult();
        variance22.increment(3602.0d);
        long long33 = variance22.getN();
        boolean boolean34 = variance22.isBiasCorrected();
        double double35 = variance22.getResult();
        boolean boolean36 = variance22.isBiasCorrected();
        boolean boolean37 = variance9.equals((java.lang.Object) variance22);
        boolean boolean38 = variance22.isBiasCorrected();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test09130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09130");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (short) 10);
        secondMoment0.increment((double) 2L);
        double double7 = secondMoment0.getResult();
        double double8 = secondMoment0.getResult();
        double double9 = secondMoment0.getResult();
        secondMoment0.increment(7089.2d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        secondMoment12.increment((double) (-1.0f));
        secondMoment12.clear();
        double double18 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment((double) ' ');
        secondMoment21.increment((double) (short) 10);
        secondMoment21.increment((double) 6L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        variance38.increment((double) (short) 100);
        variance38.clear();
        variance38.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double[] doubleArray57 = new double[] { 10, (byte) 100 };
        double double58 = secondMoment45.evaluate(doubleArray57);
        double double59 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        secondMoment62.increment((double) (short) 0);
        double double67 = secondMoment62.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double double78 = secondMoment62.evaluate(doubleArray74);
        double[] doubleArray79 = new double[] {};
        secondMoment62.incrementAll(doubleArray79);
        double double83 = variance61.evaluate(doubleArray79, (int) (byte) 0, 0);
        double double84 = variance60.evaluate(doubleArray79);
        variance38.incrementAll(doubleArray79);
        double double86 = secondMoment21.evaluate(doubleArray79);
        double double87 = secondMoment12.evaluate(doubleArray79);
        // The following exception was thrown during execution in test generation
        try {
            double double90 = secondMoment0.evaluate(doubleArray79, (int) (byte) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 482.66666666666663d + "'", double7 == 482.66666666666663d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 482.66666666666663d + "'", double8 == 482.66666666666663d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 482.66666666666663d + "'", double9 == 482.66666666666663d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.5d + "'", double67 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 74.0d + "'", double78 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 392.0d + "'", double86 == 392.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
    }

    @Test
    public void test09131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09131");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long8 = variance7.getN();
        variance7.clear();
        double double10 = variance7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        secondMoment12.increment((double) (short) -1);
        long long18 = secondMoment12.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        double double21 = variance20.getResult();
        double double22 = variance20.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long25 = variance24.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        secondMoment26.increment((double) (short) 0);
        double double31 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        secondMoment32.incrementAll(doubleArray38, 0, 0);
        double double42 = secondMoment26.evaluate(doubleArray38);
        double double44 = variance24.evaluate(doubleArray38, (double) 4L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        secondMoment51.increment((double) (short) 0);
        double double56 = secondMoment51.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        secondMoment57.incrementAll(doubleArray63, 0, 0);
        double double67 = secondMoment51.evaluate(doubleArray63);
        double[] doubleArray68 = new double[] {};
        secondMoment51.incrementAll(doubleArray68);
        secondMoment45.incrementAll(doubleArray68);
        secondMoment45.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double[] doubleArray86 = new double[] { 10, (byte) 100 };
        double double87 = secondMoment74.evaluate(doubleArray86);
        double double88 = variance73.evaluate(doubleArray86);
        double double89 = variance24.evaluate(doubleArray86);
        variance20.incrementAll(doubleArray86);
        double double91 = variance7.evaluate(doubleArray86);
        variance7.increment(37.5d);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.25d + "'", double10 == 0.25d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 544.5d + "'", double21 == 544.5d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 544.5d + "'", double22 == 544.5d);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5d + "'", double31 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 74.0d + "'", double42 == 74.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 37.0d + "'", double44 == 37.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.5d + "'", double56 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 74.0d + "'", double67 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4050.0d + "'", double87 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 4050.0d + "'", double88 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4050.0d + "'", double89 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2025.0d + "'", double91 == 2025.0d);
    }

    @Test
    public void test09132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09132");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        secondMoment0.incrementAll(doubleArray17, 0, (int) (short) 1);
        secondMoment0.clear();
        double double25 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment((double) 1L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance29.clear();
        boolean boolean31 = variance29.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test09133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09133");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long11 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double23 = variance10.evaluate(doubleArray18, (double) (short) -1);
        double double24 = variance10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        secondMoment25.increment((double) (short) 0);
        double double30 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        secondMoment31.increment((double) (short) 0);
        double double36 = secondMoment31.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double double47 = secondMoment31.evaluate(doubleArray43);
        double[] doubleArray48 = new double[] {};
        secondMoment31.incrementAll(doubleArray48);
        secondMoment25.incrementAll(doubleArray48);
        secondMoment25.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        double[] doubleArray60 = new double[] { (-1L), 0, 10L };
        secondMoment54.incrementAll(doubleArray60, 0, 0);
        double[] doubleArray66 = new double[] { 10, (byte) 100 };
        double double67 = secondMoment54.evaluate(doubleArray66);
        double double68 = variance53.evaluate(doubleArray66);
        double double71 = variance10.evaluate(doubleArray66, (int) (short) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment72);
        double[] doubleArray81 = new double[] { 0L, (byte) 1, 6140.666666666667d, 544.5d, (byte) 100 };
        double double82 = secondMoment72.evaluate(doubleArray81);
        double double83 = variance10.evaluate(doubleArray81);
        variance10.setBiasCorrected(false);
        double double86 = variance10.getResult();
        variance10.increment((double) (byte) 10);
        variance10.clear();
        variance10.increment(3.889038153298707E13d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 37.0d + "'", double23 == 37.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5d + "'", double30 == 0.5d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.5d + "'", double36 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 74.0d + "'", double47 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4050.0d + "'", double68 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 1.0, 6140.666666666667, 544.5, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2.880385675555556E7d + "'", double82 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 7200964.18888889d + "'", double83 == 7200964.18888889d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }

    @Test
    public void test09134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09134");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        long long35 = variance34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double47 = variance34.evaluate(doubleArray42, (double) (short) -1);
        double double48 = secondMoment18.evaluate(doubleArray42);
        double double49 = secondMoment1.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long53 = variance52.getN();
        double double54 = variance52.getResult();
        variance52.increment((double) (short) 100);
        variance52.increment((double) 3L);
        variance52.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        secondMoment60.increment((double) (short) 0);
        double double65 = secondMoment60.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        double[] doubleArray72 = new double[] { (-1L), 0, 10L };
        secondMoment66.incrementAll(doubleArray72, 0, 0);
        double double76 = secondMoment60.evaluate(doubleArray72);
        double[] doubleArray77 = new double[] {};
        secondMoment60.incrementAll(doubleArray77);
        variance52.incrementAll(doubleArray77);
        secondMoment1.incrementAll(doubleArray77);
        secondMoment1.increment(0.0d);
        long long83 = secondMoment1.getN();
        secondMoment1.increment(1.218679475E7d);
        secondMoment1.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.5d + "'", double65 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 74.0d + "'", double76 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 4L + "'", long83 == 4L);
    }

    @Test
    public void test09135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09135");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double[] doubleArray41 = new double[] { 10, (byte) 100 };
        double double42 = secondMoment29.evaluate(doubleArray41);
        double double43 = variance28.evaluate(doubleArray41);
        long long44 = variance28.getN();
        double double45 = variance28.getResult();
        variance28.setBiasCorrected(true);
        boolean boolean48 = variance28.isBiasCorrected();
        variance28.increment(1.0932300666666666E7d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4050.0d + "'", double42 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4050.0d + "'", double43 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 3L + "'", long44 == 3L);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test09136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09136");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double20 = variance8.evaluate(doubleArray15, (double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        double[] doubleArray36 = new double[] { 10, (byte) 100 };
        double double37 = secondMoment24.evaluate(doubleArray36);
        double double38 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment24);
        long long40 = secondMoment24.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        variance43.increment((double) 10.0f);
        boolean boolean46 = variance8.equals((java.lang.Object) 10.0f);
        variance8.increment(80.75d);
        double double49 = variance8.getResult();
        variance8.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 24.666666666666668d + "'", double20 == 24.666666666666668d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4050.0d + "'", double37 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 2L + "'", long40 == 2L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 272.25d + "'", double49 == 272.25d);
    }

    @Test
    public void test09137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09137");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double[] doubleArray31 = new double[] { 10, (byte) 100 };
        double double32 = secondMoment19.evaluate(doubleArray31);
        double double33 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        long long35 = secondMoment19.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        secondMoment37.increment((double) (short) -1);
        secondMoment37.clear();
        secondMoment37.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        variance46.incrementAll(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment58);
        secondMoment58.increment((double) (short) -1);
        secondMoment58.clear();
        secondMoment58.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        secondMoment68.increment((double) (short) 0);
        double double73 = secondMoment68.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double double84 = secondMoment68.evaluate(doubleArray80);
        double double85 = secondMoment58.evaluate(doubleArray80);
        double double86 = variance46.evaluate(doubleArray80);
        variance36.incrementAll(doubleArray80);
        secondMoment0.incrementAll(doubleArray80);
        double double89 = secondMoment0.getResult();
        double double90 = secondMoment0.getResult();
        long long91 = secondMoment0.getN();
        double double92 = secondMoment0.getResult();
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 2L + "'", long35 == 2L);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5d + "'", double73 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 37.0d + "'", double86 == 37.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 7881.333333333333d + "'", double89 == 7881.333333333333d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 7881.333333333333d + "'", double90 == 7881.333333333333d);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 6L + "'", long91 == 6L);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 7881.333333333333d + "'", double92 == 7881.333333333333d);
    }

    @Test
    public void test09138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09138");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        double double9 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long12 = secondMoment2.getN();
        secondMoment2.increment(482.66666666666663d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        long long20 = secondMoment15.getN();
        secondMoment15.increment(0.0d);
        secondMoment15.increment((double) 0);
        secondMoment15.clear();
        double double26 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        secondMoment27.increment((double) (short) -1);
        secondMoment27.clear();
        secondMoment27.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        double double37 = secondMoment27.getResult();
        long long38 = secondMoment27.getN();
        secondMoment27.increment(7881.333333333333d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment((double) ' ');
        secondMoment53.increment((double) (-1.0f));
        secondMoment53.clear();
        boolean boolean59 = variance52.equals((java.lang.Object) secondMoment53);
        double double60 = variance52.getResult();
        variance52.increment(3602.0d);
        double double63 = variance52.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long66 = variance65.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        secondMoment67.increment((double) (short) 0);
        double double72 = secondMoment67.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        double[] doubleArray79 = new double[] { (-1L), 0, 10L };
        secondMoment73.incrementAll(doubleArray79, 0, 0);
        double double83 = secondMoment67.evaluate(doubleArray79);
        double double85 = variance65.evaluate(doubleArray79, (double) 4L);
        double double87 = variance52.evaluate(doubleArray79, 8.963593924513633E13d);
        double double90 = variance41.evaluate(doubleArray79, (int) (short) 0, (int) (short) 0);
        secondMoment15.incrementAll(doubleArray79);
        double double92 = secondMoment2.evaluate(doubleArray79);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 544.5d + "'", double9 == 544.5d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2L + "'", long20 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.5d + "'", double72 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 74.0d + "'", double83 == 74.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 37.0d + "'", double85 == 37.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 74.0d + "'", double92 == 74.0d);
    }

    @Test
    public void test09139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09139");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        secondMoment0.increment(74.0d);
        double double7 = secondMoment0.getResult();
        double double8 = secondMoment0.getResult();
        secondMoment0.increment(7077.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.FirstMoment firstMoment12 = new org.apache.commons.math.stat.descriptive.moment.FirstMoment();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.increment((double) (short) 0);
        double double18 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        double double24 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double double35 = secondMoment19.evaluate(doubleArray31);
        double[] doubleArray36 = new double[] {};
        secondMoment19.incrementAll(doubleArray36);
        secondMoment13.incrementAll(doubleArray36);
        secondMoment13.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        secondMoment13.increment(0.5d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        long long55 = variance54.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double double67 = variance54.evaluate(doubleArray62, (double) (short) -1);
        double double70 = secondMoment13.evaluate(doubleArray62, (int) (byte) 1, (int) (byte) 1);
        firstMoment12.incrementAll(doubleArray62);
        double double72 = variance11.evaluate(doubleArray62);
        variance11.clear();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3602.0d + "'", double7 == 3602.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3602.0d + "'", double8 == 3602.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5d + "'", double24 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 74.0d + "'", double35 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 37.0d + "'", double67 == 37.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 37.0d + "'", double72 == 37.0d);
    }

    @Test
    public void test09140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09140");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        secondMoment1.clear();
        double double18 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(5.5310751405070744E14d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        secondMoment24.increment((double) (short) -1);
        secondMoment24.clear();
        secondMoment24.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        secondMoment34.increment((double) (short) 0);
        double double39 = secondMoment34.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        secondMoment40.incrementAll(doubleArray46, 0, 0);
        double double50 = secondMoment34.evaluate(doubleArray46);
        double double51 = secondMoment24.evaluate(doubleArray46);
        double double52 = secondMoment24.getResult();
        secondMoment24.increment(4034.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        secondMoment57.incrementAll(doubleArray63, 0, 0);
        double[] doubleArray69 = new double[] { 10, (byte) 100 };
        double double70 = secondMoment57.evaluate(doubleArray69);
        double double71 = secondMoment57.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        secondMoment73.increment((double) (short) 0);
        double double78 = secondMoment73.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment79.increment(1.0d);
        double[] doubleArray85 = new double[] { (-1L), 0, 10L };
        secondMoment79.incrementAll(doubleArray85, 0, 0);
        double double89 = secondMoment73.evaluate(doubleArray85);
        double[] doubleArray90 = new double[] {};
        secondMoment73.incrementAll(doubleArray90);
        variance72.incrementAll(doubleArray90);
        boolean boolean93 = variance55.equals((java.lang.Object) doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            double double96 = variance23.evaluate(doubleArray90, (int) (byte) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.5d + "'", double39 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 74.0d + "'", double50 == 74.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 74.0d + "'", double51 == 74.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 74.0d + "'", double52 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4050.0d + "'", double70 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4050.0d + "'", double71 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.5d + "'", double78 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test09141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09141");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance19.increment((double) 0.0f);
        double double22 = variance19.getResult();
        variance19.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        secondMoment25.increment((double) (short) 0);
        double double30 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        secondMoment31.increment((double) (short) 0);
        double double36 = secondMoment31.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double double47 = secondMoment31.evaluate(doubleArray43);
        double[] doubleArray48 = new double[] {};
        secondMoment31.incrementAll(doubleArray48);
        secondMoment25.incrementAll(doubleArray48);
        secondMoment25.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        double[] doubleArray60 = new double[] { (-1L), 0, 10L };
        secondMoment54.incrementAll(doubleArray60, 0, 0);
        double[] doubleArray66 = new double[] { 10, (byte) 100 };
        double double67 = secondMoment54.evaluate(doubleArray66);
        double double68 = variance53.evaluate(doubleArray66);
        long long69 = variance53.getN();
        double double70 = variance53.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        double[] doubleArray77 = new double[] { (-1L), 0, 10L };
        secondMoment71.incrementAll(doubleArray77, 0, 0);
        double[] doubleArray83 = new double[] { 10, (byte) 100 };
        double double84 = secondMoment71.evaluate(doubleArray83);
        double double85 = secondMoment71.getResult();
        secondMoment71.increment((double) (short) -1);
        double[] doubleArray89 = new double[] { (short) 1 };
        secondMoment71.incrementAll(doubleArray89);
        double double91 = variance53.evaluate(doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            double double94 = variance19.evaluate(doubleArray89, (int) (short) -1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5d + "'", double30 == 0.5d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.5d + "'", double36 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 74.0d + "'", double47 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4050.0d + "'", double68 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 3L + "'", long69 == 3L);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
    }

    @Test
    public void test09142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09142");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) -1);
        double double18 = secondMoment1.getResult();
        double double19 = secondMoment1.getResult();
        long long20 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        double double22 = secondMoment1.getResult();
        java.lang.Class<?> wildcardClass23 = secondMoment1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 6140.666666666667d + "'", double18 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 6140.666666666667d + "'", double19 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 3L + "'", long20 == 3L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 6140.666666666667d + "'", double22 == 6140.666666666667d);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test09143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09143");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        double double16 = secondMoment0.evaluate(doubleArray12);
        long long17 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double19 = secondMoment0.getResult();
        long long20 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 74.0d + "'", double16 == 74.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 3L + "'", long17 == 3L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 74.0d + "'", double19 == 74.0d);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 3L + "'", long20 == 3L);
    }

    @Test
    public void test09144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09144");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance19.increment((double) 0.0f);
        double double22 = variance19.getResult();
        double double23 = variance19.getResult();
        long long24 = variance19.getN();
        boolean boolean25 = variance19.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test09145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09145");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        secondMoment16.increment((double) (short) 0);
        double double21 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        secondMoment22.increment((double) (short) 0);
        double double27 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double38 = secondMoment22.evaluate(doubleArray34);
        double[] doubleArray39 = new double[] {};
        secondMoment22.incrementAll(doubleArray39);
        secondMoment16.incrementAll(doubleArray39);
        secondMoment16.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double[] doubleArray57 = new double[] { 10, (byte) 100 };
        double double58 = secondMoment45.evaluate(doubleArray57);
        double double59 = variance44.evaluate(doubleArray57);
        double double60 = secondMoment1.evaluate(doubleArray57);
        secondMoment1.clear();
        double double62 = secondMoment1.getResult();
        double double63 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long65 = secondMoment1.getN();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.5d + "'", double21 == 0.5d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5d + "'", double27 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 74.0d + "'", double38 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
    }

    @Test
    public void test09146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09146");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        secondMoment1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        boolean boolean11 = variance10.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        secondMoment12.increment((double) (short) -1);
        secondMoment12.clear();
        double double19 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        secondMoment20.increment((double) (short) 0);
        double double25 = secondMoment20.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        double double36 = secondMoment20.evaluate(doubleArray32);
        secondMoment12.incrementAll(doubleArray32, 0, (int) (short) 0);
        secondMoment12.increment((double) (-1.0f));
        secondMoment12.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        double double55 = variance54.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        secondMoment57.increment((double) (short) 0);
        long long62 = secondMoment57.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment57);
        long long64 = variance63.getN();
        variance63.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long68 = variance67.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        secondMoment69.increment((double) (short) 0);
        double double74 = secondMoment69.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double double85 = secondMoment69.evaluate(doubleArray81);
        variance67.incrementAll(doubleArray81);
        double double88 = variance63.evaluate(doubleArray81, (double) (short) -1);
        double double89 = variance54.evaluate(doubleArray81);
        double double91 = variance43.evaluate(doubleArray81, 5.5310751405070744E14d);
        double double94 = variance10.evaluate(doubleArray81, 0, (int) (byte) 0);
        variance10.clear();
        variance10.setBiasCorrected(true);
        variance10.clear();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.5d + "'", double25 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 74.0d + "'", double36 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 2L + "'", long62 == 2L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 2L + "'", long64 == 2L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.5d + "'", double74 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 24.666666666666668d + "'", double88 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 37.0d + "'", double89 == 37.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double94));
    }

    @Test
    public void test09147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09147");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) 2L);
        double double28 = secondMoment0.getResult();
        double double29 = secondMoment0.getResult();
        double double30 = secondMoment0.getResult();
        secondMoment0.increment(684.6666666666666d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2.0d + "'", double28 == 2.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2.0d + "'", double29 == 2.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2.0d + "'", double30 == 2.0d);
    }

    @Test
    public void test09148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09148");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment((double) ' ');
        double double16 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        boolean boolean18 = secondMoment7.equals((java.lang.Object) variance17);
        double double19 = variance17.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        secondMoment20.increment((double) (short) -1);
        secondMoment20.clear();
        double double27 = secondMoment20.getResult();
        secondMoment20.increment(7186.0d);
        secondMoment20.increment((double) 100);
        double double32 = secondMoment20.getResult();
        double double33 = secondMoment20.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        secondMoment34.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        secondMoment40.incrementAll(doubleArray46, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        long long51 = variance50.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double double63 = variance50.evaluate(doubleArray58, (double) (short) -1);
        double double64 = secondMoment34.evaluate(doubleArray58);
        double double65 = secondMoment20.evaluate(doubleArray58);
        double double66 = variance17.evaluate(doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            variance6.incrementAll(doubleArray58, (int) (byte) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 544.5d + "'", double5 == 544.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2.5105698E7d + "'", double32 == 2.5105698E7d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2.5105698E7d + "'", double33 == 2.5105698E7d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 37.0d + "'", double63 == 37.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 74.0d + "'", double64 == 74.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 37.0d + "'", double66 == 37.0d);
    }

    @Test
    public void test09149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09149");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double17 = secondMoment1.getResult();
        secondMoment1.increment(1.0d);
        double double20 = secondMoment1.getResult();
        secondMoment1.clear();
        double double22 = secondMoment1.getResult();
        double double23 = secondMoment1.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5994.0d + "'", double20 == 5994.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test09150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09150");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double8 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        double[] doubleArray22 = new double[] { 10, (byte) 100 };
        double double23 = secondMoment10.evaluate(doubleArray22);
        double double24 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        double double48 = variance26.evaluate(doubleArray44, (int) (byte) 0, 0);
        double double49 = variance25.evaluate(doubleArray44);
        secondMoment0.incrementAll(doubleArray44);
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.increment(40.5d);
        double double55 = secondMoment0.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test09151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09151");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        variance27.incrementAll(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        secondMoment39.increment((double) (short) -1);
        secondMoment39.clear();
        secondMoment39.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double double66 = secondMoment39.evaluate(doubleArray61);
        double double67 = variance27.evaluate(doubleArray61);
        double double68 = secondMoment11.evaluate(doubleArray61);
        secondMoment11.clear();
        secondMoment11.clear();
        secondMoment11.increment(37.00000000372529d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        secondMoment11.clear();
        double double75 = secondMoment11.getResult();
        long long76 = secondMoment11.getN();
        secondMoment11.increment(28.666666666666664d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 37.0d + "'", double67 == 37.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
    }

    @Test
    public void test09152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09152");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        secondMoment0.incrementAll(doubleArray20, 0, (int) (short) 0);
        long long28 = secondMoment0.getN();
        secondMoment0.increment((double) 100.0f);
        secondMoment0.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test09153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09153");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance5.setBiasCorrected(false);
        variance5.increment((double) 7L);
    }

    @Test
    public void test09154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09154");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(10.0d);
        secondMoment0.clear();
        double double15 = secondMoment0.getResult();
        double double16 = secondMoment0.getResult();
        long long17 = secondMoment0.getN();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        long long24 = secondMoment19.getN();
        secondMoment19.increment(0.0d);
        double double27 = secondMoment19.getResult();
        double double28 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double[] doubleArray42 = new double[] { 10, (byte) 100 };
        double double43 = secondMoment30.evaluate(doubleArray42);
        double double44 = secondMoment30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment30);
        variance45.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment((double) ' ');
        double double50 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment47);
        double double52 = secondMoment47.getResult();
        boolean boolean53 = variance45.equals((java.lang.Object) double52);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment56);
        secondMoment56.increment((double) (short) -1);
        long long62 = secondMoment56.getN();
        double double63 = secondMoment56.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment56);
        long long66 = secondMoment56.getN();
        secondMoment56.increment(482.66666666666663d);
        double double69 = secondMoment56.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment71);
        secondMoment71.increment((double) (short) -1);
        secondMoment71.clear();
        secondMoment71.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment81.increment(1.0d);
        double[] doubleArray87 = new double[] { (-1L), 0, 10L };
        secondMoment81.incrementAll(doubleArray87, 0, 0);
        variance80.incrementAll(doubleArray87);
        variance70.incrementAll(doubleArray87);
        double double93 = secondMoment56.evaluate(doubleArray87);
        double double95 = variance45.evaluate(doubleArray87, 8212.857142857143d);
        secondMoment19.incrementAll(doubleArray87);
        double double97 = secondMoment0.evaluate(doubleArray87);
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.6666666666666666d + "'", double27 == 0.6666666666666666d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.6666666666666666d + "'", double28 == 0.6666666666666666d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4050.0d + "'", double43 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4050.0d + "'", double44 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 2L + "'", long62 == 2L);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 544.5d + "'", double63 == 544.5d);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 2L + "'", long66 == 2L);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 146040.96296296292d + "'", double69 == 146040.96296296292d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 74.0d + "'", double93 == 74.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 24.666666666666668d + "'", double95 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 74.0d + "'", double97 == 74.0d);
    }

    @Test
    public void test09155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09155");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        long long16 = secondMoment2.getN();
        secondMoment2.clear();
        double double18 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment(0.0d);
        secondMoment2.increment(2700.0d);
        long long26 = secondMoment2.getN();
        double double27 = secondMoment2.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 3645000.0d + "'", double27 == 3645000.0d);
    }

    @Test
    public void test09156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09156");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        double double25 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        double double49 = variance27.evaluate(doubleArray45, (int) (byte) 0, 0);
        double double50 = variance26.evaluate(doubleArray45);
        double double51 = variance9.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        double[] doubleArray60 = new double[] { (-1L), 0, 10L };
        secondMoment54.incrementAll(doubleArray60, 0, 0);
        double[] doubleArray66 = new double[] { 10, (byte) 100 };
        double double67 = secondMoment54.evaluate(doubleArray66);
        double double68 = secondMoment54.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment54);
        long long70 = secondMoment54.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        double double72 = secondMoment54.getResult();
        secondMoment54.clear();
        secondMoment54.increment(Double.NaN);
        secondMoment54.clear();
        boolean boolean77 = variance9.equals((java.lang.Object) secondMoment54);
        long long78 = secondMoment54.getN();
        double[] doubleArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            secondMoment54.incrementAll(doubleArray79, 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4050.0d + "'", double68 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 2L + "'", long70 == 2L);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4050.0d + "'", double72 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
    }

    @Test
    public void test09157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09157");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        variance1.increment((double) 3L);
        variance1.clear();
        variance1.increment((double) (byte) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        secondMoment11.increment((double) '4');
        double double17 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        secondMoment18.increment((double) (short) 0);
        double double23 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        double[] doubleArray41 = new double[] {};
        secondMoment24.incrementAll(doubleArray41);
        secondMoment18.incrementAll(doubleArray41);
        secondMoment18.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double[] doubleArray59 = new double[] { 10, (byte) 100 };
        double double60 = secondMoment47.evaluate(doubleArray59);
        double double61 = variance46.evaluate(doubleArray59);
        double double62 = secondMoment11.evaluate(doubleArray59);
        secondMoment11.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment65);
        secondMoment65.increment((double) (short) -1);
        secondMoment65.clear();
        secondMoment65.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        variance74.incrementAll(doubleArray81);
        variance64.incrementAll(doubleArray81);
        double double87 = variance1.evaluate(doubleArray81);
        double double88 = variance1.getResult();
        variance1.setBiasCorrected(true);
        long long91 = variance1.getN();
        long long92 = variance1.getN();
        long long93 = variance1.getN();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 200.0d + "'", double17 == 200.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5d + "'", double23 == 0.5d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 37.0d + "'", double87 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 0L + "'", long92 == 0L);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
    }

    @Test
    public void test09158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09158");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        secondMoment0.clear();
        secondMoment0.clear();
        double double17 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment((double) (byte) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance21.increment(0.0d);
        long long24 = variance21.getN();
        long long25 = variance21.getN();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
    }

    @Test
    public void test09159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09159");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        secondMoment3.increment((double) (short) -1);
        long long9 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        long long12 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        variance14.increment(482.66666666666663d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        secondMoment17.increment((double) (short) -1);
        secondMoment17.clear();
        secondMoment17.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        long long27 = variance26.getN();
        variance26.increment(200.0d);
        long long30 = variance26.getN();
        variance26.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        secondMoment33.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        secondMoment33.clear();
        secondMoment33.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        secondMoment41.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment47);
        long long58 = variance57.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        double double70 = variance57.evaluate(doubleArray65, (double) (short) -1);
        double double71 = secondMoment41.evaluate(doubleArray65);
        double double72 = secondMoment33.evaluate(doubleArray65);
        variance26.incrementAll(doubleArray65);
        variance14.incrementAll(doubleArray65, 1, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 2L + "'", long9 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 37.0d + "'", double70 == 37.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 74.0d + "'", double71 == 74.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
    }

    @Test
    public void test09160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09160");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        secondMoment0.clear();
        secondMoment0.clear();
        double double17 = secondMoment0.getResult();
        secondMoment0.increment((double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment((double) ' ');
        double double23 = secondMoment20.getResult();
        double double24 = secondMoment20.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double[] doubleArray37 = new double[] { 10, (byte) 100 };
        double double38 = secondMoment25.evaluate(doubleArray37);
        double double39 = secondMoment20.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        double double46 = secondMoment41.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double double63 = secondMoment47.evaluate(doubleArray59);
        double[] doubleArray64 = new double[] {};
        secondMoment47.incrementAll(doubleArray64);
        secondMoment41.incrementAll(doubleArray64);
        secondMoment41.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double[] doubleArray82 = new double[] { 10, (byte) 100 };
        double double83 = secondMoment70.evaluate(doubleArray82);
        double double84 = variance69.evaluate(doubleArray82);
        double double85 = variance40.evaluate(doubleArray82);
        double double86 = secondMoment20.evaluate(doubleArray82);
        double double87 = secondMoment0.evaluate(doubleArray82);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance88.increment(36.99999999999909d);
        variance88.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.5d + "'", double46 == 0.5d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4050.0d + "'", double86 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4050.0d + "'", double87 == 4050.0d);
    }

    @Test
    public void test09161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09161");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        long long17 = variance16.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double29 = variance16.evaluate(doubleArray24, (double) (short) -1);
        double double30 = secondMoment0.evaluate(doubleArray24);
        secondMoment0.clear();
        double double32 = secondMoment0.getResult();
        secondMoment0.clear();
        double double34 = secondMoment0.getResult();
        double double35 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
    }

    @Test
    public void test09162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09162");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(24.666666666666668d);
        double double19 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] {};
        secondMoment21.incrementAll(doubleArray38);
        double double42 = variance20.evaluate(doubleArray38, (int) (byte) 0, 0);
        long long43 = variance20.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        double double49 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double double60 = secondMoment44.evaluate(doubleArray56);
        variance20.incrementAll(doubleArray56);
        long long62 = variance20.getN();
        variance20.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = secondMoment65.evaluate(doubleArray80);
        variance20.incrementAll(doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double double86 = secondMoment1.evaluate(doubleArray80, (int) (short) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4663.407407407407d + "'", double19 == 4663.407407407407d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5d + "'", double49 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 3L + "'", long62 == 3L);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
    }

    @Test
    public void test09163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09163");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        long long11 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance13.clear();
        double double15 = variance13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        long long22 = secondMoment16.getN();
        double double23 = secondMoment16.getResult();
        secondMoment16.increment((double) 1.0f);
        double double26 = secondMoment16.getResult();
        double double27 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment((double) ' ');
        double double31 = secondMoment28.getResult();
        double double32 = secondMoment28.getResult();
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        long long44 = secondMoment34.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        variance45.increment(2.880385675555556E7d);
        variance45.increment((double) 0);
        long long50 = variance45.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        variance45.incrementAll(doubleArray57);
        secondMoment28.incrementAll(doubleArray57);
        secondMoment16.incrementAll(doubleArray57);
        // The following exception was thrown during execution in test generation
        try {
            double double67 = variance13.evaluate(doubleArray57, 7450.749999999999d, 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 544.5d + "'", double23 == 544.5d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 684.6666666666666d + "'", double26 == 684.6666666666666d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 684.6666666666666d + "'", double27 == 684.6666666666666d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
    }

    @Test
    public void test09164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09164");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (byte) 0);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        secondMoment8.increment((double) (short) -1);
        long long14 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double27 = variance15.evaluate(doubleArray22, (double) 1L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long30 = variance29.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        secondMoment31.increment((double) (short) 0);
        double double36 = secondMoment31.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double double47 = secondMoment31.evaluate(doubleArray43);
        double double49 = variance29.evaluate(doubleArray43, (double) 4L);
        double double50 = variance15.evaluate(doubleArray43);
        secondMoment1.incrementAll(doubleArray43);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment((double) ' ');
        secondMoment66.increment((double) (-1.0f));
        secondMoment66.clear();
        boolean boolean72 = variance65.equals((java.lang.Object) secondMoment66);
        double double73 = variance65.getResult();
        variance65.increment(3602.0d);
        long long76 = variance65.getN();
        double double77 = variance65.getResult();
        boolean boolean78 = secondMoment1.equals((java.lang.Object) variance65);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 24.666666666666668d + "'", double27 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.5d + "'", double36 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 74.0d + "'", double47 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 37.0d + "'", double49 == 37.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 24.666666666666668d + "'", double50 == 24.666666666666668d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test09165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09165");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double17 = secondMoment1.getResult();
        double double18 = secondMoment1.getResult();
        double double19 = secondMoment1.getResult();
        double[] doubleArray20 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double21 = secondMoment1.evaluate(doubleArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4050.0d + "'", double18 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4050.0d + "'", double19 == 4050.0d);
    }

    @Test
    public void test09166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09166");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance16.increment(0.0d);
        boolean boolean19 = variance16.isBiasCorrected();
        boolean boolean20 = variance16.isBiasCorrected();
        variance16.setBiasCorrected(true);
        variance16.increment((double) (short) 1);
        double double25 = variance16.getResult();
        variance16.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
    }

    @Test
    public void test09167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09167");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        secondMoment5.increment(272.25d);
        long long11 = secondMoment5.getN();
        secondMoment5.clear();
        long long13 = secondMoment5.getN();
        boolean boolean14 = secondMoment0.equals((java.lang.Object) long13);
        secondMoment0.increment(1.24482505999626E27d);
        double[] doubleArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double18 = secondMoment0.evaluate(doubleArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09168");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) 0);
        secondMoment0.clear();
        double double10 = secondMoment0.getResult();
        double double11 = secondMoment0.getResult();
        double double12 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment((double) ' ');
        secondMoment13.increment((double) '4');
        secondMoment13.increment((double) 0.0f);
        long long20 = secondMoment13.getN();
        long long21 = secondMoment13.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long24 = variance23.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        secondMoment25.increment((double) (short) 0);
        double double30 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        double double41 = secondMoment25.evaluate(doubleArray37);
        variance23.incrementAll(doubleArray37);
        double double43 = secondMoment13.evaluate(doubleArray37);
        secondMoment0.incrementAll(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 3L + "'", long20 == 3L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 3L + "'", long21 == 3L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5d + "'", double30 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 74.0d + "'", double41 == 74.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
    }

    @Test
    public void test09169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09169");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = variance19.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        long long41 = secondMoment31.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        secondMoment31.incrementAll(doubleArray48, 0, (int) (short) 1);
        double double56 = variance19.evaluate(doubleArray48, (double) 100.0f);
        long long57 = variance19.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        secondMoment61.increment((double) (short) 0);
        double double66 = secondMoment61.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        double[] doubleArray73 = new double[] { (-1L), 0, 10L };
        secondMoment67.incrementAll(doubleArray73, 0, 0);
        double double77 = secondMoment61.evaluate(doubleArray73);
        double[] doubleArray78 = new double[] {};
        secondMoment61.incrementAll(doubleArray78);
        double double80 = secondMoment58.evaluate(doubleArray78);
        double double81 = variance19.evaluate(doubleArray78);
        double[] doubleArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double85 = variance19.evaluate(doubleArray82, (int) (byte) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.5d + "'", double66 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 74.0d + "'", double77 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
    }

    @Test
    public void test09170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09170");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        long long12 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long15 = secondMoment2.getN();
        secondMoment2.increment(32.2d);
        secondMoment2.increment(688.0d);
        secondMoment2.increment((double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        secondMoment24.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment24);
        long long32 = secondMoment24.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment((double) ' ');
        secondMoment44.increment((double) (-1.0f));
        secondMoment44.clear();
        boolean boolean50 = variance43.equals((java.lang.Object) secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        secondMoment51.increment((double) (short) 0);
        double double56 = secondMoment51.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        secondMoment57.increment((double) (short) 0);
        double double62 = secondMoment57.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        double double73 = secondMoment57.evaluate(doubleArray69);
        double[] doubleArray74 = new double[] {};
        secondMoment57.incrementAll(doubleArray74);
        secondMoment51.incrementAll(doubleArray74);
        secondMoment51.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        double[] doubleArray92 = new double[] { 10, (byte) 100 };
        double double93 = secondMoment80.evaluate(doubleArray92);
        double double94 = variance79.evaluate(doubleArray92);
        secondMoment44.incrementAll(doubleArray92);
        secondMoment24.incrementAll(doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = secondMoment2.evaluate(doubleArray92, 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.5d + "'", double56 == 0.5d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.5d + "'", double62 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 74.0d + "'", double73 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 4050.0d + "'", double93 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 4050.0d + "'", double94 == 4050.0d);
    }

    @Test
    public void test09171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09171");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (-1.0f));
        secondMoment1.clear();
        secondMoment1.clear();
        double double8 = secondMoment1.getResult();
        double double9 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment((double) 100L);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test09172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09172");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        double double8 = secondMoment0.getResult();
        double double9 = secondMoment0.getResult();
        secondMoment0.increment((double) '#');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        secondMoment12.increment((double) (-1.0f));
        secondMoment12.clear();
        secondMoment12.clear();
        secondMoment12.clear();
        double double20 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        secondMoment22.increment((double) (short) -1);
        secondMoment22.clear();
        secondMoment22.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        double double32 = secondMoment22.getResult();
        long long33 = secondMoment22.getN();
        secondMoment22.increment(0.0d);
        secondMoment22.increment(5000.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        double[] doubleArray54 = new double[] { 10, (byte) 100 };
        double double55 = secondMoment42.evaluate(doubleArray54);
        double double56 = secondMoment42.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment42);
        long long58 = secondMoment42.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long64 = variance63.getN();
        double double65 = variance63.getResult();
        variance63.increment((double) (short) 100);
        variance63.increment((double) 3L);
        variance63.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        secondMoment71.increment((double) (short) 0);
        double double76 = secondMoment71.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment77.increment(1.0d);
        double[] doubleArray83 = new double[] { (-1L), 0, 10L };
        secondMoment77.incrementAll(doubleArray83, 0, 0);
        double double87 = secondMoment71.evaluate(doubleArray83);
        double[] doubleArray88 = new double[] {};
        secondMoment71.incrementAll(doubleArray88);
        variance63.incrementAll(doubleArray88);
        boolean boolean91 = secondMoment42.equals((java.lang.Object) doubleArray88);
        double double92 = variance38.evaluate(doubleArray88);
        double double93 = variance21.evaluate(doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            double double96 = secondMoment0.evaluate(doubleArray88, (int) (byte) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4050.0d + "'", double55 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4050.0d + "'", double56 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 2L + "'", long58 == 2L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.5d + "'", double76 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test09173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09173");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance9.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        secondMoment38.increment((double) (short) 0);
        double double43 = secondMoment38.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double double54 = secondMoment38.evaluate(doubleArray50);
        double[] doubleArray55 = new double[] {};
        secondMoment38.incrementAll(doubleArray55);
        double double57 = secondMoment35.evaluate(doubleArray55);
        variance9.incrementAll(doubleArray55);
        variance9.clear();
        double double60 = variance9.getResult();
        variance9.setBiasCorrected(true);
        double double63 = variance9.getResult();
        double double64 = variance9.getResult();
        boolean boolean65 = variance9.isBiasCorrected();
        double double66 = variance9.getResult();
        variance9.increment(4.373460066666667E7d);
        boolean boolean69 = variance9.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.5d + "'", double43 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 74.0d + "'", double54 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test09174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09174");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        double double7 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(3.033666413425926E7d);
        java.lang.Class<?> wildcardClass11 = secondMoment1.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test09175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09175");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        double double4 = secondMoment1.getResult();
        double double5 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        double double14 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        double double25 = secondMoment9.evaluate(doubleArray21);
        double[] doubleArray26 = new double[] {};
        secondMoment9.incrementAll(doubleArray26);
        double double30 = variance8.evaluate(doubleArray26, (int) (byte) 0, 0);
        variance7.incrementAll(doubleArray26);
        double double32 = secondMoment1.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.clear();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment((double) ' ');
        double double39 = secondMoment36.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment36);
        long long41 = variance40.getN();
        boolean boolean42 = variance40.isBiasCorrected();
        boolean boolean43 = variance40.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment45);
        secondMoment45.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        secondMoment45.clear();
        secondMoment45.increment((double) 10);
        secondMoment45.increment(2.0d);
        long long56 = secondMoment45.getN();
        double double57 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        secondMoment59.increment((double) (short) 0);
        double double64 = secondMoment59.getResult();
        secondMoment59.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment59);
        double double67 = secondMoment59.getResult();
        secondMoment59.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment71);
        secondMoment71.increment((double) (short) -1);
        secondMoment71.clear();
        secondMoment71.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment81.increment(1.0d);
        double[] doubleArray87 = new double[] { (-1L), 0, 10L };
        secondMoment81.incrementAll(doubleArray87, 0, 0);
        variance80.incrementAll(doubleArray87);
        variance70.incrementAll(doubleArray87);
        double double93 = secondMoment59.evaluate(doubleArray87);
        double double94 = secondMoment45.evaluate(doubleArray87);
        double double95 = variance40.evaluate(doubleArray87);
        secondMoment1.incrementAll(doubleArray87);
        long long97 = secondMoment1.getN();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5d + "'", double14 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 74.0d + "'", double25 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 2L + "'", long56 == 2L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 32.0d + "'", double57 == 32.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.5d + "'", double64 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 74.0d + "'", double93 == 74.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 74.0d + "'", double94 == 74.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 37.0d + "'", double95 == 37.0d);
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + 3L + "'", long97 == 3L);
    }

    @Test
    public void test09176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09176");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long11 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double23 = variance10.evaluate(doubleArray18, (double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double[] doubleArray37 = new double[] { 10, (byte) 100 };
        double double38 = secondMoment25.evaluate(doubleArray37);
        double double39 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment25);
        long long41 = secondMoment25.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        secondMoment42.increment((double) (short) -1);
        secondMoment42.clear();
        secondMoment42.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        secondMoment52.increment((double) (short) 0);
        double double57 = secondMoment52.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double double68 = secondMoment52.evaluate(doubleArray64);
        double double69 = secondMoment42.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double[] doubleArray82 = new double[] { 10, (byte) 100 };
        double double83 = secondMoment70.evaluate(doubleArray82);
        double double84 = secondMoment70.getResult();
        secondMoment70.increment((double) (short) -1);
        double[] doubleArray88 = new double[] { (short) 1 };
        secondMoment70.incrementAll(doubleArray88);
        double double90 = secondMoment42.evaluate(doubleArray88);
        double double91 = secondMoment25.evaluate(doubleArray88);
        double double92 = variance10.evaluate(doubleArray88);
        variance10.clear();
        long long94 = variance10.getN();
        variance10.increment(457.6388888888889d);
        double double97 = variance10.getResult();
        double double98 = variance10.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 37.0d + "'", double23 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 2L + "'", long41 == 2L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5d + "'", double57 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1L + "'", long94 == 1L);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
    }

    @Test
    public void test09177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09177");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(272.25d);
        secondMoment1.increment((double) 100L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        secondMoment9.increment((double) (short) -1);
        secondMoment9.clear();
        secondMoment9.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        long long19 = variance18.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        secondMoment23.increment((double) (short) 0);
        double double28 = secondMoment23.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double39 = secondMoment23.evaluate(doubleArray35);
        double[] doubleArray40 = new double[] {};
        secondMoment23.incrementAll(doubleArray40);
        double double42 = secondMoment20.evaluate(doubleArray40);
        double double43 = variance18.evaluate(doubleArray40);
        secondMoment1.incrementAll(doubleArray40, (int) (byte) 0, (int) (byte) 0);
        long long47 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(344.5185185185186d);
        long long51 = secondMoment1.getN();
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5d + "'", double28 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 74.0d + "'", double39 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 3L + "'", long47 == 3L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 4L + "'", long51 == 4L);
    }

    @Test
    public void test09178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09178");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance16.increment(0.0d);
        boolean boolean19 = variance16.isBiasCorrected();
        boolean boolean20 = variance16.isBiasCorrected();
        variance16.setBiasCorrected(true);
        double double23 = variance16.getResult();
        variance16.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        secondMoment25.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        long long42 = variance41.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        secondMoment43.incrementAll(doubleArray49, 0, 0);
        double double54 = variance41.evaluate(doubleArray49, (double) (short) -1);
        double double55 = secondMoment25.evaluate(doubleArray49);
        secondMoment25.increment(100.0d);
        boolean boolean58 = variance16.equals((java.lang.Object) secondMoment25);
        secondMoment25.clear();
        double double60 = secondMoment25.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 37.0d + "'", double54 == 37.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 74.0d + "'", double55 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
    }

    @Test
    public void test09179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09179");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        long long17 = variance16.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double29 = variance16.evaluate(doubleArray24, (double) (short) -1);
        double double30 = secondMoment0.evaluate(doubleArray24);
        secondMoment0.clear();
        double double32 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment((double) ' ');
        double double38 = secondMoment35.getResult();
        double double39 = secondMoment35.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        secondMoment43.increment((double) (short) 0);
        double double48 = secondMoment43.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        double double59 = secondMoment43.evaluate(doubleArray55);
        double[] doubleArray60 = new double[] {};
        secondMoment43.incrementAll(doubleArray60);
        double double64 = variance42.evaluate(doubleArray60, (int) (byte) 0, 0);
        variance41.incrementAll(doubleArray60);
        double double66 = secondMoment35.evaluate(doubleArray60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment35);
        boolean boolean68 = secondMoment0.equals((java.lang.Object) secondMoment35);
        double double69 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.5d + "'", double48 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 74.0d + "'", double59 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
    }

    @Test
    public void test09180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09180");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double11 = secondMoment1.getResult();
        secondMoment1.clear();
        double double13 = secondMoment1.getResult();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test09181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09181");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        secondMoment16.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        boolean boolean28 = variance27.isBiasCorrected();
        variance27.increment(4.321154463792899E13d);
        double double31 = variance27.getResult();
        boolean boolean32 = variance27.isBiasCorrected();
        double double33 = variance27.getResult();
        long long34 = variance27.getN();
        boolean boolean35 = variance27.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09182");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        long long35 = variance34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double47 = variance34.evaluate(doubleArray42, (double) (short) -1);
        double double48 = secondMoment18.evaluate(doubleArray42);
        double double49 = secondMoment1.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double51 = secondMoment1.getResult();
        secondMoment1.increment(806.0d);
        secondMoment1.increment((double) 10);
        long long56 = secondMoment1.getN();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 74.0d + "'", double51 == 74.0d);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 5L + "'", long56 == 5L);
    }

    @Test
    public void test09183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09183");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        double double17 = secondMoment0.getResult();
        secondMoment0.increment((double) 1L);
        secondMoment0.increment((double) (byte) 100);
        double double22 = secondMoment0.getResult();
        secondMoment0.increment(4.398046511104E12d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 6140.666666666667d + "'", double17 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 11282.0d + "'", double22 == 11282.0d);
    }

    @Test
    public void test09184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09184");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        long long6 = secondMoment0.getN();
        double double7 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        double[] doubleArray22 = new double[] { 10, (byte) 100 };
        double double23 = secondMoment10.evaluate(doubleArray22);
        double double24 = secondMoment10.getResult();
        long long25 = secondMoment10.getN();
        long long26 = secondMoment10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        long long28 = secondMoment10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double[] doubleArray42 = new double[] { 10, (byte) 100 };
        double double43 = secondMoment30.evaluate(doubleArray42);
        double double44 = secondMoment30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment30);
        long long46 = secondMoment30.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment((double) ' ');
        secondMoment47.increment((double) (-1.0f));
        secondMoment47.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment53);
        long long64 = variance63.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        double double76 = variance63.evaluate(doubleArray71, (double) (short) -1);
        double double77 = secondMoment47.evaluate(doubleArray71);
        double double78 = secondMoment30.evaluate(doubleArray71);
        secondMoment10.incrementAll(doubleArray71);
        boolean boolean80 = secondMoment0.equals((java.lang.Object) secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment(9696140.055555556d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        variance84.clear();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 544.5d + "'", double7 == 544.5d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 2L + "'", long28 == 2L);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4050.0d + "'", double43 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4050.0d + "'", double44 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 2L + "'", long46 == 2L);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 37.0d + "'", double76 == 37.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 74.0d + "'", double77 == 74.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 74.0d + "'", double78 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test09185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09185");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        long long35 = variance34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double47 = variance34.evaluate(doubleArray42, (double) (short) -1);
        double double48 = secondMoment18.evaluate(doubleArray42);
        double double49 = secondMoment1.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double52 = variance51.getResult();
        long long53 = variance51.getN();
        variance51.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 37.0d + "'", double52 == 37.0d);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 3L + "'", long53 == 3L);
    }

    @Test
    public void test09186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09186");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        double double17 = secondMoment0.getResult();
        secondMoment0.increment((double) 0.0f);
        long long20 = secondMoment0.getN();
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.increment(2.1801930771645032E20d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 6140.666666666667d + "'", double17 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 4L + "'", long20 == 4L);
    }

    @Test
    public void test09187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09187");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        variance9.incrementAll(doubleArray16);
        long long21 = variance9.getN();
        variance9.clear();
        boolean boolean23 = variance9.isBiasCorrected();
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        double double37 = variance9.evaluate(doubleArray32, (double) '4');
        double double38 = variance9.getResult();
        variance9.increment(55.0d);
        variance9.increment(7070.8d);
        long long43 = variance9.getN();
        boolean boolean44 = variance9.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 24.666666666666668d + "'", double37 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test09188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09188");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        long long27 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double39 = variance26.evaluate(doubleArray34, (double) (short) -1);
        double double40 = secondMoment10.evaluate(doubleArray34);
        secondMoment0.incrementAll(doubleArray34);
        secondMoment0.increment((double) 6L);
        double double44 = secondMoment0.getResult();
        secondMoment0.increment(6.22239225373408E14d);
        double double47 = secondMoment0.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 80.75d + "'", double44 == 80.75d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 3.0974532287463533E29d + "'", double47 == 3.0974532287463533E29d);
    }

    @Test
    public void test09189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09189");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        secondMoment15.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment15);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment15);
        long long26 = secondMoment15.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment((double) ' ');
        double double31 = secondMoment28.getResult();
        double double32 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double[] doubleArray45 = new double[] { 10, (byte) 100 };
        double double46 = secondMoment33.evaluate(doubleArray45);
        double double47 = secondMoment28.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        secondMoment55.increment((double) (short) 0);
        double double60 = secondMoment55.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        double[] doubleArray67 = new double[] { (-1L), 0, 10L };
        secondMoment61.incrementAll(doubleArray67, 0, 0);
        double double71 = secondMoment55.evaluate(doubleArray67);
        double[] doubleArray72 = new double[] {};
        secondMoment55.incrementAll(doubleArray72);
        secondMoment49.incrementAll(doubleArray72);
        secondMoment49.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment78.increment(1.0d);
        double[] doubleArray84 = new double[] { (-1L), 0, 10L };
        secondMoment78.incrementAll(doubleArray84, 0, 0);
        double[] doubleArray90 = new double[] { 10, (byte) 100 };
        double double91 = secondMoment78.evaluate(doubleArray90);
        double double92 = variance77.evaluate(doubleArray90);
        double double93 = variance48.evaluate(doubleArray90);
        double double94 = secondMoment28.evaluate(doubleArray90);
        boolean boolean95 = secondMoment15.equals((java.lang.Object) secondMoment28);
        secondMoment28.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4050.0d + "'", double46 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.5d + "'", double60 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 74.0d + "'", double71 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4050.0d + "'", double91 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 4050.0d + "'", double92 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 4050.0d + "'", double93 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 4050.0d + "'", double94 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test09190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09190");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        long long16 = secondMoment2.getN();
        secondMoment2.clear();
        double double18 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        variance23.increment((double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test09191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09191");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        long long6 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double8 = secondMoment0.getResult();
        double double9 = secondMoment0.getResult();
        java.lang.Class<?> wildcardClass10 = secondMoment0.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.5d + "'", double9 == 0.5d);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test09192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09192");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        secondMoment16.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment16);
        secondMoment16.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        secondMoment16.clear();
        long long31 = secondMoment16.getN();
        secondMoment16.increment(3.1992280221592915E12d);
        secondMoment16.increment(114.83950617283953d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
    }

    @Test
    public void test09193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09193");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        double double23 = secondMoment7.evaluate(doubleArray19);
        double[] doubleArray24 = new double[] {};
        secondMoment7.incrementAll(doubleArray24);
        secondMoment1.incrementAll(doubleArray24);
        secondMoment1.increment((double) (byte) 10);
        double double29 = secondMoment1.getResult();
        double double30 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance31.clear();
        variance31.clear();
        variance31.increment(9.70523767932879E14d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 74.0d + "'", double23 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 60.666666666666664d + "'", double29 == 60.666666666666664d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 60.666666666666664d + "'", double30 == 60.666666666666664d);
    }

    @Test
    public void test09194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09194");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        variance9.increment(200.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        secondMoment14.increment((double) (short) -1);
        long long20 = secondMoment14.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double double33 = variance21.evaluate(doubleArray28, (double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double49 = variance21.evaluate(doubleArray46, 0.0d);
        double double50 = variance9.evaluate(doubleArray46);
        double double51 = variance9.getResult();
        double[] doubleArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double55 = variance9.evaluate(doubleArray52, 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2L + "'", long20 == 2L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 24.666666666666668d + "'", double33 == 24.666666666666668d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2025.0d + "'", double49 == 2025.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test09195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09195");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        long long6 = secondMoment0.getN();
        double double7 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(0.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double[] doubleArray12 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double15 = secondMoment0.evaluate(doubleArray12, 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 544.5d + "'", double7 == 544.5d);
    }

    @Test
    public void test09196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09196");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        double double17 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        long long19 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        double double21 = secondMoment3.getResult();
        long long22 = secondMoment3.getN();
        secondMoment3.clear();
        secondMoment3.clear();
        double double25 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        long long27 = variance26.getN();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    }

    @Test
    public void test09197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09197");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        double double18 = variance10.getResult();
        variance10.increment(3602.0d);
        long long21 = variance10.getN();
        variance10.increment(24.666666666666668d);
        variance10.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double[] doubleArray41 = new double[] { 10, (byte) 100 };
        double double42 = secondMoment29.evaluate(doubleArray41);
        double double43 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment29);
        long long45 = secondMoment29.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long51 = variance50.getN();
        double double52 = variance50.getResult();
        variance50.increment((double) (short) 100);
        variance50.increment((double) 3L);
        variance50.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        secondMoment58.increment((double) (short) 0);
        double double63 = secondMoment58.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        double double74 = secondMoment58.evaluate(doubleArray70);
        double[] doubleArray75 = new double[] {};
        secondMoment58.incrementAll(doubleArray75);
        variance50.incrementAll(doubleArray75);
        boolean boolean78 = secondMoment29.equals((java.lang.Object) doubleArray75);
        double double79 = variance10.evaluate(doubleArray75);
        long long80 = variance10.getN();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4050.0d + "'", double42 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4050.0d + "'", double43 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 2L + "'", long45 == 2L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.5d + "'", double63 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 74.0d + "'", double74 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1L + "'", long80 == 1L);
    }

    @Test
    public void test09198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09198");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(3602.0d);
        double double31 = secondMoment0.getResult();
        double double32 = secondMoment0.getResult();
        long long33 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 9725402.75d + "'", double31 == 9725402.75d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 9725402.75d + "'", double32 == 9725402.75d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 4L + "'", long33 == 4L);
    }

    @Test
    public void test09199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09199");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        double double25 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        double double49 = variance27.evaluate(doubleArray45, (int) (byte) 0, 0);
        double double50 = variance26.evaluate(doubleArray45);
        double double51 = variance9.evaluate(doubleArray45);
        long long52 = variance9.getN();
        variance9.setBiasCorrected(false);
        variance9.increment(100.0d);
        variance9.increment((double) 2L);
        variance9.increment((double) 100);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
    }

    @Test
    public void test09200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09200");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) -1);
        double[] doubleArray19 = new double[] { (short) 1 };
        secondMoment1.incrementAll(doubleArray19);
        long long21 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        secondMoment23.increment((double) (short) 0);
        long long28 = secondMoment23.getN();
        double double29 = secondMoment23.getResult();
        secondMoment23.increment((double) (byte) 10);
        secondMoment23.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        long long44 = variance43.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double double56 = variance43.evaluate(doubleArray51, (double) (short) -1);
        double double57 = secondMoment23.evaluate(doubleArray51);
        double double58 = secondMoment1.evaluate(doubleArray51);
        double double59 = secondMoment1.getResult();
        secondMoment1.increment(2.0d);
        double double62 = secondMoment1.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 4L + "'", long21 == 4L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 2L + "'", long28 == 2L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 74.0d + "'", double57 == 74.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 74.0d + "'", double58 == 74.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 74.0d + "'", double59 == 74.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 74.75d + "'", double62 == 74.75d);
    }

    @Test
    public void test09201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09201");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        long long11 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(10.0d);
        secondMoment1.clear();
        double double16 = secondMoment1.getResult();
        secondMoment1.increment(146040.96296296292d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double20 = secondMoment1.getResult();
        long long21 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        secondMoment22.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        secondMoment33.increment((double) (short) 0);
        double double38 = secondMoment33.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        double double49 = secondMoment33.evaluate(doubleArray45);
        double[] doubleArray50 = new double[] {};
        secondMoment33.incrementAll(doubleArray50);
        secondMoment27.incrementAll(doubleArray50);
        secondMoment27.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double[] doubleArray68 = new double[] { 10, (byte) 100 };
        double double69 = secondMoment56.evaluate(doubleArray68);
        double double70 = variance55.evaluate(doubleArray68);
        double double71 = secondMoment22.evaluate(doubleArray68);
        secondMoment22.increment(5304.666666666667d);
        secondMoment22.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment76);
        secondMoment76.increment((double) (short) -1);
        long long82 = secondMoment76.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment76);
        secondMoment76.clear();
        secondMoment76.increment(8212.857142857143d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment76);
        boolean boolean88 = secondMoment22.equals((java.lang.Object) secondMoment76);
        boolean boolean89 = secondMoment1.equals((java.lang.Object) secondMoment76);
        double double90 = secondMoment1.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5d + "'", double38 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4050.0d + "'", double69 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4050.0d + "'", double70 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4050.0d + "'", double71 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 2L + "'", long82 == 2L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
    }

    @Test
    public void test09202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09202");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        boolean boolean6 = variance1.isBiasCorrected();
        long long7 = variance1.getN();
        boolean boolean8 = variance1.isBiasCorrected();
        variance1.clear();
        long long10 = variance1.getN();
        java.lang.Class<?> wildcardClass11 = variance1.getClass();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test09203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09203");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        double double4 = variance1.getResult();
        long long5 = variance1.getN();
        variance1.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance9.clear();
        variance9.increment(1769.25d);
        double double13 = variance9.getResult();
        boolean boolean14 = variance1.equals((java.lang.Object) variance9);
        variance1.clear();
        long long16 = variance1.getN();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test09204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09204");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        secondMoment0.increment(74.0d);
        double double7 = secondMoment0.getResult();
        secondMoment0.increment(7077.0d);
        secondMoment0.increment(7070.8d);
        secondMoment0.clear();
        double double13 = secondMoment0.getResult();
        long long14 = secondMoment0.getN();
        double double15 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3602.0d + "'", double7 == 3602.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test09205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09205");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        secondMoment3.increment((double) (short) 0);
        double double8 = secondMoment3.getResult();
        secondMoment3.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        double double11 = secondMoment3.getResult();
        secondMoment3.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        variance13.setBiasCorrected(false);
        variance13.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        secondMoment19.increment((double) (short) -1);
        long long25 = secondMoment19.getN();
        double double26 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        long long29 = secondMoment19.getN();
        secondMoment19.increment(482.66666666666663d);
        secondMoment19.increment(32.0d);
        secondMoment19.clear();
        secondMoment19.clear();
        boolean boolean36 = variance13.equals((java.lang.Object) secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        double double38 = secondMoment19.getResult();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 544.5d + "'", double26 == 544.5d);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 2L + "'", long29 == 2L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
    }

    @Test
    public void test09206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09206");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        secondMoment5.increment((double) (short) 0);
        double double10 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] {};
        secondMoment11.incrementAll(doubleArray28);
        secondMoment5.incrementAll(doubleArray28);
        secondMoment5.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double48 = variance33.evaluate(doubleArray46);
        double double49 = secondMoment0.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        secondMoment56.increment((double) (short) 0);
        double double61 = secondMoment56.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        double double72 = secondMoment56.evaluate(doubleArray68);
        double[] doubleArray73 = new double[] {};
        secondMoment56.incrementAll(doubleArray73);
        secondMoment50.incrementAll(doubleArray73);
        double double76 = secondMoment0.evaluate(doubleArray73);
        long long77 = secondMoment0.getN();
        secondMoment0.increment((double) (byte) 1);
        secondMoment0.increment(0.0d);
        secondMoment0.increment((double) 5L);
        secondMoment0.increment(4049.9999999999995d);
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5d + "'", double10 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5d + "'", double61 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4050.0d + "'", double76 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 2L + "'", long77 == 2L);
    }

    @Test
    public void test09207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09207");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        secondMoment0.clear();
        secondMoment0.increment(2312.0d);
        secondMoment0.increment((double) (byte) -1);
        long long14 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance15.clear();
        variance15.clear();
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
    }

    @Test
    public void test09208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09208");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        secondMoment2.clear();
        double double9 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double26 = secondMoment10.evaluate(doubleArray22);
        secondMoment2.incrementAll(doubleArray22, 0, (int) (short) 0);
        secondMoment2.increment((double) (-1.0f));
        secondMoment2.clear();
        double double33 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 74.0d + "'", double26 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test09209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09209");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        double double4 = variance1.getResult();
        variance1.clear();
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        long long12 = secondMoment7.getN();
        double double13 = secondMoment7.getResult();
        secondMoment7.increment((double) (byte) 10);
        secondMoment7.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        long long28 = variance27.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double40 = variance27.evaluate(doubleArray35, (double) (short) -1);
        double double41 = secondMoment7.evaluate(doubleArray35);
        double double43 = variance1.evaluate(doubleArray35, (double) 1L);
        variance1.setBiasCorrected(true);
        long long46 = variance1.getN();
        double double47 = variance1.getResult();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 74.0d + "'", double41 == 74.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test09210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09210");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        double double23 = secondMoment7.evaluate(doubleArray19);
        double[] doubleArray24 = new double[] {};
        secondMoment7.incrementAll(doubleArray24);
        secondMoment1.incrementAll(doubleArray24);
        long long27 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.increment(1576.2666666666667d);
        double double31 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance32.clear();
        variance32.increment(2025.0d);
        variance32.clear();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 74.0d + "'", double23 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 2L + "'", long27 == 2L);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1655360.891851852d + "'", double31 == 1655360.891851852d);
    }

    @Test
    public void test09211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09211");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance16.increment(0.0d);
        long long19 = variance16.getN();
        variance16.increment((double) (byte) -1);
        variance16.clear();
        double double23 = variance16.getResult();
        variance16.increment(4.129541834901621E10d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment((double) ' ');
        secondMoment26.increment((double) (-1.0f));
        double double31 = secondMoment26.getResult();
        secondMoment26.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        boolean boolean34 = variance16.equals((java.lang.Object) variance33);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2025.0d + "'", double23 == 2025.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 544.5d + "'", double31 == 544.5d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test09212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09212");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(10.0d);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment(7020.75d);
        double double17 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        secondMoment18.increment((double) (short) 0);
        double double23 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        double[] doubleArray41 = new double[] {};
        secondMoment24.incrementAll(doubleArray41);
        secondMoment18.incrementAll(doubleArray41);
        secondMoment18.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double[] doubleArray59 = new double[] { 10, (byte) 100 };
        double double60 = secondMoment47.evaluate(doubleArray59);
        double double61 = variance46.evaluate(doubleArray59);
        long long62 = variance46.getN();
        long long63 = variance46.getN();
        double double64 = variance46.getResult();
        long long65 = variance46.getN();
        variance46.clear();
        boolean boolean67 = secondMoment0.equals((java.lang.Object) variance46);
        variance46.increment(5.380202045661305E14d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 40.5d + "'", double14 == 40.5d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 3.2809195541666664E7d + "'", double17 == 3.2809195541666664E7d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5d + "'", double23 == 0.5d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 3L + "'", long62 == 3L);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 3L + "'", long63 == 3L);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 3L + "'", long65 == 3L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test09213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09213");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] {};
        secondMoment21.incrementAll(doubleArray38);
        double double42 = variance20.evaluate(doubleArray38, (int) (byte) 0, 0);
        long long43 = variance20.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        double double49 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double double60 = secondMoment44.evaluate(doubleArray56);
        variance20.incrementAll(doubleArray56);
        long long62 = variance20.getN();
        variance20.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = secondMoment65.evaluate(doubleArray80);
        variance20.incrementAll(doubleArray80);
        secondMoment1.incrementAll(doubleArray80);
        long long85 = secondMoment1.getN();
        double double86 = secondMoment1.getResult();
        double double87 = secondMoment1.getResult();
        secondMoment1.increment(1067.1666666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double91 = secondMoment1.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5d + "'", double49 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 3L + "'", long62 == 3L);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 2L + "'", long85 == 2L);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4050.0d + "'", double86 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4050.0d + "'", double87 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 687037.5740740742d + "'", double91 == 687037.5740740742d);
    }

    @Test
    public void test09214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09214");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        secondMoment19.increment((double) (short) -1);
        secondMoment19.clear();
        secondMoment19.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        secondMoment29.increment((double) (short) 0);
        double double34 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double double45 = secondMoment29.evaluate(doubleArray41);
        double double46 = secondMoment19.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double[] doubleArray59 = new double[] { 10, (byte) 100 };
        double double60 = secondMoment47.evaluate(doubleArray59);
        double double61 = secondMoment47.getResult();
        secondMoment47.increment((double) (short) -1);
        double[] doubleArray65 = new double[] { (short) 1 };
        secondMoment47.incrementAll(doubleArray65);
        double double67 = secondMoment19.evaluate(doubleArray65);
        double double68 = secondMoment2.evaluate(doubleArray65);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.clear();
        secondMoment2.clear();
        secondMoment2.increment((double) 5L);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        double double76 = secondMoment2.getResult();
        secondMoment2.increment(5.5310751405070744E14d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5d + "'", double34 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 74.0d + "'", double46 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
    }

    @Test
    public void test09215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09215");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double26 = secondMoment10.evaluate(doubleArray22);
        double double27 = secondMoment0.evaluate(doubleArray22);
        secondMoment0.increment((double) 'a');
        secondMoment0.increment((double) 0);
        secondMoment0.increment(2413.8518518518517d);
        secondMoment0.increment(3.0d);
        secondMoment0.increment(4267109.2d);
        double double38 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 74.0d + "'", double26 == 74.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.592950702864932E13d + "'", double38 == 1.592950702864932E13d);
    }

    @Test
    public void test09216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09216");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        long long21 = variance20.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double double33 = variance20.evaluate(doubleArray28, (double) (short) -1);
        double double34 = variance20.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        secondMoment35.increment((double) (short) 0);
        double double40 = secondMoment35.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        double double46 = secondMoment41.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double double57 = secondMoment41.evaluate(doubleArray53);
        double[] doubleArray58 = new double[] {};
        secondMoment41.incrementAll(doubleArray58);
        secondMoment35.incrementAll(doubleArray58);
        secondMoment35.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        double[] doubleArray76 = new double[] { 10, (byte) 100 };
        double double77 = secondMoment64.evaluate(doubleArray76);
        double double78 = variance63.evaluate(doubleArray76);
        double double81 = variance20.evaluate(doubleArray76, (int) (short) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment82 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment82.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment82);
        double[] doubleArray91 = new double[] { 0L, (byte) 1, 6140.666666666667d, 544.5d, (byte) 100 };
        double double92 = secondMoment82.evaluate(doubleArray91);
        double double93 = variance20.evaluate(doubleArray91);
        double double94 = variance9.evaluate(doubleArray91);
        variance9.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 37.0d + "'", double33 == 37.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5d + "'", double40 == 0.5d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.5d + "'", double46 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 74.0d + "'", double57 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4050.0d + "'", double77 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4050.0d + "'", double78 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 1.0, 6140.666666666667, 544.5, 100.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2.880385675555556E7d + "'", double92 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 7200964.18888889d + "'", double93 == 7200964.18888889d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 7200964.18888889d + "'", double94 == 7200964.18888889d);
    }

    @Test
    public void test09217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09217");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(2.880385675555556E7d);
        long long12 = secondMoment1.getN();
        secondMoment1.increment((double) (short) 10);
        secondMoment1.increment((double) (short) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance17.increment(4.398046511104E12d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 544.5d + "'", double8 == 544.5d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 3L + "'", long12 == 3L);
    }

    @Test
    public void test09218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09218");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        secondMoment0.increment(0.28125d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment((double) ' ');
        secondMoment21.increment((double) (-1.0f));
        secondMoment21.clear();
        boolean boolean27 = variance20.equals((java.lang.Object) secondMoment21);
        double double28 = variance20.getResult();
        variance20.increment(3602.0d);
        long long31 = variance20.getN();
        double double32 = variance20.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        secondMoment34.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        secondMoment34.clear();
        double double41 = secondMoment34.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        secondMoment42.increment((double) (short) -1);
        secondMoment42.clear();
        secondMoment42.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        variance51.incrementAll(doubleArray58);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment63);
        secondMoment63.increment((double) (short) -1);
        secondMoment63.clear();
        secondMoment63.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        secondMoment73.increment((double) (short) 0);
        double double78 = secondMoment73.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment79.increment(1.0d);
        double[] doubleArray85 = new double[] { (-1L), 0, 10L };
        secondMoment79.incrementAll(doubleArray85, 0, 0);
        double double89 = secondMoment73.evaluate(doubleArray85);
        double double90 = secondMoment63.evaluate(doubleArray85);
        double double91 = variance51.evaluate(doubleArray85);
        secondMoment34.incrementAll(doubleArray85);
        double double93 = variance20.evaluate(doubleArray85);
        boolean boolean94 = secondMoment0.equals((java.lang.Object) double93);
        double double95 = secondMoment0.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.5d + "'", double78 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 37.0d + "'", double91 == 37.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 37.0d + "'", double93 == 37.0d);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test09219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09219");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        double double17 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        long long19 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long25 = variance24.getN();
        double double26 = variance24.getResult();
        variance24.increment((double) (short) 100);
        variance24.increment((double) 3L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        secondMoment32.incrementAll(doubleArray38, 0, 0);
        double[] doubleArray44 = new double[] { 10, (byte) 100 };
        double double45 = secondMoment32.evaluate(doubleArray44);
        long long46 = secondMoment32.getN();
        secondMoment32.clear();
        double double48 = secondMoment32.getResult();
        secondMoment32.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = variance50.evaluate(doubleArray57);
        double double63 = variance24.evaluate(doubleArray57, (double) 100);
        double double66 = secondMoment3.evaluate(doubleArray57, 0, (int) (byte) 1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = secondMoment68.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment68);
        double double84 = secondMoment68.getResult();
        secondMoment68.clear();
        double double86 = secondMoment68.getResult();
        double double87 = secondMoment68.getResult();
        secondMoment68.increment(4663.407407407407d);
        boolean boolean90 = secondMoment3.equals((java.lang.Object) secondMoment68);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4050.0d + "'", double45 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 2L + "'", long46 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 37.0d + "'", double61 == 37.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 37.0d + "'", double63 == 37.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test09220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09220");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        double double24 = secondMoment18.getResult();
        boolean boolean25 = secondMoment1.equals((java.lang.Object) double24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        double double48 = variance26.evaluate(doubleArray44, (int) (byte) 0, 0);
        long long49 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double double66 = secondMoment50.evaluate(doubleArray62);
        variance26.incrementAll(doubleArray62);
        long long68 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        secondMoment72.increment((double) (short) 0);
        double double77 = secondMoment72.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment78.increment(1.0d);
        double[] doubleArray84 = new double[] { (-1L), 0, 10L };
        secondMoment78.incrementAll(doubleArray84, 0, 0);
        double double88 = secondMoment72.evaluate(doubleArray84);
        double[] doubleArray89 = new double[] {};
        secondMoment72.incrementAll(doubleArray89);
        double double91 = secondMoment69.evaluate(doubleArray89);
        variance26.incrementAll(doubleArray89);
        double double93 = secondMoment1.evaluate(doubleArray89);
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(4034.0d);
        secondMoment1.increment(2201.3333333333335d);
        double double99 = secondMoment1.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 3L + "'", long68 == 3L);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.5d + "'", double77 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 4050.0d + "'", double93 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 1.1063310666666666E7d + "'", double99 == 1.1063310666666666E7d);
    }

    @Test
    public void test09221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09221");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        long long11 = secondMoment6.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        long long22 = secondMoment12.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        double[] doubleArray29 = new double[] { (-1L), 0, 10L };
        secondMoment23.incrementAll(doubleArray29, 0, 0);
        secondMoment12.incrementAll(doubleArray29, 0, (int) (short) 1);
        secondMoment6.incrementAll(doubleArray29, (int) (byte) 0, (int) (byte) 1);
        secondMoment0.incrementAll(doubleArray29);
        secondMoment0.increment((double) 1L);
        double double42 = secondMoment0.getResult();
        double double43 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 846.8333333333334d + "'", double42 == 846.8333333333334d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 846.8333333333334d + "'", double43 == 846.8333333333334d);
    }

    @Test
    public void test09222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09222");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double20 = variance8.evaluate(doubleArray15, (double) 1L);
        long long21 = variance8.getN();
        variance8.increment(36.916666666666664d);
        long long24 = variance8.getN();
        long long25 = variance8.getN();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 24.666666666666668d + "'", double20 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2L + "'", long21 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
    }

    @Test
    public void test09223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09223");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (byte) 0);
        secondMoment0.clear();
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        secondMoment0.increment(1576.2666666666667d);
        secondMoment0.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test09224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09224");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        double double23 = secondMoment7.evaluate(doubleArray19);
        double[] doubleArray24 = new double[] {};
        secondMoment7.incrementAll(doubleArray24);
        secondMoment1.incrementAll(doubleArray24);
        secondMoment1.increment((double) (byte) 10);
        secondMoment1.clear();
        secondMoment1.clear();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(36.99999998509884d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 74.0d + "'", double23 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
    }

    @Test
    public void test09225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09225");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        long long6 = secondMoment0.getN();
        secondMoment0.increment((double) 1.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment((double) ' ');
        secondMoment9.increment((double) (-1.0f));
        secondMoment9.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        long long26 = variance25.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double38 = variance25.evaluate(doubleArray33, (double) (short) -1);
        double double39 = secondMoment9.evaluate(doubleArray33);
        secondMoment9.clear();
        double double41 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean44 = variance43.isBiasCorrected();
        variance43.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment46);
        long long57 = variance56.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double double69 = variance56.evaluate(doubleArray64, (double) (short) -1);
        double double70 = variance43.evaluate(doubleArray64);
        double double71 = secondMoment9.evaluate(doubleArray64);
        double double72 = secondMoment0.evaluate(doubleArray64);
        double double73 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 37.0d + "'", double38 == 37.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 74.0d + "'", double39 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 37.0d + "'", double69 == 37.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 24.666666666666668d + "'", double70 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 74.0d + "'", double71 == 74.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 74.0d + "'", double73 == 74.0d);
    }

    @Test
    public void test09226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09226");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) 0);
        secondMoment0.clear();
        double double10 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        secondMoment12.increment((double) (byte) 0);
        secondMoment12.clear();
        secondMoment12.increment(272.25d);
        boolean boolean20 = secondMoment0.equals((java.lang.Object) 272.25d);
        secondMoment0.increment(4663.407407407407d);
        secondMoment0.clear();
        double[] doubleArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double25 = secondMoment0.evaluate(doubleArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09227");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.increment((double) (short) 0);
        double double18 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double29 = secondMoment13.evaluate(doubleArray25);
        double[] doubleArray30 = new double[] {};
        secondMoment13.incrementAll(doubleArray30);
        secondMoment7.incrementAll(doubleArray30);
        secondMoment7.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        double double50 = variance35.evaluate(doubleArray48);
        double double51 = secondMoment0.evaluate(doubleArray48);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment54);
        secondMoment54.increment((double) (short) -1);
        secondMoment54.clear();
        secondMoment54.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        variance63.incrementAll(doubleArray70);
        variance53.incrementAll(doubleArray70);
        long long76 = variance53.getN();
        long long77 = variance53.getN();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 74.0d + "'", double29 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
    }

    @Test
    public void test09228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09228");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(1.0d);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        double double8 = secondMoment0.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test09229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09229");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] {};
        secondMoment21.incrementAll(doubleArray38);
        double double42 = variance20.evaluate(doubleArray38, (int) (byte) 0, 0);
        long long43 = variance20.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        double double49 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double double60 = secondMoment44.evaluate(doubleArray56);
        variance20.incrementAll(doubleArray56);
        long long62 = variance20.getN();
        variance20.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = secondMoment65.evaluate(doubleArray80);
        variance20.incrementAll(doubleArray80);
        secondMoment1.incrementAll(doubleArray80);
        long long85 = secondMoment1.getN();
        double double86 = secondMoment1.getResult();
        double double87 = secondMoment1.getResult();
        secondMoment1.increment(1067.1666666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        long long91 = secondMoment1.getN();
        secondMoment1.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5d + "'", double49 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 3L + "'", long62 == 3L);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 2L + "'", long85 == 2L);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4050.0d + "'", double86 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4050.0d + "'", double87 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 3L + "'", long91 == 3L);
    }

    @Test
    public void test09230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09230");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        long long16 = secondMoment2.getN();
        secondMoment2.clear();
        double double18 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        variance21.increment((double) 0);
        long long24 = variance21.getN();
        variance21.increment(2.880385675555556E7d);
        boolean boolean27 = variance21.isBiasCorrected();
        variance21.increment(1801.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment30);
        secondMoment30.increment((double) (short) -1);
        secondMoment30.clear();
        double double37 = secondMoment30.getResult();
        secondMoment30.increment(7186.0d);
        secondMoment30.increment((double) 100);
        double double42 = secondMoment30.getResult();
        double double43 = secondMoment30.getResult();
        boolean boolean44 = variance21.equals((java.lang.Object) secondMoment30);
        java.lang.Class<?> wildcardClass45 = secondMoment30.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2.5105698E7d + "'", double42 == 2.5105698E7d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2.5105698E7d + "'", double43 == 2.5105698E7d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test09231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09231");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(2.880385675555556E7d);
        secondMoment1.increment(482.66666666666663d);
        double double14 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        secondMoment16.increment((double) (short) 0);
        long long21 = secondMoment16.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        secondMoment23.increment((double) (short) 0);
        double double28 = secondMoment23.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        secondMoment29.increment((double) (short) 0);
        double double34 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double double45 = secondMoment29.evaluate(doubleArray41);
        double[] doubleArray46 = new double[] {};
        secondMoment29.incrementAll(doubleArray46);
        secondMoment23.incrementAll(doubleArray46);
        long long49 = secondMoment23.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = variance50.evaluate(doubleArray57);
        secondMoment16.incrementAll(doubleArray57);
        secondMoment1.incrementAll(doubleArray57);
        double double64 = secondMoment1.getResult();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 544.5d + "'", double8 == 544.5d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 6.22239225373408E14d + "'", double14 == 6.22239225373408E14d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2L + "'", long21 == 2L);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5d + "'", double28 == 0.5d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5d + "'", double34 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 2L + "'", long49 == 2L);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 37.0d + "'", double61 == 37.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 74.0d + "'", double64 == 74.0d);
    }

    @Test
    public void test09232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09232");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(272.25d);
        long long7 = secondMoment1.getN();
        secondMoment1.increment((double) (byte) 100);
        double double10 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        secondMoment12.increment((double) (short) 0);
        double double17 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        secondMoment18.increment((double) (short) 0);
        double double23 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        double double34 = secondMoment18.evaluate(doubleArray30);
        double[] doubleArray35 = new double[] {};
        secondMoment18.incrementAll(doubleArray35);
        secondMoment12.incrementAll(doubleArray35);
        secondMoment12.increment((double) (byte) 10);
        secondMoment12.clear();
        double double41 = secondMoment12.getResult();
        secondMoment12.clear();
        double double43 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double[] doubleArray57 = new double[] { 10, (byte) 100 };
        double double58 = secondMoment45.evaluate(doubleArray57);
        double double59 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment45);
        long long61 = secondMoment45.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment((double) ' ');
        secondMoment62.increment((double) (-1.0f));
        secondMoment62.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment68);
        long long79 = variance78.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        double double91 = variance78.evaluate(doubleArray86, (double) (short) -1);
        double double92 = secondMoment62.evaluate(doubleArray86);
        double double93 = secondMoment45.evaluate(doubleArray86);
        double double96 = secondMoment12.evaluate(doubleArray86, (int) (byte) 1, (int) (byte) 0);
        double double97 = variance11.evaluate(doubleArray86);
        variance11.setBiasCorrected(true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 30671.375d + "'", double10 == 30671.375d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.5d + "'", double17 == 0.5d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5d + "'", double23 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 74.0d + "'", double34 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 2L + "'", long61 == 2L);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 37.0d + "'", double91 == 37.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 74.0d + "'", double92 == 74.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 74.0d + "'", double93 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 37.0d + "'", double97 == 37.0d);
    }

    @Test
    public void test09233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09233");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance16.increment(0.0d);
        variance16.clear();
        double double20 = variance16.getResult();
        variance16.setBiasCorrected(true);
        variance16.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2025.0d + "'", double20 == 2025.0d);
    }

    @Test
    public void test09234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09234");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        variance9.clear();
        variance9.increment((double) (byte) 10);
        double double14 = variance9.getResult();
        java.lang.Class<?> wildcardClass15 = variance9.getClass();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test09235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09235");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance27.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        secondMoment29.increment((double) (short) 0);
        double double34 = secondMoment29.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment((double) ' ');
        double double38 = secondMoment35.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment35);
        boolean boolean40 = secondMoment29.equals((java.lang.Object) variance39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        secondMoment41.increment((double) (short) -1);
        secondMoment41.clear();
        secondMoment41.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        long long51 = variance50.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        secondMoment55.increment((double) (short) 0);
        double double60 = secondMoment55.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        double[] doubleArray67 = new double[] { (-1L), 0, 10L };
        secondMoment61.incrementAll(doubleArray67, 0, 0);
        double double71 = secondMoment55.evaluate(doubleArray67);
        double[] doubleArray72 = new double[] {};
        secondMoment55.incrementAll(doubleArray72);
        double double74 = secondMoment52.evaluate(doubleArray72);
        double double75 = variance50.evaluate(doubleArray72);
        double double76 = secondMoment29.evaluate(doubleArray72);
        double double77 = variance27.evaluate(doubleArray72);
        variance27.clear();
        variance27.increment(3.925812428E7d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.5d + "'", double34 == 0.5d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.5d + "'", double60 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 74.0d + "'", double71 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.5d + "'", double76 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
    }

    @Test
    public void test09236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09236");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double9 = secondMoment1.getResult();
        secondMoment1.increment(6.637281066652788E14d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test09237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09237");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double18 = secondMoment0.getResult();
        long long19 = secondMoment0.getN();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    }

    @Test
    public void test09238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09238");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        secondMoment29.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        secondMoment34.increment((double) (short) 0);
        double double39 = secondMoment34.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        double double45 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double double56 = secondMoment40.evaluate(doubleArray52);
        double[] doubleArray57 = new double[] {};
        secondMoment40.incrementAll(doubleArray57);
        secondMoment34.incrementAll(doubleArray57);
        secondMoment34.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        double[] doubleArray75 = new double[] { 10, (byte) 100 };
        double double76 = secondMoment63.evaluate(doubleArray75);
        double double77 = variance62.evaluate(doubleArray75);
        double double78 = secondMoment29.evaluate(doubleArray75);
        double double79 = variance28.evaluate(doubleArray75);
        long long80 = variance28.getN();
        variance28.clear();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.5d + "'", double39 == 0.5d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 74.0d + "'", double56 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4050.0d + "'", double76 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4050.0d + "'", double77 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4050.0d + "'", double78 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4050.0d + "'", double79 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 2L + "'", long80 == 2L);
    }

    @Test
    public void test09239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09239");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) '4');
        double double7 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment(5.49755813888E11d);
        secondMoment1.clear();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance15.clear();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
    }

    @Test
    public void test09240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09240");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        secondMoment5.incrementAll(doubleArray11, 0, 0);
        double[] doubleArray17 = new double[] { 10, (byte) 100 };
        double double18 = secondMoment5.evaluate(doubleArray17);
        double double19 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment5);
        long long21 = secondMoment5.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment((double) ' ');
        secondMoment22.increment((double) (-1.0f));
        secondMoment22.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        long long39 = variance38.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        secondMoment40.incrementAll(doubleArray46, 0, 0);
        double double51 = variance38.evaluate(doubleArray46, (double) (short) -1);
        double double52 = secondMoment22.evaluate(doubleArray46);
        double double53 = secondMoment5.evaluate(doubleArray46);
        secondMoment0.incrementAll(doubleArray46);
        double double55 = secondMoment0.getResult();
        long long56 = secondMoment0.getN();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4050.0d + "'", double18 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4050.0d + "'", double19 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2L + "'", long21 == 2L);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 37.0d + "'", double51 == 37.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 74.0d + "'", double52 == 74.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 74.0d + "'", double53 == 74.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 704.7500000000001d + "'", double55 == 704.7500000000001d);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 4L + "'", long56 == 4L);
    }

    @Test
    public void test09241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09241");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        secondMoment0.increment(74.0d);
        double double7 = secondMoment0.getResult();
        secondMoment0.increment(7077.0d);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        secondMoment17.increment((double) (short) 0);
        double double22 = secondMoment17.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        double[] doubleArray29 = new double[] { (-1L), 0, 10L };
        secondMoment23.incrementAll(doubleArray29, 0, 0);
        double double33 = secondMoment17.evaluate(doubleArray29);
        double[] doubleArray34 = new double[] {};
        secondMoment17.incrementAll(doubleArray34);
        secondMoment11.incrementAll(doubleArray34);
        secondMoment11.increment((double) 2L);
        double double39 = secondMoment11.getResult();
        boolean boolean40 = secondMoment0.equals((java.lang.Object) secondMoment11);
        long long41 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3602.0d + "'", double7 == 3602.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.5d + "'", double22 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 74.0d + "'", double33 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2.0d + "'", double39 == 2.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
    }

    @Test
    public void test09242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09242");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long11 = variance10.getN();
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double[] doubleArray33 = new double[] { 10, (byte) 100 };
        double double34 = secondMoment21.evaluate(doubleArray33);
        double double35 = secondMoment21.getResult();
        long long36 = secondMoment21.getN();
        long long37 = secondMoment21.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        boolean boolean39 = secondMoment14.equals((java.lang.Object) secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment14);
        variance40.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        secondMoment42.increment((double) (short) 0);
        double double47 = secondMoment42.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment((double) ' ');
        double double51 = secondMoment48.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment48);
        boolean boolean53 = secondMoment42.equals((java.lang.Object) variance52);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment54);
        secondMoment54.increment((double) (short) -1);
        secondMoment54.clear();
        secondMoment54.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment54);
        long long64 = variance63.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        secondMoment68.increment((double) (short) 0);
        double double73 = secondMoment68.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double double84 = secondMoment68.evaluate(doubleArray80);
        double[] doubleArray85 = new double[] {};
        secondMoment68.incrementAll(doubleArray85);
        double double87 = secondMoment65.evaluate(doubleArray85);
        double double88 = variance63.evaluate(doubleArray85);
        double double89 = secondMoment42.evaluate(doubleArray85);
        double double90 = variance40.evaluate(doubleArray85);
        double double91 = variance10.evaluate(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4050.0d + "'", double34 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4050.0d + "'", double35 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 2L + "'", long36 == 2L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 2L + "'", long37 == 2L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.5d + "'", double47 == 0.5d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5d + "'", double73 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.5d + "'", double89 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
    }

    @Test
    public void test09243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09243");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) 0);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        secondMoment26.increment((double) (short) 0);
        double double31 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        secondMoment32.incrementAll(doubleArray38, 0, 0);
        double double42 = secondMoment26.evaluate(doubleArray38);
        double[] doubleArray43 = new double[] {};
        secondMoment26.incrementAll(doubleArray43);
        double double45 = secondMoment23.evaluate(doubleArray43);
        double double46 = variance22.evaluate(doubleArray43);
        long long47 = variance22.getN();
        double double48 = variance22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        double[] doubleArray61 = new double[] { 10, (byte) 100 };
        double double62 = secondMoment49.evaluate(doubleArray61);
        double double64 = variance22.evaluate(doubleArray61, (double) (-1));
        double double65 = variance10.evaluate(doubleArray61);
        secondMoment0.incrementAll(doubleArray61);
        secondMoment0.increment(1984.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5d + "'", double31 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 74.0d + "'", double42 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4050.0d + "'", double65 == 4050.0d);
    }

    @Test
    public void test09244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09244");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double double17 = secondMoment1.evaluate(doubleArray13);
        double[] doubleArray18 = new double[] {};
        secondMoment1.incrementAll(doubleArray18);
        double double22 = variance0.evaluate(doubleArray18, (int) (byte) 0, 0);
        long long23 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        variance0.incrementAll(doubleArray36);
        variance0.increment((double) 10);
        variance0.clear();
        variance0.clear();
        long long46 = variance0.getN();
        double double47 = variance0.getResult();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 74.0d + "'", double17 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test09245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09245");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.increment(116966.7222222222d);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment(458.6666666666667d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double[] doubleArray30 = new double[] { 10, (byte) 100 };
        double double31 = secondMoment18.evaluate(doubleArray30);
        long long32 = secondMoment18.getN();
        secondMoment18.clear();
        double double34 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        secondMoment36.increment((double) (short) 0);
        double double41 = secondMoment36.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        secondMoment42.increment((double) (short) 0);
        double double47 = secondMoment42.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double double58 = secondMoment42.evaluate(doubleArray54);
        double[] doubleArray59 = new double[] {};
        secondMoment42.incrementAll(doubleArray59);
        secondMoment36.incrementAll(doubleArray59);
        secondMoment36.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        double[] doubleArray77 = new double[] { 10, (byte) 100 };
        double double78 = secondMoment65.evaluate(doubleArray77);
        double double79 = variance64.evaluate(doubleArray77);
        double double80 = secondMoment18.evaluate(doubleArray77);
        secondMoment0.incrementAll(doubleArray77);
        secondMoment0.increment(237360.5d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4050.0d + "'", double31 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2L + "'", long32 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.5d + "'", double41 == 0.5d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.5d + "'", double47 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 74.0d + "'", double58 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4050.0d + "'", double78 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4050.0d + "'", double79 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 4050.0d + "'", double80 == 4050.0d);
    }

    @Test
    public void test09246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09246");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(3602.0d);
        double double31 = secondMoment0.getResult();
        secondMoment0.increment((double) 100.0f);
        secondMoment0.clear();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 9725402.75d + "'", double31 == 9725402.75d);
    }

    @Test
    public void test09247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09247");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        double double18 = variance10.getResult();
        variance10.increment(3602.0d);
        long long21 = variance10.getN();
        double double22 = variance10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        double[] doubleArray38 = new double[] { 10, (byte) 100 };
        double double39 = secondMoment26.evaluate(doubleArray38);
        double double40 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        long long42 = secondMoment26.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        double double44 = secondMoment26.getResult();
        long long45 = secondMoment26.getN();
        secondMoment26.clear();
        secondMoment26.clear();
        double double48 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment((double) ' ');
        secondMoment50.increment((double) (-1.0f));
        secondMoment50.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment56);
        long long67 = variance66.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double double79 = variance66.evaluate(doubleArray74, (double) (short) -1);
        double double80 = secondMoment50.evaluate(doubleArray74);
        double double81 = variance49.evaluate(doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            double double84 = variance10.evaluate(doubleArray74, (int) (short) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4050.0d + "'", double40 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 2L + "'", long42 == 2L);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4050.0d + "'", double44 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 2L + "'", long45 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 37.0d + "'", double79 == 37.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 74.0d + "'", double80 == 74.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 24.666666666666668d + "'", double81 == 24.666666666666668d);
    }

    @Test
    public void test09248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09248");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(544.5d);
        secondMoment0.clear();
        double double15 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long17 = secondMoment0.getN();
        secondMoment0.increment(148.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        secondMoment20.increment((double) (short) 0);
        secondMoment20.increment(74.0d);
        double double27 = secondMoment20.getResult();
        double double28 = secondMoment20.getResult();
        secondMoment20.increment(7077.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.FirstMoment firstMoment32 = new org.apache.commons.math.stat.descriptive.moment.FirstMoment();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        secondMoment33.increment((double) (short) 0);
        double double38 = secondMoment33.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        secondMoment39.increment((double) (short) 0);
        double double44 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double double55 = secondMoment39.evaluate(doubleArray51);
        double[] doubleArray56 = new double[] {};
        secondMoment39.incrementAll(doubleArray56);
        secondMoment33.incrementAll(doubleArray56);
        secondMoment33.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        secondMoment33.increment(0.5d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment64);
        long long75 = variance74.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        double[] doubleArray82 = new double[] { (-1L), 0, 10L };
        secondMoment76.incrementAll(doubleArray82, 0, 0);
        double double87 = variance74.evaluate(doubleArray82, (double) (short) -1);
        double double90 = secondMoment33.evaluate(doubleArray82, (int) (byte) 1, (int) (byte) 1);
        firstMoment32.incrementAll(doubleArray82);
        double double92 = variance31.evaluate(doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double double95 = secondMoment0.evaluate(doubleArray82, (int) (byte) -1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 3602.0d + "'", double27 == 3602.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 3602.0d + "'", double28 == 3602.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5d + "'", double38 == 0.5d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.5d + "'", double44 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 74.0d + "'", double55 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 37.0d + "'", double87 == 37.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 37.0d + "'", double92 == 37.0d);
    }

    @Test
    public void test09249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09249");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        secondMoment0.clear();
        double double16 = secondMoment0.getResult();
        secondMoment0.increment((double) 1.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        secondMoment0.increment(482.66666666666663d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test09250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09250");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (-1.0f));
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        long long18 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double30 = variance17.evaluate(doubleArray25, (double) (short) -1);
        double double31 = secondMoment1.evaluate(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) 10.0f);
        double double35 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance36.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 110.75d + "'", double35 == 110.75d);
    }

    @Test
    public void test09251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09251");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        double double24 = secondMoment18.getResult();
        boolean boolean25 = secondMoment1.equals((java.lang.Object) double24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        double double48 = variance26.evaluate(doubleArray44, (int) (byte) 0, 0);
        long long49 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double double66 = secondMoment50.evaluate(doubleArray62);
        variance26.incrementAll(doubleArray62);
        long long68 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        secondMoment72.increment((double) (short) 0);
        double double77 = secondMoment72.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment78.increment(1.0d);
        double[] doubleArray84 = new double[] { (-1L), 0, 10L };
        secondMoment78.incrementAll(doubleArray84, 0, 0);
        double double88 = secondMoment72.evaluate(doubleArray84);
        double[] doubleArray89 = new double[] {};
        secondMoment72.incrementAll(doubleArray89);
        double double91 = secondMoment69.evaluate(doubleArray89);
        variance26.incrementAll(doubleArray89);
        double double93 = secondMoment1.evaluate(doubleArray89);
        double double94 = secondMoment1.getResult();
        secondMoment1.clear();
        double double96 = secondMoment1.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 3L + "'", long68 == 3L);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.5d + "'", double77 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 4050.0d + "'", double93 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 4050.0d + "'", double94 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test09252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09252");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        secondMoment1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        boolean boolean15 = secondMoment1.equals((java.lang.Object) secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double[] doubleArray31 = new double[] { 10, (byte) 100 };
        double double32 = secondMoment19.evaluate(doubleArray31);
        double double33 = secondMoment16.evaluate(doubleArray31);
        secondMoment1.incrementAll(doubleArray31);
        secondMoment1.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment38);
        secondMoment38.increment((double) (short) -1);
        long long44 = secondMoment38.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment38);
        double double47 = secondMoment38.getResult();
        secondMoment38.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double double66 = secondMoment50.evaluate(doubleArray62);
        double[] doubleArray67 = new double[] {};
        secondMoment50.incrementAll(doubleArray67);
        double double71 = variance49.evaluate(doubleArray67, (int) (byte) 0, 0);
        long long72 = variance49.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        secondMoment73.increment((double) (short) 0);
        double double78 = secondMoment73.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment79.increment(1.0d);
        double[] doubleArray85 = new double[] { (-1L), 0, 10L };
        secondMoment79.incrementAll(doubleArray85, 0, 0);
        double double89 = secondMoment73.evaluate(doubleArray85);
        variance49.incrementAll(doubleArray85);
        double double91 = secondMoment38.evaluate(doubleArray85);
        secondMoment1.incrementAll(doubleArray85);
        secondMoment1.increment(0.0d);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance96 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 2L + "'", long44 == 2L);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 544.5d + "'", double47 == 544.5d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.5d + "'", double78 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 74.0d + "'", double91 == 74.0d);
    }

    @Test
    public void test09253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09253");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) 10L);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double[] doubleArray19 = new double[] { 10, (byte) 100 };
        double double20 = secondMoment7.evaluate(doubleArray19);
        double double21 = secondMoment7.getResult();
        secondMoment7.increment((double) (short) -1);
        double[] doubleArray25 = new double[] { (short) 1 };
        secondMoment7.incrementAll(doubleArray25);
        long long27 = secondMoment7.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        secondMoment29.increment((double) (short) 0);
        long long34 = secondMoment29.getN();
        double double35 = secondMoment29.getResult();
        secondMoment29.increment((double) (byte) 10);
        secondMoment29.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        long long50 = variance49.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double62 = variance49.evaluate(doubleArray57, (double) (short) -1);
        double double63 = secondMoment29.evaluate(doubleArray57);
        double double64 = secondMoment7.evaluate(doubleArray57);
        double double65 = secondMoment0.evaluate(doubleArray57);
        secondMoment0.increment(4.129541834901621E10d);
        secondMoment0.increment(30671.375d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 40.5d + "'", double5 == 40.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 4L + "'", long27 == 4L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 2L + "'", long34 == 2L);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.5d + "'", double35 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 37.0d + "'", double62 == 37.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 74.0d + "'", double64 == 74.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
    }

    @Test
    public void test09254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09254");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double[] doubleArray34 = new double[] { 10, (byte) 100 };
        double double35 = secondMoment22.evaluate(doubleArray34);
        double double36 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment22);
        long long38 = secondMoment22.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment((double) ' ');
        secondMoment39.increment((double) (-1.0f));
        secondMoment39.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment45);
        long long56 = variance55.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        secondMoment57.incrementAll(doubleArray63, 0, 0);
        double double68 = variance55.evaluate(doubleArray63, (double) (short) -1);
        double double69 = secondMoment39.evaluate(doubleArray63);
        double double70 = secondMoment22.evaluate(doubleArray63);
        double double71 = secondMoment2.evaluate(doubleArray63);
        secondMoment2.increment(1.0d);
        secondMoment2.clear();
        secondMoment2.increment(1.843691713502358E14d);
        secondMoment2.clear();
        double double78 = secondMoment2.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4050.0d + "'", double35 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4050.0d + "'", double36 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 2L + "'", long38 == 2L);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 37.0d + "'", double68 == 37.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 74.0d + "'", double69 == 74.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 74.0d + "'", double70 == 74.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 74.0d + "'", double71 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
    }

    @Test
    public void test09255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09255");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance8.increment((double) (short) 0);
        long long11 = variance8.getN();
        double double12 = variance8.getResult();
        double double13 = variance8.getResult();
        variance8.setBiasCorrected(false);
        double[] doubleArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double19 = variance8.evaluate(doubleArray16, (int) ' ', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test09256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09256");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        secondMoment3.increment((double) (short) 0);
        double double8 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double19 = secondMoment3.evaluate(doubleArray15);
        double[] doubleArray20 = new double[] {};
        secondMoment3.incrementAll(doubleArray20);
        double double24 = variance2.evaluate(doubleArray20, (int) (byte) 0, 0);
        variance1.incrementAll(doubleArray20);
        double double26 = variance1.getResult();
        double double27 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long30 = variance29.getN();
        double double31 = variance29.getResult();
        variance29.increment((double) (short) 100);
        boolean boolean34 = variance29.isBiasCorrected();
        long long35 = variance29.getN();
        variance29.clear();
        variance29.clear();
        boolean boolean38 = variance1.equals((java.lang.Object) variance29);
        variance29.increment(Double.NaN);
        long long41 = variance29.getN();
        double[] doubleArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double43 = variance29.evaluate(doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 74.0d + "'", double19 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
    }

    @Test
    public void test09257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09257");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        variance1.increment((double) 3L);
        variance1.clear();
        variance1.increment(6140.666666666667d);
        long long11 = variance1.getN();
        variance1.increment(3.2809195541666664E7d);
        variance1.clear();
        variance1.clear();
        variance1.increment(12413.42857142857d);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
    }

    @Test
    public void test09258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09258");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(24.666666666666668d);
        secondMoment0.clear();
        secondMoment0.increment((-1.0d));
        secondMoment0.increment(7130.75d);
        java.lang.Object obj36 = null;
        boolean boolean37 = secondMoment0.equals(obj36);
        double double38 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2.543092903125E7d + "'", double38 == 2.543092903125E7d);
    }

    @Test
    public void test09259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09259");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        secondMoment0.increment(0.0d);
        secondMoment0.increment((double) 0);
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.increment(1.2769222590825915E28d);
        long long15 = secondMoment0.getN();
        double double16 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test09260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09260");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        double double10 = variance9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        double double25 = secondMoment11.getResult();
        secondMoment11.increment((double) (short) -1);
        double[] doubleArray29 = new double[] { (short) 1 };
        secondMoment11.incrementAll(doubleArray29);
        long long31 = secondMoment11.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment32);
        secondMoment32.increment((double) (short) -1);
        secondMoment32.clear();
        secondMoment32.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment32);
        long long42 = variance41.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        double double51 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double double62 = secondMoment46.evaluate(doubleArray58);
        double[] doubleArray63 = new double[] {};
        secondMoment46.incrementAll(doubleArray63);
        double double65 = secondMoment43.evaluate(doubleArray63);
        double double66 = variance41.evaluate(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        secondMoment70.increment((double) (short) 0);
        double double75 = secondMoment70.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        double[] doubleArray82 = new double[] { (-1L), 0, 10L };
        secondMoment76.incrementAll(doubleArray82, 0, 0);
        double double86 = secondMoment70.evaluate(doubleArray82);
        double[] doubleArray87 = new double[] {};
        secondMoment70.incrementAll(doubleArray87);
        double double89 = secondMoment67.evaluate(doubleArray87);
        variance41.incrementAll(doubleArray87);
        double double91 = secondMoment11.evaluate(doubleArray87);
        double double92 = variance9.evaluate(doubleArray87);
        double double93 = secondMoment0.evaluate(doubleArray87);
        double double94 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(1769.25d);
        double double98 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 4L + "'", long31 == 4L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5d + "'", double51 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 74.0d + "'", double62 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.5d + "'", double75 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 74.0d + "'", double86 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 7077.0d + "'", double91 == 7077.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 544.5d + "'", double93 == 544.5d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 544.5d + "'", double94 == 544.5d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
    }

    @Test
    public void test09261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09261");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.clear();
        variance2.setBiasCorrected(true);
        variance2.setBiasCorrected(false);
        boolean boolean8 = variance2.isBiasCorrected();
        // The following exception was thrown during execution in test generation
        try {
            double double9 = variance2.getResult();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test09262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09262");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        secondMoment2.increment((double) (-1.0f));
        double double7 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) (short) -1);
        long long16 = secondMoment10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        double double19 = secondMoment10.getResult();
        secondMoment10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        secondMoment22.increment((double) (short) 0);
        double double27 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double38 = secondMoment22.evaluate(doubleArray34);
        double[] doubleArray39 = new double[] {};
        secondMoment22.incrementAll(doubleArray39);
        double double43 = variance21.evaluate(doubleArray39, (int) (byte) 0, 0);
        long long44 = variance21.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = secondMoment45.evaluate(doubleArray57);
        variance21.incrementAll(doubleArray57);
        double double63 = secondMoment10.evaluate(doubleArray57);
        secondMoment2.incrementAll(doubleArray57);
        secondMoment2.increment(3602.0d);
        double double67 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.clear();
        secondMoment2.clear();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 544.5d + "'", double7 == 544.5d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 544.5d + "'", double19 == 544.5d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5d + "'", double27 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 74.0d + "'", double38 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 9714674.75d + "'", double67 == 9714674.75d);
    }

    @Test
    public void test09263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09263");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) (byte) 10);
        secondMoment0.clear();
        double double29 = secondMoment0.getResult();
        secondMoment0.increment(8.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test09264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09264");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance9.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        secondMoment11.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double[] doubleArray32 = new double[] { 10, (byte) 100 };
        double double33 = secondMoment20.evaluate(doubleArray32);
        long long34 = secondMoment20.getN();
        secondMoment20.clear();
        double double36 = secondMoment20.getResult();
        secondMoment20.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        double double49 = variance38.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        long long60 = secondMoment50.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        double[] doubleArray67 = new double[] { (-1L), 0, 10L };
        secondMoment61.incrementAll(doubleArray67, 0, 0);
        secondMoment50.incrementAll(doubleArray67, 0, (int) (short) 1);
        double double75 = variance38.evaluate(doubleArray67, (double) 100.0f);
        double double76 = secondMoment11.evaluate(doubleArray67);
        variance9.incrementAll(doubleArray67);
        long long78 = variance9.getN();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 2L + "'", long34 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 37.0d + "'", double49 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 37.0d + "'", double75 == 37.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 74.0d + "'", double76 == 74.0d);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1L + "'", long78 == 1L);
    }

    @Test
    public void test09265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09265");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(1.218679475E7d);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        secondMoment10.clear();
        secondMoment10.increment(1.218679475E7d);
        secondMoment10.clear();
        secondMoment10.clear();
        secondMoment10.clear();
        boolean boolean22 = secondMoment0.equals((java.lang.Object) secondMoment10);
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test09266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09266");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        long long7 = variance6.getN();
        double double8 = variance6.getResult();
        boolean boolean9 = variance6.isBiasCorrected();
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double[] doubleArray24 = new double[] { 10, (byte) 100 };
        double double25 = secondMoment12.evaluate(doubleArray24);
        long long26 = secondMoment12.getN();
        secondMoment12.clear();
        double double28 = secondMoment12.getResult();
        secondMoment12.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        double double41 = variance30.evaluate(doubleArray37);
        variance30.setBiasCorrected(false);
        variance30.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = secondMoment45.evaluate(doubleArray57);
        double double62 = variance30.evaluate(doubleArray57);
        variance6.incrementAll(doubleArray57);
        long long64 = variance6.getN();
        variance6.clear();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 37.0d + "'", double41 == 37.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 24.666666666666668d + "'", double62 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
    }

    @Test
    public void test09267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09267");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.increment((double) (short) 0);
        double double18 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double29 = secondMoment13.evaluate(doubleArray25);
        double[] doubleArray30 = new double[] {};
        secondMoment13.incrementAll(doubleArray30);
        secondMoment7.incrementAll(doubleArray30);
        secondMoment7.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        double double50 = variance35.evaluate(doubleArray48);
        double double51 = secondMoment0.evaluate(doubleArray48);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment54);
        secondMoment54.increment((double) (short) -1);
        secondMoment54.clear();
        secondMoment54.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        variance63.incrementAll(doubleArray70);
        variance53.incrementAll(doubleArray70);
        long long76 = variance53.getN();
        variance53.clear();
        variance53.increment(604.6666666666666d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 74.0d + "'", double29 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
    }

    @Test
    public void test09268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09268");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double[] doubleArray41 = new double[] { 10, (byte) 100 };
        double double42 = secondMoment29.evaluate(doubleArray41);
        double double43 = variance28.evaluate(doubleArray41);
        long long44 = variance28.getN();
        double double45 = variance28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        secondMoment46.increment((double) (short) -1);
        double[] doubleArray64 = new double[] { (short) 1 };
        secondMoment46.incrementAll(doubleArray64);
        double double66 = variance28.evaluate(doubleArray64);
        variance28.increment((double) 100);
        double double69 = variance28.getResult();
        variance28.increment(4034.0d);
        long long72 = variance28.getN();
        variance28.clear();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4050.0d + "'", double42 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4050.0d + "'", double43 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 3L + "'", long44 == 3L);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 3L + "'", long72 == 3L);
    }

    @Test
    public void test09269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09269");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.clear();
        variance2.clear();
        variance2.increment((double) (short) -1);
        boolean boolean7 = variance2.isBiasCorrected();
        variance2.increment(2.0d);
        // The following exception was thrown during execution in test generation
        try {
            long long10 = variance2.getN();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test09270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09270");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment((double) 0.0f);
        secondMoment1.clear();
        double double9 = secondMoment1.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test09271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09271");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.clear();
        variance2.increment((double) 1.0f);
        variance2.clear();
        variance2.setBiasCorrected(true);
    }

    @Test
    public void test09272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09272");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        double double18 = variance10.getResult();
        long long19 = variance10.getN();
        variance10.increment((double) 100L);
        long long22 = variance10.getN();
        long long23 = variance10.getN();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
    }

    @Test
    public void test09273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09273");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        secondMoment1.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double10 = secondMoment1.getResult();
        secondMoment1.clear();
        secondMoment1.increment(37.00000000372529d);
        secondMoment1.increment(2700.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.6666666666666666d + "'", double10 == 0.6666666666666666d);
    }

    @Test
    public void test09274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09274");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(272.25d);
        secondMoment0.increment((double) 100L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        secondMoment8.increment((double) (short) -1);
        secondMoment8.clear();
        secondMoment8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        long long18 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        secondMoment22.increment((double) (short) 0);
        double double27 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double38 = secondMoment22.evaluate(doubleArray34);
        double[] doubleArray39 = new double[] {};
        secondMoment22.incrementAll(doubleArray39);
        double double41 = secondMoment19.evaluate(doubleArray39);
        double double42 = variance17.evaluate(doubleArray39);
        secondMoment0.incrementAll(doubleArray39, (int) (byte) 0, (int) (byte) 0);
        long long46 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment((double) ' ');
        secondMoment47.increment((double) '4');
        long long52 = secondMoment47.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment47);
        double double54 = variance53.getResult();
        boolean boolean55 = variance53.isBiasCorrected();
        variance53.increment(1576.2666666666667d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        secondMoment59.increment((double) (short) 0);
        double double64 = secondMoment59.getResult();
        secondMoment59.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment59);
        double double67 = secondMoment59.getResult();
        secondMoment59.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment71);
        secondMoment71.increment((double) (short) -1);
        secondMoment71.clear();
        secondMoment71.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment81.increment(1.0d);
        double[] doubleArray87 = new double[] { (-1L), 0, 10L };
        secondMoment81.incrementAll(doubleArray87, 0, 0);
        variance80.incrementAll(doubleArray87);
        variance70.incrementAll(doubleArray87);
        double double93 = secondMoment59.evaluate(doubleArray87);
        double double94 = variance53.evaluate(doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            secondMoment0.incrementAll(doubleArray87, 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5d + "'", double27 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 74.0d + "'", double38 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 3L + "'", long46 == 3L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 2L + "'", long52 == 2L);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 200.0d + "'", double54 == 200.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.5d + "'", double64 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 74.0d + "'", double93 == 74.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 37.0d + "'", double94 == 37.0d);
    }

    @Test
    public void test09275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09275");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance7.increment(2.9501440888888888E7d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) (short) -1);
        secondMoment10.clear();
        double double17 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        secondMoment18.increment((double) (short) 0);
        double double23 = secondMoment18.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        double double34 = secondMoment18.evaluate(doubleArray30);
        secondMoment10.incrementAll(doubleArray30, 0, (int) (short) 0);
        secondMoment10.increment((double) (-1.0f));
        secondMoment10.clear();
        double double41 = secondMoment10.getResult();
        secondMoment10.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment((double) ' ');
        secondMoment43.increment((double) '4');
        long long48 = secondMoment43.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment43);
        double double50 = variance49.getResult();
        variance49.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        secondMoment53.increment((double) (short) 0);
        double double58 = secondMoment53.getResult();
        secondMoment53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment53);
        double double61 = secondMoment53.getResult();
        secondMoment53.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment65);
        secondMoment65.increment((double) (short) -1);
        secondMoment65.clear();
        secondMoment65.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        variance74.incrementAll(doubleArray81);
        variance64.incrementAll(doubleArray81);
        double double87 = secondMoment53.evaluate(doubleArray81);
        double double88 = variance49.evaluate(doubleArray81);
        double double89 = secondMoment10.evaluate(doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            variance7.incrementAll(doubleArray81, (int) (short) 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.5d + "'", double23 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 74.0d + "'", double34 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 2L + "'", long48 == 2L);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 200.0d + "'", double50 == 200.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.5d + "'", double58 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 37.0d + "'", double88 == 37.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
    }

    @Test
    public void test09276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09276");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        long long17 = variance16.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double29 = variance16.evaluate(doubleArray24, (double) (short) -1);
        double double30 = secondMoment0.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) 10.0f);
        double double34 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 110.75d + "'", double34 == 110.75d);
    }

    @Test
    public void test09277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09277");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(272.25d);
        long long6 = secondMoment0.getN();
        secondMoment0.increment((double) (byte) 100);
        double double9 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        secondMoment11.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment((double) ' ');
        secondMoment35.increment((double) (short) 10);
        secondMoment35.increment((double) 2L);
        double double42 = secondMoment35.getResult();
        double double43 = secondMoment35.getResult();
        secondMoment35.increment(37.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        double double51 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        secondMoment52.increment((double) (short) 0);
        double double57 = secondMoment52.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double double68 = secondMoment52.evaluate(doubleArray64);
        double[] doubleArray69 = new double[] {};
        secondMoment52.incrementAll(doubleArray69);
        secondMoment46.incrementAll(doubleArray69);
        secondMoment46.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double[] doubleArray87 = new double[] { 10, (byte) 100 };
        double double88 = secondMoment75.evaluate(doubleArray87);
        double double89 = variance74.evaluate(doubleArray87);
        double double90 = secondMoment35.evaluate(doubleArray87);
        secondMoment11.incrementAll(doubleArray87);
        double double92 = secondMoment0.evaluate(doubleArray87);
        double double93 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 30671.375d + "'", double9 == 30671.375d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 482.66666666666663d + "'", double42 == 482.66666666666663d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 482.66666666666663d + "'", double43 == 482.66666666666663d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5d + "'", double51 == 0.5d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5d + "'", double57 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 4050.0d + "'", double88 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4050.0d + "'", double89 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4050.0d + "'", double90 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 4050.0d + "'", double92 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 4050.0d + "'", double93 == 4050.0d);
    }

    @Test
    public void test09278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09278");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        secondMoment8.increment((double) (short) -1);
        long long14 = secondMoment8.getN();
        double double15 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment8);
        long long18 = variance17.getN();
        boolean boolean19 = variance17.isBiasCorrected();
        variance17.clear();
        variance17.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        double[] doubleArray41 = new double[] {};
        secondMoment24.incrementAll(doubleArray41);
        double double45 = variance23.evaluate(doubleArray41, (int) (byte) 0, 0);
        long long46 = variance23.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double double63 = secondMoment47.evaluate(doubleArray59);
        variance23.incrementAll(doubleArray59);
        variance23.increment((double) 10);
        boolean boolean67 = variance17.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = secondMoment68.getResult();
        secondMoment68.increment((double) (short) -1);
        double[] doubleArray86 = new double[] { (short) 1 };
        secondMoment68.incrementAll(doubleArray86);
        double double88 = variance17.evaluate(doubleArray86);
        double double89 = secondMoment0.evaluate(doubleArray86);
        secondMoment0.increment(3602.0d);
        long long92 = secondMoment0.getN();
        secondMoment0.increment((double) 'a');
        secondMoment0.increment(1067.1666666666667d);
        double double97 = secondMoment0.getResult();
        secondMoment0.increment(2.638441083253222E14d);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 544.5d + "'", double15 == 544.5d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 2L + "'", long92 == 2L);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 8441189.1875d + "'", double97 == 8441189.1875d);
    }

    @Test
    public void test09279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09279");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        boolean boolean20 = variance19.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        secondMoment21.increment((double) (short) -1);
        secondMoment21.clear();
        secondMoment21.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        long long31 = variance30.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        secondMoment35.increment((double) (short) 0);
        double double40 = secondMoment35.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        double double51 = secondMoment35.evaluate(doubleArray47);
        double[] doubleArray52 = new double[] {};
        secondMoment35.incrementAll(doubleArray52);
        double double54 = secondMoment32.evaluate(doubleArray52);
        double double55 = variance30.evaluate(doubleArray52);
        double double57 = variance19.evaluate(doubleArray52, (double) 1);
        variance19.clear();
        long long59 = variance19.getN();
        double double60 = variance19.getResult();
        long long61 = variance19.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5d + "'", double40 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 74.0d + "'", double51 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 2L + "'", long59 == 2L);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 2L + "'", long61 == 2L);
    }

    @Test
    public void test09280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09280");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        double double6 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.increment((double) (short) 0);
        double double18 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double29 = secondMoment13.evaluate(doubleArray25);
        double[] doubleArray30 = new double[] {};
        secondMoment13.incrementAll(doubleArray30);
        secondMoment7.incrementAll(doubleArray30);
        secondMoment7.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        double double50 = variance35.evaluate(doubleArray48);
        double double51 = secondMoment0.evaluate(doubleArray48);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long54 = secondMoment0.getN();
        secondMoment0.clear();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 200.0d + "'", double6 == 200.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 74.0d + "'", double29 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
    }

    @Test
    public void test09281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09281");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        double double25 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        double double49 = variance27.evaluate(doubleArray45, (int) (byte) 0, 0);
        double double50 = variance26.evaluate(doubleArray45);
        double double51 = variance9.evaluate(doubleArray45);
        long long52 = variance9.getN();
        variance9.setBiasCorrected(false);
        long long55 = variance9.getN();
        double double56 = variance9.getResult();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test09282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09282");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) -1);
        double double18 = secondMoment1.getResult();
        secondMoment1.increment((double) 1L);
        secondMoment1.increment((double) (byte) 100);
        double double23 = secondMoment1.getResult();
        long long24 = secondMoment1.getN();
        secondMoment1.increment((double) 1.0f);
        long long27 = secondMoment1.getN();
        double double28 = secondMoment1.getResult();
        secondMoment1.clear();
        double double30 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 6140.666666666667d + "'", double18 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 11282.0d + "'", double23 == 11282.0d);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 5L + "'", long24 == 5L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 6L + "'", long27 == 6L);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12682.833333333334d + "'", double28 == 12682.833333333334d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test09283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09283");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance10.evaluate(doubleArray31);
        variance10.increment(37.0d);
        long long37 = variance10.getN();
        boolean boolean38 = variance10.isBiasCorrected();
        variance10.clear();
        double double40 = variance10.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test09284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09284");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        secondMoment1.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double11 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        secondMoment12.increment((double) (short) 10);
        secondMoment12.increment((double) 2L);
        secondMoment12.increment(272.25d);
        secondMoment12.clear();
        boolean boolean22 = secondMoment1.equals((java.lang.Object) secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        double[] doubleArray29 = new double[] { (-1L), 0, 10L };
        secondMoment23.incrementAll(doubleArray29, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        secondMoment37.increment((double) (short) 0);
        double double42 = secondMoment37.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        secondMoment43.incrementAll(doubleArray49, 0, 0);
        double double53 = secondMoment37.evaluate(doubleArray49);
        double[] doubleArray54 = new double[] {};
        secondMoment37.incrementAll(doubleArray54);
        double double56 = secondMoment34.evaluate(doubleArray54);
        double double57 = variance33.evaluate(doubleArray54);
        double double58 = secondMoment1.evaluate(doubleArray54);
        secondMoment1.clear();
        double double60 = secondMoment1.getResult();
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5d + "'", double42 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 74.0d + "'", double53 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
    }

    @Test
    public void test09285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09285");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        secondMoment15.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment15);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment15);
        double double26 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.clear();
        double double29 = secondMoment15.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test09286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09286");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance8.increment(4050.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        secondMoment12.increment((double) (short) -1);
        long long18 = secondMoment12.getN();
        double double19 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        secondMoment21.incrementAll(doubleArray44);
        secondMoment21.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double[] doubleArray62 = new double[] { 10, (byte) 100 };
        double double63 = secondMoment50.evaluate(doubleArray62);
        double double64 = variance49.evaluate(doubleArray62);
        long long65 = variance49.getN();
        double double66 = variance49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        double[] doubleArray73 = new double[] { (-1L), 0, 10L };
        secondMoment67.incrementAll(doubleArray73, 0, 0);
        double[] doubleArray79 = new double[] { 10, (byte) 100 };
        double double80 = secondMoment67.evaluate(doubleArray79);
        double double81 = secondMoment67.getResult();
        secondMoment67.increment((double) (short) -1);
        double[] doubleArray85 = new double[] { (short) 1 };
        secondMoment67.incrementAll(doubleArray85);
        double double87 = variance49.evaluate(doubleArray85);
        double double88 = variance20.evaluate(doubleArray85);
        double double89 = variance8.evaluate(doubleArray85);
        variance8.clear();
        double double91 = variance8.getResult();
        double double92 = variance8.getResult();
        variance8.clear();
        boolean boolean94 = variance8.isBiasCorrected();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 544.5d + "'", double19 == 544.5d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4050.0d + "'", double63 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 3L + "'", long65 == 3L);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 4050.0d + "'", double80 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test09287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09287");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double20 = variance8.evaluate(doubleArray15, (double) 1L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double[] doubleArray34 = new double[] { 10, (byte) 100 };
        double double35 = secondMoment22.evaluate(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        secondMoment37.increment((double) (short) -1);
        secondMoment37.clear();
        secondMoment37.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment37);
        boolean boolean47 = secondMoment22.equals((java.lang.Object) secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double double66 = secondMoment50.evaluate(doubleArray62);
        double[] doubleArray67 = new double[] {};
        secondMoment50.incrementAll(doubleArray67);
        double double71 = variance49.evaluate(doubleArray67, (int) (byte) 0, 0);
        long long72 = variance49.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        secondMoment73.increment((double) (short) 0);
        double double78 = secondMoment73.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment79.increment(1.0d);
        double[] doubleArray85 = new double[] { (-1L), 0, 10L };
        secondMoment79.incrementAll(doubleArray85, 0, 0);
        double double89 = secondMoment73.evaluate(doubleArray85);
        variance49.incrementAll(doubleArray85);
        double double92 = variance48.evaluate(doubleArray85, (double) '#');
        variance8.incrementAll(doubleArray85);
        long long94 = variance8.getN();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 24.666666666666668d + "'", double20 == 24.666666666666668d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4050.0d + "'", double35 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.5d + "'", double78 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 24.666666666666668d + "'", double92 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 2L + "'", long94 == 2L);
    }

    @Test
    public void test09288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09288");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        secondMoment1.clear();
        secondMoment1.increment((double) (short) -1);
        double double10 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        secondMoment12.increment((double) (short) 0);
        long long17 = secondMoment12.getN();
        double double18 = secondMoment12.getResult();
        secondMoment12.increment((double) (byte) 10);
        secondMoment12.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        long long33 = variance32.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double45 = variance32.evaluate(doubleArray40, (double) (short) -1);
        double double46 = secondMoment12.evaluate(doubleArray40);
        double double47 = variance11.evaluate(doubleArray40);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 37.0d + "'", double45 == 37.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 74.0d + "'", double46 == 74.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
    }

    @Test
    public void test09289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09289");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.increment((double) 100);
        double double8 = secondMoment0.getResult();
        double double9 = secondMoment0.getResult();
        secondMoment0.increment(5.380202045661305E14d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        secondMoment12.increment((double) (short) 0);
        double double17 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long20 = variance19.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double[] doubleArray34 = new double[] { 10, (byte) 100 };
        double double35 = secondMoment22.evaluate(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        secondMoment37.increment((double) (short) -1);
        secondMoment37.clear();
        secondMoment37.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment37);
        boolean boolean47 = secondMoment22.equals((java.lang.Object) secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double double66 = secondMoment50.evaluate(doubleArray62);
        double[] doubleArray67 = new double[] {};
        secondMoment50.incrementAll(doubleArray67);
        double double71 = variance49.evaluate(doubleArray67, (int) (byte) 0, 0);
        long long72 = variance49.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        secondMoment73.increment((double) (short) 0);
        double double78 = secondMoment73.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment79.increment(1.0d);
        double[] doubleArray85 = new double[] { (-1L), 0, 10L };
        secondMoment79.incrementAll(doubleArray85, 0, 0);
        double double89 = secondMoment73.evaluate(doubleArray85);
        variance49.incrementAll(doubleArray85);
        double double92 = variance48.evaluate(doubleArray85, (double) '#');
        double double93 = variance19.evaluate(doubleArray85);
        double double94 = secondMoment12.evaluate(doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            secondMoment0.incrementAll(doubleArray85, (int) 'a', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 5304.666666666667d + "'", double8 == 5304.666666666667d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 5304.666666666667d + "'", double9 == 5304.666666666667d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.5d + "'", double17 == 0.5d);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4050.0d + "'", double35 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.5d + "'", double78 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 24.666666666666668d + "'", double92 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 37.0d + "'", double93 == 37.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 74.0d + "'", double94 == 74.0d);
    }

    @Test
    public void test09290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09290");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        secondMoment0.clear();
        double double15 = secondMoment0.getResult();
        secondMoment0.increment(544.5d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test09291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09291");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        secondMoment3.increment((double) (short) 0);
        double double8 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double19 = secondMoment3.evaluate(doubleArray15);
        double[] doubleArray20 = new double[] {};
        secondMoment3.incrementAll(doubleArray20);
        double double22 = secondMoment0.evaluate(doubleArray20);
        secondMoment0.clear();
        secondMoment0.increment((double) (byte) 100);
        secondMoment0.clear();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 74.0d + "'", double19 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
    }

    @Test
    public void test09292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09292");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) '4');
        double double8 = secondMoment2.getResult();
        secondMoment2.increment((double) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment17);
        long long28 = variance27.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double40 = variance27.evaluate(doubleArray35, (double) (short) -1);
        double double41 = variance14.evaluate(doubleArray35);
        double double42 = secondMoment2.evaluate(doubleArray35);
        secondMoment2.increment(82.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double[] doubleArray59 = new double[] { 10, (byte) 100 };
        double double60 = secondMoment47.evaluate(doubleArray59);
        double double61 = secondMoment47.getResult();
        secondMoment47.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment47);
        secondMoment47.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment66);
        secondMoment66.increment((double) (short) -1);
        secondMoment66.clear();
        double double73 = secondMoment66.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        secondMoment74.increment((double) (short) 0);
        double double79 = secondMoment74.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        double double90 = secondMoment74.evaluate(doubleArray86);
        secondMoment66.incrementAll(doubleArray86, 0, (int) (short) 0);
        double double96 = secondMoment47.evaluate(doubleArray86, (int) (byte) 0, 1);
        double double97 = secondMoment2.evaluate(doubleArray86);
        org.apache.commons.math.stat.descriptive.moment.Variance variance98 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 200.0d + "'", double8 == 200.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 24.666666666666668d + "'", double41 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 74.0d + "'", double42 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.5d + "'", double79 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 74.0d + "'", double97 == 74.0d);
    }

    @Test
    public void test09293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09293");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance27.increment((double) '#');
        variance27.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment32);
        secondMoment32.increment((double) (short) -1);
        secondMoment32.clear();
        secondMoment32.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        variance41.incrementAll(doubleArray48);
        variance41.clear();
        boolean boolean54 = variance41.isBiasCorrected();
        variance41.increment(30671.375d);
        double double57 = variance41.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        secondMoment58.increment((double) (short) 0);
        double double63 = secondMoment58.getResult();
        long long64 = secondMoment58.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment65);
        secondMoment65.increment((double) (short) -1);
        secondMoment65.clear();
        double double72 = secondMoment65.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        secondMoment73.increment((double) (short) 0);
        double double78 = secondMoment73.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment79.increment(1.0d);
        double[] doubleArray85 = new double[] { (-1L), 0, 10L };
        secondMoment79.incrementAll(doubleArray85, 0, 0);
        double double89 = secondMoment73.evaluate(doubleArray85);
        secondMoment65.incrementAll(doubleArray85, 0, (int) (short) 0);
        secondMoment58.incrementAll(doubleArray85);
        variance41.incrementAll(doubleArray85);
        double double95 = variance27.evaluate(doubleArray85);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.5d + "'", double63 == 0.5d);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 2L + "'", long64 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.5d + "'", double78 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 37.0d + "'", double95 == 37.0d);
    }

    @Test
    public void test09294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09294");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        double double6 = secondMoment0.getResult();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        long long22 = secondMoment8.getN();
        double double23 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        secondMoment24.increment((double) (short) -1);
        secondMoment24.clear();
        double double31 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        secondMoment32.increment((double) (short) 0);
        double double37 = secondMoment32.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        double double48 = secondMoment32.evaluate(doubleArray44);
        secondMoment24.incrementAll(doubleArray44, 0, (int) (short) 0);
        double double52 = secondMoment8.evaluate(doubleArray44);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        secondMoment53.increment((double) (short) 0);
        long long58 = secondMoment53.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        long long69 = secondMoment59.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        secondMoment59.incrementAll(doubleArray76, 0, (int) (short) 1);
        secondMoment53.incrementAll(doubleArray76, (int) (byte) 0, (int) (byte) 1);
        secondMoment8.incrementAll(doubleArray76);
        double double87 = secondMoment0.evaluate(doubleArray76);
        secondMoment0.increment(4049.9999923706055d);
        secondMoment0.clear();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.5d + "'", double37 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 74.0d + "'", double52 == 74.0d);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 2L + "'", long58 == 2L);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
    }

    @Test
    public void test09295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09295");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (byte) 0);
        secondMoment1.clear();
        secondMoment1.clear();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.increment(2.132758786894198E12d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test09296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09296");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) '4');
        secondMoment1.increment((double) 100);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        long long16 = secondMoment11.getN();
        secondMoment11.increment(0.0d);
        secondMoment11.increment(688.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double[] doubleArray34 = new double[] { 10, (byte) 100 };
        double double35 = secondMoment22.evaluate(doubleArray34);
        long long36 = secondMoment22.getN();
        secondMoment22.clear();
        double double38 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        double double45 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        double double51 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double double62 = secondMoment46.evaluate(doubleArray58);
        double[] doubleArray63 = new double[] {};
        secondMoment46.incrementAll(doubleArray63);
        secondMoment40.incrementAll(doubleArray63);
        secondMoment40.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        double[] doubleArray81 = new double[] { 10, (byte) 100 };
        double double82 = secondMoment69.evaluate(doubleArray81);
        double double83 = variance68.evaluate(doubleArray81);
        double double84 = secondMoment22.evaluate(doubleArray81);
        double double85 = secondMoment11.evaluate(doubleArray81);
        double double88 = secondMoment1.evaluate(doubleArray81, 0, (int) (byte) 0);
        secondMoment1.clear();
        double double90 = secondMoment1.getResult();
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4050.0d + "'", double35 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 2L + "'", long36 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5d + "'", double51 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 74.0d + "'", double62 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test09297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09297");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double double45 = secondMoment18.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        secondMoment46.increment((double) (short) -1);
        double[] doubleArray64 = new double[] { (short) 1 };
        secondMoment46.incrementAll(doubleArray64);
        double double66 = secondMoment18.evaluate(doubleArray64);
        double double67 = secondMoment1.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance68.increment((double) 1);
        long long71 = variance68.getN();
        double double72 = variance68.getResult();
        variance68.clear();
        java.lang.Class<?> wildcardClass74 = variance68.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1L + "'", long71 == 1L);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test09298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09298");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        variance27.incrementAll(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        secondMoment39.increment((double) (short) -1);
        secondMoment39.clear();
        secondMoment39.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double double66 = secondMoment39.evaluate(doubleArray61);
        double double67 = variance27.evaluate(doubleArray61);
        double double68 = secondMoment11.evaluate(doubleArray61);
        secondMoment11.clear();
        secondMoment11.increment((double) (short) 100);
        double double72 = secondMoment11.getResult();
        secondMoment11.increment(0.0d);
        double double75 = secondMoment11.getResult();
        secondMoment11.clear();
        double double77 = secondMoment11.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 37.0d + "'", double67 == 37.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 5000.0d + "'", double75 == 5000.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
    }

    @Test
    public void test09299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09299");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double6 = secondMoment1.getResult();
        secondMoment1.clear();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test09300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09300");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (-1.0f));
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        long long18 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double30 = variance17.evaluate(doubleArray25, (double) (short) -1);
        double double31 = secondMoment1.evaluate(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        long long33 = secondMoment1.getN();
        secondMoment1.increment(4049.9999999999995d);
        double double36 = secondMoment1.getResult();
        long long37 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.increment(3070.3333333333335d);
        secondMoment1.clear();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 3L + "'", long33 == 3L);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.2283730749999996E7d + "'", double36 == 1.2283730749999996E7d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 4L + "'", long37 == 4L);
    }

    @Test
    public void test09301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09301");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        long long6 = secondMoment0.getN();
        double double7 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        double[] doubleArray22 = new double[] { 10, (byte) 100 };
        double double23 = secondMoment10.evaluate(doubleArray22);
        double double24 = secondMoment10.getResult();
        long long25 = secondMoment10.getN();
        long long26 = secondMoment10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        long long28 = secondMoment10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double[] doubleArray42 = new double[] { 10, (byte) 100 };
        double double43 = secondMoment30.evaluate(doubleArray42);
        double double44 = secondMoment30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment30);
        long long46 = secondMoment30.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment((double) ' ');
        secondMoment47.increment((double) (-1.0f));
        secondMoment47.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment53);
        long long64 = variance63.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        double double76 = variance63.evaluate(doubleArray71, (double) (short) -1);
        double double77 = secondMoment47.evaluate(doubleArray71);
        double double78 = secondMoment30.evaluate(doubleArray71);
        secondMoment10.incrementAll(doubleArray71);
        boolean boolean80 = secondMoment0.equals((java.lang.Object) secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.clear();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 544.5d + "'", double7 == 544.5d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 2L + "'", long28 == 2L);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4050.0d + "'", double43 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4050.0d + "'", double44 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 2L + "'", long46 == 2L);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 37.0d + "'", double76 == 37.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 74.0d + "'", double77 == 74.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 74.0d + "'", double78 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test09302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09302");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        secondMoment0.increment(0.0d);
        secondMoment0.clear();
        secondMoment0.increment(5.9118157428691766E13d);
        long long13 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
    }

    @Test
    public void test09303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09303");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        double double17 = secondMoment0.getResult();
        long long18 = secondMoment0.getN();
        double double19 = secondMoment0.getResult();
        secondMoment0.increment(688.0d);
        secondMoment0.increment(9.33322763454E7d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 6140.666666666667d + "'", double17 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 3L + "'", long18 == 3L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 6140.666666666667d + "'", double19 == 6140.666666666667d);
    }

    @Test
    public void test09304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09304");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        long long16 = secondMoment1.getN();
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance18.clear();
        variance18.clear();
        double double21 = variance18.getResult();
        double double22 = variance18.getResult();
        variance18.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
    }

    @Test
    public void test09305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09305");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance28.increment((double) '4');
        variance28.increment(3602.0d);
        variance28.setBiasCorrected(false);
        long long35 = variance28.getN();
        long long36 = variance28.getN();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 3L + "'", long35 == 3L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 3L + "'", long36 == 3L);
    }

    @Test
    public void test09306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09306");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        secondMoment3.increment((double) (short) -1);
        long long9 = secondMoment3.getN();
        double double10 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        secondMoment3.increment(2.880385675555556E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        double double16 = variance15.getResult();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 2L + "'", long9 == 2L);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 544.5d + "'", double10 == 544.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2.7655375702535372E14d + "'", double16 == 2.7655375702535372E14d);
    }

    @Test
    public void test09307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09307");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (byte) 0);
        secondMoment0.clear();
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        double double8 = secondMoment0.getResult();
        double double9 = secondMoment0.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test09308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09308");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        long long16 = secondMoment2.getN();
        secondMoment2.clear();
        double double18 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        variance21.increment((double) 0);
        long long24 = variance21.getN();
        variance21.increment(2.880385675555556E7d);
        variance21.increment(759051.9768518519d);
        variance21.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test09309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09309");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = variance19.evaluate(doubleArray26);
        variance19.setBiasCorrected(false);
        variance19.clear();
        variance19.increment(7379008.583333333d);
        double double36 = variance19.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }

    @Test
    public void test09310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09310");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        secondMoment0.incrementAll(doubleArray20, 0, (int) (short) 0);
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        secondMoment32.incrementAll(doubleArray38, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment32);
        double double43 = variance42.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        long long50 = secondMoment45.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment45);
        long long52 = variance51.getN();
        variance51.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long56 = variance55.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        secondMoment57.increment((double) (short) 0);
        double double62 = secondMoment57.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        double double73 = secondMoment57.evaluate(doubleArray69);
        variance55.incrementAll(doubleArray69);
        double double76 = variance51.evaluate(doubleArray69, (double) (short) -1);
        double double77 = variance42.evaluate(doubleArray69);
        double double79 = variance31.evaluate(doubleArray69, 5.5310751405070744E14d);
        double double80 = variance31.getResult();
        variance31.clear();
        double double82 = variance31.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 2L + "'", long50 == 2L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 2L + "'", long52 == 2L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.5d + "'", double62 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 74.0d + "'", double73 == 74.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 24.666666666666668d + "'", double76 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 37.0d + "'", double77 == 37.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue(Double.isNaN(double82));
    }

    @Test
    public void test09311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09311");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.clear();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        long long27 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double39 = variance26.evaluate(doubleArray34, (double) (short) -1);
        double double40 = secondMoment10.evaluate(doubleArray34);
        double double41 = secondMoment2.evaluate(doubleArray34);
        long long42 = secondMoment2.getN();
        double double43 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        double double47 = variance46.getResult();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 74.0d + "'", double41 == 74.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 3L + "'", long42 == 3L);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test09312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09312");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        variance9.incrementAll(doubleArray16);
        variance9.clear();
        variance9.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        secondMoment30.increment((double) (short) 0);
        double double35 = secondMoment30.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double double46 = secondMoment30.evaluate(doubleArray42);
        double[] doubleArray47 = new double[] {};
        secondMoment30.incrementAll(doubleArray47);
        secondMoment24.incrementAll(doubleArray47);
        secondMoment24.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double[] doubleArray65 = new double[] { 10, (byte) 100 };
        double double66 = secondMoment53.evaluate(doubleArray65);
        double double67 = variance52.evaluate(doubleArray65);
        double double69 = variance9.evaluate(doubleArray65, 100.0d);
        long long70 = variance9.getN();
        double double71 = variance9.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long74 = variance73.getN();
        double double75 = variance73.getResult();
        variance73.increment((double) (short) 100);
        variance73.increment((double) 3L);
        variance73.clear();
        variance73.increment(6140.666666666667d);
        long long83 = variance73.getN();
        variance73.increment(3.2809195541666664E7d);
        boolean boolean86 = variance9.equals((java.lang.Object) variance73);
        variance73.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass89 = variance73.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.5d + "'", double35 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 74.0d + "'", double46 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4050.0d + "'", double69 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1L + "'", long70 == 1L);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 1L + "'", long83 == 1L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test09313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09313");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment((double) 0.0f);
        secondMoment1.increment((double) (-1L));
        secondMoment1.clear();
        long long11 = secondMoment1.getN();
        double double12 = secondMoment1.getResult();
        double double13 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long16 = variance15.getN();
        double double17 = variance15.getResult();
        double double18 = variance15.getResult();
        long long19 = variance15.getN();
        boolean boolean20 = variance15.isBiasCorrected();
        double double21 = variance15.getResult();
        double double22 = variance15.getResult();
        double double23 = variance15.getResult();
        double double24 = variance15.getResult();
        boolean boolean25 = secondMoment1.equals((java.lang.Object) variance15);
        variance15.clear();
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test09314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09314");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        secondMoment0.clear();
        double double16 = secondMoment0.getResult();
        secondMoment0.increment((double) (byte) -1);
        secondMoment0.increment(364.5d);
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test09315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09315");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        double double11 = secondMoment2.getResult();
        double double12 = secondMoment2.getResult();
        long long13 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        double double20 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double double31 = secondMoment15.evaluate(doubleArray27);
        double[] doubleArray32 = new double[] {};
        secondMoment15.incrementAll(doubleArray32);
        double double36 = variance14.evaluate(doubleArray32, (int) (byte) 0, 0);
        long long37 = variance14.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        secondMoment38.increment((double) (short) 0);
        double double43 = secondMoment38.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double double54 = secondMoment38.evaluate(doubleArray50);
        variance14.incrementAll(doubleArray50);
        long long56 = variance14.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        secondMoment57.increment((double) (short) 0);
        double double62 = secondMoment57.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        double double73 = secondMoment57.evaluate(doubleArray69);
        double[] doubleArray74 = new double[] {};
        secondMoment57.incrementAll(doubleArray74);
        double double76 = variance14.evaluate(doubleArray74);
        double double77 = secondMoment2.evaluate(doubleArray74);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        variance78.clear();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 544.5d + "'", double11 == 544.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 544.5d + "'", double12 == 544.5d);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.5d + "'", double43 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 74.0d + "'", double54 == 74.0d);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 3L + "'", long56 == 3L);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.5d + "'", double62 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 74.0d + "'", double73 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 544.5d + "'", double77 == 544.5d);
    }

    @Test
    public void test09316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09316");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance28.clear();
        variance28.clear();
        double double31 = variance28.getResult();
        variance28.clear();
        long long33 = variance28.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        long long44 = secondMoment34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        secondMoment34.incrementAll(doubleArray51, 0, (int) (short) 1);
        double double58 = variance28.evaluate(doubleArray51);
        variance28.clear();
        variance28.increment(1.0239004E7d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5d + "'", double31 == 0.5d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 2L + "'", long33 == 2L);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 37.0d + "'", double58 == 37.0d);
    }

    @Test
    public void test09317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09317");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long5 = variance4.getN();
        variance4.setBiasCorrected(false);
        double double8 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        double double14 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double[] doubleArray28 = new double[] { 10, (byte) 100 };
        double double29 = secondMoment16.evaluate(doubleArray28);
        double double30 = secondMoment16.getResult();
        long long31 = secondMoment16.getN();
        long long32 = secondMoment16.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        boolean boolean34 = secondMoment9.equals((java.lang.Object) secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment((double) ' ');
        double double39 = secondMoment36.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment36);
        long long41 = variance40.getN();
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        secondMoment44.increment((double) (short) -1);
        secondMoment44.clear();
        secondMoment44.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        double[] doubleArray60 = new double[] { (-1L), 0, 10L };
        secondMoment54.incrementAll(doubleArray60, 0, 0);
        variance53.incrementAll(doubleArray60);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment65);
        secondMoment65.increment((double) (short) -1);
        secondMoment65.clear();
        secondMoment65.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        secondMoment75.increment((double) (short) 0);
        double double80 = secondMoment75.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment81.increment(1.0d);
        double[] doubleArray87 = new double[] { (-1L), 0, 10L };
        secondMoment81.incrementAll(doubleArray87, 0, 0);
        double double91 = secondMoment75.evaluate(doubleArray87);
        double double92 = secondMoment65.evaluate(doubleArray87);
        double double93 = variance53.evaluate(doubleArray87);
        variance40.incrementAll(doubleArray87);
        secondMoment16.incrementAll(doubleArray87);
        double double97 = variance4.evaluate(doubleArray87, 688.0d);
        double double98 = variance4.getResult();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5d + "'", double14 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4050.0d + "'", double29 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4050.0d + "'", double30 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2L + "'", long31 == 2L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2L + "'", long32 == 2L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.5d + "'", double80 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 74.0d + "'", double91 == 74.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 74.0d + "'", double92 == 74.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 37.0d + "'", double93 == 37.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 24.666666666666668d + "'", double97 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
    }

    @Test
    public void test09318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09318");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment4 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment4.increment(1.0d);
        secondMoment4.increment((double) (short) 0);
        double double9 = secondMoment4.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double26 = secondMoment10.evaluate(doubleArray22);
        double[] doubleArray27 = new double[] {};
        secondMoment10.incrementAll(doubleArray27);
        secondMoment4.incrementAll(doubleArray27);
        secondMoment4.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment4);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double[] doubleArray45 = new double[] { 10, (byte) 100 };
        double double46 = secondMoment33.evaluate(doubleArray45);
        double double47 = variance32.evaluate(doubleArray45);
        long long48 = variance32.getN();
        long long49 = variance32.getN();
        boolean boolean50 = variance32.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double[] doubleArray63 = new double[] { 10, (byte) 100 };
        double double64 = secondMoment51.evaluate(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        secondMoment66.increment((double) (short) 0);
        double double71 = secondMoment66.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        double[] doubleArray78 = new double[] { (-1L), 0, 10L };
        secondMoment72.incrementAll(doubleArray78, 0, 0);
        double double82 = secondMoment66.evaluate(doubleArray78);
        double[] doubleArray83 = new double[] {};
        secondMoment66.incrementAll(doubleArray83);
        double double87 = variance65.evaluate(doubleArray83, (int) (byte) 0, 0);
        double double88 = secondMoment51.evaluate(doubleArray83);
        double double90 = variance32.evaluate(doubleArray83, 4050.0d);
        secondMoment1.incrementAll(doubleArray83);
        double double92 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance93 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.5d + "'", double9 == 0.5d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 74.0d + "'", double26 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4050.0d + "'", double46 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 3L + "'", long48 == 3L);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 3L + "'", long49 == 3L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.5d + "'", double71 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 74.0d + "'", double82 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 4050.0d + "'", double88 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test09319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09319");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        double double4 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        double[] doubleArray25 = new double[] {};
        secondMoment8.incrementAll(doubleArray25);
        double double29 = variance7.evaluate(doubleArray25, (int) (byte) 0, 0);
        variance6.incrementAll(doubleArray25);
        double double31 = secondMoment0.evaluate(doubleArray25);
        secondMoment0.clear();
        double double33 = secondMoment0.getResult();
        secondMoment0.increment(4267109.2d);
        secondMoment0.increment(2.9501440888888888E7d);
        double double38 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.18385747892431E14d + "'", double38 == 3.18385747892431E14d);
    }

    @Test
    public void test09320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09320");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.increment((double) 100);
        secondMoment0.increment(2.880385675555556E7d);
        secondMoment0.increment(200.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
    }

    @Test
    public void test09321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09321");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        secondMoment5.increment((double) (short) 0);
        double double10 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] {};
        secondMoment11.incrementAll(doubleArray28);
        secondMoment5.incrementAll(doubleArray28);
        secondMoment5.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double48 = variance33.evaluate(doubleArray46);
        double double49 = secondMoment0.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        secondMoment56.increment((double) (short) 0);
        double double61 = secondMoment56.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        double double72 = secondMoment56.evaluate(doubleArray68);
        double[] doubleArray73 = new double[] {};
        secondMoment56.incrementAll(doubleArray73);
        secondMoment50.incrementAll(doubleArray73);
        double double76 = secondMoment0.evaluate(doubleArray73);
        long long77 = secondMoment0.getN();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double81 = secondMoment0.getResult();
        double double82 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5d + "'", double10 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5d + "'", double61 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4050.0d + "'", double76 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 2L + "'", long77 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue(Double.isNaN(double82));
    }

    @Test
    public void test09322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09322");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) -1);
        double[] doubleArray19 = new double[] { (short) 1 };
        secondMoment1.incrementAll(doubleArray19);
        long long21 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance22.clear();
        boolean boolean24 = variance22.isBiasCorrected();
        variance22.clear();
        long long26 = variance22.getN();
        boolean boolean27 = variance22.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 4L + "'", long21 == 4L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 4L + "'", long26 == 4L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09323");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        double double4 = secondMoment0.getResult();
        secondMoment0.increment(36.99999999999909d);
        secondMoment0.increment((double) (short) 100);
        double[] doubleArray15 = new double[] { 55.0d, 3034.75d, 2312.0d, 128.0d, 100.0f, 5.67075082875E8d };
        double double16 = secondMoment0.evaluate(doubleArray15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[55.0, 3034.75, 2312.0, 128.0, 100.0, 5.67075082875E8]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2.67977393860392896E17d + "'", double16 == 2.67977393860392896E17d);
    }

    @Test
    public void test09324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09324");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        secondMoment2.increment((double) (short) 0);
        secondMoment2.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        long long10 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.increment(0.0d);
        secondMoment2.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        double[] doubleArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double18 = variance16.evaluate(doubleArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 3L + "'", long10 == 3L);
    }

    @Test
    public void test09325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09325");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double[] doubleArray31 = new double[] { 10, (byte) 100 };
        double double32 = secondMoment19.evaluate(doubleArray31);
        double double33 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        long long35 = secondMoment19.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        secondMoment37.increment((double) (short) -1);
        secondMoment37.clear();
        secondMoment37.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        variance46.incrementAll(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment58);
        secondMoment58.increment((double) (short) -1);
        secondMoment58.clear();
        secondMoment58.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        secondMoment68.increment((double) (short) 0);
        double double73 = secondMoment68.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double double84 = secondMoment68.evaluate(doubleArray80);
        double double85 = secondMoment58.evaluate(doubleArray80);
        double double86 = variance46.evaluate(doubleArray80);
        variance36.incrementAll(doubleArray80);
        secondMoment0.incrementAll(doubleArray80);
        long long89 = secondMoment0.getN();
        double double90 = secondMoment0.getResult();
        double double91 = secondMoment0.getResult();
        secondMoment0.clear();
        double double93 = secondMoment0.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 2L + "'", long35 == 2L);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5d + "'", double73 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 37.0d + "'", double86 == 37.0d);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 6L + "'", long89 == 6L);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 7881.333333333333d + "'", double90 == 7881.333333333333d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 7881.333333333333d + "'", double91 == 7881.333333333333d);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test09326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09326");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (byte) 0);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment((double) 6L);
        secondMoment1.increment(1.2071199360294717E14d);
    }

    @Test
    public void test09327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09327");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        secondMoment3.increment((double) (short) 0);
        double double8 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double19 = secondMoment3.evaluate(doubleArray15);
        double[] doubleArray20 = new double[] {};
        secondMoment3.incrementAll(doubleArray20);
        double double22 = secondMoment0.evaluate(doubleArray20);
        secondMoment0.increment((double) 3L);
        secondMoment0.increment(24.666666666666668d);
        long long27 = secondMoment0.getN();
        secondMoment0.clear();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        secondMoment31.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        secondMoment31.clear();
        double double38 = secondMoment31.getResult();
        secondMoment31.increment((double) (short) 0);
        double double41 = secondMoment31.getResult();
        boolean boolean42 = secondMoment0.equals((java.lang.Object) secondMoment31);
        secondMoment0.increment(0.0d);
        double double45 = secondMoment0.getResult();
        secondMoment0.increment(5.9118157428691766E13d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 74.0d + "'", double19 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 3L + "'", long27 == 3L);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }

    @Test
    public void test09328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09328");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        long long12 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long15 = secondMoment2.getN();
        secondMoment2.increment(32.2d);
        secondMoment2.increment(688.0d);
        secondMoment2.increment((double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        variance22.increment(128.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
    }

    @Test
    public void test09329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09329");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance5.setBiasCorrected(false);
        boolean boolean8 = variance5.isBiasCorrected();
        variance5.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        long long15 = secondMoment10.getN();
        double double16 = secondMoment10.getResult();
        long long17 = secondMoment10.getN();
        double double18 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        double double24 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double double35 = secondMoment19.evaluate(doubleArray31);
        double[] doubleArray36 = new double[] {};
        secondMoment19.incrementAll(doubleArray36);
        double double38 = secondMoment10.evaluate(doubleArray36);
        // The following exception was thrown during execution in test generation
        try {
            double double41 = variance5.evaluate(doubleArray36, (int) (short) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5d + "'", double24 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 74.0d + "'", double35 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5d + "'", double38 == 0.5d);
    }

    @Test
    public void test09330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09330");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long11 = variance10.getN();
        double double12 = variance10.getResult();
        long long13 = variance10.getN();
        double double14 = variance10.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test09331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09331");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        long long14 = secondMoment0.getN();
        secondMoment0.clear();
        secondMoment0.clear();
        double double17 = secondMoment0.getResult();
        secondMoment0.increment((double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment((double) ' ');
        double double23 = secondMoment20.getResult();
        double double24 = secondMoment20.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double[] doubleArray37 = new double[] { 10, (byte) 100 };
        double double38 = secondMoment25.evaluate(doubleArray37);
        double double39 = secondMoment20.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        double double46 = secondMoment41.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double double63 = secondMoment47.evaluate(doubleArray59);
        double[] doubleArray64 = new double[] {};
        secondMoment47.incrementAll(doubleArray64);
        secondMoment41.incrementAll(doubleArray64);
        secondMoment41.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double[] doubleArray82 = new double[] { 10, (byte) 100 };
        double double83 = secondMoment70.evaluate(doubleArray82);
        double double84 = variance69.evaluate(doubleArray82);
        double double85 = variance40.evaluate(doubleArray82);
        double double86 = secondMoment20.evaluate(doubleArray82);
        double double87 = secondMoment0.evaluate(doubleArray82);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance88.increment(704.7500000000001d);
        double[] doubleArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = variance88.evaluate(doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.5d + "'", double46 == 0.5d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4050.0d + "'", double86 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4050.0d + "'", double87 == 4050.0d);
    }

    @Test
    public void test09332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09332");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance10.evaluate(doubleArray31);
        long long35 = variance10.getN();
        variance10.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment38);
        secondMoment38.increment((double) (short) -1);
        secondMoment38.clear();
        secondMoment38.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment38);
        long long48 = variance47.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        secondMoment52.increment((double) (short) 0);
        double double57 = secondMoment52.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double double68 = secondMoment52.evaluate(doubleArray64);
        double[] doubleArray69 = new double[] {};
        secondMoment52.incrementAll(doubleArray69);
        double double71 = secondMoment49.evaluate(doubleArray69);
        double double72 = variance47.evaluate(doubleArray69);
        double double73 = variance10.evaluate(doubleArray69);
        variance10.clear();
        variance10.increment(9696140.055555556d);
        long long77 = variance10.getN();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5d + "'", double57 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 1L + "'", long77 == 1L);
    }

    @Test
    public void test09333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09333");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        double double6 = secondMoment0.getResult();
        secondMoment0.increment((double) (byte) 10);
        double double9 = secondMoment0.getResult();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long12 = variance11.getN();
        variance11.increment(1842.2d);
        double double15 = variance11.getResult();
        double double16 = variance11.getResult();
        variance11.clear();
        boolean boolean18 = variance11.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 60.666666666666664d + "'", double9 == 60.666666666666664d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test09334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09334");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        variance9.incrementAll(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        secondMoment21.increment((double) (short) -1);
        secondMoment21.clear();
        secondMoment21.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        secondMoment31.increment((double) (short) 0);
        double double36 = secondMoment31.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double double47 = secondMoment31.evaluate(doubleArray43);
        double double48 = secondMoment21.evaluate(doubleArray43);
        double double49 = variance9.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        secondMoment51.increment((double) (short) 0);
        double double56 = secondMoment51.getResult();
        secondMoment51.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment51);
        variance58.increment((double) (short) 0);
        long long61 = variance58.getN();
        boolean boolean62 = variance9.equals((java.lang.Object) long61);
        double double63 = variance9.getResult();
        variance9.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.5d + "'", double36 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 74.0d + "'", double47 == 74.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 37.0d + "'", double49 == 37.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.5d + "'", double56 == 0.5d);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
    }

    @Test
    public void test09335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09335");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        secondMoment0.clear();
        secondMoment0.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance17.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        secondMoment20.increment((double) '4');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment((double) ' ');
        secondMoment26.increment((double) '4');
        long long31 = secondMoment26.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        secondMoment26.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance35.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        double[] doubleArray51 = new double[] { 10, (byte) 100 };
        double double52 = secondMoment39.evaluate(doubleArray51);
        double double53 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment39);
        long long55 = secondMoment39.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        double double57 = secondMoment39.getResult();
        secondMoment39.clear();
        secondMoment39.increment(Double.NaN);
        secondMoment39.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long65 = variance64.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        secondMoment66.increment((double) (short) 0);
        double double71 = secondMoment66.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        double[] doubleArray78 = new double[] { (-1L), 0, 10L };
        secondMoment72.incrementAll(doubleArray78, 0, 0);
        double double82 = secondMoment66.evaluate(doubleArray78);
        variance64.incrementAll(doubleArray78);
        secondMoment39.incrementAll(doubleArray78);
        variance35.incrementAll(doubleArray78);
        double double88 = secondMoment26.evaluate(doubleArray78, 0, (int) (byte) 0);
        double double89 = secondMoment20.evaluate(doubleArray78);
        variance17.incrementAll(doubleArray78);
        variance17.clear();
        variance17.increment(0.0d);
        boolean boolean94 = variance17.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2L + "'", long31 == 2L);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4050.0d + "'", double53 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 2L + "'", long55 == 2L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4050.0d + "'", double57 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.5d + "'", double71 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 74.0d + "'", double82 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test09336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09336");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        secondMoment1.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(100.0d);
        double double13 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment((double) ' ');
        secondMoment14.increment((double) (byte) 0);
        secondMoment14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        double[] doubleArray29 = new double[] { (-1L), 0, 10L };
        secondMoment23.incrementAll(doubleArray29, 0, 0);
        double[] doubleArray35 = new double[] { 10, (byte) 100 };
        double double36 = secondMoment23.evaluate(doubleArray35);
        long long37 = secondMoment23.getN();
        secondMoment23.clear();
        double double39 = secondMoment23.getResult();
        secondMoment23.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        double double51 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double double62 = secondMoment46.evaluate(doubleArray58);
        double[] doubleArray63 = new double[] {};
        secondMoment46.incrementAll(doubleArray63);
        double double65 = secondMoment43.evaluate(doubleArray63);
        variance42.incrementAll(doubleArray63);
        secondMoment14.incrementAll(doubleArray63);
        double double68 = secondMoment1.evaluate(doubleArray63);
        secondMoment1.clear();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 5000.0d + "'", double13 == 5000.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4050.0d + "'", double36 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 2L + "'", long37 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5d + "'", double51 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 74.0d + "'", double62 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 5000.0d + "'", double68 == 5000.0d);
    }

    @Test
    public void test09337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09337");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.clear();
        variance2.clear();
        variance2.increment((double) (short) -1);
        variance2.increment(1.5560313249915127E27d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        secondMoment11.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        secondMoment11.clear();
        secondMoment11.increment((double) 10);
        secondMoment11.clear();
        long long21 = secondMoment11.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        variance23.increment(1.6289621902263371E7d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        secondMoment27.increment((double) (short) -1);
        secondMoment27.clear();
        secondMoment27.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment27);
        double double37 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment((double) ' ');
        secondMoment38.increment((double) (short) 10);
        secondMoment38.increment((double) 2L);
        secondMoment38.increment(272.25d);
        secondMoment38.clear();
        boolean boolean48 = secondMoment27.equals((java.lang.Object) secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        secondMoment63.increment((double) (short) 0);
        double double68 = secondMoment63.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        double double79 = secondMoment63.evaluate(doubleArray75);
        double[] doubleArray80 = new double[] {};
        secondMoment63.incrementAll(doubleArray80);
        double double82 = secondMoment60.evaluate(doubleArray80);
        double double83 = variance59.evaluate(doubleArray80);
        double double84 = secondMoment27.evaluate(doubleArray80);
        double double86 = variance23.evaluate(doubleArray80, 6660.75d);
        // The following exception was thrown during execution in test generation
        try {
            double double90 = variance2.evaluate(doubleArray80, 36.99999998509884d, 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.5d + "'", double68 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 74.0d + "'", double79 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
    }

    @Test
    public void test09338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09338");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        secondMoment0.increment(74.0d);
        double double7 = secondMoment0.getResult();
        secondMoment0.increment(7077.0d);
        secondMoment0.clear();
        double double11 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3602.0d + "'", double7 == 3602.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test09339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09339");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double double17 = secondMoment1.evaluate(doubleArray13);
        double[] doubleArray18 = new double[] {};
        secondMoment1.incrementAll(doubleArray18);
        double double22 = variance0.evaluate(doubleArray18, (int) (byte) 0, 0);
        long long23 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        variance0.incrementAll(doubleArray36);
        long long42 = variance0.getN();
        variance0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        long long50 = secondMoment45.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        secondMoment52.increment((double) (short) 0);
        double double57 = secondMoment52.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        secondMoment58.increment((double) (short) 0);
        double double63 = secondMoment58.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        double double74 = secondMoment58.evaluate(doubleArray70);
        double[] doubleArray75 = new double[] {};
        secondMoment58.incrementAll(doubleArray75);
        secondMoment52.incrementAll(doubleArray75);
        secondMoment45.incrementAll(doubleArray75);
        double double79 = variance0.evaluate(doubleArray75);
        variance0.setBiasCorrected(false);
        variance0.increment(4.320688243469202E11d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 74.0d + "'", double17 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 3L + "'", long42 == 3L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 2L + "'", long50 == 2L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5d + "'", double57 == 0.5d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.5d + "'", double63 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 74.0d + "'", double74 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double79));
    }

    @Test
    public void test09340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09340");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        double double9 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.clear();
        secondMoment2.increment(148.0d);
        long long15 = secondMoment2.getN();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 544.5d + "'", double9 == 544.5d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
    }

    @Test
    public void test09341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09341");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        double double4 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        secondMoment5.incrementAll(doubleArray11, 0, 0);
        double[] doubleArray17 = new double[] { 10, (byte) 100 };
        double double18 = secondMoment5.evaluate(doubleArray17);
        double double19 = secondMoment0.evaluate(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        secondMoment21.incrementAll(doubleArray44);
        secondMoment21.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double[] doubleArray62 = new double[] { 10, (byte) 100 };
        double double63 = secondMoment50.evaluate(doubleArray62);
        double double64 = variance49.evaluate(doubleArray62);
        double double65 = variance20.evaluate(doubleArray62);
        double double66 = secondMoment0.evaluate(doubleArray62);
        secondMoment0.increment(5304.666666666667d);
        secondMoment0.clear();
        double double70 = secondMoment0.getResult();
        double double71 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4050.0d + "'", double18 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4050.0d + "'", double19 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4050.0d + "'", double63 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4050.0d + "'", double64 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4050.0d + "'", double65 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
    }

    @Test
    public void test09342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09342");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double10 = variance9.getResult();
        long long11 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        long long23 = variance22.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        double double35 = variance22.evaluate(doubleArray30, (double) (short) -1);
        double double36 = variance22.getResult();
        variance22.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        double double45 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        double double51 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double double62 = secondMoment46.evaluate(doubleArray58);
        double[] doubleArray63 = new double[] {};
        secondMoment46.incrementAll(doubleArray63);
        secondMoment40.incrementAll(doubleArray63);
        secondMoment40.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        double[] doubleArray81 = new double[] { 10, (byte) 100 };
        double double82 = secondMoment69.evaluate(doubleArray81);
        double double83 = variance68.evaluate(doubleArray81);
        double double84 = variance39.evaluate(doubleArray81);
        double double85 = variance22.evaluate(doubleArray81);
        variance9.incrementAll(doubleArray81, 1, 0);
        variance9.increment((double) 10.0f);
        double double91 = variance9.getResult();
        long long92 = variance9.getN();
        variance9.clear();
        long long94 = variance9.getN();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 37.0d + "'", double35 == 37.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5d + "'", double51 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 74.0d + "'", double62 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 1L + "'", long92 == 1L);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1L + "'", long94 == 1L);
    }

    @Test
    public void test09343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09343");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        secondMoment19.increment((double) (-1.0f));
        secondMoment19.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        long long36 = variance35.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double double48 = variance35.evaluate(doubleArray43, (double) (short) -1);
        double double49 = secondMoment19.evaluate(doubleArray43);
        double double50 = secondMoment2.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        double double52 = secondMoment2.getResult();
        secondMoment2.increment(688.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        double double56 = secondMoment2.getResult();
        secondMoment2.increment(1.5296396104640088E29d);
        long long59 = secondMoment2.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 37.0d + "'", double48 == 37.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 74.0d + "'", double50 == 74.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 74.0d + "'", double52 == 74.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 351992.75d + "'", double56 == 351992.75d);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 5L + "'", long59 == 5L);
    }

    @Test
    public void test09344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09344");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (byte) 0);
        secondMoment1.clear();
        double double7 = secondMoment1.getResult();
        secondMoment1.increment(1.0239004E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double[] doubleArray24 = new double[] { 10, (byte) 100 };
        double double25 = secondMoment12.evaluate(doubleArray24);
        double double26 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment12);
        long long28 = secondMoment12.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment((double) ' ');
        secondMoment29.increment((double) (-1.0f));
        secondMoment29.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment35);
        long long46 = variance45.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double double58 = variance45.evaluate(doubleArray53, (double) (short) -1);
        double double59 = secondMoment29.evaluate(doubleArray53);
        double double60 = secondMoment12.evaluate(doubleArray53);
        double double61 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment((double) ' ');
        secondMoment62.increment((double) '4');
        secondMoment62.increment((double) 0.0f);
        long long69 = secondMoment62.getN();
        long long70 = secondMoment62.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long73 = variance72.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        secondMoment74.increment((double) (short) 0);
        double double79 = secondMoment74.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        double double90 = secondMoment74.evaluate(doubleArray86);
        variance72.incrementAll(doubleArray86);
        double double92 = secondMoment62.evaluate(doubleArray86);
        double double93 = secondMoment12.evaluate(doubleArray86);
        secondMoment12.clear();
        boolean boolean95 = secondMoment1.equals((java.lang.Object) secondMoment12);
        secondMoment12.clear();
        secondMoment12.increment(1801.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4050.0d + "'", double26 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 2L + "'", long28 == 2L);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 37.0d + "'", double58 == 37.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 74.0d + "'", double59 == 74.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 3L + "'", long69 == 3L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 3L + "'", long70 == 3L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.5d + "'", double79 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 74.0d + "'", double92 == 74.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 74.0d + "'", double93 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test09345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09345");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        secondMoment2.clear();
        double double9 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double26 = secondMoment10.evaluate(doubleArray22);
        secondMoment2.incrementAll(doubleArray22, 0, (int) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        double double31 = secondMoment2.getResult();
        secondMoment2.clear();
        long long33 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        double double35 = secondMoment2.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 74.0d + "'", double26 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
    }

    @Test
    public void test09346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09346");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double double17 = secondMoment1.evaluate(doubleArray13);
        double[] doubleArray18 = new double[] {};
        secondMoment1.incrementAll(doubleArray18);
        double double22 = variance0.evaluate(doubleArray18, (int) (byte) 0, 0);
        long long23 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        variance0.incrementAll(doubleArray36);
        long long42 = variance0.getN();
        variance0.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double[] doubleArray60 = new double[] { 10, (byte) 100 };
        double double61 = secondMoment48.evaluate(doubleArray60);
        double double62 = secondMoment45.evaluate(doubleArray60);
        variance0.incrementAll(doubleArray60);
        double double64 = variance0.getResult();
        boolean boolean65 = variance0.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 74.0d + "'", double17 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 3L + "'", long42 == 3L);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1842.2d + "'", double64 == 1842.2d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test09347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09347");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) '4');
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long7 = secondMoment0.getN();
        secondMoment0.increment(7.90286396701389E7d);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
    }

    @Test
    public void test09348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09348");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double double45 = secondMoment18.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        secondMoment46.increment((double) (short) -1);
        double[] doubleArray64 = new double[] { (short) 1 };
        secondMoment46.incrementAll(doubleArray64);
        double double66 = secondMoment18.evaluate(doubleArray64);
        double double67 = secondMoment1.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance68.setBiasCorrected(true);
        variance68.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
    }

    @Test
    public void test09349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09349");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        secondMoment16.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment16);
        double double27 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment(0.5d);
        secondMoment16.increment(2.0148763656212277E23d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test09350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09350");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long10 = variance9.getN();
        boolean boolean11 = variance9.isBiasCorrected();
        variance9.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        secondMoment15.increment((double) (short) -1);
        secondMoment15.clear();
        secondMoment15.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment15);
        secondMoment15.increment(100.0d);
        double double27 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment((double) ' ');
        secondMoment28.increment((double) (byte) 0);
        secondMoment28.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double[] doubleArray49 = new double[] { 10, (byte) 100 };
        double double50 = secondMoment37.evaluate(doubleArray49);
        long long51 = secondMoment37.getN();
        secondMoment37.clear();
        double double53 = secondMoment37.getResult();
        secondMoment37.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        secondMoment60.increment((double) (short) 0);
        double double65 = secondMoment60.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        double[] doubleArray72 = new double[] { (-1L), 0, 10L };
        secondMoment66.incrementAll(doubleArray72, 0, 0);
        double double76 = secondMoment60.evaluate(doubleArray72);
        double[] doubleArray77 = new double[] {};
        secondMoment60.incrementAll(doubleArray77);
        double double79 = secondMoment57.evaluate(doubleArray77);
        variance56.incrementAll(doubleArray77);
        secondMoment28.incrementAll(doubleArray77);
        double double82 = secondMoment15.evaluate(doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            double double85 = variance9.evaluate(doubleArray77, (int) '#', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 544.5d + "'", double8 == 544.5d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 5000.0d + "'", double27 == 5000.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2L + "'", long51 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.5d + "'", double65 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 74.0d + "'", double76 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 5000.0d + "'", double82 == 5000.0d);
    }

    @Test
    public void test09351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09351");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        double double16 = secondMoment0.evaluate(doubleArray12);
        long long17 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double19 = secondMoment0.getResult();
        secondMoment0.increment((double) (byte) 10);
        double double22 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 74.0d + "'", double16 == 74.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 3L + "'", long17 == 3L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 74.0d + "'", double19 == 74.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 110.75d + "'", double22 == 110.75d);
    }

    @Test
    public void test09352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09352");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        secondMoment1.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        long long11 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long14 = variance13.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        secondMoment15.increment((double) (short) 0);
        double double20 = secondMoment15.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double double31 = secondMoment15.evaluate(doubleArray27);
        variance13.incrementAll(doubleArray27);
        double double33 = secondMoment1.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double36 = secondMoment1.getResult();
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5d + "'", double20 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 74.0d + "'", double31 == 74.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 74.0d + "'", double33 == 74.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 74.0d + "'", double36 == 74.0d);
    }

    @Test
    public void test09353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09353");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        long long27 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double39 = variance26.evaluate(doubleArray34, (double) (short) -1);
        double double40 = secondMoment10.evaluate(doubleArray34);
        secondMoment0.incrementAll(doubleArray34);
        secondMoment0.increment((double) 6L);
        double double44 = secondMoment0.getResult();
        secondMoment0.clear();
        double double46 = secondMoment0.getResult();
        secondMoment0.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 80.75d + "'", double44 == 80.75d);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
    }

    @Test
    public void test09354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09354");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        secondMoment2.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.increment((double) (short) 0);
        double double18 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double29 = secondMoment13.evaluate(doubleArray25);
        double[] doubleArray30 = new double[] {};
        secondMoment13.incrementAll(doubleArray30);
        secondMoment7.incrementAll(doubleArray30);
        secondMoment7.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        double double50 = variance35.evaluate(doubleArray48);
        double double51 = secondMoment2.evaluate(doubleArray48);
        secondMoment2.clear();
        double double53 = secondMoment2.getResult();
        double double54 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.clear();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 74.0d + "'", double29 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
    }

    @Test
    public void test09355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09355");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (short) 10);
        secondMoment1.increment((double) 2L);
        double double8 = secondMoment1.getResult();
        double double9 = secondMoment1.getResult();
        secondMoment1.increment(37.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance12.clear();
        variance12.setBiasCorrected(true);
        double double16 = variance12.getResult();
        variance12.clear();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 482.66666666666663d + "'", double8 == 482.66666666666663d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 482.66666666666663d + "'", double9 == 482.66666666666663d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 285.5833333333333d + "'", double16 == 285.5833333333333d);
    }

    @Test
    public void test09356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09356");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) '4');
        secondMoment0.increment((double) 100);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        secondMoment9.increment((double) '4');
        double double15 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        secondMoment16.increment((double) (short) 0);
        double double21 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        secondMoment22.increment((double) (short) 0);
        double double27 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double38 = secondMoment22.evaluate(doubleArray34);
        double[] doubleArray39 = new double[] {};
        secondMoment22.incrementAll(doubleArray39);
        secondMoment16.incrementAll(doubleArray39);
        secondMoment16.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double[] doubleArray57 = new double[] { 10, (byte) 100 };
        double double58 = secondMoment45.evaluate(doubleArray57);
        double double59 = variance44.evaluate(doubleArray57);
        double double60 = secondMoment9.evaluate(doubleArray57);
        double double61 = secondMoment0.evaluate(doubleArray57);
        double double62 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 200.0d + "'", double15 == 200.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.5d + "'", double21 == 0.5d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5d + "'", double27 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 74.0d + "'", double38 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
    }

    @Test
    public void test09357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09357");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.clear();
        secondMoment2.increment((double) 10);
        secondMoment2.increment(2.0d);
        long long13 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        double double47 = secondMoment25.evaluate(doubleArray45);
        double double48 = variance24.evaluate(doubleArray45);
        double double51 = secondMoment2.evaluate(doubleArray45, 0, (int) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        long long53 = variance52.getN();
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 32.0d + "'", double51 == 32.0d);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 2L + "'", long53 == 2L);
    }

    @Test
    public void test09358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09358");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        variance1.clear();
    }

    @Test
    public void test09359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09359");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        secondMoment16.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment16);
        secondMoment16.clear();
        secondMoment16.increment(5226.0d);
        double double30 = secondMoment16.getResult();
        secondMoment16.increment(684.6666666666666d);
        long long33 = secondMoment16.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 2L + "'", long33 == 2L);
    }

    @Test
    public void test09360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09360");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double double17 = secondMoment1.evaluate(doubleArray13);
        double[] doubleArray18 = new double[] {};
        secondMoment1.incrementAll(doubleArray18);
        double double22 = variance0.evaluate(doubleArray18, (int) (byte) 0, 0);
        long long23 = variance0.getN();
        variance0.clear();
        double[] doubleArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double26 = variance0.evaluate(doubleArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 74.0d + "'", double17 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
    }

    @Test
    public void test09361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09361");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        secondMoment3.increment((double) (short) 0);
        double double8 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double19 = secondMoment3.evaluate(doubleArray15);
        double[] doubleArray20 = new double[] {};
        secondMoment3.incrementAll(doubleArray20);
        double double24 = variance2.evaluate(doubleArray20, (int) (byte) 0, 0);
        variance1.incrementAll(doubleArray20);
        variance1.increment((double) (short) -1);
        variance1.increment(1.2239884749999996E7d);
        variance1.setBiasCorrected(false);
        double double32 = variance1.getResult();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 74.0d + "'", double19 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 3.745370079326324E13d + "'", double32 == 3.745370079326324E13d);
    }

    @Test
    public void test09362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09362");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double double17 = secondMoment1.evaluate(doubleArray13);
        long long18 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double20 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance21.increment((double) 10.0f);
        variance21.setBiasCorrected(false);
        long long26 = variance21.getN();
        variance21.setBiasCorrected(true);
        double[] doubleArray29 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double32 = variance21.evaluate(doubleArray29, (int) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 74.0d + "'", double17 == 74.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 3L + "'", long18 == 3L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 74.0d + "'", double20 == 74.0d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 3L + "'", long26 == 3L);
    }

    @Test
    public void test09363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09363");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        long long9 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
    }

    @Test
    public void test09364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09364");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (byte) 0);
        secondMoment1.clear();
        secondMoment1.clear();
        double double8 = secondMoment1.getResult();
        secondMoment1.increment(1576.2666666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance11.increment(4034.0d);
        variance11.setBiasCorrected(true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test09365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09365");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        long long27 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double39 = variance26.evaluate(doubleArray34, (double) (short) -1);
        double double40 = secondMoment10.evaluate(doubleArray34);
        secondMoment0.incrementAll(doubleArray34);
        secondMoment0.increment((double) 6L);
        double double44 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 80.75d + "'", double44 == 80.75d);
    }

    @Test
    public void test09366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09366");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) '4');
        secondMoment1.increment((double) 100);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance10.increment(3.1057707555555552E7d);
        double double13 = variance10.getResult();
        boolean boolean14 = variance10.isBiasCorrected();
        variance10.increment(30671.375d);
        long long17 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        double double24 = secondMoment19.getResult();
        secondMoment19.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        double double27 = secondMoment19.getResult();
        secondMoment19.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        secondMoment31.increment((double) (short) -1);
        secondMoment31.clear();
        secondMoment31.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        variance40.incrementAll(doubleArray47);
        variance30.incrementAll(doubleArray47);
        double double53 = secondMoment19.evaluate(doubleArray47);
        double double54 = variance10.evaluate(doubleArray47);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5d + "'", double24 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 74.0d + "'", double53 == 74.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 37.0d + "'", double54 == 37.0d);
    }

    @Test
    public void test09367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09367");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        double[] doubleArray27 = new double[] { 10, (byte) 100 };
        double double28 = secondMoment15.evaluate(doubleArray27);
        double double29 = secondMoment15.getResult();
        long long30 = secondMoment15.getN();
        long long31 = secondMoment15.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        boolean boolean33 = secondMoment8.equals((java.lang.Object) secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        secondMoment36.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        double double46 = secondMoment41.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double double63 = secondMoment47.evaluate(doubleArray59);
        double[] doubleArray64 = new double[] {};
        secondMoment47.incrementAll(doubleArray64);
        secondMoment41.incrementAll(doubleArray64);
        secondMoment41.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double[] doubleArray82 = new double[] { 10, (byte) 100 };
        double double83 = secondMoment70.evaluate(doubleArray82);
        double double84 = variance69.evaluate(doubleArray82);
        double double85 = secondMoment36.evaluate(doubleArray82);
        double double86 = variance35.evaluate(doubleArray82);
        secondMoment1.incrementAll(doubleArray82);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance88.clear();
        long long90 = variance88.getN();
        double double91 = variance88.getResult();
        variance88.clear();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4050.0d + "'", double28 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4050.0d + "'", double29 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 2L + "'", long30 == 2L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2L + "'", long31 == 2L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.5d + "'", double46 == 0.5d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4050.0d + "'", double86 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 4L + "'", long90 == 4L);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1755.1875d + "'", double91 == 1755.1875d);
    }

    @Test
    public void test09368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09368");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        double double14 = secondMoment9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        double double25 = secondMoment9.evaluate(doubleArray21);
        secondMoment1.incrementAll(doubleArray21, 0, (int) (short) 0);
        secondMoment1.increment((double) (-1.0f));
        double double31 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5d + "'", double14 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 74.0d + "'", double25 == 74.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test09369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09369");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.clear();
        variance2.clear();
        variance2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        secondMoment7.increment((double) (short) -1);
        long long13 = secondMoment7.getN();
        double double14 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment7);
        secondMoment7.increment(2.880385675555556E7d);
        long long18 = secondMoment7.getN();
        double double19 = secondMoment7.getResult();
        secondMoment7.increment((double) (-1.0f));
        secondMoment7.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        secondMoment24.increment((double) (short) -1);
        long long30 = secondMoment24.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment24);
        double double32 = variance31.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double double63 = secondMoment47.evaluate(doubleArray59);
        double[] doubleArray64 = new double[] {};
        secondMoment47.incrementAll(doubleArray64);
        double double66 = secondMoment44.evaluate(doubleArray64);
        double double67 = variance43.evaluate(doubleArray64);
        double double68 = variance31.evaluate(doubleArray64);
        double double69 = secondMoment7.evaluate(doubleArray64);
        // The following exception was thrown during execution in test generation
        try {
            variance2.incrementAll(doubleArray64, 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 544.5d + "'", double14 == 544.5d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 3L + "'", long18 == 3L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 5.5310751405070744E14d + "'", double19 == 5.5310751405070744E14d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 2L + "'", long30 == 2L);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 272.25d + "'", double32 == 272.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
    }

    @Test
    public void test09370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09370");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(4049.9999999999995d);
        secondMoment1.clear();
        secondMoment1.clear();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test09371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09371");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double double45 = secondMoment18.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        secondMoment46.increment((double) (short) -1);
        double[] doubleArray64 = new double[] { (short) 1 };
        secondMoment46.incrementAll(doubleArray64);
        double double66 = secondMoment18.evaluate(doubleArray64);
        double double67 = secondMoment1.evaluate(doubleArray64);
        secondMoment1.clear();
        secondMoment1.clear();
        secondMoment1.clear();
        long long71 = secondMoment1.getN();
        long long72 = secondMoment1.getN();
        long long73 = secondMoment1.getN();
        secondMoment1.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
    }

    @Test
    public void test09372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09372");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        secondMoment1.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        boolean boolean9 = variance8.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        secondMoment10.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double[] doubleArray28 = new double[] { 10, (byte) 100 };
        double double29 = secondMoment16.evaluate(doubleArray28);
        double double30 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        long long32 = secondMoment16.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment((double) ' ');
        secondMoment33.increment((double) (-1.0f));
        secondMoment33.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment39);
        long long50 = variance49.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double62 = variance49.evaluate(doubleArray57, (double) (short) -1);
        double double63 = secondMoment33.evaluate(doubleArray57);
        double double64 = secondMoment16.evaluate(doubleArray57);
        secondMoment10.incrementAll(doubleArray57);
        double double68 = variance8.evaluate(doubleArray57, (int) (byte) 0, (int) (byte) 0);
        long long69 = variance8.getN();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4050.0d + "'", double29 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4050.0d + "'", double30 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2L + "'", long32 == 2L);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 37.0d + "'", double62 == 37.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 74.0d + "'", double64 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 3L + "'", long69 == 3L);
    }

    @Test
    public void test09373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09373");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        long long17 = secondMoment2.getN();
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.increment(200.0d);
        secondMoment2.increment(5922.666666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        double double25 = secondMoment2.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2.5416547000000004E7d + "'", double25 == 2.5416547000000004E7d);
    }

    @Test
    public void test09374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09374");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        secondMoment5.increment((double) (short) 0);
        double double10 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] {};
        secondMoment11.incrementAll(doubleArray28);
        secondMoment5.incrementAll(doubleArray28);
        secondMoment5.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double48 = variance33.evaluate(doubleArray46);
        double double49 = secondMoment0.evaluate(doubleArray46);
        secondMoment0.increment((double) (short) -1);
        double double52 = secondMoment0.getResult();
        long long53 = secondMoment0.getN();
        secondMoment0.increment(0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5d + "'", double10 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 6140.666666666667d + "'", double52 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 3L + "'", long53 == 3L);
    }

    @Test
    public void test09375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09375");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        secondMoment2.increment((double) (-1.0f));
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        long long19 = variance18.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double31 = variance18.evaluate(doubleArray26, (double) (short) -1);
        double double32 = secondMoment2.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.clear();
        long long38 = secondMoment2.getN();
        secondMoment2.increment(125982.5185185185d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 37.0d + "'", double31 == 37.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 74.0d + "'", double32 == 74.0d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    }

    @Test
    public void test09376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09376");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        secondMoment2.increment((double) (-1.0f));
        double double7 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) (short) -1);
        long long16 = secondMoment10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        double double19 = secondMoment10.getResult();
        secondMoment10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        secondMoment22.increment((double) (short) 0);
        double double27 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double38 = secondMoment22.evaluate(doubleArray34);
        double[] doubleArray39 = new double[] {};
        secondMoment22.incrementAll(doubleArray39);
        double double43 = variance21.evaluate(doubleArray39, (int) (byte) 0, 0);
        long long44 = variance21.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        double double50 = secondMoment45.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        double double61 = secondMoment45.evaluate(doubleArray57);
        variance21.incrementAll(doubleArray57);
        double double63 = secondMoment10.evaluate(doubleArray57);
        secondMoment2.incrementAll(doubleArray57);
        secondMoment2.increment(3602.0d);
        double double67 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 544.5d + "'", double7 == 544.5d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 544.5d + "'", double19 == 544.5d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5d + "'", double27 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 74.0d + "'", double38 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.5d + "'", double50 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 74.0d + "'", double63 == 74.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 9714674.75d + "'", double67 == 9714674.75d);
    }

    @Test
    public void test09377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09377");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double double17 = secondMoment1.evaluate(doubleArray13);
        double[] doubleArray18 = new double[] {};
        secondMoment1.incrementAll(doubleArray18);
        double double22 = variance0.evaluate(doubleArray18, (int) (byte) 0, 0);
        long long23 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        variance0.incrementAll(doubleArray36);
        long long42 = variance0.getN();
        variance0.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double[] doubleArray60 = new double[] { 10, (byte) 100 };
        double double61 = secondMoment48.evaluate(doubleArray60);
        double double62 = secondMoment45.evaluate(doubleArray60);
        variance0.incrementAll(doubleArray60);
        double double64 = variance0.getResult();
        double double65 = variance0.getResult();
        variance0.clear();
        variance0.increment(0.3333333333333333d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 74.0d + "'", double17 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 3L + "'", long42 == 3L);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1842.2d + "'", double64 == 1842.2d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1842.2d + "'", double65 == 1842.2d);
    }

    @Test
    public void test09378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09378");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        double[] doubleArray18 = new double[] { (short) 1 };
        secondMoment0.incrementAll(doubleArray18);
        long long20 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        secondMoment21.increment((double) (short) -1);
        secondMoment21.clear();
        secondMoment21.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        long long31 = variance30.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        secondMoment35.increment((double) (short) 0);
        double double40 = secondMoment35.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        double double51 = secondMoment35.evaluate(doubleArray47);
        double[] doubleArray52 = new double[] {};
        secondMoment35.incrementAll(doubleArray52);
        double double54 = secondMoment32.evaluate(doubleArray52);
        double double55 = variance30.evaluate(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        secondMoment59.increment((double) (short) 0);
        double double64 = secondMoment59.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        double double75 = secondMoment59.evaluate(doubleArray71);
        double[] doubleArray76 = new double[] {};
        secondMoment59.incrementAll(doubleArray76);
        double double78 = secondMoment56.evaluate(doubleArray76);
        variance30.incrementAll(doubleArray76);
        double double80 = secondMoment0.evaluate(doubleArray76);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance81.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 4L + "'", long20 == 4L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5d + "'", double40 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 74.0d + "'", double51 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.5d + "'", double64 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 74.0d + "'", double75 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 7077.0d + "'", double80 == 7077.0d);
    }

    @Test
    public void test09379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09379");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance16.increment(0.0d);
        long long19 = variance16.getN();
        variance16.increment((double) (byte) -1);
        variance16.clear();
        boolean boolean23 = variance16.isBiasCorrected();
        double double24 = variance16.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        double[] doubleArray38 = new double[] { 10, (byte) 100 };
        double double39 = secondMoment26.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        secondMoment41.increment((double) (short) -1);
        secondMoment41.clear();
        secondMoment41.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment41);
        boolean boolean51 = secondMoment26.equals((java.lang.Object) secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long55 = variance54.getN();
        double double56 = variance54.getResult();
        variance54.increment((double) (short) 100);
        variance54.increment((double) 3L);
        variance54.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        secondMoment62.increment((double) (short) 0);
        double double67 = secondMoment62.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double double78 = secondMoment62.evaluate(doubleArray74);
        double[] doubleArray79 = new double[] {};
        secondMoment62.incrementAll(doubleArray79);
        variance54.incrementAll(doubleArray79);
        double double83 = variance52.evaluate(doubleArray79, 7186.0d);
        double double84 = variance16.evaluate(doubleArray79);
        double double85 = variance16.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2025.0d + "'", double24 == 2025.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4050.0d + "'", double39 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.5d + "'", double67 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 74.0d + "'", double78 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2025.0d + "'", double85 == 2025.0d);
    }

    @Test
    public void test09380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09380");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        secondMoment0.increment(3.033666413425926E7d);
        secondMoment0.clear();
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
    }

    @Test
    public void test09381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09381");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.clear();
        double double21 = secondMoment2.getResult();
        secondMoment2.clear();
        secondMoment2.increment(8441189.1875d);
        secondMoment2.clear();
        double double26 = secondMoment2.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test09382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09382");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        secondMoment1.increment(80.75d);
        secondMoment1.increment(9714674.75d);
        secondMoment1.increment(5.9118157428691766E13d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
    }

    @Test
    public void test09383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09383");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        double double4 = secondMoment1.getResult();
        double double5 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        secondMoment6.incrementAll(doubleArray12, 0, 0);
        double[] doubleArray18 = new double[] { 10, (byte) 100 };
        double double19 = secondMoment6.evaluate(doubleArray18);
        double double20 = secondMoment1.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        java.lang.Class<?> wildcardClass22 = secondMoment1.getClass();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4050.0d + "'", double19 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test09384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09384");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        secondMoment5.increment((double) (short) 0);
        double double10 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] {};
        secondMoment11.incrementAll(doubleArray28);
        secondMoment5.incrementAll(doubleArray28);
        secondMoment5.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double48 = variance33.evaluate(doubleArray46);
        double double49 = secondMoment0.evaluate(doubleArray46);
        double double50 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5d + "'", double10 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
    }

    @Test
    public void test09385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09385");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        double double11 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long13 = variance12.getN();
        variance12.clear();
        double double15 = variance12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        secondMoment19.increment(74.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        long long27 = secondMoment19.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        secondMoment19.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment((double) ' ');
        secondMoment32.increment((double) (-1.0f));
        secondMoment32.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment38);
        long long49 = variance48.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double double61 = variance48.evaluate(doubleArray56, (double) (short) -1);
        double double62 = secondMoment32.evaluate(doubleArray56);
        boolean boolean63 = secondMoment19.equals((java.lang.Object) doubleArray56);
        // The following exception was thrown during execution in test generation
        try {
            double double66 = variance12.evaluate(doubleArray56, (int) (byte) 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 544.5d + "'", double11 == 544.5d);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 272.25d + "'", double15 == 272.25d);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 3L + "'", long27 == 3L);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1L + "'", long49 == 1L);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 37.0d + "'", double61 == 37.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 74.0d + "'", double62 == 74.0d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test09386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09386");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double[] doubleArray33 = new double[] { 10, (byte) 100 };
        double double34 = secondMoment21.evaluate(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment36);
        secondMoment36.increment((double) (short) -1);
        secondMoment36.clear();
        secondMoment36.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment36);
        boolean boolean46 = secondMoment21.equals((java.lang.Object) secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double[] doubleArray66 = new double[] {};
        secondMoment49.incrementAll(doubleArray66);
        double double70 = variance48.evaluate(doubleArray66, (int) (byte) 0, 0);
        long long71 = variance48.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        secondMoment72.increment((double) (short) 0);
        double double77 = secondMoment72.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment78.increment(1.0d);
        double[] doubleArray84 = new double[] { (-1L), 0, 10L };
        secondMoment78.incrementAll(doubleArray84, 0, 0);
        double double88 = secondMoment72.evaluate(doubleArray84);
        variance48.incrementAll(doubleArray84);
        double double91 = variance47.evaluate(doubleArray84, (double) '#');
        double double94 = variance19.evaluate(doubleArray84, 0, (int) (byte) 1);
        boolean boolean95 = variance19.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4050.0d + "'", double34 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.5d + "'", double77 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 24.666666666666668d + "'", double91 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test09387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09387");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        double double17 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        long long19 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        secondMoment3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        variance25.clear();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
    }

    @Test
    public void test09388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09388");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance10.evaluate(doubleArray31);
        long long35 = variance10.getN();
        double double36 = variance10.getResult();
        variance10.setBiasCorrected(false);
        double double39 = variance10.getResult();
        variance10.increment(86.0d);
        variance10.increment(0.6666666666666666d);
        variance10.increment(3.0341188245370373E7d);
        long long46 = variance10.getN();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
    }

    @Test
    public void test09389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09389");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(544.5d);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long18 = variance17.getN();
        double double19 = variance17.getResult();
        double double20 = variance17.getResult();
        variance17.clear();
        double double22 = variance17.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment((double) ' ');
        secondMoment23.increment((double) (-1.0f));
        secondMoment23.clear();
        secondMoment23.clear();
        double double30 = secondMoment23.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        secondMoment31.increment((double) (short) 0);
        double double36 = secondMoment31.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        secondMoment37.increment((double) (short) 0);
        double double42 = secondMoment37.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        secondMoment43.incrementAll(doubleArray49, 0, 0);
        double double53 = secondMoment37.evaluate(doubleArray49);
        double[] doubleArray54 = new double[] {};
        secondMoment37.incrementAll(doubleArray54);
        secondMoment31.incrementAll(doubleArray54);
        secondMoment31.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment60.increment(1.0d);
        double[] doubleArray66 = new double[] { (-1L), 0, 10L };
        secondMoment60.incrementAll(doubleArray66, 0, 0);
        double[] doubleArray72 = new double[] { 10, (byte) 100 };
        double double73 = secondMoment60.evaluate(doubleArray72);
        double double74 = variance59.evaluate(doubleArray72);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment((double) ' ');
        double double78 = secondMoment75.getResult();
        boolean boolean79 = variance59.equals((java.lang.Object) double78);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment80.increment(1.0d);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        secondMoment80.incrementAll(doubleArray86, 0, 0);
        double double90 = variance59.evaluate(doubleArray86);
        secondMoment23.incrementAll(doubleArray86);
        double double94 = variance17.evaluate(doubleArray86, (int) (short) 0, (int) (byte) 1);
        double double95 = variance15.evaluate(doubleArray86);
        double double96 = variance15.getResult();
        long long97 = variance15.getN();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.5d + "'", double36 == 0.5d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5d + "'", double42 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 74.0d + "'", double53 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4050.0d + "'", double73 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4050.0d + "'", double74 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 37.0d + "'", double90 == 37.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 37.0d + "'", double95 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + 0L + "'", long97 == 0L);
    }

    @Test
    public void test09390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09390");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.clear();
        secondMoment2.increment((double) 10);
        secondMoment2.clear();
        long long12 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        variance14.clear();
        long long16 = variance14.getN();
        variance14.increment(0.0d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test09391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09391");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        double double18 = variance10.getResult();
        java.lang.Object obj19 = null;
        boolean boolean20 = variance10.equals(obj19);
        double double21 = variance10.getResult();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test09392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09392");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        secondMoment0.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long9 = variance8.getN();
        variance8.increment(3.4373094E7d);
        variance8.increment(9725402.75d);
        variance8.increment(3.887544801793228E13d);
        long long16 = variance8.getN();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 3L + "'", long9 == 3L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 3L + "'", long16 == 3L);
    }

    @Test
    public void test09393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09393");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) '4');
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double7 = variance6.getResult();
        variance6.clear();
        variance6.increment(0.0d);
        long long11 = variance6.getN();
        variance6.clear();
        long long13 = variance6.getN();
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double[] doubleArray28 = new double[] { 10, (byte) 100 };
        double double29 = secondMoment16.evaluate(doubleArray28);
        double double30 = secondMoment16.getResult();
        secondMoment16.increment((double) (short) -1);
        double double33 = secondMoment16.getResult();
        double double34 = secondMoment16.getResult();
        secondMoment16.clear();
        secondMoment16.increment(4402.666666666667d);
        double double38 = secondMoment16.getResult();
        double double39 = secondMoment16.getResult();
        secondMoment16.increment(4402.666666666667d);
        secondMoment16.increment(7200964.18888889d);
        secondMoment16.increment(7.703419152040815E7d);
        secondMoment16.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        secondMoment47.increment((double) (short) 0);
        double double52 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment((double) ' ');
        double double56 = secondMoment53.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment53);
        boolean boolean58 = secondMoment47.equals((java.lang.Object) variance57);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment59);
        secondMoment59.increment((double) (short) -1);
        secondMoment59.clear();
        secondMoment59.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment59);
        long long69 = variance68.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment73.increment(1.0d);
        secondMoment73.increment((double) (short) 0);
        double double78 = secondMoment73.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment79.increment(1.0d);
        double[] doubleArray85 = new double[] { (-1L), 0, 10L };
        secondMoment79.incrementAll(doubleArray85, 0, 0);
        double double89 = secondMoment73.evaluate(doubleArray85);
        double[] doubleArray90 = new double[] {};
        secondMoment73.incrementAll(doubleArray90);
        double double92 = secondMoment70.evaluate(doubleArray90);
        double double93 = variance68.evaluate(doubleArray90);
        double double94 = secondMoment47.evaluate(doubleArray90);
        secondMoment16.incrementAll(doubleArray90);
        double double97 = variance6.evaluate(doubleArray90, 3.3919362E7d);
        long long98 = variance6.getN();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4050.0d + "'", double29 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4050.0d + "'", double30 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 6140.666666666667d + "'", double33 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 6140.666666666667d + "'", double34 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.5d + "'", double52 == 0.5d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 1L + "'", long69 == 1L);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.5d + "'", double78 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.5d + "'", double94 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double97));
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 2L + "'", long98 == 2L);
    }

    @Test
    public void test09394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09394");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (short) 10);
        secondMoment0.increment((double) 2L);
        secondMoment0.increment(272.25d);
        secondMoment0.clear();
        double double10 = secondMoment0.getResult();
        secondMoment0.increment((double) (-1L));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test09395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09395");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        double double7 = secondMoment1.getResult();
        long long8 = secondMoment1.getN();
        double double9 = secondMoment1.getResult();
        secondMoment1.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double[] doubleArray24 = new double[] { 10, (byte) 100 };
        double double25 = secondMoment12.evaluate(doubleArray24);
        secondMoment1.incrementAll(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance27.clear();
        long long29 = variance27.getN();
        variance27.increment(1.843691713502358E14d);
        boolean boolean32 = variance27.isBiasCorrected();
        variance27.clear();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.5d + "'", double9 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 5L + "'", long29 == 5L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test09396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09396");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = variance19.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        long long41 = secondMoment31.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        secondMoment31.incrementAll(doubleArray48, 0, (int) (short) 1);
        double double56 = variance19.evaluate(doubleArray48, (double) 100.0f);
        long long57 = variance19.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        secondMoment61.increment((double) (short) 0);
        double double66 = secondMoment61.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        double[] doubleArray73 = new double[] { (-1L), 0, 10L };
        secondMoment67.incrementAll(doubleArray73, 0, 0);
        double double77 = secondMoment61.evaluate(doubleArray73);
        double[] doubleArray78 = new double[] {};
        secondMoment61.incrementAll(doubleArray78);
        double double80 = secondMoment58.evaluate(doubleArray78);
        double double81 = variance19.evaluate(doubleArray78);
        variance19.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.5d + "'", double66 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 74.0d + "'", double77 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
    }

    @Test
    public void test09397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09397");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double8 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        double[] doubleArray22 = new double[] { 10, (byte) 100 };
        double double23 = secondMoment10.evaluate(doubleArray22);
        double double24 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        double double48 = variance26.evaluate(doubleArray44, (int) (byte) 0, 0);
        double double49 = variance25.evaluate(doubleArray44);
        secondMoment0.incrementAll(doubleArray44);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment66.increment(1.0d);
        secondMoment66.increment((double) (short) 0);
        double double71 = secondMoment66.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        double[] doubleArray78 = new double[] { (-1L), 0, 10L };
        secondMoment72.incrementAll(doubleArray78, 0, 0);
        double double82 = secondMoment66.evaluate(doubleArray78);
        double[] doubleArray83 = new double[] {};
        secondMoment66.incrementAll(doubleArray83);
        double double85 = secondMoment63.evaluate(doubleArray83);
        double double86 = variance62.evaluate(doubleArray83);
        secondMoment0.incrementAll(doubleArray83);
        secondMoment0.clear();
        long long89 = secondMoment0.getN();
        long long90 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance91 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long92 = variance91.getN();
        variance91.increment(392.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.5d + "'", double71 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 74.0d + "'", double82 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 0L + "'", long92 == 0L);
    }

    @Test
    public void test09398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09398");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.increment((double) 100);
        secondMoment0.increment(2.880385675555556E7d);
        secondMoment0.increment(200.0d);
        double double12 = secondMoment0.getResult();
        long long13 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 6.637259175941291E14d + "'", double12 == 6.637259175941291E14d);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 5L + "'", long13 == 5L);
    }

    @Test
    public void test09399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09399");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        long long17 = secondMoment7.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        secondMoment7.incrementAll(doubleArray24, 0, (int) (short) 1);
        secondMoment1.incrementAll(doubleArray24, (int) (byte) 0, (int) (byte) 1);
        secondMoment1.clear();
        double double35 = secondMoment1.getResult();
        secondMoment1.increment(7077.0d);
        secondMoment1.clear();
        long long39 = secondMoment1.getN();
        double double40 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
    }

    @Test
    public void test09400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09400");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        double double10 = secondMoment1.getResult();
        double double11 = secondMoment1.getResult();
        long long12 = secondMoment1.getN();
        double double13 = secondMoment1.getResult();
        secondMoment1.clear();
        java.lang.Class<?> wildcardClass15 = secondMoment1.getClass();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 544.5d + "'", double10 == 544.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 544.5d + "'", double11 == 544.5d);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 544.5d + "'", double13 == 544.5d);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test09401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09401");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        double double6 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.increment((double) (short) 0);
        double double18 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        secondMoment19.incrementAll(doubleArray25, 0, 0);
        double double29 = secondMoment13.evaluate(doubleArray25);
        double[] doubleArray30 = new double[] {};
        secondMoment13.incrementAll(doubleArray30);
        secondMoment7.incrementAll(doubleArray30);
        secondMoment7.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        double[] doubleArray48 = new double[] { 10, (byte) 100 };
        double double49 = secondMoment36.evaluate(doubleArray48);
        double double50 = variance35.evaluate(doubleArray48);
        long long51 = variance35.getN();
        long long52 = variance35.getN();
        boolean boolean53 = variance35.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        double[] doubleArray60 = new double[] { (-1L), 0, 10L };
        secondMoment54.incrementAll(doubleArray60, 0, 0);
        double[] doubleArray66 = new double[] { 10, (byte) 100 };
        double double67 = secondMoment54.evaluate(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        secondMoment69.increment((double) (short) 0);
        double double74 = secondMoment69.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double double85 = secondMoment69.evaluate(doubleArray81);
        double[] doubleArray86 = new double[] {};
        secondMoment69.incrementAll(doubleArray86);
        double double90 = variance68.evaluate(doubleArray86, (int) (byte) 0, 0);
        double double91 = secondMoment54.evaluate(doubleArray86);
        double double93 = variance35.evaluate(doubleArray86, 4050.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double96 = secondMoment0.evaluate(doubleArray86, (-1), (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 74.0d + "'", double29 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 3L + "'", long51 == 3L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 3L + "'", long52 == 3L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.5d + "'", double74 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 74.0d + "'", double85 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4050.0d + "'", double91 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test09402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09402");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance28.clear();
        variance28.clear();
        variance28.clear();
        long long32 = variance28.getN();
        variance28.increment(7077.0d);
        variance28.clear();
        long long36 = variance28.getN();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2L + "'", long32 == 2L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 2L + "'", long36 == 2L);
    }

    @Test
    public void test09403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09403");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        long long7 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        double double22 = variance21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        secondMoment24.incrementAll(doubleArray30, 0, 0);
        double[] doubleArray36 = new double[] { 10, (byte) 100 };
        double double37 = secondMoment24.evaluate(doubleArray36);
        double double38 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment24);
        long long40 = secondMoment24.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment((double) ' ');
        secondMoment41.increment((double) (-1.0f));
        secondMoment41.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment47);
        long long58 = variance57.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        secondMoment59.incrementAll(doubleArray65, 0, 0);
        double double70 = variance57.evaluate(doubleArray65, (double) (short) -1);
        double double71 = secondMoment41.evaluate(doubleArray65);
        double double72 = secondMoment24.evaluate(doubleArray65);
        variance21.incrementAll(doubleArray65);
        double double76 = variance10.evaluate(doubleArray65, (int) (byte) 1, (int) (short) 0);
        long long77 = variance10.getN();
        long long78 = variance10.getN();
        variance10.clear();
        java.lang.Class<?> wildcardClass80 = variance10.getClass();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4050.0d + "'", double37 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4050.0d + "'", double38 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 2L + "'", long40 == 2L);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1L + "'", long58 == 1L);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 37.0d + "'", double70 == 37.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 74.0d + "'", double71 == 74.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 2L + "'", long77 == 2L);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 2L + "'", long78 == 2L);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test09404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09404");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        variance9.incrementAll(doubleArray16);
        variance9.clear();
        variance9.increment((double) 10.0f);
        variance9.increment(2025.0d);
        variance9.increment((double) 4L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        secondMoment28.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        secondMoment34.increment((double) (short) 0);
        long long39 = secondMoment34.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        secondMoment40.incrementAll(doubleArray46, 0, 0);
        long long50 = secondMoment40.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment51.increment(1.0d);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        secondMoment51.incrementAll(doubleArray57, 0, 0);
        secondMoment40.incrementAll(doubleArray57, 0, (int) (short) 1);
        secondMoment34.incrementAll(doubleArray57, (int) (byte) 0, (int) (byte) 1);
        secondMoment28.incrementAll(doubleArray57);
        secondMoment28.increment((double) 1L);
        double double70 = secondMoment28.getResult();
        boolean boolean71 = variance9.equals((java.lang.Object) secondMoment28);
        double double72 = variance9.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 2L + "'", long39 == 2L);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 846.8333333333334d + "'", double70 == 846.8333333333334d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test09405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09405");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double double17 = secondMoment1.evaluate(doubleArray13);
        double[] doubleArray18 = new double[] {};
        secondMoment1.incrementAll(doubleArray18);
        double double22 = variance0.evaluate(doubleArray18, (int) (byte) 0, 0);
        long long23 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        variance0.incrementAll(doubleArray36);
        long long42 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        secondMoment43.increment((double) (short) 0);
        double double48 = secondMoment43.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        secondMoment49.incrementAll(doubleArray55, 0, 0);
        double double59 = secondMoment43.evaluate(doubleArray55);
        double[] doubleArray60 = new double[] {};
        secondMoment43.incrementAll(doubleArray60);
        double double62 = variance0.evaluate(doubleArray60);
        variance0.increment((double) 1.0f);
        long long65 = variance0.getN();
        double double66 = variance0.getResult();
        long long67 = variance0.getN();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 74.0d + "'", double17 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 3L + "'", long42 == 3L);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.5d + "'", double48 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 74.0d + "'", double59 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 4L + "'", long65 == 4L);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 25.666666666666668d + "'", double66 == 25.666666666666668d);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 4L + "'", long67 == 4L);
    }

    @Test
    public void test09406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09406");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) '4');
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double7 = variance6.getResult();
        boolean boolean8 = variance6.isBiasCorrected();
        variance6.increment(1576.2666666666667d);
        boolean boolean11 = variance6.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 200.0d + "'", double7 == 200.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test09407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09407");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(272.25d);
        long long6 = secondMoment0.getN();
        secondMoment0.increment(1.8756123185185187E7d);
        double double9 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long11 = variance10.getN();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2.3452430030252953E14d + "'", double9 == 2.3452430030252953E14d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 3L + "'", long11 == 3L);
    }

    @Test
    public void test09408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09408");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        double double23 = secondMoment7.evaluate(doubleArray19);
        double[] doubleArray24 = new double[] {};
        secondMoment7.incrementAll(doubleArray24);
        secondMoment1.incrementAll(doubleArray24);
        secondMoment1.increment((double) (byte) 10);
        secondMoment1.clear();
        double double30 = secondMoment1.getResult();
        secondMoment1.increment(8.0d);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment35);
        secondMoment35.increment((double) (short) -1);
        secondMoment35.clear();
        secondMoment35.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        boolean boolean49 = secondMoment35.equals((java.lang.Object) secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment(1.0d);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        secondMoment53.incrementAll(doubleArray59, 0, 0);
        double[] doubleArray65 = new double[] { 10, (byte) 100 };
        double double66 = secondMoment53.evaluate(doubleArray65);
        double double67 = secondMoment50.evaluate(doubleArray65);
        secondMoment35.incrementAll(doubleArray65);
        // The following exception was thrown during execution in test generation
        try {
            double double71 = secondMoment1.evaluate(doubleArray65, (int) (byte) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 74.0d + "'", double23 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
    }

    @Test
    public void test09409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09409");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        double double8 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        long long13 = variance12.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test09410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09410");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double26 = secondMoment10.evaluate(doubleArray22);
        double double27 = secondMoment0.evaluate(doubleArray22);
        secondMoment0.increment((double) 'a');
        secondMoment0.increment((double) 100.0f);
        secondMoment0.increment(9714674.75d);
        secondMoment0.increment(8441189.1875d);
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 74.0d + "'", double26 == 74.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
    }

    @Test
    public void test09411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09411");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment((double) ' ');
        secondMoment6.increment((double) (-1.0f));
        secondMoment6.clear();
        double double12 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        variance13.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        secondMoment16.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        variance25.incrementAll(doubleArray32);
        variance25.clear();
        variance25.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        double double45 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        double double51 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double double62 = secondMoment46.evaluate(doubleArray58);
        double[] doubleArray63 = new double[] {};
        secondMoment46.incrementAll(doubleArray63);
        secondMoment40.incrementAll(doubleArray63);
        secondMoment40.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        double[] doubleArray81 = new double[] { 10, (byte) 100 };
        double double82 = secondMoment69.evaluate(doubleArray81);
        double double83 = variance68.evaluate(doubleArray81);
        double double85 = variance25.evaluate(doubleArray81, 100.0d);
        boolean boolean86 = variance13.equals((java.lang.Object) doubleArray81);
        secondMoment0.incrementAll(doubleArray81);
        secondMoment0.increment(4.444595899175677E13d);
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 544.5d + "'", double5 == 544.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5d + "'", double51 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 74.0d + "'", double62 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test09412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09412");
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long3 = variance2.getN();
        double double4 = variance2.getResult();
        double double5 = variance2.getResult();
        variance2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment((double) ' ');
        secondMoment7.increment((double) (-1.0f));
        secondMoment7.clear();
        secondMoment7.clear();
        secondMoment7.increment((double) 4L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        secondMoment16.increment((double) (short) 0);
        double double21 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        secondMoment22.increment((double) (short) 0);
        double double27 = secondMoment22.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double38 = secondMoment22.evaluate(doubleArray34);
        double[] doubleArray39 = new double[] {};
        secondMoment22.incrementAll(doubleArray39);
        secondMoment16.incrementAll(doubleArray39);
        secondMoment16.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        secondMoment45.incrementAll(doubleArray51, 0, 0);
        double[] doubleArray57 = new double[] { 10, (byte) 100 };
        double double58 = secondMoment45.evaluate(doubleArray57);
        double double59 = variance44.evaluate(doubleArray57);
        long long60 = variance44.getN();
        double double61 = variance44.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        double[] doubleArray74 = new double[] { 10, (byte) 100 };
        double double75 = secondMoment62.evaluate(doubleArray74);
        double double76 = secondMoment62.getResult();
        secondMoment62.increment((double) (short) -1);
        double[] doubleArray80 = new double[] { (short) 1 };
        secondMoment62.incrementAll(doubleArray80);
        double double82 = variance44.evaluate(doubleArray80);
        variance44.increment((double) 100);
        variance44.increment(0.0d);
        boolean boolean87 = secondMoment7.equals((java.lang.Object) variance44);
        boolean boolean88 = variance2.equals((java.lang.Object) secondMoment7);
        secondMoment7.clear();
        secondMoment7.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.5d + "'", double21 == 0.5d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.5d + "'", double27 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 74.0d + "'", double38 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 3L + "'", long60 == 3L);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 4050.0d + "'", double75 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4050.0d + "'", double76 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test09413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09413");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        secondMoment0.clear();
        secondMoment0.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment12);
        secondMoment12.increment((double) (short) -1);
        secondMoment12.clear();
        secondMoment12.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        boolean boolean26 = secondMoment12.equals((java.lang.Object) secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        double double38 = variance37.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        long long45 = secondMoment40.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment40);
        long long47 = variance46.getN();
        variance46.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long51 = variance50.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        secondMoment52.increment((double) (short) 0);
        double double57 = secondMoment52.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double double68 = secondMoment52.evaluate(doubleArray64);
        variance50.incrementAll(doubleArray64);
        double double71 = variance46.evaluate(doubleArray64, (double) (short) -1);
        double double72 = variance37.evaluate(doubleArray64);
        double double73 = secondMoment21.evaluate(doubleArray64);
        double double74 = secondMoment0.evaluate(doubleArray64);
        secondMoment0.clear();
        long long76 = secondMoment0.getN();
        secondMoment0.clear();
        double double78 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 2L + "'", long45 == 2L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 2L + "'", long47 == 2L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5d + "'", double57 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 24.666666666666668d + "'", double71 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 37.0d + "'", double72 == 37.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 74.0d + "'", double73 == 74.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 74.0d + "'", double74 == 74.0d);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
    }

    @Test
    public void test09414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09414");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        boolean boolean6 = variance5.isBiasCorrected();
        double double7 = variance5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        long long22 = secondMoment8.getN();
        secondMoment8.clear();
        double double24 = secondMoment8.getResult();
        secondMoment8.increment((double) (byte) -1);
        secondMoment8.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        long long38 = secondMoment28.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment28);
        secondMoment28.increment(544.5d);
        java.lang.Object obj42 = null;
        boolean boolean43 = secondMoment28.equals(obj42);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double[] doubleArray56 = new double[] { 10, (byte) 100 };
        double double57 = secondMoment44.evaluate(doubleArray56);
        secondMoment28.incrementAll(doubleArray56);
        double double59 = secondMoment8.evaluate(doubleArray56);
        double double60 = variance5.evaluate(doubleArray56);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4050.0d + "'", double57 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2025.0d + "'", double60 == 2025.0d);
    }

    @Test
    public void test09415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09415");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        double double7 = secondMoment1.getResult();
        long long8 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        secondMoment9.increment((double) (short) -1);
        secondMoment9.clear();
        secondMoment9.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        double double24 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double double35 = secondMoment19.evaluate(doubleArray31);
        double double36 = secondMoment9.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double[] doubleArray49 = new double[] { 10, (byte) 100 };
        double double50 = secondMoment37.evaluate(doubleArray49);
        double double51 = secondMoment37.getResult();
        secondMoment37.increment((double) (short) -1);
        double[] doubleArray55 = new double[] { (short) 1 };
        secondMoment37.incrementAll(doubleArray55);
        double double57 = secondMoment9.evaluate(doubleArray55);
        secondMoment9.increment((double) (short) 1);
        boolean boolean60 = secondMoment1.equals((java.lang.Object) secondMoment9);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5d + "'", double24 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 74.0d + "'", double35 == 74.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 74.0d + "'", double36 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test09416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09416");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.increment(146040.96296296292d);
        secondMoment2.increment((double) 100.0f);
        long long24 = secondMoment2.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 4L + "'", long24 == 4L);
    }

    @Test
    public void test09417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09417");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double[] doubleArray19 = new double[] { 10, (byte) 100 };
        double double20 = secondMoment7.evaluate(doubleArray19);
        double double21 = secondMoment7.getResult();
        long long22 = secondMoment7.getN();
        long long23 = secondMoment7.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        boolean boolean25 = secondMoment0.equals((java.lang.Object) secondMoment7);
        secondMoment0.increment(0.0d);
        double double28 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment30);
        secondMoment30.increment((double) (short) -1);
        secondMoment30.clear();
        secondMoment30.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        secondMoment40.incrementAll(doubleArray46, 0, 0);
        variance39.incrementAll(doubleArray46);
        variance29.incrementAll(doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            double double54 = secondMoment0.evaluate(doubleArray46, (int) (short) -1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.6666666666666666d + "'", double28 == 0.6666666666666666d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
    }

    @Test
    public void test09418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09418");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance28.clear();
        variance28.clear();
        double double31 = variance28.getResult();
        variance28.increment(114.83950617283953d);
        long long34 = variance28.getN();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5d + "'", double31 == 0.5d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 2L + "'", long34 == 2L);
    }

    @Test
    public void test09419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09419");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance9.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        secondMoment38.increment((double) (short) 0);
        double double43 = secondMoment38.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double double54 = secondMoment38.evaluate(doubleArray50);
        double[] doubleArray55 = new double[] {};
        secondMoment38.incrementAll(doubleArray55);
        double double57 = secondMoment35.evaluate(doubleArray55);
        variance9.incrementAll(doubleArray55);
        variance9.clear();
        double double60 = variance9.getResult();
        variance9.setBiasCorrected(true);
        variance9.increment(0.25d);
        long long65 = variance9.getN();
        double double66 = variance9.getResult();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.5d + "'", double43 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 74.0d + "'", double54 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test09420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09420");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        boolean boolean14 = secondMoment0.equals((java.lang.Object) secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        secondMoment15.incrementAll(doubleArray21, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment15);
        double double26 = variance25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        long long33 = secondMoment28.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment28);
        long long35 = variance34.getN();
        variance34.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long39 = variance38.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        double double45 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double double56 = secondMoment40.evaluate(doubleArray52);
        variance38.incrementAll(doubleArray52);
        double double59 = variance34.evaluate(doubleArray52, (double) (short) -1);
        double double60 = variance25.evaluate(doubleArray52);
        double double61 = secondMoment9.evaluate(doubleArray52);
        double double62 = secondMoment9.getResult();
        secondMoment9.clear();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 2L + "'", long33 == 2L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 2L + "'", long35 == 2L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 74.0d + "'", double56 == 74.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 24.666666666666668d + "'", double59 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 37.0d + "'", double60 == 37.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 74.0d + "'", double61 == 74.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 74.0d + "'", double62 == 74.0d);
    }

    @Test
    public void test09421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09421");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.increment((double) (short) -1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        secondMoment19.increment((double) (-1.0f));
        secondMoment19.clear();
        boolean boolean25 = variance18.equals((java.lang.Object) secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        secondMoment26.incrementAll(doubleArray32, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        long long37 = variance36.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        double double49 = variance36.evaluate(doubleArray44, (double) (short) -1);
        boolean boolean50 = variance18.equals((java.lang.Object) doubleArray44);
        secondMoment1.incrementAll(doubleArray44);
        secondMoment1.increment(7070.8d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance54.clear();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 37.0d + "'", double49 == 37.0d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test09422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09422");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        secondMoment1.clear();
        double double9 = secondMoment1.getResult();
        long long10 = secondMoment1.getN();
        double double11 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        secondMoment13.increment((double) (short) -1);
        secondMoment13.clear();
        secondMoment13.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        secondMoment23.increment((double) (short) 0);
        double double28 = secondMoment23.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        double double39 = secondMoment23.evaluate(doubleArray35);
        double double40 = secondMoment13.evaluate(doubleArray35);
        double double41 = secondMoment13.getResult();
        secondMoment13.increment(4034.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment44);
        double[] doubleArray53 = new double[] { 0L, (byte) 1, 6140.666666666667d, 544.5d, (byte) 100 };
        double double54 = secondMoment44.evaluate(doubleArray53);
        double double55 = secondMoment13.evaluate(doubleArray53);
        double double56 = secondMoment1.evaluate(doubleArray53);
        double double57 = secondMoment1.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5d + "'", double28 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 74.0d + "'", double39 == 74.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 74.0d + "'", double41 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 1.0, 6140.666666666667, 544.5, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2.880385675555556E7d + "'", double54 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2.880385675555556E7d + "'", double55 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2.880385675555556E7d + "'", double56 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2.880385675555556E7d + "'", double57 == 2.880385675555556E7d);
    }

    @Test
    public void test09423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09423");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double double17 = secondMoment1.evaluate(doubleArray13);
        double[] doubleArray18 = new double[] {};
        secondMoment1.incrementAll(doubleArray18);
        double double22 = variance0.evaluate(doubleArray18, (int) (byte) 0, 0);
        long long23 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        variance0.incrementAll(doubleArray36);
        variance0.increment((double) 10);
        variance0.clear();
        variance0.clear();
        double double46 = variance0.getResult();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 74.0d + "'", double17 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
    }

    @Test
    public void test09424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09424");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) (short) -1);
        long long8 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        double double11 = secondMoment2.getResult();
        double double12 = secondMoment2.getResult();
        long long13 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        variance14.increment(3.4373094E7d);
        variance14.increment((double) (short) 100);
        variance14.setBiasCorrected(false);
        boolean boolean21 = variance14.isBiasCorrected();
        double double22 = variance14.getResult();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 544.5d + "'", double11 == 544.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 544.5d + "'", double12 == 544.5d);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 272.25d + "'", double22 == 272.25d);
    }

    @Test
    public void test09425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09425");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        secondMoment10.incrementAll(doubleArray16, 0, 0);
        variance9.incrementAll(doubleArray16);
        long long21 = variance9.getN();
        variance9.clear();
        boolean boolean23 = variance9.isBiasCorrected();
        double double24 = variance9.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment((double) ' ');
        double double28 = secondMoment25.getResult();
        double double29 = secondMoment25.getResult();
        double double30 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        long long41 = secondMoment31.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        variance42.increment(2.880385675555556E7d);
        variance42.increment((double) 0);
        long long47 = variance42.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        variance42.incrementAll(doubleArray54);
        secondMoment25.incrementAll(doubleArray54);
        variance9.incrementAll(doubleArray54);
        boolean boolean61 = variance9.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test09426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09426");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double26 = secondMoment10.evaluate(doubleArray22);
        double double27 = secondMoment0.evaluate(doubleArray22);
        secondMoment0.increment((double) 'a');
        secondMoment0.increment((double) 0);
        secondMoment0.increment(2413.8518518518517d);
        secondMoment0.increment(3.0d);
        secondMoment0.increment(8247.428571428572d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 74.0d + "'", double26 == 74.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
    }

    @Test
    public void test09427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09427");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long7 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
    }

    @Test
    public void test09428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09428");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        double double17 = secondMoment0.getResult();
        double double18 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        double double21 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment((double) ' ');
        secondMoment33.increment((double) (-1.0f));
        secondMoment33.clear();
        boolean boolean39 = variance32.equals((java.lang.Object) secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        secondMoment40.increment((double) (short) -1);
        secondMoment40.clear();
        secondMoment40.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        variance49.incrementAll(doubleArray56);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment61);
        secondMoment61.increment((double) (short) -1);
        secondMoment61.clear();
        secondMoment61.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment71.increment(1.0d);
        secondMoment71.increment((double) (short) 0);
        double double76 = secondMoment71.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment77.increment(1.0d);
        double[] doubleArray83 = new double[] { (-1L), 0, 10L };
        secondMoment77.incrementAll(doubleArray83, 0, 0);
        double double87 = secondMoment71.evaluate(doubleArray83);
        double double88 = secondMoment61.evaluate(doubleArray83);
        double double89 = variance49.evaluate(doubleArray83);
        double double90 = secondMoment33.evaluate(doubleArray83);
        secondMoment0.incrementAll(doubleArray83);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 6140.666666666667d + "'", double17 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 6140.666666666667d + "'", double18 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7186.0d + "'", double21 == 7186.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.5d + "'", double76 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 37.0d + "'", double89 == 37.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
    }

    @Test
    public void test09429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09429");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double8 = secondMoment0.getResult();
        secondMoment0.increment((double) (byte) 10);
        secondMoment0.clear();
        long long12 = secondMoment0.getN();
        double double13 = secondMoment0.getResult();
        secondMoment0.clear();
        long long15 = secondMoment0.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test09430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09430");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] {};
        secondMoment21.incrementAll(doubleArray38);
        double double42 = variance20.evaluate(doubleArray38, (int) (byte) 0, 0);
        long long43 = variance20.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        double double49 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double double60 = secondMoment44.evaluate(doubleArray56);
        variance20.incrementAll(doubleArray56);
        long long62 = variance20.getN();
        variance20.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = secondMoment65.evaluate(doubleArray80);
        variance20.incrementAll(doubleArray80);
        secondMoment1.incrementAll(doubleArray80);
        long long85 = secondMoment1.getN();
        double double86 = secondMoment1.getResult();
        double double87 = secondMoment1.getResult();
        secondMoment1.increment((double) 5L);
        secondMoment1.increment((double) 1);
        secondMoment1.increment(125982.5185185185d);
        secondMoment1.increment(0.6666666666666666d);
        secondMoment1.increment(7142.8d);
        secondMoment1.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5d + "'", double49 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 3L + "'", long62 == 3L);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 2L + "'", long85 == 2L);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4050.0d + "'", double86 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4050.0d + "'", double87 == 4050.0d);
    }

    @Test
    public void test09431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09431");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        secondMoment5.increment((double) (short) 0);
        double double10 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] {};
        secondMoment11.incrementAll(doubleArray28);
        secondMoment5.incrementAll(doubleArray28);
        secondMoment5.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double48 = variance33.evaluate(doubleArray46);
        double double49 = secondMoment0.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        secondMoment56.increment((double) (short) 0);
        double double61 = secondMoment56.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        double double72 = secondMoment56.evaluate(doubleArray68);
        double[] doubleArray73 = new double[] {};
        secondMoment56.incrementAll(doubleArray73);
        secondMoment50.incrementAll(doubleArray73);
        double double76 = secondMoment0.evaluate(doubleArray73);
        long long77 = secondMoment0.getN();
        secondMoment0.increment((double) (byte) 1);
        secondMoment0.increment(0.0d);
        secondMoment0.increment((double) 5L);
        double double84 = secondMoment0.getResult();
        secondMoment0.clear();
        long long86 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5d + "'", double10 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5d + "'", double61 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 74.0d + "'", double72 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4050.0d + "'", double76 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 2L + "'", long77 == 2L);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 7434.8d + "'", double84 == 7434.8d);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
    }

    @Test
    public void test09432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09432");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        boolean boolean14 = secondMoment0.equals((java.lang.Object) secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double[] doubleArray30 = new double[] { 10, (byte) 100 };
        double double31 = secondMoment18.evaluate(doubleArray30);
        double double32 = secondMoment15.evaluate(doubleArray30);
        secondMoment0.incrementAll(doubleArray30);
        double double34 = secondMoment0.getResult();
        secondMoment0.increment(24.916666666666668d);
        secondMoment0.clear();
        double double38 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4050.0d + "'", double31 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 5226.0d + "'", double34 == 5226.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
    }

    @Test
    public void test09433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09433");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double22 = secondMoment6.evaluate(doubleArray18);
        double[] doubleArray23 = new double[] {};
        secondMoment6.incrementAll(doubleArray23);
        secondMoment0.incrementAll(doubleArray23);
        secondMoment0.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment(24.666666666666668d);
        secondMoment0.clear();
        long long32 = secondMoment0.getN();
        secondMoment0.clear();
        secondMoment0.clear();
        secondMoment0.increment(6140.666666666667d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 74.0d + "'", double22 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test09434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09434");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        secondMoment18.increment((double) (-1.0f));
        secondMoment18.clear();
        double double24 = secondMoment18.getResult();
        boolean boolean25 = secondMoment1.equals((java.lang.Object) double24);
        long long26 = secondMoment1.getN();
        double double27 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) 100);
        double double30 = secondMoment1.getResult();
        double double31 = secondMoment1.getResult();
        java.lang.Class<?> wildcardClass32 = secondMoment1.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4050.0d + "'", double27 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 5400.0d + "'", double30 == 5400.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 5400.0d + "'", double31 == 5400.0d);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test09435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09435");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        secondMoment1.increment((double) 10);
        double double10 = secondMoment1.getResult();
        double double11 = secondMoment1.getResult();
        secondMoment1.increment(86.0d);
        double double14 = secondMoment1.getResult();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2888.0d + "'", double14 == 2888.0d);
    }

    @Test
    public void test09436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09436");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        long long18 = variance10.getN();
        double[] doubleArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance10.incrementAll(doubleArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input values array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
    }

    @Test
    public void test09437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09437");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        double double6 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double[] doubleArray21 = new double[] { 10, (byte) 100 };
        double double22 = secondMoment9.evaluate(doubleArray21);
        double double23 = secondMoment9.getResult();
        long long24 = secondMoment9.getN();
        long long25 = secondMoment9.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        secondMoment27.increment((double) (short) 0);
        double double32 = secondMoment27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        double[] doubleArray39 = new double[] { (-1L), 0, 10L };
        secondMoment33.incrementAll(doubleArray39, 0, 0);
        double double43 = secondMoment27.evaluate(doubleArray39);
        double[] doubleArray44 = new double[] {};
        secondMoment27.incrementAll(doubleArray44);
        double double48 = variance26.evaluate(doubleArray44, (int) (byte) 0, 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        long long55 = secondMoment50.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment57.increment(1.0d);
        secondMoment57.increment((double) (short) 0);
        double double62 = secondMoment57.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        secondMoment63.increment((double) (short) 0);
        double double68 = secondMoment63.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        double double79 = secondMoment63.evaluate(doubleArray75);
        double[] doubleArray80 = new double[] {};
        secondMoment63.incrementAll(doubleArray80);
        secondMoment57.incrementAll(doubleArray80);
        secondMoment50.incrementAll(doubleArray80);
        double double85 = variance26.evaluate(doubleArray80, (double) (byte) 0);
        double double86 = secondMoment9.evaluate(doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double double89 = variance8.evaluate(doubleArray80, (int) '#', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4050.0d + "'", double23 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5d + "'", double32 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 74.0d + "'", double43 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 2L + "'", long55 == 2L);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.5d + "'", double62 == 0.5d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.5d + "'", double68 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 74.0d + "'", double79 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4050.0d + "'", double86 == 4050.0d);
    }

    @Test
    public void test09438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09438");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment((double) 0.0f);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.clear();
        double double17 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long20 = variance19.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double double39 = variance19.evaluate(doubleArray33, (double) 4L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment(1.0d);
        secondMoment40.increment((double) (short) 0);
        double double45 = secondMoment40.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        secondMoment46.increment((double) (short) 0);
        double double51 = secondMoment46.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        secondMoment52.incrementAll(doubleArray58, 0, 0);
        double double62 = secondMoment46.evaluate(doubleArray58);
        double[] doubleArray63 = new double[] {};
        secondMoment46.incrementAll(doubleArray63);
        secondMoment40.incrementAll(doubleArray63);
        secondMoment40.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment69.increment(1.0d);
        double[] doubleArray75 = new double[] { (-1L), 0, 10L };
        secondMoment69.incrementAll(doubleArray75, 0, 0);
        double[] doubleArray81 = new double[] { 10, (byte) 100 };
        double double82 = secondMoment69.evaluate(doubleArray81);
        double double83 = variance68.evaluate(doubleArray81);
        double double84 = variance19.evaluate(doubleArray81);
        double double85 = secondMoment13.evaluate(doubleArray81);
        secondMoment2.incrementAll(doubleArray81);
        secondMoment2.increment(1842.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.5d + "'", double45 == 0.5d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.5d + "'", double51 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 74.0d + "'", double62 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
    }

    @Test
    public void test09439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09439");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        secondMoment1.increment((double) (short) -1);
        double[] doubleArray19 = new double[] { (short) 1 };
        secondMoment1.incrementAll(doubleArray19);
        long long21 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance22.clear();
        boolean boolean24 = variance22.isBiasCorrected();
        variance22.clear();
        long long26 = variance22.getN();
        variance22.increment(28.666666666666664d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 4L + "'", long21 == 4L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 4L + "'", long26 == 4L);
    }

    @Test
    public void test09440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09440");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        double double16 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        secondMoment21.incrementAll(doubleArray27, 0, 0);
        double[] doubleArray33 = new double[] { 10, (byte) 100 };
        double double34 = secondMoment21.evaluate(doubleArray33);
        double double35 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment21);
        long long37 = secondMoment21.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        secondMoment21.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        double[] doubleArray53 = new double[] { 10, (byte) 100 };
        double double54 = secondMoment41.evaluate(doubleArray53);
        double double55 = secondMoment41.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment41);
        long long57 = secondMoment41.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment((double) ' ');
        secondMoment58.increment((double) (-1.0f));
        secondMoment58.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        secondMoment64.incrementAll(doubleArray70, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment64);
        long long75 = variance74.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        double[] doubleArray82 = new double[] { (-1L), 0, 10L };
        secondMoment76.incrementAll(doubleArray82, 0, 0);
        double double87 = variance74.evaluate(doubleArray82, (double) (short) -1);
        double double88 = secondMoment58.evaluate(doubleArray82);
        double double89 = secondMoment41.evaluate(doubleArray82);
        double double90 = secondMoment21.evaluate(doubleArray82);
        double double92 = variance18.evaluate(doubleArray82, (double) ' ');
        double double93 = variance17.evaluate(doubleArray82);
        double double94 = variance17.getResult();
        double double95 = variance17.getResult();
        variance17.clear();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4050.0d + "'", double34 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4050.0d + "'", double35 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 2L + "'", long37 == 2L);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4050.0d + "'", double54 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4050.0d + "'", double55 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 2L + "'", long57 == 2L);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 37.0d + "'", double87 == 37.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 74.0d + "'", double89 == 74.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 74.0d + "'", double90 == 74.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 37.0d + "'", double92 == 37.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 37.0d + "'", double93 == 37.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 4050.0d + "'", double94 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 4050.0d + "'", double95 == 4050.0d);
    }

    @Test
    public void test09441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09441");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double double45 = secondMoment18.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        secondMoment46.increment((double) (short) -1);
        double[] doubleArray64 = new double[] { (short) 1 };
        secondMoment46.incrementAll(doubleArray64);
        double double66 = secondMoment18.evaluate(doubleArray64);
        double double67 = secondMoment1.evaluate(doubleArray64);
        secondMoment1.clear();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        long long80 = secondMoment70.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment81.increment(1.0d);
        double[] doubleArray87 = new double[] { (-1L), 0, 10L };
        secondMoment81.incrementAll(doubleArray87, 0, 0);
        secondMoment70.incrementAll(doubleArray87, 0, (int) (short) 1);
        double double94 = secondMoment1.evaluate(doubleArray87);
        double double95 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance96 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1L + "'", long80 == 1L);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 74.0d + "'", double94 == 74.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 74.0d + "'", double95 == 74.0d);
    }

    @Test
    public void test09442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09442");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        secondMoment0.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long9 = variance8.getN();
        variance8.increment(3.4373094E7d);
        variance8.clear();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 3L + "'", long9 == 3L);
    }

    @Test
    public void test09443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09443");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment((double) 0.0f);
        secondMoment1.clear();
        secondMoment1.increment(1576.2666666666667d);
        double double11 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long16 = variance15.getN();
        double double17 = variance15.getResult();
        variance15.increment((double) (short) 100);
        boolean boolean20 = variance15.isBiasCorrected();
        long long21 = variance15.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment23.increment(1.0d);
        double[] doubleArray29 = new double[] { (-1L), 0, 10L };
        secondMoment23.incrementAll(doubleArray29, 0, 0);
        double[] doubleArray35 = new double[] { 10, (byte) 100 };
        double double36 = secondMoment23.evaluate(doubleArray35);
        double double37 = secondMoment23.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment23);
        variance38.increment(0.0d);
        variance38.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        secondMoment43.increment((double) (short) 0);
        double double48 = secondMoment43.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double[] doubleArray66 = new double[] {};
        secondMoment49.incrementAll(doubleArray66);
        secondMoment43.incrementAll(doubleArray66);
        secondMoment43.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment(1.0d);
        double[] doubleArray78 = new double[] { (-1L), 0, 10L };
        secondMoment72.incrementAll(doubleArray78, 0, 0);
        double[] doubleArray84 = new double[] { 10, (byte) 100 };
        double double85 = secondMoment72.evaluate(doubleArray84);
        double double86 = variance71.evaluate(doubleArray84);
        double double87 = variance38.evaluate(doubleArray84);
        double double89 = variance15.evaluate(doubleArray84, 483680.75d);
        variance13.incrementAll(doubleArray84, 0, (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4050.0d + "'", double36 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4050.0d + "'", double37 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.5d + "'", double48 == 0.5d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 4050.0d + "'", double85 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4050.0d + "'", double86 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4050.0d + "'", double87 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4050.0d + "'", double89 == 4050.0d);
    }

    @Test
    public void test09444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09444");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        double[] doubleArray20 = new double[] { 10, (byte) 100 };
        double double21 = secondMoment8.evaluate(doubleArray20);
        double double22 = secondMoment8.getResult();
        long long23 = secondMoment8.getN();
        long long24 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        variance28.clear();
        variance28.clear();
        double double31 = variance28.getResult();
        variance28.increment(114.83950617283953d);
        double[] doubleArray34 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double37 = variance28.evaluate(doubleArray34, (int) (byte) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4050.0d + "'", double21 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4050.0d + "'", double22 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5d + "'", double31 == 0.5d);
    }

    @Test
    public void test09445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09445");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        boolean boolean14 = secondMoment0.equals((java.lang.Object) secondMoment9);
        secondMoment0.increment(0.0d);
        secondMoment0.clear();
        secondMoment0.increment(82.0d);
        secondMoment0.increment(457.6388888888889d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09446");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        double double9 = secondMoment0.getResult();
        double double10 = secondMoment0.getResult();
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test09447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09447");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long11 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        secondMoment12.incrementAll(doubleArray18, 0, 0);
        double double23 = variance10.evaluate(doubleArray18, (double) (short) -1);
        double double24 = variance10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        secondMoment25.increment((double) (short) 0);
        double double30 = secondMoment25.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        secondMoment31.increment((double) (short) 0);
        double double36 = secondMoment31.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double double47 = secondMoment31.evaluate(doubleArray43);
        double[] doubleArray48 = new double[] {};
        secondMoment31.incrementAll(doubleArray48);
        secondMoment25.incrementAll(doubleArray48);
        secondMoment25.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment(1.0d);
        double[] doubleArray60 = new double[] { (-1L), 0, 10L };
        secondMoment54.incrementAll(doubleArray60, 0, 0);
        double[] doubleArray66 = new double[] { 10, (byte) 100 };
        double double67 = secondMoment54.evaluate(doubleArray66);
        double double68 = variance53.evaluate(doubleArray66);
        double double71 = variance10.evaluate(doubleArray66, (int) (short) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment72.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment72);
        double[] doubleArray81 = new double[] { 0L, (byte) 1, 6140.666666666667d, 544.5d, (byte) 100 };
        double double82 = secondMoment72.evaluate(doubleArray81);
        double double83 = variance10.evaluate(doubleArray81);
        variance10.setBiasCorrected(false);
        double double86 = variance10.getResult();
        variance10.increment((double) (byte) 10);
        double[] doubleArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double92 = variance10.evaluate(doubleArray89, (int) (short) 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 37.0d + "'", double23 == 37.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5d + "'", double30 == 0.5d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.5d + "'", double36 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 74.0d + "'", double47 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4050.0d + "'", double67 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4050.0d + "'", double68 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 1.0, 6140.666666666667, 544.5, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2.880385675555556E7d + "'", double82 == 2.880385675555556E7d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 7200964.18888889d + "'", double83 == 7200964.18888889d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }

    @Test
    public void test09448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09448");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        long long16 = secondMoment2.getN();
        secondMoment2.clear();
        double double18 = secondMoment2.getResult();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.clear();
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        secondMoment24.clear();
        secondMoment24.increment((double) (byte) 100);
        secondMoment24.clear();
        double double32 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment((double) ' ');
        secondMoment33.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        double[] doubleArray51 = new double[] { 10, (byte) 100 };
        double double52 = secondMoment39.evaluate(doubleArray51);
        double double53 = secondMoment39.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment39);
        long long55 = secondMoment39.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment((double) ' ');
        secondMoment56.increment((double) (-1.0f));
        secondMoment56.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        secondMoment62.incrementAll(doubleArray68, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment62);
        long long73 = variance72.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double double85 = variance72.evaluate(doubleArray80, (double) (short) -1);
        double double86 = secondMoment56.evaluate(doubleArray80);
        double double87 = secondMoment39.evaluate(doubleArray80);
        secondMoment33.incrementAll(doubleArray80);
        secondMoment24.incrementAll(doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            secondMoment2.incrementAll(doubleArray80, 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4050.0d + "'", double53 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 2L + "'", long55 == 2L);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 37.0d + "'", double85 == 37.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 74.0d + "'", double86 == 74.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 74.0d + "'", double87 == 74.0d);
    }

    @Test
    public void test09449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09449");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        secondMoment1.increment((double) (byte) 0);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        secondMoment8.increment((double) (short) -1);
        long long14 = secondMoment8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double27 = variance15.evaluate(doubleArray22, (double) 1L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long30 = variance29.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        secondMoment31.increment((double) (short) 0);
        double double36 = secondMoment31.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double double47 = secondMoment31.evaluate(doubleArray43);
        double double49 = variance29.evaluate(doubleArray43, (double) 4L);
        double double50 = variance15.evaluate(doubleArray43);
        secondMoment1.incrementAll(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance52.increment(1467.5555555555557d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 24.666666666666668d + "'", double27 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.5d + "'", double36 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 74.0d + "'", double47 == 74.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 37.0d + "'", double49 == 37.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 24.666666666666668d + "'", double50 == 24.666666666666668d);
    }

    @Test
    public void test09450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09450");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        double double25 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double[] doubleArray45 = new double[] {};
        secondMoment28.incrementAll(doubleArray45);
        double double49 = variance27.evaluate(doubleArray45, (int) (byte) 0, 0);
        double double50 = variance26.evaluate(doubleArray45);
        double double51 = variance9.evaluate(doubleArray45);
        long long52 = variance9.getN();
        variance9.increment((double) 5L);
        variance9.increment((double) (byte) 1);
        double double57 = variance9.getResult();
        variance9.clear();
        variance9.clear();
        boolean boolean60 = variance9.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test09451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09451");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double10 = secondMoment0.getResult();
        long long11 = secondMoment0.getN();
        secondMoment0.increment(0.0d);
        secondMoment0.increment(5000.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double[] doubleArray32 = new double[] { 10, (byte) 100 };
        double double33 = secondMoment20.evaluate(doubleArray32);
        double double34 = secondMoment20.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment20);
        long long36 = secondMoment20.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long42 = variance41.getN();
        double double43 = variance41.getResult();
        variance41.increment((double) (short) 100);
        variance41.increment((double) 3L);
        variance41.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment49.increment(1.0d);
        secondMoment49.increment((double) (short) 0);
        double double54 = secondMoment49.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double double65 = secondMoment49.evaluate(doubleArray61);
        double[] doubleArray66 = new double[] {};
        secondMoment49.incrementAll(doubleArray66);
        variance41.incrementAll(doubleArray66);
        boolean boolean69 = secondMoment20.equals((java.lang.Object) doubleArray66);
        double double70 = variance16.evaluate(doubleArray66);
        long long71 = variance16.getN();
        variance16.increment(1313.5555555555554d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4050.0d + "'", double33 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4050.0d + "'", double34 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 2L + "'", long36 == 2L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.5d + "'", double54 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 74.0d + "'", double65 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 3L + "'", long71 == 3L);
    }

    @Test
    public void test09452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09452");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long18 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        secondMoment19.increment((double) (-1.0f));
        secondMoment19.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment25);
        long long36 = variance35.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double double48 = variance35.evaluate(doubleArray43, (double) (short) -1);
        double double49 = secondMoment19.evaluate(doubleArray43);
        double double50 = secondMoment2.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        double double52 = secondMoment2.getResult();
        secondMoment2.increment(688.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        double double56 = secondMoment2.getResult();
        secondMoment2.clear();
        secondMoment2.clear();
        double double59 = secondMoment2.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 37.0d + "'", double48 == 37.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 74.0d + "'", double50 == 74.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 74.0d + "'", double52 == 74.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 351992.75d + "'", double56 == 351992.75d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test09453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09453");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        secondMoment0.increment((double) (-1.0f));
        secondMoment0.clear();
        double double6 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double[] doubleArray23 = new double[] { 10, (byte) 100 };
        double double24 = secondMoment11.evaluate(doubleArray23);
        double double25 = secondMoment8.evaluate(doubleArray23);
        double double27 = variance7.evaluate(doubleArray23, (double) 5L);
        variance7.increment(3.0341188245370373E7d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4050.0d + "'", double24 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4050.0d + "'", double25 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4050.0d + "'", double27 == 4050.0d);
    }

    @Test
    public void test09454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09454");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance9.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        secondMoment38.increment((double) (short) 0);
        double double43 = secondMoment38.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        secondMoment44.incrementAll(doubleArray50, 0, 0);
        double double54 = secondMoment38.evaluate(doubleArray50);
        double[] doubleArray55 = new double[] {};
        secondMoment38.incrementAll(doubleArray55);
        double double57 = secondMoment35.evaluate(doubleArray55);
        variance9.incrementAll(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment59.increment(1.0d);
        secondMoment59.increment((double) (short) 0);
        double double64 = secondMoment59.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        double[] doubleArray71 = new double[] { (-1L), 0, 10L };
        secondMoment65.incrementAll(doubleArray71, 0, 0);
        double double75 = secondMoment59.evaluate(doubleArray71);
        double double78 = variance9.evaluate(doubleArray71, (int) (byte) 1, 1);
        variance9.clear();
        long long80 = variance9.getN();
        variance9.setBiasCorrected(false);
        long long83 = variance9.getN();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.5d + "'", double43 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 74.0d + "'", double54 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.5d + "'", double64 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 74.0d + "'", double75 == 74.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1L + "'", long80 == 1L);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 1L + "'", long83 == 1L);
    }

    @Test
    public void test09455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09455");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance10.evaluate(doubleArray31);
        long long35 = variance10.getN();
        double double36 = variance10.getResult();
        variance10.setBiasCorrected(false);
        variance10.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        long long51 = secondMoment41.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment41);
        variance52.increment(2.880385675555556E7d);
        variance52.increment((double) 0);
        long long57 = variance52.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        variance52.incrementAll(doubleArray64);
        // The following exception was thrown during execution in test generation
        try {
            double double71 = variance10.evaluate(doubleArray64, (int) '4', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
    }

    @Test
    public void test09456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09456");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        secondMoment5.increment((double) (short) 0);
        double double10 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        double[] doubleArray17 = new double[] { (-1L), 0, 10L };
        secondMoment11.incrementAll(doubleArray17, 0, 0);
        double double21 = secondMoment5.evaluate(doubleArray17);
        double[] doubleArray22 = new double[] {};
        secondMoment5.incrementAll(doubleArray22);
        double double24 = secondMoment2.evaluate(doubleArray22);
        secondMoment2.increment((double) 3L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        secondMoment27.increment((double) (short) -1);
        secondMoment27.clear();
        secondMoment27.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        secondMoment36.increment((double) (short) 0);
        boolean boolean41 = secondMoment27.equals((java.lang.Object) secondMoment36);
        secondMoment27.clear();
        long long43 = secondMoment27.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        long long50 = secondMoment45.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment52);
        secondMoment52.increment((double) (short) -1);
        secondMoment52.clear();
        secondMoment52.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        secondMoment61.increment((double) (short) 0);
        boolean boolean66 = secondMoment52.equals((java.lang.Object) secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double[] doubleArray82 = new double[] { 10, (byte) 100 };
        double double83 = secondMoment70.evaluate(doubleArray82);
        double double84 = secondMoment67.evaluate(doubleArray82);
        secondMoment52.incrementAll(doubleArray82);
        secondMoment45.incrementAll(doubleArray82, (int) (short) 0, 0);
        double double89 = secondMoment27.evaluate(doubleArray82);
        double double92 = secondMoment2.evaluate(doubleArray82, (int) (short) 1, (int) (byte) 0);
        double double93 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        long long96 = variance95.getN();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5d + "'", double10 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 74.0d + "'", double21 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 2L + "'", long50 == 2L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4050.0d + "'", double89 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2.0d + "'", double92 == 2.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2.0d + "'", double93 == 2.0d);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 2L + "'", long96 == 2L);
    }

    @Test
    public void test09457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09457");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        variance10.setBiasCorrected(false);
        variance10.increment(18066.666666666668d);
        boolean boolean22 = variance10.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment24);
        secondMoment24.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        secondMoment24.clear();
        secondMoment24.increment(4402.666666666667d);
        secondMoment24.clear();
        boolean boolean34 = variance10.equals((java.lang.Object) secondMoment24);
        boolean boolean35 = variance10.isBiasCorrected();
        variance10.clear();
        variance10.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09458");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment4 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment4.increment(1.0d);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        secondMoment4.incrementAll(doubleArray10, 0, 0);
        double[] doubleArray16 = new double[] { 10, (byte) 100 };
        double double17 = secondMoment4.evaluate(doubleArray16);
        double double18 = secondMoment4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment4);
        long long20 = secondMoment4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment4);
        secondMoment4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment4);
        secondMoment4.increment(30671.375d);
        secondMoment4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment4);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment(1.0d);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        secondMoment31.incrementAll(doubleArray37, 0, 0);
        double[] doubleArray43 = new double[] { 10, (byte) 100 };
        double double44 = secondMoment31.evaluate(doubleArray43);
        double double45 = secondMoment31.getResult();
        secondMoment31.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        long long55 = secondMoment50.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment50);
        long long57 = variance56.getN();
        variance56.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long61 = variance60.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        secondMoment62.increment((double) (short) 0);
        double double67 = secondMoment62.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double double78 = secondMoment62.evaluate(doubleArray74);
        variance60.incrementAll(doubleArray74);
        double double81 = variance56.evaluate(doubleArray74, (double) (short) -1);
        double double82 = variance48.evaluate(doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            variance29.incrementAll(doubleArray74, 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4050.0d + "'", double18 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2L + "'", long20 == 2L);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4050.0d + "'", double44 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4050.0d + "'", double45 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 2L + "'", long55 == 2L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 2L + "'", long57 == 2L);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.5d + "'", double67 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 74.0d + "'", double78 == 74.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 24.666666666666668d + "'", double81 == 24.666666666666668d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 24.666666666666668d + "'", double82 == 24.666666666666668d);
    }

    @Test
    public void test09459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09459");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        secondMoment0.clear();
        long long12 = secondMoment0.getN();
        secondMoment0.clear();
        long long14 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test09460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09460");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        boolean boolean14 = secondMoment0.equals((java.lang.Object) secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment15.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double[] doubleArray30 = new double[] { 10, (byte) 100 };
        double double31 = secondMoment18.evaluate(doubleArray30);
        double double32 = secondMoment15.evaluate(doubleArray30);
        secondMoment0.incrementAll(doubleArray30);
        double double34 = secondMoment0.getResult();
        secondMoment0.increment(6.222464933786481E14d);
        secondMoment0.increment(29040.5d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4050.0d + "'", double31 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4050.0d + "'", double32 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 5226.0d + "'", double34 == 5226.0d);
    }

    @Test
    public void test09461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09461");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        secondMoment1.increment(24.666666666666668d);
        double double19 = secondMoment1.getResult();
        double double20 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        boolean boolean22 = variance21.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4663.407407407407d + "'", double19 == 4663.407407407407d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4663.407407407407d + "'", double20 == 4663.407407407407d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test09462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09462");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        double double11 = secondMoment6.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment12.increment(1.0d);
        secondMoment12.increment((double) (short) 0);
        double double17 = secondMoment12.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment(1.0d);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        secondMoment18.incrementAll(doubleArray24, 0, 0);
        double double28 = secondMoment12.evaluate(doubleArray24);
        double[] doubleArray29 = new double[] {};
        secondMoment12.incrementAll(doubleArray29);
        secondMoment6.incrementAll(doubleArray29);
        secondMoment6.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment35.increment(1.0d);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        secondMoment35.incrementAll(doubleArray41, 0, 0);
        double[] doubleArray47 = new double[] { 10, (byte) 100 };
        double double48 = secondMoment35.evaluate(doubleArray47);
        double double49 = variance34.evaluate(doubleArray47);
        double double50 = secondMoment1.evaluate(doubleArray47);
        secondMoment1.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment53.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment53);
        secondMoment53.increment((double) (short) -1);
        secondMoment53.clear();
        secondMoment53.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment63.increment(1.0d);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        secondMoment63.incrementAll(doubleArray69, 0, 0);
        variance62.incrementAll(doubleArray69);
        double double74 = secondMoment1.evaluate(doubleArray69);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        java.lang.Class<?> wildcardClass77 = secondMoment1.getClass();
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5d + "'", double11 == 0.5d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.5d + "'", double17 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 74.0d + "'", double28 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 74.0d + "'", double74 == 74.0d);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test09463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09463");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        secondMoment3.incrementAll(doubleArray9, 0, 0);
        double[] doubleArray15 = new double[] { 10, (byte) 100 };
        double double16 = secondMoment3.evaluate(doubleArray15);
        double double17 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        long long19 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment21);
        secondMoment21.increment((double) (short) -1);
        secondMoment21.clear();
        secondMoment21.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        secondMoment30.increment((double) (short) 0);
        boolean boolean35 = secondMoment21.equals((java.lang.Object) secondMoment30);
        boolean boolean36 = variance20.equals((java.lang.Object) secondMoment30);
        secondMoment30.increment(5304.666666666667d);
        double double39 = secondMoment30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.8756123185185187E7d + "'", double39 == 1.8756123185185187E7d);
    }

    @Test
    public void test09464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09464");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        secondMoment2.increment((double) (-1.0f));
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        double[] doubleArray14 = new double[] { (-1L), 0, 10L };
        secondMoment8.incrementAll(doubleArray14, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment8);
        long long19 = variance18.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double31 = variance18.evaluate(doubleArray26, (double) (short) -1);
        double double32 = secondMoment2.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        long long34 = secondMoment2.getN();
        secondMoment2.increment(4049.9999999999995d);
        double double37 = secondMoment2.getResult();
        long long38 = secondMoment2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        double double42 = secondMoment2.getResult();
        secondMoment2.increment(86.0d);
        double double45 = secondMoment2.getResult();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 37.0d + "'", double31 == 37.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 74.0d + "'", double32 == 74.0d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 3L + "'", long34 == 3L);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.2283730749999996E7d + "'", double37 == 1.2283730749999996E7d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 4L + "'", long38 == 4L);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.2283730749999996E7d + "'", double42 == 1.2283730749999996E7d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.2973791999999996E7d + "'", double45 == 1.2973791999999996E7d);
    }

    @Test
    public void test09465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09465");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long6 = variance5.getN();
        long long7 = variance5.getN();
        double double8 = variance5.getResult();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test09466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09466");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        double double5 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        double[] doubleArray19 = new double[] { 0L, (byte) 1, 6140.666666666667d, 544.5d, (byte) 100 };
        double double20 = secondMoment10.evaluate(doubleArray19);
        secondMoment0.incrementAll(doubleArray19, (int) (byte) 1, 0);
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5d + "'", double5 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 1.0, 6140.666666666667, 544.5, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2.880385675555556E7d + "'", double20 == 2.880385675555556E7d);
    }

    @Test
    public void test09467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09467");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        double double3 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double5 = secondMoment0.getResult();
        secondMoment0.increment(1655360.891851852d);
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test09468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09468");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        double double15 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long17 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment18.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        secondMoment18.increment((double) (short) -1);
        secondMoment18.clear();
        secondMoment18.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        secondMoment28.increment((double) (short) 0);
        double double33 = secondMoment28.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double double44 = secondMoment28.evaluate(doubleArray40);
        double double45 = secondMoment18.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment46.increment(1.0d);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        secondMoment46.incrementAll(doubleArray52, 0, 0);
        double[] doubleArray58 = new double[] { 10, (byte) 100 };
        double double59 = secondMoment46.evaluate(doubleArray58);
        double double60 = secondMoment46.getResult();
        secondMoment46.increment((double) (short) -1);
        double[] doubleArray64 = new double[] { (short) 1 };
        secondMoment46.incrementAll(doubleArray64);
        double double66 = secondMoment18.evaluate(doubleArray64);
        double double67 = secondMoment1.evaluate(doubleArray64);
        double double68 = secondMoment1.getResult();
        double double69 = secondMoment1.getResult();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5d + "'", double33 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 74.0d + "'", double44 == 74.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 74.0d + "'", double45 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4050.0d + "'", double59 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test09469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09469");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        secondMoment9.increment((double) (short) 0);
        boolean boolean14 = secondMoment0.equals((java.lang.Object) secondMoment9);
        long long15 = secondMoment9.getN();
        double double16 = secondMoment9.getResult();
        secondMoment9.clear();
        secondMoment9.clear();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
    }

    @Test
    public void test09470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09470");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        secondMoment16.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        boolean boolean28 = variance27.isBiasCorrected();
        variance27.increment(4.321154463792899E13d);
        boolean boolean31 = variance27.isBiasCorrected();
        variance27.clear();
        double double33 = variance27.getResult();
        long long34 = variance27.getN();
        double double35 = variance27.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment36.increment(1.0d);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        secondMoment36.incrementAll(doubleArray42, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment36);
        long long47 = variance46.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double double59 = variance46.evaluate(doubleArray54, (double) (short) -1);
        double double60 = variance46.getResult();
        variance46.setBiasCorrected(true);
        variance46.increment(3602.0d);
        double double65 = variance46.getResult();
        variance46.increment(2201.3333333333335d);
        boolean boolean68 = variance27.equals((java.lang.Object) variance46);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 37.0d + "'", double59 == 37.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test09471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09471");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        secondMoment11.increment((double) (-1.0f));
        secondMoment11.clear();
        boolean boolean17 = variance10.equals((java.lang.Object) secondMoment11);
        double double18 = variance10.getResult();
        java.lang.Object obj19 = null;
        boolean boolean20 = variance10.equals(obj19);
        double double21 = variance10.getResult();
        variance10.increment(237360.5d);
        variance10.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment26.increment(1.0d);
        secondMoment26.increment((double) (short) 0);
        double double31 = secondMoment26.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment(1.0d);
        secondMoment32.increment((double) (short) 0);
        double double37 = secondMoment32.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        double double48 = secondMoment32.evaluate(doubleArray44);
        double[] doubleArray49 = new double[] {};
        secondMoment32.incrementAll(doubleArray49);
        secondMoment26.incrementAll(doubleArray49);
        secondMoment26.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment55.increment(1.0d);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        secondMoment55.incrementAll(doubleArray61, 0, 0);
        double[] doubleArray67 = new double[] { 10, (byte) 100 };
        double double68 = secondMoment55.evaluate(doubleArray67);
        double double69 = variance54.evaluate(doubleArray67);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment((double) ' ');
        double double73 = secondMoment70.getResult();
        boolean boolean74 = variance54.equals((java.lang.Object) double73);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment75.increment(1.0d);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        secondMoment75.incrementAll(doubleArray81, 0, 0);
        double double85 = variance54.evaluate(doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            variance10.incrementAll(doubleArray81, (int) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5d + "'", double31 == 0.5d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.5d + "'", double37 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 74.0d + "'", double48 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4050.0d + "'", double68 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4050.0d + "'", double69 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 37.0d + "'", double85 == 37.0d);
    }

    @Test
    public void test09472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09472");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) (short) 0);
        double double13 = secondMoment8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double double24 = secondMoment8.evaluate(doubleArray20);
        secondMoment0.incrementAll(doubleArray20, 0, (int) (short) 0);
        secondMoment0.increment(1.4140914644183667E12d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5d + "'", double13 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 74.0d + "'", double24 == 74.0d);
    }

    @Test
    public void test09473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09473");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance3.increment(544.5d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment6.increment(1.0d);
        secondMoment6.increment((double) (short) 0);
        long long11 = secondMoment6.getN();
        double double12 = secondMoment6.getResult();
        secondMoment6.increment((double) (byte) 10);
        double double15 = secondMoment6.getResult();
        secondMoment6.clear();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double[] doubleArray29 = new double[] { 10, (byte) 100 };
        double double30 = secondMoment17.evaluate(doubleArray29);
        double double31 = secondMoment6.evaluate(doubleArray29);
        variance3.incrementAll(doubleArray29);
        variance3.setBiasCorrected(false);
        long long35 = variance3.getN();
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 60.666666666666664d + "'", double15 == 60.666666666666664d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4050.0d + "'", double30 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4050.0d + "'", double31 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
    }

    @Test
    public void test09474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09474");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        secondMoment16.increment((double) (short) -1);
        secondMoment16.clear();
        secondMoment16.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        boolean boolean26 = secondMoment1.equals((java.lang.Object) secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment16);
        secondMoment16.clear();
        long long29 = secondMoment16.getN();
        secondMoment16.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment32.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment32);
        secondMoment32.increment((double) (short) -1);
        secondMoment32.clear();
        secondMoment32.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        secondMoment41.increment((double) (short) 0);
        boolean boolean46 = secondMoment32.equals((java.lang.Object) secondMoment41);
        secondMoment32.increment((double) 5L);
        boolean boolean49 = secondMoment16.equals((java.lang.Object) secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment32);
        double double51 = variance50.getResult();
        variance50.increment(5.67075082875E8d);
        long long54 = variance50.getN();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4232.0d + "'", double51 == 4232.0d);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 2L + "'", long54 == 2L);
    }

    @Test
    public void test09475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09475");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        long long11 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        long long13 = secondMoment1.getN();
        secondMoment1.increment(2312.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance16.increment(1.5803546165573798E27d);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
    }

    @Test
    public void test09476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09476");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long2 = variance1.getN();
        double double3 = variance1.getResult();
        variance1.increment((double) (short) 100);
        variance1.clear();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
    }

    @Test
    public void test09477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09477");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        secondMoment0.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        double double9 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.increment(37.00000000372529d);
        secondMoment0.increment(2700.0d);
        secondMoment0.clear();
        double double16 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.6666666666666666d + "'", double9 == 0.6666666666666666d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test09478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09478");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        double double16 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        secondMoment2.increment(24.666666666666668d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        secondMoment2.clear();
        double double22 = secondMoment2.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4050.0d + "'", double16 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test09479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09479");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        double[] doubleArray13 = new double[] { 10, (byte) 100 };
        double double14 = secondMoment1.evaluate(doubleArray13);
        long long15 = secondMoment1.getN();
        secondMoment1.clear();
        double double17 = secondMoment1.getResult();
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment21.increment(1.0d);
        secondMoment21.increment((double) (short) 0);
        double double26 = secondMoment21.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        double double37 = secondMoment21.evaluate(doubleArray33);
        double[] doubleArray38 = new double[] {};
        secondMoment21.incrementAll(doubleArray38);
        double double42 = variance20.evaluate(doubleArray38, (int) (byte) 0, 0);
        long long43 = variance20.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment44.increment(1.0d);
        secondMoment44.increment((double) (short) 0);
        double double49 = secondMoment44.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        secondMoment50.incrementAll(doubleArray56, 0, 0);
        double double60 = secondMoment44.evaluate(doubleArray56);
        variance20.incrementAll(doubleArray56);
        long long62 = variance20.getN();
        variance20.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment65.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double[] doubleArray80 = new double[] { 10, (byte) 100 };
        double double81 = secondMoment68.evaluate(doubleArray80);
        double double82 = secondMoment65.evaluate(doubleArray80);
        variance20.incrementAll(doubleArray80);
        secondMoment1.incrementAll(doubleArray80);
        long long85 = secondMoment1.getN();
        secondMoment1.clear();
        secondMoment1.increment((double) 100);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5d + "'", double26 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 74.0d + "'", double37 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5d + "'", double49 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 74.0d + "'", double60 == 74.0d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 3L + "'", long62 == 3L);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4050.0d + "'", double81 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4050.0d + "'", double82 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 2L + "'", long85 == 2L);
    }

    @Test
    public void test09480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09480");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        double[] doubleArray12 = new double[] { 10, (byte) 100 };
        double double13 = secondMoment0.evaluate(doubleArray12);
        double double14 = secondMoment0.getResult();
        secondMoment0.increment((double) (short) -1);
        double double17 = secondMoment0.getResult();
        secondMoment0.increment((double) 0.0f);
        secondMoment0.clear();
        secondMoment0.increment((double) 1);
        secondMoment0.clear();
        long long24 = secondMoment0.getN();
        secondMoment0.clear();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4050.0d + "'", double13 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4050.0d + "'", double14 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 6140.666666666667d + "'", double17 == 6140.666666666667d);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test09481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09481");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 'a');
        secondMoment0.clear();
        secondMoment0.increment(116966.7222222222d);
        long long12 = secondMoment0.getN();
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
    }

    @Test
    public void test09482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09482");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        secondMoment3.increment((double) (short) 0);
        double double8 = secondMoment3.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment(1.0d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        secondMoment9.incrementAll(doubleArray15, 0, 0);
        double double19 = secondMoment3.evaluate(doubleArray15);
        double[] doubleArray20 = new double[] {};
        secondMoment3.incrementAll(doubleArray20);
        double double22 = secondMoment0.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance23.increment(37.0d);
        boolean boolean26 = variance23.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 74.0d + "'", double19 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test09483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09483");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = secondMoment0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment((double) ' ');
        double double14 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment11);
        long long16 = variance15.getN();
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        secondMoment19.increment((double) (short) -1);
        secondMoment19.clear();
        secondMoment19.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment29.increment(1.0d);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        secondMoment29.incrementAll(doubleArray35, 0, 0);
        variance28.incrementAll(doubleArray35);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment40.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        secondMoment40.increment((double) (short) -1);
        secondMoment40.clear();
        secondMoment40.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment50.increment(1.0d);
        secondMoment50.increment((double) (short) 0);
        double double55 = secondMoment50.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double double66 = secondMoment50.evaluate(doubleArray62);
        double double67 = secondMoment40.evaluate(doubleArray62);
        double double68 = variance28.evaluate(doubleArray62);
        variance15.incrementAll(doubleArray62);
        double double72 = secondMoment0.evaluate(doubleArray62, (int) (short) 0, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment74);
        secondMoment74.increment((double) (short) -1);
        secondMoment74.clear();
        secondMoment74.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment74);
        secondMoment74.increment(100.0d);
        long long86 = secondMoment74.getN();
        double double87 = secondMoment74.getResult();
        boolean boolean88 = secondMoment0.equals((java.lang.Object) double87);
        secondMoment0.increment(2367975.877572016d);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.5d + "'", double55 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 74.0d + "'", double66 == 74.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 74.0d + "'", double67 == 74.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 37.0d + "'", double68 == 37.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 2L + "'", long86 == 2L);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 5000.0d + "'", double87 == 5000.0d);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test09484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09484");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        double double7 = secondMoment1.getResult();
        secondMoment1.increment((double) '#');
        secondMoment1.increment(1655360.891851852d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment((double) ' ');
        secondMoment24.increment((double) (-1.0f));
        secondMoment24.clear();
        boolean boolean30 = variance23.equals((java.lang.Object) secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment31.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        secondMoment31.increment((double) (short) -1);
        secondMoment31.clear();
        secondMoment31.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment41.increment(1.0d);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        secondMoment41.incrementAll(doubleArray47, 0, 0);
        variance40.incrementAll(doubleArray47);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment52);
        secondMoment52.increment((double) (short) -1);
        secondMoment52.clear();
        secondMoment52.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment62.increment(1.0d);
        secondMoment62.increment((double) (short) 0);
        double double67 = secondMoment62.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        double[] doubleArray74 = new double[] { (-1L), 0, 10L };
        secondMoment68.incrementAll(doubleArray74, 0, 0);
        double double78 = secondMoment62.evaluate(doubleArray74);
        double double79 = secondMoment52.evaluate(doubleArray74);
        double double80 = variance40.evaluate(doubleArray74);
        double double81 = secondMoment24.evaluate(doubleArray74);
        double double82 = secondMoment24.getResult();
        long long83 = secondMoment24.getN();
        boolean boolean84 = variance12.equals((java.lang.Object) secondMoment24);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.5d + "'", double67 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 74.0d + "'", double78 == 74.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 74.0d + "'", double79 == 74.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 37.0d + "'", double80 == 37.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 74.0d + "'", double81 == 74.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 74.0d + "'", double82 == 74.0d);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 3L + "'", long83 == 3L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test09485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09485");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        double double26 = secondMoment10.evaluate(doubleArray22);
        double[] doubleArray27 = new double[] {};
        secondMoment10.incrementAll(doubleArray27);
        double double31 = variance9.evaluate(doubleArray27, (int) (byte) 0, 0);
        long long32 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment33.increment(1.0d);
        secondMoment33.increment((double) (short) 0);
        double double38 = secondMoment33.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        double double49 = secondMoment33.evaluate(doubleArray45);
        variance9.incrementAll(doubleArray45);
        long long51 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment(1.0d);
        secondMoment52.increment((double) (short) 0);
        double double57 = secondMoment52.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        secondMoment58.incrementAll(doubleArray64, 0, 0);
        double double68 = secondMoment52.evaluate(doubleArray64);
        double[] doubleArray69 = new double[] {};
        secondMoment52.incrementAll(doubleArray69);
        double double71 = variance9.evaluate(doubleArray69);
        double double72 = secondMoment0.evaluate(doubleArray69);
        secondMoment0.clear();
        secondMoment0.increment(1.5560313249915127E27d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 74.0d + "'", double26 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5d + "'", double38 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 74.0d + "'", double49 == 74.0d);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 3L + "'", long51 == 3L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5d + "'", double57 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 74.0d + "'", double68 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test09486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09486");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.increment((double) '4');
        double double8 = secondMoment2.getResult();
        secondMoment2.increment((double) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        variance13.clear();
        variance13.increment((double) 7L);
        boolean boolean17 = variance13.isBiasCorrected();
        variance13.clear();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 200.0d + "'", double8 == 200.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test09487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09487");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        long long6 = secondMoment1.getN();
        double double7 = secondMoment1.getResult();
        long long8 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment9.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        secondMoment9.increment((double) (short) -1);
        secondMoment9.clear();
        secondMoment9.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        double double24 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double double35 = secondMoment19.evaluate(doubleArray31);
        double double36 = secondMoment9.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        secondMoment37.incrementAll(doubleArray43, 0, 0);
        double[] doubleArray49 = new double[] { 10, (byte) 100 };
        double double50 = secondMoment37.evaluate(doubleArray49);
        double double51 = secondMoment37.getResult();
        secondMoment37.increment((double) (short) -1);
        double[] doubleArray55 = new double[] { (short) 1 };
        secondMoment37.incrementAll(doubleArray55);
        double double57 = secondMoment9.evaluate(doubleArray55);
        secondMoment9.increment((double) (short) 1);
        boolean boolean60 = secondMoment1.equals((java.lang.Object) secondMoment9);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        secondMoment1.clear();
        secondMoment1.increment(2.0148763656212277E23d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 2L + "'", long6 == 2L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5d + "'", double7 == 0.5d);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5d + "'", double24 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 74.0d + "'", double35 == 74.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 74.0d + "'", double36 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4050.0d + "'", double50 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4050.0d + "'", double51 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test09488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09488");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        double double6 = secondMoment0.getResult();
        long long7 = secondMoment0.getN();
        double double8 = secondMoment0.getResult();
        secondMoment0.increment(10.0d);
        long long11 = secondMoment0.getN();
        secondMoment0.clear();
        double double13 = secondMoment0.getResult();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5d + "'", double8 == 0.5d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 3L + "'", long11 == 3L);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test09489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09489");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        double[] doubleArray6 = new double[] { (-1L), 0, 10L };
        secondMoment0.incrementAll(doubleArray6, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        secondMoment14.increment((double) (short) 0);
        double double19 = secondMoment14.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment20.increment(1.0d);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        secondMoment20.incrementAll(doubleArray26, 0, 0);
        double double30 = secondMoment14.evaluate(doubleArray26);
        double[] doubleArray31 = new double[] {};
        secondMoment14.incrementAll(doubleArray31);
        double double33 = secondMoment11.evaluate(doubleArray31);
        double double34 = variance10.evaluate(doubleArray31);
        long long35 = variance10.getN();
        double double36 = variance10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment37.increment(1.0d);
        secondMoment37.increment((double) (short) 0);
        double double42 = secondMoment37.getResult();
        long long43 = secondMoment37.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        secondMoment45.increment((double) (short) 0);
        long long50 = secondMoment45.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment52.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment52);
        secondMoment52.increment((double) (short) -1);
        secondMoment52.clear();
        secondMoment52.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment61.increment(1.0d);
        secondMoment61.increment((double) (short) 0);
        boolean boolean66 = secondMoment52.equals((java.lang.Object) secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double[] doubleArray82 = new double[] { 10, (byte) 100 };
        double double83 = secondMoment70.evaluate(doubleArray82);
        double double84 = secondMoment67.evaluate(doubleArray82);
        secondMoment52.incrementAll(doubleArray82);
        secondMoment45.incrementAll(doubleArray82, (int) (short) 0, 0);
        secondMoment37.incrementAll(doubleArray82);
        double double91 = variance10.evaluate(doubleArray82, 458.6666666666667d);
        double double92 = variance10.getResult();
        java.lang.Object obj93 = null;
        boolean boolean94 = variance10.equals(obj93);
        boolean boolean95 = variance10.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5d + "'", double19 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 74.0d + "'", double30 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.5d + "'", double42 == 0.5d);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 2L + "'", long43 == 2L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 2L + "'", long50 == 2L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4050.0d + "'", double83 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4050.0d + "'", double91 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test09490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09490");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        secondMoment0.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        long long10 = variance9.getN();
        variance9.clear();
        variance9.clear();
        double double13 = variance9.getResult();
        boolean boolean14 = variance9.isBiasCorrected();
        variance9.setBiasCorrected(false);
        long long17 = variance9.getN();
        long long18 = variance9.getN();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
    }

    @Test
    public void test09491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09491");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        secondMoment7.incrementAll(doubleArray13, 0, 0);
        double double17 = secondMoment1.evaluate(doubleArray13);
        double[] doubleArray18 = new double[] {};
        secondMoment1.incrementAll(doubleArray18);
        double double22 = variance0.evaluate(doubleArray18, (int) (byte) 0, 0);
        long long23 = variance0.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment24.increment(1.0d);
        secondMoment24.increment((double) (short) 0);
        double double29 = secondMoment24.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment30.increment(1.0d);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        secondMoment30.incrementAll(doubleArray36, 0, 0);
        double double40 = secondMoment24.evaluate(doubleArray36);
        variance0.incrementAll(doubleArray36);
        long long42 = variance0.getN();
        variance0.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment45.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment48.increment(1.0d);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        secondMoment48.incrementAll(doubleArray54, 0, 0);
        double[] doubleArray60 = new double[] { 10, (byte) 100 };
        double double61 = secondMoment48.evaluate(doubleArray60);
        double double62 = secondMoment45.evaluate(doubleArray60);
        variance0.incrementAll(doubleArray60);
        variance0.clear();
        double double65 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        double[] doubleArray73 = new double[] { (-1L), 0, 10L };
        secondMoment67.incrementAll(doubleArray73, 0, 0);
        double[] doubleArray79 = new double[] { 10, (byte) 100 };
        double double80 = secondMoment67.evaluate(doubleArray79);
        long long81 = secondMoment67.getN();
        secondMoment67.clear();
        secondMoment67.clear();
        double double84 = secondMoment67.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment67);
        boolean boolean86 = variance0.equals((java.lang.Object) secondMoment67);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 74.0d + "'", double17 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5d + "'", double29 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 3L + "'", long42 == 3L);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4050.0d + "'", double61 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 4050.0d + "'", double80 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 2L + "'", long81 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test09492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09492");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        secondMoment1.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment8.increment(1.0d);
        secondMoment8.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        secondMoment13.increment((double) (short) 0);
        double double18 = secondMoment13.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment19.increment(1.0d);
        secondMoment19.increment((double) (short) 0);
        double double24 = secondMoment19.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment25.increment(1.0d);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        secondMoment25.incrementAll(doubleArray31, 0, 0);
        double double35 = secondMoment19.evaluate(doubleArray31);
        double[] doubleArray36 = new double[] {};
        secondMoment19.incrementAll(doubleArray36);
        secondMoment13.incrementAll(doubleArray36);
        secondMoment13.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment42.increment(1.0d);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        secondMoment42.incrementAll(doubleArray48, 0, 0);
        double[] doubleArray54 = new double[] { 10, (byte) 100 };
        double double55 = secondMoment42.evaluate(doubleArray54);
        double double56 = variance41.evaluate(doubleArray54);
        double double57 = secondMoment8.evaluate(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment58.increment(1.0d);
        secondMoment58.increment((double) (short) 0);
        double double63 = secondMoment58.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment64.increment(1.0d);
        secondMoment64.increment((double) (short) 0);
        double double69 = secondMoment64.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        double[] doubleArray76 = new double[] { (-1L), 0, 10L };
        secondMoment70.incrementAll(doubleArray76, 0, 0);
        double double80 = secondMoment64.evaluate(doubleArray76);
        double[] doubleArray81 = new double[] {};
        secondMoment64.incrementAll(doubleArray81);
        secondMoment58.incrementAll(doubleArray81);
        double double84 = secondMoment8.evaluate(doubleArray81);
        double double85 = secondMoment1.evaluate(doubleArray81);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment86 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment86.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment86);
        secondMoment86.increment((double) (short) -1);
        secondMoment86.increment((double) 100);
        boolean boolean94 = secondMoment1.equals((java.lang.Object) secondMoment86);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment86);
        variance95.increment(4575.782407407407d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.5d + "'", double18 == 0.5d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.5d + "'", double24 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 74.0d + "'", double35 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4050.0d + "'", double55 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4050.0d + "'", double56 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4050.0d + "'", double57 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.5d + "'", double63 == 0.5d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.5d + "'", double69 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 74.0d + "'", double80 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 4050.0d + "'", double84 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test09493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09493");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment3.increment(1.0d);
        secondMoment3.increment((double) (short) 0);
        long long8 = secondMoment3.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment(1.0d);
        secondMoment10.increment((double) (short) 0);
        double double15 = secondMoment10.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        secondMoment16.increment((double) (short) 0);
        double double21 = secondMoment16.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment22.increment(1.0d);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        secondMoment22.incrementAll(doubleArray28, 0, 0);
        double double32 = secondMoment16.evaluate(doubleArray28);
        double[] doubleArray33 = new double[] {};
        secondMoment16.incrementAll(doubleArray33);
        secondMoment10.incrementAll(doubleArray33);
        secondMoment10.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment39.increment(1.0d);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        secondMoment39.incrementAll(doubleArray45, 0, 0);
        double[] doubleArray51 = new double[] { 10, (byte) 100 };
        double double52 = secondMoment39.evaluate(doubleArray51);
        double double53 = variance38.evaluate(doubleArray51);
        long long54 = variance38.getN();
        double double55 = variance38.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment56.increment(1.0d);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        secondMoment56.incrementAll(doubleArray62, 0, 0);
        double[] doubleArray68 = new double[] { 10, (byte) 100 };
        double double69 = secondMoment56.evaluate(doubleArray68);
        double double70 = secondMoment56.getResult();
        secondMoment56.increment((double) (short) -1);
        double[] doubleArray74 = new double[] { (short) 1 };
        secondMoment56.incrementAll(doubleArray74);
        double double76 = variance38.evaluate(doubleArray74);
        double double79 = secondMoment3.evaluate(doubleArray74, (int) (short) 1, 0);
        secondMoment3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment3);
        double double85 = variance84.getResult();
        double double86 = variance84.getResult();
        variance84.increment(5400.0d);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5d + "'", double15 == 0.5d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.5d + "'", double21 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 74.0d + "'", double32 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4050.0d + "'", double52 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4050.0d + "'", double53 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 3L + "'", long54 == 3L);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4050.0d + "'", double69 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4050.0d + "'", double70 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.5d + "'", double79 == 0.5d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 20.22222222222222d + "'", double85 == 20.22222222222222d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 20.22222222222222d + "'", double86 == 20.22222222222222d);
    }

    @Test
    public void test09494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09494");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment(1.0d);
        double[] doubleArray8 = new double[] { (-1L), 0, 10L };
        secondMoment2.incrementAll(doubleArray8, 0, 0);
        double[] doubleArray14 = new double[] { 10, (byte) 100 };
        double double15 = secondMoment2.evaluate(doubleArray14);
        long long16 = secondMoment2.getN();
        double double17 = secondMoment2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        long long19 = secondMoment2.getN();
        double double20 = secondMoment2.getResult();
        secondMoment2.increment(7.703419152040815E7d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment2);
        double double24 = secondMoment2.getResult();
        secondMoment2.increment(2025.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4050.0d + "'", double15 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4050.0d + "'", double17 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4050.0d + "'", double20 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 3.9561721263006375E15d + "'", double24 == 3.9561721263006375E15d);
    }

    @Test
    public void test09495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09495");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment5.increment(1.0d);
        secondMoment5.increment((double) (short) 0);
        double double10 = secondMoment5.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment11.increment(1.0d);
        secondMoment11.increment((double) (short) 0);
        double double16 = secondMoment11.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        secondMoment17.incrementAll(doubleArray23, 0, 0);
        double double27 = secondMoment11.evaluate(doubleArray23);
        double[] doubleArray28 = new double[] {};
        secondMoment11.incrementAll(doubleArray28);
        secondMoment5.incrementAll(doubleArray28);
        secondMoment5.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment34.increment(1.0d);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        secondMoment34.incrementAll(doubleArray40, 0, 0);
        double[] doubleArray46 = new double[] { 10, (byte) 100 };
        double double47 = secondMoment34.evaluate(doubleArray46);
        double double48 = variance33.evaluate(doubleArray46);
        double double49 = secondMoment0.evaluate(doubleArray46);
        secondMoment0.increment((double) (short) -1);
        double double52 = secondMoment0.getResult();
        secondMoment0.clear();
        secondMoment0.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.clear();
        secondMoment0.increment(3070.3333333333335d);
        secondMoment0.increment(7262.8d);
        secondMoment0.increment(1.2133739E7d);
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.5d + "'", double10 == 0.5d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5d + "'", double16 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 74.0d + "'", double27 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4050.0d + "'", double47 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4050.0d + "'", double48 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4050.0d + "'", double49 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 6140.666666666667d + "'", double52 == 6140.666666666667d);
    }

    @Test
    public void test09496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09496");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment2 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment2.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment2);
        secondMoment2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment2);
        variance7.increment(0.0d);
        variance7.increment(30671.375d);
        boolean boolean12 = secondMoment0.equals((java.lang.Object) variance7);
        secondMoment0.increment(3.746542163E7d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment17.increment(1.0d);
        secondMoment17.increment((double) (short) 0);
        double double22 = secondMoment17.getResult();
        secondMoment17.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment17);
        double double26 = secondMoment17.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment27.increment(1.0d);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        secondMoment27.incrementAll(doubleArray33, 0, 0);
        long long37 = secondMoment27.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment27);
        secondMoment27.increment(544.5d);
        java.lang.Object obj41 = null;
        boolean boolean42 = secondMoment27.equals(obj41);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment43.increment(1.0d);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        secondMoment43.incrementAll(doubleArray49, 0, 0);
        double[] doubleArray55 = new double[] { 10, (byte) 100 };
        double double56 = secondMoment43.evaluate(doubleArray55);
        secondMoment27.incrementAll(doubleArray55);
        double double58 = secondMoment17.evaluate(doubleArray55);
        secondMoment0.incrementAll(doubleArray55);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.5d + "'", double22 == 0.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4050.0d + "'", double56 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4050.0d + "'", double58 == 4050.0d);
    }

    @Test
    public void test09497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09497");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        double[] doubleArray7 = new double[] { (-1L), 0, 10L };
        secondMoment1.incrementAll(doubleArray7, 0, 0);
        long long11 = secondMoment1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        long long13 = variance12.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment14.increment(1.0d);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        secondMoment14.incrementAll(doubleArray20, 0, 0);
        double[] doubleArray26 = new double[] { 10, (byte) 100 };
        double double27 = secondMoment14.evaluate(doubleArray26);
        secondMoment14.clear();
        secondMoment14.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment14);
        secondMoment14.increment(482.66666666666663d);
        secondMoment14.increment(1801.0d);
        secondMoment14.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment38.increment(1.0d);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        secondMoment38.incrementAll(doubleArray44, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment38);
        variance48.increment((double) (short) 100);
        variance48.clear();
        variance48.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment54.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment54);
        secondMoment54.increment((double) (short) -1);
        secondMoment54.clear();
        secondMoment54.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment54);
        long long64 = secondMoment54.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        long long67 = variance66.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment68.increment(1.0d);
        secondMoment68.increment((double) (short) 0);
        double double73 = secondMoment68.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment74.increment(1.0d);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        secondMoment74.incrementAll(doubleArray80, 0, 0);
        double double84 = secondMoment68.evaluate(doubleArray80);
        variance66.incrementAll(doubleArray80);
        double double86 = secondMoment54.evaluate(doubleArray80);
        double double87 = variance48.evaluate(doubleArray80);
        double double88 = secondMoment14.evaluate(doubleArray80);
        double double92 = variance12.evaluate(doubleArray80, 3.0341188245370373E7d, (int) (byte) 0, (int) (short) 1);
        double double93 = variance12.getResult();
        long long94 = variance12.getN();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4050.0d + "'", double27 == 4050.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.5d + "'", double73 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 74.0d + "'", double84 == 74.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 74.0d + "'", double86 == 74.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 37.0d + "'", double87 == 37.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 74.0d + "'", double88 == 74.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1L + "'", long94 == 1L);
    }

    @Test
    public void test09498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09498");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        secondMoment0.increment((double) (short) -1);
        secondMoment0.clear();
        double double7 = secondMoment0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment10.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment10);
        secondMoment10.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment16.increment(1.0d);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        secondMoment16.incrementAll(doubleArray22, 0, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment16);
        long long27 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment28.increment(1.0d);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        secondMoment28.incrementAll(doubleArray34, 0, 0);
        double double39 = variance26.evaluate(doubleArray34, (double) (short) -1);
        double double40 = secondMoment10.evaluate(doubleArray34);
        secondMoment0.incrementAll(doubleArray34);
        secondMoment0.increment((double) 6L);
        secondMoment0.increment(0.2222222222222222d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment47.increment(1.0d);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        secondMoment47.incrementAll(doubleArray53, 0, 0);
        double[] doubleArray59 = new double[] { 10, (byte) 100 };
        double double60 = secondMoment47.evaluate(doubleArray59);
        long long61 = secondMoment47.getN();
        double double62 = secondMoment47.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        boolean boolean64 = variance63.isBiasCorrected();
        double double65 = variance63.getResult();
        double double66 = variance63.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment67.increment(1.0d);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment70.increment(1.0d);
        secondMoment70.increment((double) (short) 0);
        double double75 = secondMoment70.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment76.increment(1.0d);
        double[] doubleArray82 = new double[] { (-1L), 0, 10L };
        secondMoment76.incrementAll(doubleArray82, 0, 0);
        double double86 = secondMoment70.evaluate(doubleArray82);
        double[] doubleArray87 = new double[] {};
        secondMoment70.incrementAll(doubleArray87);
        double double89 = secondMoment67.evaluate(doubleArray87);
        double double90 = variance63.evaluate(doubleArray87);
        double double91 = secondMoment0.evaluate(doubleArray87);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 74.0d + "'", double40 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4050.0d + "'", double60 == 4050.0d);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 2L + "'", long61 == 2L);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4050.0d + "'", double62 == 4050.0d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4050.0d + "'", double65 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4050.0d + "'", double66 == 4050.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.5d + "'", double75 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 74.0d + "'", double86 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 90.70617283950617d + "'", double91 == 90.70617283950617d);
    }

    @Test
    public void test09499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09499");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment0.increment(1.0d);
        secondMoment0.increment((double) (short) 0);
        long long5 = secondMoment0.getN();
        secondMoment0.increment(0.0d);
        double double8 = secondMoment0.getResult();
        double double9 = secondMoment0.getResult();
        double double10 = secondMoment0.getResult();
        secondMoment0.increment(551786.9639506174d);
        secondMoment0.increment(148.0d);
        secondMoment0.clear();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.6666666666666666d + "'", double8 == 0.6666666666666666d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.6666666666666666d + "'", double9 == 0.6666666666666666d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.6666666666666666d + "'", double10 == 0.6666666666666666d);
    }

    @Test
    public void test09500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09500");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment1.increment(1.0d);
        secondMoment1.increment((double) (short) 0);
        double double6 = secondMoment1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment7.increment(1.0d);
        secondMoment7.increment((double) (short) 0);
        double double12 = secondMoment7.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = new org.apache.commons.math.stat.descriptive.moment.SecondMoment();
        secondMoment13.increment(1.0d);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        secondMoment13.incrementAll(doubleArray19, 0, 0);
        double double23 = secondMoment7.evaluate(doubleArray19);
        double[] doubleArray24 = new double[] {};
        secondMoment7.incrementAll(doubleArray24);
        secondMoment1.incrementAll(doubleArray24);
        secondMoment1.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment1);
        secondMoment1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double double32 = secondMoment1.getResult();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5d + "'", double6 == 0.5d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5d + "'", double12 == 0.5d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 74.0d + "'", double23 == 74.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }
}

